v8-version,11,8,172,17,-node.15,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff6ab570000,0x7ff6afcff000,0
shared-library,C:\\Windows\\SYSTEM32\\ntdll.dll,0x7ffe2c190000,0x7ffe2c388000,0
shared-library,C:\\Windows\\System32\\KERNEL32.DLL,0x7ffe2bf70000,0x7ffe2c02d000,0
shared-library,C:\\Windows\\System32\\KERNELBASE.dll,0x7ffe29af0000,0x7ffe29de6000,0
shared-library,C:\\Windows\\System32\\WS2_32.dll,0x7ffe2b560000,0x7ffe2b5cb000,0
shared-library,C:\\Windows\\System32\\RPCRT4.dll,0x7ffe2b5d0000,0x7ffe2b6f6000,0
shared-library,C:\\Windows\\SYSTEM32\\dbghelp.dll,0x7ffe27110000,0x7ffe272f4000,0
shared-library,C:\\Windows\\System32\\ole32.dll,0x7ffe2ab00000,0x7ffe2ac2b000,0
shared-library,C:\\Windows\\System32\\ucrtbase.dll,0x7ffe29e80000,0x7ffe29f80000,0
shared-library,C:\\Windows\\System32\\combase.dll,0x7ffe2b920000,0x7ffe2bc74000,0
shared-library,C:\\Windows\\System32\\GDI32.dll,0x7ffe2ac30000,0x7ffe2ac5c000,0
shared-library,C:\\Windows\\System32\\win32u.dll,0x7ffe29a90000,0x7ffe29ab2000,0
shared-library,C:\\Windows\\System32\\gdi32full.dll,0x7ffe29970000,0x7ffe29a8a000,0
shared-library,C:\\Windows\\System32\\msvcp_win.dll,0x7ffe29ff0000,0x7ffe2a08d000,0
shared-library,C:\\Windows\\System32\\USER32.dll,0x7ffe2a1f0000,0x7ffe2a38e000,0
shared-library,C:\\Windows\\System32\\PSAPI.DLL,0x7ffe2bf60000,0x7ffe2bf68000,0
shared-library,C:\\Windows\\System32\\SHELL32.dll,0x7ffe2ac60000,0x7ffe2b3a4000,0
shared-library,C:\\Windows\\System32\\ADVAPI32.dll,0x7ffe2b3b0000,0x7ffe2b45f000,0
shared-library,C:\\Windows\\SYSTEM32\\IPHLPAPI.DLL,0x7ffe28c70000,0x7ffe28cab000,0
shared-library,C:\\Windows\\System32\\msvcrt.dll,0x7ffe2b460000,0x7ffe2b4fe000,0
shared-library,C:\\Windows\\SYSTEM32\\USERENV.dll,0x7ffe29720000,0x7ffe2974e000,0
shared-library,C:\\Windows\\System32\\sechost.dll,0x7ffe2aa30000,0x7ffe2aacc000,0
shared-library,C:\\Windows\\System32\\CRYPT32.dll,0x7ffe2a090000,0x7ffe2a1ed000,0
shared-library,C:\\Windows\\System32\\bcrypt.dll,0x7ffe29ac0000,0x7ffe29ae7000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMM.dll,0x7ffe17ef0000,0x7ffe17f17000,0
shared-library,C:\\Windows\\SYSTEM32\\dbgcore.DLL,0x7ffdfbb30000,0x7ffdfbb64000,0
shared-library,C:\\Windows\\SYSTEM32\\CRYPTBASE.DLL,0x7ffe29140000,0x7ffe2914c000,0
shared-library,C:\\Windows\\System32\\IMM32.DLL,0x7ffe2aad0000,0x7ffe2ab00000,0
shared-library,C:\\Windows\\SYSTEM32\\powrprof.dll,0x7ffe28d90000,0x7ffe28ddb000,0
shared-library,C:\\Windows\\SYSTEM32\\UMPDC.dll,0x7ffe28c50000,0x7ffe28c62000,0
shared-library,C:\\Windows\\system32\\uxtheme.dll,0x7ffe23280000,0x7ffe2331e000,0
shared-library,C:\\Windows\\system32\\mswsock.dll,0x7ffe28fb0000,0x7ffe2901a000,0
shared-library,C:\\Windows\\System32\\bcryptprimitives.dll,0x7ffe29df0000,0x7ffe29e72000,0
shared-library,C:\\Windows\\SYSTEM32\\kernel.appcore.dll,0x7ffe278d0000,0x7ffe278e2000,0
shared-library-end
tick,0x7ffe2c22d064,55160,0,0x0,6
profiler,begin,1000
new,CodeRange,0x7ff62c480000,0
new,MemoryChunk,0x35841580000,262144
new,MemoryChunk,0x2e28f480000,262144
new,MemoryChunk,0x2e017c40000,262144
new,MemoryChunk,0x3fd0f40000,262144
new,MemoryChunk,0xf3399c0000,262144
heap-capacity,1031008
heap-available,4346312384
new,MemoryChunk,0xfca8d00000,262144
tick,0x7ff6abdb134b,57769,0,0x0,6
new,MemoryChunk,0x3d953ec0000,270336
new,MemoryChunk,0x22671c80000,262144
new,MemoryChunk,0xca5fac0000,262144
new,MemoryChunk,0x3f7e3880000,262144
code-creation,Builtin,2,60438,0x7ff64c280000,776,DeoptimizationEntry_Eager
code-creation,Builtin,2,60449,0x7ff64c280340,780,DeoptimizationEntry_Lazy
code-creation,Builtin,2,60454,0x7ff64c280680,2724,RecordWriteSaveFP
code-creation,Builtin,2,60460,0x7ff64c281140,1184,RecordWriteIgnoreFP
code-creation,Builtin,2,60464,0x7ff64c281600,344,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,60469,0x7ff64c281780,124,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,60474,0x7ff64c281800,64,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,60479,0x7ff64c281880,348,IndirectPointerBarrierSaveFP
code-creation,Builtin,2,60484,0x7ff64c281a00,124,IndirectPointerBarrierIgnoreFP
code-creation,Builtin,2,60489,0x7ff64c281a80,292,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,60541,0x7ff64c281bc0,340,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,60549,0x7ff64c281d40,376,CallFunction_ReceiverIsAny
code-creation,Builtin,2,60554,0x7ff64c281ec0,100,CallBoundFunction
code-creation,Builtin,2,60558,0x7ff64c281f40,900,CallWrappedFunction
code-creation,Builtin,2,60563,0x7ff64c282300,168,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,60567,0x7ff64c2823c0,168,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,60572,0x7ff64c282480,168,Call_ReceiverIsAny
code-creation,Builtin,2,60577,0x7ff64c282540,964,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,60582,0x7ff64c282940,956,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,60587,0x7ff64c282d00,1052,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,60592,0x7ff64c283140,1044,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,60597,0x7ff64c283580,1052,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,60602,0x7ff64c2839c0,1044,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,60607,0x7ff64c283e00,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,60612,0x7ff64c2841c0,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,60617,0x7ff64c284580,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,60622,0x7ff64c284940,748,CallProxy
code-creation,Builtin,2,60626,0x7ff64c284c40,152,CallVarargs
code-creation,Builtin,2,60630,0x7ff64c284d00,1024,CallWithSpread
code-creation,Builtin,2,60635,0x7ff64c285140,2032,CallWithSpread_Baseline
code-creation,Builtin,2,60639,0x7ff64c285940,2012,CallWithSpread_WithFeedback
code-creation,Builtin,2,60657,0x7ff64c286140,972,CallWithArrayLike
code-creation,Builtin,2,60662,0x7ff64c286540,1948,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,60667,0x7ff64c286d00,156,CallForwardVarargs
code-creation,Builtin,2,60671,0x7ff64c286dc0,156,CallFunctionForwardVarargs
code-creation,Builtin,2,60676,0x7ff64c286e80,468,CallFunctionTemplate_Generic
code-creation,Builtin,2,60680,0x7ff64c287080,152,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,60685,0x7ff64c287140,412,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,60690,0x7ff64c287300,472,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,60696,0x7ff64c287500,32,ConstructFunction
code-creation,Builtin,2,60700,0x7ff64c287540,100,ConstructBoundFunction
code-creation,Builtin,2,60705,0x7ff64c2875c0,28,ConstructedNonConstructable
code-creation,Builtin,2,60709,0x7ff64c287600,100,Construct
code-creation,Builtin,2,60713,0x7ff64c287680,152,ConstructVarargs
code-creation,Builtin,2,60718,0x7ff64c287740,1048,ConstructWithSpread
code-creation,Builtin,2,60722,0x7ff64c287b80,1904,ConstructWithSpread_Baseline
code-creation,Builtin,2,60727,0x7ff64c288300,1896,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,60731,0x7ff64c288a80,1068,ConstructWithArrayLike
code-creation,Builtin,2,60736,0x7ff64c288ec0,1840,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,60741,0x7ff64c289600,196,ConstructForwardVarargs
code-creation,Builtin,2,60746,0x7ff64c289700,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,60750,0x7ff64c289800,780,Construct_Baseline
code-creation,Builtin,2,60755,0x7ff64c289b40,796,Construct_WithFeedback
code-creation,Builtin,2,60788,0x7ff64c289e80,448,JSConstructStubGeneric
code-creation,Builtin,2,60793,0x7ff64c28a080,344,JSBuiltinsConstructStub
code-creation,Builtin,2,60797,0x7ff64c28a200,924,FastNewObject
code-creation,Builtin,2,60802,0x7ff64c28a5c0,368,FastNewClosure
code-creation,Builtin,2,60806,0x7ff64c28a740,784,ConstructProxy
code-creation,Builtin,2,60810,0x7ff64c28aa80,360,JSEntry
code-creation,Builtin,2,60814,0x7ff64c28ac00,360,JSConstructEntry
code-creation,Builtin,2,60819,0x7ff64c28ad80,360,JSRunMicrotasksEntry
code-creation,Builtin,2,60823,0x7ff64c28af00,100,JSEntryTrampoline
code-creation,Builtin,2,60827,0x7ff64c28af80,100,JSConstructEntryTrampoline
code-creation,Builtin,2,60854,0x7ff64c28b000,256,ResumeGeneratorTrampoline
code-creation,Builtin,2,60860,0x7ff64c28b140,1384,StringFromCodePointAt
code-creation,Builtin,2,60864,0x7ff64c28b6c0,944,StringEqual
code-creation,Builtin,2,60870,0x7ff64c28ba80,388,StringGreaterThan
code-creation,Builtin,2,60874,0x7ff64c28bc40,388,StringGreaterThanOrEqual
code-creation,Builtin,2,60879,0x7ff64c28be00,388,StringLessThan
code-creation,Builtin,2,60884,0x7ff64c28bfc0,388,StringLessThanOrEqual
code-creation,Builtin,2,60888,0x7ff64c28c180,388,StringCompare
code-creation,Builtin,2,60893,0x7ff64c28c340,3716,StringSubstring
code-creation,Builtin,2,60897,0x7ff64c28d200,116,OrderedHashTableHealIndex
code-creation,Builtin,2,60901,0x7ff64c28d280,872,InterpreterEntryTrampoline
code-creation,Builtin,2,60906,0x7ff64c28d600,884,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,60911,0x7ff64c28d980,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,60916,0x7ff64c28da00,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,60921,0x7ff64c28da80,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,60926,0x7ff64c28db00,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,60930,0x7ff64c28db80,720,InterpreterPushArgsThenFastConstructFunction
code-creation,Builtin,2,60935,0x7ff64c28de80,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,60941,0x7ff64c28df00,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,60946,0x7ff64c28df80,80,InterpreterEnterAtBytecode
code-creation,Builtin,2,60950,0x7ff64c28e000,216,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,60955,0x7ff64c28e100,96,InterpreterOnStackReplacement
code-creation,Builtin,2,60960,0x7ff64c28e180,392,BaselineOutOfLinePrologue
code-creation,Builtin,2,60965,0x7ff64c28e340,16,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,60969,0x7ff64c28e380,100,BaselineOnStackReplacement
code-creation,Builtin,2,60975,0x7ff64c28e400,84,BaselineLeaveFrame
code-creation,Builtin,2,60980,0x7ff64c28e480,212,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,60985,0x7ff64c28e580,220,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,60990,0x7ff64c28e680,184,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,60995,0x7ff64c28e740,36,MaglevOnStackReplacement
code-creation,Builtin,2,60999,0x7ff64c28e780,4,MaglevFunctionEntryStackCheck_WithoutNewTarget
code-creation,Builtin,2,61004,0x7ff64c28e7c0,4,MaglevFunctionEntryStackCheck_WithNewTarget
code-creation,Builtin,2,61009,0x7ff64c28e800,4,MaglevOptimizeCodeOrTailCallOptimizedCodeSlot
code-creation,Builtin,2,61015,0x7ff64c28e840,864,CompileLazy
code-creation,Builtin,2,61020,0x7ff64c28ebc0,80,CompileLazyDeoptimizedCode
code-creation,Builtin,2,61025,0x7ff64c28ec40,224,InstantiateAsmJs
code-creation,Builtin,2,61029,0x7ff64c28ed40,32,NotifyDeoptimized
code-creation,Builtin,2,61033,0x7ff64c28ed80,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,61038,0x7ff64c28edc0,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,61043,0x7ff64c28ee00,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,61048,0x7ff64c28ee40,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,61052,0x7ff64c28eec0,324,CallApiCallbackGeneric
code-creation,Builtin,2,61057,0x7ff64c28f040,272,CallApiCallbackOptimizedNoProfiling
code-creation,Builtin,2,61062,0x7ff64c28f180,304,CallApiCallbackOptimized
code-creation,Builtin,2,61066,0x7ff64c28f2c0,280,CallApiGetter
code-creation,Builtin,2,61071,0x7ff64c28f400,32,HandleApiCallOrConstruct
code-creation,Builtin,2,61075,0x7ff64c28f440,12,HandleApiConstruct
code-creation,Builtin,2,61080,0x7ff64c28f480,12,HandleApiCallAsFunctionDelegate
code-creation,Builtin,2,61084,0x7ff64c28f4c0,12,HandleApiCallAsConstructorDelegate
code-creation,Builtin,2,61089,0x7ff64c28f500,52,AllocateInYoungGeneration
code-creation,Builtin,2,61094,0x7ff64c28f540,52,AllocateInOldGeneration
code-creation,Builtin,2,61098,0x7ff64c28f580,132,NewHeapNumber
code-creation,Builtin,2,61103,0x7ff64c28f640,592,CopyFastSmiOrObjectElements
code-creation,Builtin,2,61109,0x7ff64c28f8c0,604,GrowFastDoubleElements
code-creation,Builtin,2,61114,0x7ff64c28fb40,484,GrowFastSmiOrObjectElements
code-creation,Builtin,2,61119,0x7ff64c28fd40,452,DebugBreakTrampoline
code-creation,Builtin,2,61123,0x7ff64c28ff40,276,RestartFrameTrampoline
code-creation,Builtin,2,61128,0x7ff64c290080,188,ToNumber
code-creation,Builtin,2,61132,0x7ff64c290140,88,ToBigInt
code-creation,Builtin,2,61136,0x7ff64c2901c0,300,ToNumber_Baseline
code-creation,Builtin,2,61141,0x7ff64c290300,360,ToNumeric_Baseline
code-creation,Builtin,2,61145,0x7ff64c290480,104,PlainPrimitiveToNumber
code-creation,Builtin,2,61149,0x7ff64c290500,224,ToNumberConvertBigInt
code-creation,Builtin,2,61154,0x7ff64c290600,60,ToBigIntConvertNumber
code-creation,Builtin,2,61158,0x7ff64c290640,140,Typeof
code-creation,Builtin,2,61164,0x7ff64c290700,112,BigIntToI64
code-creation,Builtin,2,61168,0x7ff64c290780,4,BigIntToI32Pair
code-creation,Builtin,2,61172,0x7ff64c2907c0,220,I64ToBigInt
code-creation,Builtin,2,61176,0x7ff64c2908c0,4,I32PairToBigInt
code-creation,Builtin,2,61181,0x7ff64c290900,116,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,61185,0x7ff64c290980,348,MathCeilContinuation
code-creation,Builtin,2,61190,0x7ff64c290b00,352,MathFloorContinuation
code-creation,Builtin,2,61194,0x7ff64c290c80,400,MathRoundContinuation
code-creation,Builtin,2,61199,0x7ff64c290e40,4252,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,61203,0x7ff64c291f00,18208,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,61208,0x7ff64c296640,14300,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,61213,0x7ff64c299e40,696,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,61217,0x7ff64c29a100,68,LoadIC_FunctionPrototype
code-creation,Builtin,2,61222,0x7ff64c29a180,12,LoadIC_StringLength
code-creation,Builtin,2,61226,0x7ff64c29a1c0,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,61284,0x7ff64c29a200,4392,LoadIC_NoFeedback
code-creation,Builtin,2,61288,0x7ff64c29b340,32,StoreGlobalIC_Slow
code-creation,Builtin,2,61292,0x7ff64c29b380,8416,StoreIC_NoFeedback
code-creation,Builtin,2,61297,0x7ff64c29d480,4660,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,61301,0x7ff64c29e6c0,188,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,61306,0x7ff64c29e780,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,61311,0x7ff64c29e800,244,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,61316,0x7ff64c29e900,244,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,61321,0x7ff64c29ea00,244,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,61326,0x7ff64c29eb00,244,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,61331,0x7ff64c29ec00,15976,StoreFastElementIC_Standard
code-creation,Builtin,2,61336,0x7ff64c2a2a80,11648,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,61341,0x7ff64c2a5840,14868,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,61346,0x7ff64c2a9280,7020,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,61351,0x7ff64c2aae00,9096,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,61356,0x7ff64c2ad1c0,21224,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,61362,0x7ff64c2b24c0,9096,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,61367,0x7ff64c2b4880,12316,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,61372,0x7ff64c2b78c0,1216,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,61377,0x7ff64c2b7dc0,172,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,61381,0x7ff64c2b7e80,72,HasIndexedInterceptorIC
code-creation,Builtin,2,61386,0x7ff64c2b7f00,164,EnqueueMicrotask
code-creation,Builtin,2,61391,0x7ff64c2b7fc0,8,RunMicrotasksTrampoline
code-creation,Builtin,2,61395,0x7ff64c2b8000,3820,RunMicrotasks
code-creation,Builtin,2,61401,0x7ff64c2b8f00,3804,HasProperty
code-creation,Builtin,2,61405,0x7ff64c2b9e00,1384,DeleteProperty
code-creation,Builtin,2,61410,0x7ff64c2ba380,2604,CopyDataProperties
code-creation,Builtin,2,61415,0x7ff64c2badc0,11368,SetDataProperties
code-creation,Builtin,2,61436,0x7ff64c2bda40,3504,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,61442,0x7ff64c2be800,56,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,61447,0x7ff64c2be840,28,Abort
code-creation,Builtin,2,61451,0x7ff64c2be880,28,AbortCSADcheck
code-creation,Builtin,2,61456,0x7ff64c2be8c0,12,EmptyFunction
code-creation,Builtin,2,61460,0x7ff64c2be900,12,Illegal
code-creation,Builtin,2,61464,0x7ff64c2be940,12,StrictPoisonPillThrower
code-creation,Builtin,2,61469,0x7ff64c2be980,12,UnsupportedThrower
code-creation,Builtin,2,61473,0x7ff64c2be9c0,60,ReturnReceiver
code-creation,Builtin,2,61477,0x7ff64c2bea00,36,ArrayConstructor
code-creation,Builtin,2,61482,0x7ff64c2bea40,380,ArrayConstructorImpl
code-creation,Builtin,2,61487,0x7ff64c2bebc0,220,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,61492,0x7ff64c2becc0,220,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,61497,0x7ff64c2bedc0,184,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,61503,0x7ff64c2bee80,184,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,61509,0x7ff64c2bef40,184,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,61515,0x7ff64c2bf000,184,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,61520,0x7ff64c2bf0c0,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,61526,0x7ff64c2bf1c0,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,61531,0x7ff64c2bf2c0,988,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,61537,0x7ff64c2bf6c0,936,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,61542,0x7ff64c2bfa80,852,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,61547,0x7ff64c2bfe00,800,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,61553,0x7ff64c2c0140,852,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,61559,0x7ff64c2c04c0,800,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,61564,0x7ff64c2c0800,932,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,61570,0x7ff64c2c0bc0,884,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,61576,0x7ff64c2c0f40,48,ArrayNArgumentsConstructor
code-creation,Builtin,2,61580,0x7ff64c2c0f80,12,ArrayConcat
code-creation,Builtin,2,61585,0x7ff64c2c0fc0,12,ArrayPrototypeFill
code-creation,Builtin,2,61589,0x7ff64c2c1000,1536,ArrayIncludesSmi
code-creation,Builtin,2,61594,0x7ff64c2c1640,1536,ArrayIncludesSmiOrObject
code-creation,Builtin,2,61598,0x7ff64c2c1c80,236,ArrayIncludesPackedDoubles
code-creation,Builtin,2,61603,0x7ff64c2c1d80,292,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,61607,0x7ff64c2c1ec0,580,ArrayIncludes
code-creation,Builtin,2,61612,0x7ff64c2c2140,1392,ArrayIndexOfSmi
code-creation,Builtin,2,61616,0x7ff64c2c26c0,1392,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,61621,0x7ff64c2c2c40,172,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,61625,0x7ff64c2c2d00,172,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,61630,0x7ff64c2c2dc0,584,ArrayIndexOf
code-creation,Builtin,2,61635,0x7ff64c2c3040,12,ArrayPop
code-creation,Builtin,2,61639,0x7ff64c2c3080,560,ArrayPrototypePop
code-creation,Builtin,2,61655,0x7ff64c2c32c0,12,ArrayPush
code-creation,Builtin,2,61660,0x7ff64c2c3300,2920,ArrayPrototypePush
code-creation,Builtin,2,61664,0x7ff64c2c3e80,12,ArrayShift
code-creation,Builtin,2,61668,0x7ff64c2c3ec0,12,ArrayUnshift
code-creation,Builtin,2,61673,0x7ff64c2c3f00,12,ArrayFromAsync
code-creation,Builtin,2,61677,0x7ff64c2c3f40,1188,CloneFastJSArray
code-creation,Builtin,2,61681,0x7ff64c2c4400,2568,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,61686,0x7ff64c2c4e40,1204,ExtractFastJSArray
code-creation,Builtin,2,61691,0x7ff64c2c5300,264,ArrayPrototypeEntries
code-creation,Builtin,2,61697,0x7ff64c2c5440,252,ArrayPrototypeKeys
code-creation,Builtin,2,61702,0x7ff64c2c5540,264,ArrayPrototypeValues
code-creation,Builtin,2,61706,0x7ff64c2c5680,4284,ArrayIteratorPrototypeNext
code-creation,Builtin,2,61711,0x7ff64c2c6740,5292,FlattenIntoArray
code-creation,Builtin,2,61715,0x7ff64c2c7c00,5220,FlatMapIntoArray
code-creation,Builtin,2,61720,0x7ff64c2c9080,368,ArrayPrototypeFlat
code-creation,Builtin,2,61724,0x7ff64c2c9200,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,61729,0x7ff64c2c93c0,12,ArrayBufferConstructor
code-creation,Builtin,2,61733,0x7ff64c2c9400,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,61739,0x7ff64c2c9440,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,61744,0x7ff64c2c9480,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,61749,0x7ff64c2c94c0,12,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,61754,0x7ff64c2c9500,12,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,61769,0x7ff64c2c9540,1000,AsyncFunctionEnter
code-creation,Builtin,2,61774,0x7ff64c2c9940,80,AsyncFunctionReject
code-creation,Builtin,2,61779,0x7ff64c2c99c0,76,AsyncFunctionResolve
code-creation,Builtin,2,61783,0x7ff64c2c9a40,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,61788,0x7ff64c2c9a80,1556,AsyncFunctionAwaitCaught
code-creation,Builtin,2,61793,0x7ff64c2ca0c0,1556,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,61797,0x7ff64c2ca700,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,61802,0x7ff64c2ca7c0,168,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,61807,0x7ff64c2ca880,12,BigIntConstructor
code-creation,Builtin,2,61812,0x7ff64c2ca8c0,12,BigIntAsUintN
code-creation,Builtin,2,61816,0x7ff64c2ca900,12,BigIntAsIntN
code-creation,Builtin,2,61820,0x7ff64c2ca940,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,61825,0x7ff64c2ca980,12,BigIntPrototypeToString
code-creation,Builtin,2,61829,0x7ff64c2ca9c0,12,BigIntPrototypeValueOf
code-creation,Builtin,2,61834,0x7ff64c2caa00,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,61839,0x7ff64c2caa40,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,61844,0x7ff64c2caa80,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,61849,0x7ff64c2caac0,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,61853,0x7ff64c2cab00,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,61858,0x7ff64c2cab40,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,61863,0x7ff64c2cab80,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,61868,0x7ff64c2cabc0,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,61872,0x7ff64c2cac00,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,61877,0x7ff64c2cac40,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,61882,0x7ff64c2cac80,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,61887,0x7ff64c2cacc0,12,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,61891,0x7ff64c2cad00,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,61896,0x7ff64c2cad40,12,CallSitePrototypeGetThis
code-creation,Builtin,2,61901,0x7ff64c2cad80,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,61906,0x7ff64c2cadc0,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,61910,0x7ff64c2cae00,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,61915,0x7ff64c2cae40,12,CallSitePrototypeIsEval
code-creation,Builtin,2,61919,0x7ff64c2cae80,12,CallSitePrototypeIsNative
code-creation,Builtin,2,61924,0x7ff64c2caec0,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,61929,0x7ff64c2caf00,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,61933,0x7ff64c2caf40,12,CallSitePrototypeToString
code-creation,Builtin,2,61938,0x7ff64c2caf80,12,ConsoleDebug
code-creation,Builtin,2,61942,0x7ff64c2cafc0,12,ConsoleError
code-creation,Builtin,2,61946,0x7ff64c2cb000,12,ConsoleInfo
code-creation,Builtin,2,61951,0x7ff64c2cb040,12,ConsoleLog
code-creation,Builtin,2,61955,0x7ff64c2cb080,12,ConsoleWarn
code-creation,Builtin,2,61959,0x7ff64c2cb0c0,12,ConsoleDir
code-creation,Builtin,2,61965,0x7ff64c2cb100,12,ConsoleDirXml
code-creation,Builtin,2,61970,0x7ff64c2cb140,12,ConsoleTable
code-creation,Builtin,2,61974,0x7ff64c2cb180,12,ConsoleTrace
code-creation,Builtin,2,61978,0x7ff64c2cb1c0,12,ConsoleGroup
code-creation,Builtin,2,61982,0x7ff64c2cb200,12,ConsoleGroupCollapsed
code-creation,Builtin,2,61987,0x7ff64c2cb240,12,ConsoleGroupEnd
code-creation,Builtin,2,61991,0x7ff64c2cb280,12,ConsoleClear
code-creation,Builtin,2,61996,0x7ff64c2cb2c0,12,ConsoleCount
code-creation,Builtin,2,62000,0x7ff64c2cb300,12,ConsoleCountReset
code-creation,Builtin,2,62004,0x7ff64c2cb340,12,ConsoleAssert
code-creation,Builtin,2,62009,0x7ff64c2cb380,12,ConsoleProfile
code-creation,Builtin,2,62013,0x7ff64c2cb3c0,12,ConsoleProfileEnd
code-creation,Builtin,2,62017,0x7ff64c2cb400,12,ConsoleTime
code-creation,Builtin,2,62021,0x7ff64c2cb440,12,ConsoleTimeLog
code-creation,Builtin,2,62025,0x7ff64c2cb480,12,ConsoleTimeEnd
code-creation,Builtin,2,62030,0x7ff64c2cb4c0,12,ConsoleTimeStamp
code-creation,Builtin,2,62034,0x7ff64c2cb500,12,ConsoleContext
code-creation,Builtin,2,62038,0x7ff64c2cb540,12,DataViewConstructor
code-creation,Builtin,2,62043,0x7ff64c2cb580,12,DateConstructor
code-creation,Builtin,2,62047,0x7ff64c2cb5c0,216,DatePrototypeGetDate
code-creation,Builtin,2,62051,0x7ff64c2cb6c0,216,DatePrototypeGetDay
code-creation,Builtin,2,62056,0x7ff64c2cb7c0,216,DatePrototypeGetFullYear
code-creation,Builtin,2,62060,0x7ff64c2cb8c0,216,DatePrototypeGetHours
code-creation,Builtin,2,62065,0x7ff64c2cb9c0,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,62069,0x7ff64c2cbac0,216,DatePrototypeGetMinutes
code-creation,Builtin,2,62074,0x7ff64c2cbbc0,216,DatePrototypeGetMonth
code-creation,Builtin,2,62078,0x7ff64c2cbcc0,216,DatePrototypeGetSeconds
code-creation,Builtin,2,62083,0x7ff64c2cbdc0,128,DatePrototypeGetTime
code-creation,Builtin,2,62088,0x7ff64c2cbe80,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,62092,0x7ff64c2cbf80,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,62097,0x7ff64c2cc080,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,62101,0x7ff64c2cc180,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,62106,0x7ff64c2cc280,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,62111,0x7ff64c2cc380,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,62116,0x7ff64c2cc480,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,62120,0x7ff64c2cc580,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,62125,0x7ff64c2cc680,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,62130,0x7ff64c2cc780,128,DatePrototypeValueOf
code-creation,Builtin,2,62134,0x7ff64c2cc840,436,DatePrototypeToPrimitive
code-creation,Builtin,2,62139,0x7ff64c2cca00,12,DatePrototypeGetYear
code-creation,Builtin,2,62144,0x7ff64c2cca40,12,DatePrototypeSetYear
code-creation,Builtin,2,62148,0x7ff64c2cca80,12,DateNow
code-creation,Builtin,2,62152,0x7ff64c2ccac0,12,DateParse
code-creation,Builtin,2,62157,0x7ff64c2ccb00,12,DatePrototypeSetDate
code-creation,Builtin,2,62161,0x7ff64c2ccb40,12,DatePrototypeSetFullYear
code-creation,Builtin,2,62166,0x7ff64c2ccb80,12,DatePrototypeSetHours
code-creation,Builtin,2,62171,0x7ff64c2ccbc0,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,62176,0x7ff64c2ccc00,12,DatePrototypeSetMinutes
code-creation,Builtin,2,62180,0x7ff64c2ccc40,12,DatePrototypeSetMonth
code-creation,Builtin,2,62185,0x7ff64c2ccc80,12,DatePrototypeSetSeconds
code-creation,Builtin,2,62189,0x7ff64c2cccc0,12,DatePrototypeSetTime
code-creation,Builtin,2,62194,0x7ff64c2ccd00,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,62198,0x7ff64c2ccd40,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,62203,0x7ff64c2ccd80,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,62208,0x7ff64c2ccdc0,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,62212,0x7ff64c2cce00,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,62217,0x7ff64c2cce40,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,62222,0x7ff64c2cce80,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,62227,0x7ff64c2ccec0,12,DatePrototypeToDateString
code-creation,Builtin,2,62232,0x7ff64c2ccf00,12,DatePrototypeToISOString
code-creation,Builtin,2,62237,0x7ff64c2ccf40,12,DatePrototypeToUTCString
code-creation,Builtin,2,62242,0x7ff64c2ccf80,12,DatePrototypeToString
code-creation,Builtin,2,62246,0x7ff64c2ccfc0,12,DatePrototypeToTimeString
code-creation,Builtin,2,62251,0x7ff64c2cd000,12,DatePrototypeToJson
code-creation,Builtin,2,62256,0x7ff64c2cd040,12,DateUTC
code-creation,Builtin,2,62260,0x7ff64c2cd080,12,ErrorConstructor
code-creation,Builtin,2,62264,0x7ff64c2cd0c0,12,ErrorCaptureStackTrace
code-creation,Builtin,2,62269,0x7ff64c2cd100,12,ErrorPrototypeToString
code-creation,Builtin,2,62273,0x7ff64c2cd140,12,FunctionConstructor
code-creation,Builtin,2,62277,0x7ff64c2cd180,80,FunctionPrototypeApply
code-creation,Builtin,2,62282,0x7ff64c2cd200,12,FunctionPrototypeBind
code-creation,Builtin,2,62287,0x7ff64c2cd240,36,FunctionPrototypeCall
code-creation,Builtin,2,62291,0x7ff64c2cd280,12,FunctionPrototypeToString
code-creation,Builtin,2,62296,0x7ff64c2cd2c0,252,CreateIterResultObject
code-creation,Builtin,2,62300,0x7ff64c2cd3c0,1120,CreateGeneratorObject
code-creation,Builtin,2,62342,0x7ff64c2cd840,12,GeneratorFunctionConstructor
code-creation,Builtin,2,62347,0x7ff64c2cd880,404,GeneratorPrototypeNext
code-creation,Builtin,2,62352,0x7ff64c2cda40,404,GeneratorPrototypeReturn
code-creation,Builtin,2,62356,0x7ff64c2cdc00,408,GeneratorPrototypeThrow
code-creation,Builtin,2,62361,0x7ff64c2cddc0,12,AsyncFunctionConstructor
code-creation,Builtin,2,62366,0x7ff64c2cde00,460,SuspendGeneratorBaseline
code-creation,Builtin,2,62371,0x7ff64c2ce000,100,ResumeGeneratorBaseline
code-creation,Builtin,2,62375,0x7ff64c2ce080,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,62381,0x7ff64c2ce0c0,88,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,62386,0x7ff64c2ce140,12,GlobalDecodeURI
code-creation,Builtin,2,62390,0x7ff64c2ce180,12,GlobalDecodeURIComponent
code-creation,Builtin,2,62395,0x7ff64c2ce1c0,12,GlobalEncodeURI
code-creation,Builtin,2,62400,0x7ff64c2ce200,12,GlobalEncodeURIComponent
code-creation,Builtin,2,62405,0x7ff64c2ce240,12,GlobalEscape
code-creation,Builtin,2,62409,0x7ff64c2ce280,12,GlobalUnescape
code-creation,Builtin,2,62413,0x7ff64c2ce2c0,12,GlobalEval
code-creation,Builtin,2,62418,0x7ff64c2ce300,176,GlobalIsFinite
code-creation,Builtin,2,62422,0x7ff64c2ce3c0,172,GlobalIsNaN
code-creation,Builtin,2,62426,0x7ff64c2ce480,12,JsonParse
code-creation,Builtin,2,62431,0x7ff64c2ce4c0,12,JsonStringify
code-creation,Builtin,2,62435,0x7ff64c2ce500,12,JsonRawJson
code-creation,Builtin,2,62439,0x7ff64c2ce540,12,JsonIsRawJson
code-creation,Builtin,2,62443,0x7ff64c2ce580,4848,LoadIC
code-creation,Builtin,2,62448,0x7ff64c2cf880,4472,LoadIC_Megamorphic
code-creation,Builtin,2,62452,0x7ff64c2d0a00,4660,LoadIC_Noninlined
code-creation,Builtin,2,62457,0x7ff64c2d1c40,44,LoadICTrampoline
code-creation,Builtin,2,62461,0x7ff64c2d1c80,24,LoadICBaseline
code-creation,Builtin,2,62466,0x7ff64c2d1cc0,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,62471,0x7ff64c2d1d00,8996,LoadSuperIC
code-creation,Builtin,2,62476,0x7ff64c2d4040,24,LoadSuperICBaseline
code-creation,Builtin,2,62480,0x7ff64c2d4080,8124,KeyedLoadIC
code-creation,Builtin,2,62485,0x7ff64c2d6040,16600,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,62490,0x7ff64c2da140,13656,KeyedLoadIC_MegamorphicStringKey
code-creation,Builtin,2,62495,0x7ff64c2dd6c0,44,KeyedLoadICTrampoline
code-creation,Builtin,2,62499,0x7ff64c2dd700,24,KeyedLoadICBaseline
code-creation,Builtin,2,62504,0x7ff64c2dd740,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,62509,0x7ff64c2dd780,44,KeyedLoadICTrampoline_MegamorphicStringKey
code-creation,Builtin,2,62514,0x7ff64c2dd7c0,5468,StoreGlobalIC
code-creation,Builtin,2,62518,0x7ff64c2ded40,44,StoreGlobalICTrampoline
code-creation,Builtin,2,62523,0x7ff64c2ded80,24,StoreGlobalICBaseline
code-creation,Builtin,2,62528,0x7ff64c2dedc0,6084,StoreIC
code-creation,Builtin,2,62532,0x7ff64c2e05c0,44,StoreICTrampoline
code-creation,Builtin,2,62536,0x7ff64c2e0600,24,StoreICBaseline
code-creation,Builtin,2,62563,0x7ff64c2e0640,5880,DefineNamedOwnIC
code-creation,Builtin,2,62571,0x7ff64c2e1d40,44,DefineNamedOwnICTrampoline
code-creation,Builtin,2,62576,0x7ff64c2e1d80,24,DefineNamedOwnICBaseline
code-creation,Builtin,2,62580,0x7ff64c2e1dc0,6592,KeyedStoreIC
code-creation,Builtin,2,62585,0x7ff64c2e37c0,44,KeyedStoreICTrampoline
code-creation,Builtin,2,62590,0x7ff64c2e3800,24,KeyedStoreICBaseline
code-creation,Builtin,2,62594,0x7ff64c2e3840,6552,DefineKeyedOwnIC
code-creation,Builtin,2,62598,0x7ff64c2e5200,52,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,62603,0x7ff64c2e5240,28,DefineKeyedOwnICBaseline
code-creation,Builtin,2,62608,0x7ff64c2e5280,320,StoreInArrayLiteralIC
code-creation,Builtin,2,62613,0x7ff64c2e5400,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,62617,0x7ff64c2e5440,196,LookupContextTrampoline
code-creation,Builtin,2,62622,0x7ff64c2e5540,200,LookupContextBaseline
code-creation,Builtin,2,62628,0x7ff64c2e5640,196,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,62636,0x7ff64c2e5740,200,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,62665,0x7ff64c2e5840,3064,LoadGlobalIC
code-creation,Builtin,2,62672,0x7ff64c2e6440,3048,LoadGlobalICInsideTypeof
code-creation,Builtin,2,62680,0x7ff64c2e7040,44,LoadGlobalICTrampoline
code-creation,Builtin,2,62688,0x7ff64c2e7080,24,LoadGlobalICBaseline
code-creation,Builtin,2,62696,0x7ff64c2e70c0,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,62704,0x7ff64c2e7100,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,62713,0x7ff64c2e7140,192,LookupGlobalIC
code-creation,Builtin,2,62722,0x7ff64c2e7240,228,LookupGlobalICTrampoline
code-creation,Builtin,2,62730,0x7ff64c2e7340,204,LookupGlobalICBaseline
code-creation,Builtin,2,62737,0x7ff64c2e7440,192,LookupGlobalICInsideTypeof
code-creation,Builtin,2,62744,0x7ff64c2e7540,228,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,62752,0x7ff64c2e7640,204,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,62776,0x7ff64c2e7740,3108,CloneObjectIC
code-creation,Builtin,2,62781,0x7ff64c2e8380,24,CloneObjectICBaseline
code-creation,Builtin,2,62786,0x7ff64c2e83c0,2812,CloneObjectIC_Slow
code-creation,Builtin,2,62791,0x7ff64c2e8ec0,3224,KeyedHasIC
code-creation,Builtin,2,62795,0x7ff64c2e9b80,24,KeyedHasICBaseline
code-creation,Builtin,2,62800,0x7ff64c2e9bc0,3804,KeyedHasIC_Megamorphic
code-creation,Builtin,2,62805,0x7ff64c2eaac0,1896,IterableToList
code-creation,Builtin,2,62809,0x7ff64c2eb240,1704,IterableToFixedArray
code-creation,Builtin,2,62814,0x7ff64c2eb900,724,IterableToListWithSymbolLookup
code-creation,Builtin,2,62819,0x7ff64c2ebc00,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,62824,0x7ff64c2ebc40,112,IterableToListMayPreserveHoles
code-creation,Builtin,2,62829,0x7ff64c2ebcc0,1344,IterableToFixedArrayForWasm
code-creation,Builtin,2,62834,0x7ff64c2ec240,1884,StringListFromIterable
code-creation,Builtin,2,62838,0x7ff64c2ec9c0,1220,FindOrderedHashMapEntry
code-creation,Builtin,2,62843,0x7ff64c2ecec0,4536,MapConstructor
code-creation,Builtin,2,62848,0x7ff64c2ee080,2052,MapPrototypeSet
code-creation,Builtin,2,62853,0x7ff64c2ee8c0,1600,MapPrototypeDelete
code-creation,Builtin,2,62858,0x7ff64c2eef40,212,MapPrototypeGet
code-creation,Builtin,2,62862,0x7ff64c2ef040,172,MapPrototypeHas
code-creation,Builtin,2,62866,0x7ff64c2ef100,12,MapPrototypeClear
code-creation,Builtin,2,62871,0x7ff64c2ef140,288,MapPrototypeEntries
code-creation,Builtin,2,62875,0x7ff64c2ef280,144,MapPrototypeGetSize
code-creation,Builtin,2,62880,0x7ff64c2ef340,560,MapPrototypeForEach
code-creation,Builtin,2,62884,0x7ff64c2ef580,288,MapPrototypeKeys
code-creation,Builtin,2,62889,0x7ff64c2ef6c0,288,MapPrototypeValues
code-creation,Builtin,2,62893,0x7ff64c2ef800,936,MapIteratorPrototypeNext
code-creation,Builtin,2,62898,0x7ff64c2efbc0,1328,MapIteratorToList
code-creation,Builtin,2,62903,0x7ff64c2f0100,12,NumberPrototypeToExponential
code-creation,Builtin,2,62908,0x7ff64c2f0140,12,NumberPrototypeToFixed
code-creation,Builtin,2,62913,0x7ff64c2f0180,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,62920,0x7ff64c2f01c0,12,NumberPrototypeToPrecision
code-creation,Builtin,2,62926,0x7ff64c2f0200,356,SameValue
code-creation,Builtin,2,62931,0x7ff64c2f0380,200,SameValueNumbersOnly
code-creation,Builtin,2,62935,0x7ff64c2f0480,1320,Add_Baseline
code-creation,Builtin,2,62939,0x7ff64c2f09c0,1020,AddSmi_Baseline
code-creation,Builtin,2,62944,0x7ff64c2f0dc0,1296,Subtract_Baseline
code-creation,Builtin,2,62948,0x7ff64c2f1300,1032,SubtractSmi_Baseline
code-creation,Builtin,2,62953,0x7ff64c2f1740,1392,Multiply_Baseline
code-creation,Builtin,2,62957,0x7ff64c2f1cc0,1120,MultiplySmi_Baseline
code-creation,Builtin,2,62962,0x7ff64c2f2140,1480,Divide_Baseline
code-creation,Builtin,2,62966,0x7ff64c2f2740,1252,DivideSmi_Baseline
code-creation,Builtin,2,62970,0x7ff64c2f2c40,1416,Modulus_Baseline
code-creation,Builtin,2,62975,0x7ff64c2f3200,1136,ModulusSmi_Baseline
code-creation,Builtin,2,62979,0x7ff64c2f3680,784,Exponentiate_Baseline
code-creation,Builtin,2,62984,0x7ff64c2f39c0,676,ExponentiateSmi_Baseline
code-creation,Builtin,2,62988,0x7ff64c2f3c80,1712,BitwiseAnd_Baseline
code-creation,Builtin,2,62993,0x7ff64c2f4340,420,BitwiseAndSmi_Baseline
code-creation,Builtin,2,62997,0x7ff64c2f4500,1712,BitwiseOr_Baseline
code-creation,Builtin,2,63002,0x7ff64c2f4bc0,420,BitwiseOrSmi_Baseline
code-creation,Builtin,2,63006,0x7ff64c2f4d80,1712,BitwiseXor_Baseline
code-creation,Builtin,2,63011,0x7ff64c2f5440,420,BitwiseXorSmi_Baseline
code-creation,Builtin,2,63015,0x7ff64c2f5600,1092,ShiftLeft_Baseline
code-creation,Builtin,2,63020,0x7ff64c2f5a80,444,ShiftLeftSmi_Baseline
code-creation,Builtin,2,63024,0x7ff64c2f5c40,1092,ShiftRight_Baseline
code-creation,Builtin,2,63029,0x7ff64c2f60c0,428,ShiftRightSmi_Baseline
code-creation,Builtin,2,63034,0x7ff64c2f6280,1292,ShiftRightLogical_Baseline
code-creation,Builtin,2,63038,0x7ff64c2f67c0,680,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,63043,0x7ff64c2f6a80,1256,Add_WithFeedback
code-creation,Builtin,2,63048,0x7ff64c2f6f80,1244,Subtract_WithFeedback
code-creation,Builtin,2,63052,0x7ff64c2f7480,1336,Multiply_WithFeedback
code-creation,Builtin,2,63057,0x7ff64c2f79c0,1440,Divide_WithFeedback
code-creation,Builtin,2,63061,0x7ff64c2f7f80,1360,Modulus_WithFeedback
code-creation,Builtin,2,63066,0x7ff64c2f8500,744,Exponentiate_WithFeedback
code-creation,Builtin,2,63070,0x7ff64c2f8800,1556,BitwiseAnd_WithFeedback
code-creation,Builtin,2,63075,0x7ff64c2f8e40,1556,BitwiseOr_WithFeedback
code-creation,Builtin,2,63080,0x7ff64c2f9480,1556,BitwiseXor_WithFeedback
code-creation,Builtin,2,63084,0x7ff64c2f9ac0,1072,ShiftLeft_WithFeedback
code-creation,Builtin,2,63089,0x7ff64c2f9f00,1072,ShiftRight_WithFeedback
code-creation,Builtin,2,63093,0x7ff64c2fa340,1144,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,63098,0x7ff64c2fa7c0,1956,Equal_Baseline
code-creation,Builtin,2,63103,0x7ff64c2faf80,1180,StrictEqual_Baseline
code-creation,Builtin,2,63107,0x7ff64c2fb440,1488,LessThan_Baseline
code-creation,Builtin,2,63112,0x7ff64c2fba40,1488,GreaterThan_Baseline
code-creation,Builtin,2,63116,0x7ff64c2fc040,1488,LessThanOrEqual_Baseline
code-creation,Builtin,2,63121,0x7ff64c2fc640,1488,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,63125,0x7ff64c2fcc40,1864,Equal_WithFeedback
code-creation,Builtin,2,63129,0x7ff64c2fd3c0,1180,StrictEqual_WithFeedback
code-creation,Builtin,2,63134,0x7ff64c2fd880,1480,LessThan_WithFeedback
code-creation,Builtin,2,63139,0x7ff64c2fde80,1480,GreaterThan_WithFeedback
code-creation,Builtin,2,63144,0x7ff64c2fe480,1480,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,63148,0x7ff64c2fea80,1480,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,63153,0x7ff64c2ff080,404,BitwiseNot_Baseline
code-creation,Builtin,2,63157,0x7ff64c2ff240,560,Decrement_Baseline
code-creation,Builtin,2,63162,0x7ff64c2ff480,564,Increment_Baseline
code-creation,Builtin,2,63166,0x7ff64c2ff6c0,588,Negate_Baseline
code-creation,Builtin,2,63171,0x7ff64c2ff940,404,BitwiseNot_WithFeedback
code-creation,Builtin,2,63176,0x7ff64c2ffb00,552,Decrement_WithFeedback
code-creation,Builtin,2,63182,0x7ff64c2ffd40,556,Increment_WithFeedback
code-creation,Builtin,2,63188,0x7ff64c2fff80,580,Negate_WithFeedback
code-creation,Builtin,2,63193,0x7ff64c300200,264,ObjectAssign
code-creation,Builtin,2,63197,0x7ff64c300340,992,ObjectCreate
code-creation,Builtin,2,63202,0x7ff64c300740,12,ObjectDefineGetter
code-creation,Builtin,2,63207,0x7ff64c300780,12,ObjectDefineProperties
code-creation,Builtin,2,63212,0x7ff64c3007c0,12,ObjectDefineProperty
code-creation,Builtin,2,63216,0x7ff64c300800,12,ObjectDefineSetter
code-creation,Builtin,2,63221,0x7ff64c300840,1560,ObjectEntries
code-creation,Builtin,2,63225,0x7ff64c300e80,12,ObjectFreeze
code-creation,Builtin,2,63230,0x7ff64c300ec0,5108,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,63235,0x7ff64c3022c0,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,63240,0x7ff64c302300,948,ObjectGetOwnPropertyNames
code-creation,Builtin,2,63245,0x7ff64c3026c0,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,63250,0x7ff64c302700,168,ObjectHasOwn
code-creation,Builtin,2,63254,0x7ff64c3027c0,416,ObjectIs
code-creation,Builtin,2,63259,0x7ff64c302980,12,ObjectIsFrozen
code-creation,Builtin,2,63263,0x7ff64c3029c0,12,ObjectIsSealed
code-creation,Builtin,2,63268,0x7ff64c302a00,920,ObjectKeys
code-creation,Builtin,2,63272,0x7ff64c302dc0,12,ObjectLookupGetter
code-creation,Builtin,2,63277,0x7ff64c302e00,12,ObjectLookupSetter
code-creation,Builtin,2,63282,0x7ff64c302e40,3248,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,63287,0x7ff64c303b00,300,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,63292,0x7ff64c303c40,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,63297,0x7ff64c303c80,12,ObjectPrototypeGetProto
code-creation,Builtin,2,63302,0x7ff64c303cc0,12,ObjectPrototypeSetProto
code-creation,Builtin,2,63306,0x7ff64c303d00,12,ObjectSeal
code-creation,Builtin,2,63311,0x7ff64c303d40,1384,ObjectToString
code-creation,Builtin,2,63316,0x7ff64c3042c0,1288,ObjectValues
code-creation,Builtin,2,63320,0x7ff64c304800,368,OrdinaryHasInstance
code-creation,Builtin,2,63325,0x7ff64c304980,372,InstanceOf
code-creation,Builtin,2,63329,0x7ff64c304b00,640,InstanceOf_WithFeedback
code-creation,Builtin,2,63334,0x7ff64c304dc0,648,InstanceOf_Baseline
code-creation,Builtin,2,63339,0x7ff64c305080,300,ForInEnumerate
code-creation,Builtin,2,63343,0x7ff64c3051c0,132,ForInPrepare
code-creation,Builtin,2,63348,0x7ff64c305280,3720,ForInFilter
code-creation,Builtin,2,63352,0x7ff64c306140,56,ReflectApply
code-creation,Builtin,2,63356,0x7ff64c306180,64,ReflectConstruct
code-creation,Builtin,2,63361,0x7ff64c306200,12,ReflectDefineProperty
code-creation,Builtin,2,63366,0x7ff64c306240,12,ReflectOwnKeys
code-creation,Builtin,2,63370,0x7ff64c306280,12,ReflectSet
code-creation,Builtin,2,63375,0x7ff64c3062c0,12,RegExpCapture1Getter
code-creation,Builtin,2,63381,0x7ff64c306300,12,RegExpCapture2Getter
code-creation,Builtin,2,63385,0x7ff64c306340,12,RegExpCapture3Getter
code-creation,Builtin,2,63390,0x7ff64c306380,12,RegExpCapture4Getter
code-creation,Builtin,2,63394,0x7ff64c3063c0,12,RegExpCapture5Getter
code-creation,Builtin,2,63399,0x7ff64c306400,12,RegExpCapture6Getter
code-creation,Builtin,2,63404,0x7ff64c306440,12,RegExpCapture7Getter
code-creation,Builtin,2,63408,0x7ff64c306480,12,RegExpCapture8Getter
code-creation,Builtin,2,63413,0x7ff64c3064c0,12,RegExpCapture9Getter
code-creation,Builtin,2,63418,0x7ff64c306500,2396,RegExpConstructor
code-creation,Builtin,2,63423,0x7ff64c306e80,12,RegExpInputGetter
code-creation,Builtin,2,63427,0x7ff64c306ec0,12,RegExpInputSetter
code-creation,Builtin,2,63431,0x7ff64c306f00,12,RegExpLastMatchGetter
code-creation,Builtin,2,63436,0x7ff64c306f40,12,RegExpLastParenGetter
code-creation,Builtin,2,63441,0x7ff64c306f80,12,RegExpLeftContextGetter
code-creation,Builtin,2,63445,0x7ff64c306fc0,948,RegExpPrototypeCompile
code-creation,Builtin,2,63450,0x7ff64c307380,12,RegExpPrototypeToString
code-creation,Builtin,2,63455,0x7ff64c3073c0,12,RegExpRightContextGetter
code-creation,Builtin,2,63460,0x7ff64c307400,260,RegExpExecAtom
code-creation,Builtin,2,63466,0x7ff64c307540,1116,RegExpExecInternal
code-creation,Builtin,2,63470,0x7ff64c3079c0,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,63475,0x7ff64c307a00,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,63483,0x7ff64c307a40,1216,FindOrderedHashSetEntry
code-creation,Builtin,2,63488,0x7ff64c307f40,3224,SetConstructor
code-creation,Builtin,2,63492,0x7ff64c308c00,172,SetPrototypeHas
code-creation,Builtin,2,63497,0x7ff64c308cc0,1860,SetPrototypeAdd
code-creation,Builtin,2,63501,0x7ff64c309440,1576,SetPrototypeDelete
code-creation,Builtin,2,63506,0x7ff64c309a80,12,SetPrototypeClear
code-creation,Builtin,2,63510,0x7ff64c309ac0,288,SetPrototypeEntries
code-creation,Builtin,2,63515,0x7ff64c309c00,148,SetPrototypeGetSize
code-creation,Builtin,2,63519,0x7ff64c309cc0,540,SetPrototypeForEach
code-creation,Builtin,2,63524,0x7ff64c309f00,288,SetPrototypeValues
code-creation,Builtin,2,63528,0x7ff64c30a040,864,SetIteratorPrototypeNext
code-creation,Builtin,2,63533,0x7ff64c30a3c0,1192,SetOrSetIteratorToList
code-creation,Builtin,2,63538,0x7ff64c30a880,12,ShadowRealmConstructor
code-creation,Builtin,2,63543,0x7ff64c30a8c0,640,ShadowRealmGetWrappedValue
code-creation,Builtin,2,63548,0x7ff64c30ab80,12,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,63552,0x7ff64c30abc0,1432,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,63557,0x7ff64c30b180,240,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,63562,0x7ff64c30b280,76,ShadowRealmImportValueRejected
code-creation,Builtin,2,63567,0x7ff64c30b300,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,63572,0x7ff64c30b340,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,63577,0x7ff64c30b380,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,63582,0x7ff64c30b3c0,2108,AtomicsLoad
code-creation,Builtin,2,63586,0x7ff64c30bc00,2288,AtomicsStore
code-creation,Builtin,2,63591,0x7ff64c30c500,2896,AtomicsExchange
code-creation,Builtin,2,63595,0x7ff64c30d080,3324,AtomicsCompareExchange
code-creation,Builtin,2,63600,0x7ff64c30dd80,2916,AtomicsAdd
code-creation,Builtin,2,63604,0x7ff64c30e900,2916,AtomicsSub
code-creation,Builtin,2,63608,0x7ff64c30f480,2916,AtomicsAnd
code-creation,Builtin,2,63612,0x7ff64c310000,2916,AtomicsOr
code-creation,Builtin,2,63617,0x7ff64c310b80,2916,AtomicsXor
code-creation,Builtin,2,63621,0x7ff64c311700,12,AtomicsNotify
code-creation,Builtin,2,63625,0x7ff64c311740,12,AtomicsIsLockFree
code-creation,Builtin,2,63630,0x7ff64c311780,12,AtomicsWait
code-creation,Builtin,2,63634,0x7ff64c3117c0,12,AtomicsWaitAsync
code-creation,Builtin,2,63638,0x7ff64c311800,12,StringFromCodePoint
code-creation,Builtin,2,63655,0x7ff64c311840,1548,StringFromCharCode
code-creation,Builtin,2,63660,0x7ff64c311e80,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,63665,0x7ff64c311ec0,4736,StringPrototypeMatchAll
code-creation,Builtin,2,63670,0x7ff64c313180,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,63674,0x7ff64c3131c0,1300,StringPrototypeReplace
code-creation,Builtin,2,63679,0x7ff64c313700,3072,StringPrototypeSplit
code-creation,Builtin,2,63683,0x7ff64c314340,12,StringRaw
code-creation,Builtin,2,63688,0x7ff64c314380,12,SymbolConstructor
code-creation,Builtin,2,63692,0x7ff64c3143c0,12,SymbolFor
code-creation,Builtin,2,63697,0x7ff64c314400,12,SymbolKeyFor
code-creation,Builtin,2,63701,0x7ff64c314440,88,TypedArrayBaseConstructor
code-creation,Builtin,2,63706,0x7ff64c3144c0,252,TypedArrayConstructor
code-creation,Builtin,2,63711,0x7ff64c3145c0,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,63716,0x7ff64c314600,880,TypedArrayPrototypeByteLength
code-creation,Builtin,2,63720,0x7ff64c314980,364,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,63725,0x7ff64c314b00,596,TypedArrayPrototypeLength
code-creation,Builtin,2,63730,0x7ff64c314d80,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,63735,0x7ff64c314dc0,12,TypedArrayPrototypeFill
code-creation,Builtin,2,63739,0x7ff64c314e00,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,63744,0x7ff64c314e40,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,63748,0x7ff64c314e80,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,63754,0x7ff64c314ec0,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,63779,0x7ff64c314f00,524,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,63784,0x7ff64c315140,30788,TypedArrayPrototypeMap
code-creation,Builtin,2,63789,0x7ff64c31c9c0,196,JSToWasmWrapperAsm
code-creation,Builtin,2,63793,0x7ff64c31cac0,648,WasmReturnPromiseOnSuspendAsm
code-creation,Builtin,2,63798,0x7ff64c31cd80,56,WasmToJsWrapperAsm
code-creation,Builtin,2,63803,0x7ff64c31cdc0,4880,WasmToJsWrapperCSA
code-creation,Builtin,2,63807,0x7ff64c31e100,208,WasmSuspend
code-creation,Builtin,2,63812,0x7ff64c31e200,348,WasmResume
code-creation,Builtin,2,63816,0x7ff64c31e380,372,WasmReject
code-creation,Builtin,2,63820,0x7ff64c31e500,156,WasmCompileLazy
code-creation,Builtin,2,63824,0x7ff64c31e5c0,192,WasmLiftoffFrameSetup
code-creation,Builtin,2,63829,0x7ff64c31e6c0,180,WasmDebugBreak
code-creation,Builtin,2,63834,0x7ff64c31e780,16,WasmOnStackReplace
code-creation,Builtin,2,63839,0x7ff64c31e7c0,132,WasmFloat32ToNumber
code-creation,Builtin,2,63844,0x7ff64c31e880,132,WasmFloat64ToNumber
code-creation,Builtin,2,63849,0x7ff64c31e940,1436,WasmFloat64ToString
code-creation,Builtin,2,63854,0x7ff64c31ef00,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,63859,0x7ff64c31ef40,4840,WeakMapConstructor
code-creation,Builtin,2,63863,0x7ff64c320240,260,WeakMapLookupHashIndex
code-creation,Builtin,2,63868,0x7ff64c320380,224,WeakMapGet
code-creation,Builtin,2,63872,0x7ff64c320480,184,WeakMapPrototypeHas
code-creation,Builtin,2,63877,0x7ff64c320540,244,WeakMapPrototypeSet
code-creation,Builtin,2,63881,0x7ff64c320640,156,WeakMapPrototypeDelete
code-creation,Builtin,2,63886,0x7ff64c320700,3440,WeakSetConstructor
code-creation,Builtin,2,63890,0x7ff64c321480,184,WeakSetPrototypeHas
code-creation,Builtin,2,63895,0x7ff64c321540,248,WeakSetPrototypeAdd
code-creation,Builtin,2,63899,0x7ff64c321640,156,WeakSetPrototypeDelete
code-creation,Builtin,2,63904,0x7ff64c321700,420,WeakCollectionDelete
code-creation,Builtin,2,63909,0x7ff64c3218c0,892,WeakCollectionSet
code-creation,Builtin,2,63913,0x7ff64c321c40,12,SharedSpaceJSObjectHasInstance
code-creation,Builtin,2,63918,0x7ff64c321c80,12,SharedStructTypeConstructor
code-creation,Builtin,2,63923,0x7ff64c321cc0,12,SharedStructTypeIsSharedStruct
code-creation,Builtin,2,63928,0x7ff64c321d00,12,SharedStructConstructor
code-creation,Builtin,2,63932,0x7ff64c321d40,12,SharedArrayConstructor
code-creation,Builtin,2,63937,0x7ff64c321d80,12,SharedArrayIsSharedArray
code-creation,Builtin,2,63941,0x7ff64c321dc0,12,AtomicsMutexConstructor
code-creation,Builtin,2,63946,0x7ff64c321e00,12,AtomicsMutexIsMutex
code-creation,Builtin,2,63950,0x7ff64c321e40,12,AtomicsMutexLock
code-creation,Builtin,2,63955,0x7ff64c321e80,12,AtomicsMutexTryLock
code-creation,Builtin,2,63959,0x7ff64c321ec0,12,AtomicsConditionConstructor
code-creation,Builtin,2,63964,0x7ff64c321f00,12,AtomicsConditionIsCondition
code-creation,Builtin,2,63968,0x7ff64c321f40,12,AtomicsConditionWait
code-creation,Builtin,2,63973,0x7ff64c321f80,12,AtomicsConditionNotify
code-creation,Builtin,2,63978,0x7ff64c321fc0,296,AsyncGeneratorResolve
code-creation,Builtin,2,63983,0x7ff64c322100,112,AsyncGeneratorReject
code-creation,Builtin,2,63987,0x7ff64c322180,1616,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,63992,0x7ff64c322800,1904,AsyncGeneratorReturn
code-creation,Builtin,2,63997,0x7ff64c322f80,412,AsyncGeneratorResumeNext
code-creation,Builtin,2,64002,0x7ff64c323140,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,64007,0x7ff64c323180,1056,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,64011,0x7ff64c3235c0,1056,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,64016,0x7ff64c323a00,1056,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,64021,0x7ff64c323e40,1592,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,64025,0x7ff64c324480,1592,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,64030,0x7ff64c324ac0,176,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,64035,0x7ff64c324b80,172,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,64042,0x7ff64c324c40,124,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,64047,0x7ff64c324cc0,124,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,64052,0x7ff64c324d40,116,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,64057,0x7ff64c324dc0,180,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,64062,0x7ff64c324e80,1704,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,64067,0x7ff64c325540,1800,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,64072,0x7ff64c325c80,1824,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,64077,0x7ff64c3263c0,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,64081,0x7ff64c326440,200,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,64087,0x7ff64c326540,208,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,64093,0x7ff64c326640,208,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,64098,0x7ff64c326740,212,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,64103,0x7ff64c326840,224,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,64108,0x7ff64c326940,224,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,64113,0x7ff64c326a40,396,WasmCEntry
code-creation,Builtin,2,64117,0x7ff64c326c00,4,DirectCEntry
code-creation,Builtin,2,64122,0x7ff64c326c40,1452,StringAdd_CheckNone
code-creation,Builtin,2,64127,0x7ff64c327200,3700,SubString
code-creation,Builtin,2,64131,0x7ff64c328080,84,DoubleToI
code-creation,Builtin,2,64135,0x7ff64c328100,3216,GetProperty
code-creation,Builtin,2,64140,0x7ff64c328dc0,3440,GetPropertyWithReceiver
code-creation,Builtin,2,64144,0x7ff64c329b40,18324,SetProperty
code-creation,Builtin,2,64149,0x7ff64c32e300,15068,CreateDataProperty
code-creation,Builtin,2,64154,0x7ff64c331e00,52,GetOwnPropertyDescriptor
code-creation,Builtin,2,64158,0x7ff64c331e40,8,MemCopyUint8Uint8
code-creation,Builtin,2,64163,0x7ff64c331e80,8,MemMove
code-creation,Builtin,2,64167,0x7ff64c331ec0,196,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,64172,0x7ff64c331fc0,3020,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,64177,0x7ff64c332bc0,12,IsTraceCategoryEnabled
code-creation,Builtin,2,64181,0x7ff64c332c00,12,Trace
code-creation,Builtin,2,64186,0x7ff64c332c40,12,FinalizationRegistryUnregister
code-creation,Builtin,2,64190,0x7ff64c332c80,408,AsyncModuleEvaluate
code-creation,Builtin,2,64195,0x7ff64c332e40,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,64199,0x7ff64c332e80,12,CallAsyncModuleRejected
code-creation,Builtin,2,64204,0x7ff64c332ec0,12,TemporalNowTimeZone
code-creation,Builtin,2,64209,0x7ff64c332f00,12,TemporalNowInstant
code-creation,Builtin,2,64213,0x7ff64c332f40,12,TemporalNowPlainDateTime
code-creation,Builtin,2,64218,0x7ff64c332f80,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,64222,0x7ff64c332fc0,12,TemporalNowZonedDateTime
code-creation,Builtin,2,64227,0x7ff64c333000,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,64232,0x7ff64c333040,12,TemporalNowPlainDate
code-creation,Builtin,2,64236,0x7ff64c333080,12,TemporalNowPlainDateISO
code-creation,Builtin,2,64241,0x7ff64c3330c0,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,64245,0x7ff64c333100,12,TemporalPlainDateConstructor
code-creation,Builtin,2,64250,0x7ff64c333140,12,TemporalPlainDateFrom
code-creation,Builtin,2,64255,0x7ff64c333180,12,TemporalPlainDateCompare
code-creation,Builtin,2,64259,0x7ff64c3331c0,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,64264,0x7ff64c333200,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,64269,0x7ff64c333240,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,64273,0x7ff64c333280,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,64278,0x7ff64c3332c0,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,64283,0x7ff64c333300,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,64288,0x7ff64c333340,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,64294,0x7ff64c333380,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,64300,0x7ff64c3333c0,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,64304,0x7ff64c333400,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,64309,0x7ff64c333440,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,64315,0x7ff64c333480,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,64320,0x7ff64c3334c0,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,64325,0x7ff64c333500,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,64330,0x7ff64c333540,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,64335,0x7ff64c333580,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,64340,0x7ff64c3335c0,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,64345,0x7ff64c333600,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,64350,0x7ff64c333640,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,64355,0x7ff64c333680,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,64359,0x7ff64c3336c0,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,64364,0x7ff64c333700,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,64369,0x7ff64c333740,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,64374,0x7ff64c333780,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,64379,0x7ff64c3337c0,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,64384,0x7ff64c333800,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,64389,0x7ff64c333840,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,64394,0x7ff64c333880,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,64399,0x7ff64c3338c0,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,64404,0x7ff64c333900,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,64408,0x7ff64c333940,12,TemporalPlainTimeFrom
code-creation,Builtin,2,64413,0x7ff64c333980,12,TemporalPlainTimeCompare
code-creation,Builtin,2,64418,0x7ff64c3339c0,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,64422,0x7ff64c333a00,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,64427,0x7ff64c333a40,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,64432,0x7ff64c333a80,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,64437,0x7ff64c333ac0,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,64442,0x7ff64c333b00,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,64447,0x7ff64c333b40,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,64452,0x7ff64c333b80,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,64457,0x7ff64c333bc0,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,64462,0x7ff64c333c00,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,64466,0x7ff64c333c40,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,64471,0x7ff64c333c80,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,64476,0x7ff64c333cc0,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,64481,0x7ff64c333d00,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,64485,0x7ff64c333d40,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,64491,0x7ff64c333d80,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,64496,0x7ff64c333dc0,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,64500,0x7ff64c333e00,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,64506,0x7ff64c333e40,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,64511,0x7ff64c333e80,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,64516,0x7ff64c333ec0,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,64520,0x7ff64c333f00,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,64525,0x7ff64c333f40,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,64529,0x7ff64c333f80,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,64534,0x7ff64c333fc0,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,64540,0x7ff64c334000,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,64546,0x7ff64c334040,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,64551,0x7ff64c334080,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,64556,0x7ff64c3340c0,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,64561,0x7ff64c334100,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,64566,0x7ff64c334140,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,64571,0x7ff64c334180,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,64576,0x7ff64c3341c0,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,64581,0x7ff64c334200,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,64586,0x7ff64c334240,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,64591,0x7ff64c334280,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,64596,0x7ff64c3342c0,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,64601,0x7ff64c334300,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,64606,0x7ff64c334340,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,64611,0x7ff64c334380,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,64616,0x7ff64c3343c0,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,64621,0x7ff64c334400,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,64626,0x7ff64c334440,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,64631,0x7ff64c334480,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,64636,0x7ff64c3344c0,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,64641,0x7ff64c334500,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,64651,0x7ff64c334540,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,64656,0x7ff64c334580,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,64661,0x7ff64c3345c0,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,64666,0x7ff64c334600,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,64671,0x7ff64c334640,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,64676,0x7ff64c334680,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,64681,0x7ff64c3346c0,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,64685,0x7ff64c334700,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,64690,0x7ff64c334740,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,64695,0x7ff64c334780,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,64700,0x7ff64c3347c0,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,64706,0x7ff64c334800,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,64711,0x7ff64c334840,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,64716,0x7ff64c334880,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,64721,0x7ff64c3348c0,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,64726,0x7ff64c334900,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,64731,0x7ff64c334940,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,64736,0x7ff64c334980,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,64741,0x7ff64c3349c0,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,64745,0x7ff64c334a00,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,64750,0x7ff64c334a40,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,64769,0x7ff64c334a80,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,64774,0x7ff64c334ac0,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,64779,0x7ff64c334b00,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,64784,0x7ff64c334b40,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,64789,0x7ff64c334b80,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,64835,0x7ff64c334bc0,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,64843,0x7ff64c334c00,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,64848,0x7ff64c334c40,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,64853,0x7ff64c334c80,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,64859,0x7ff64c334cc0,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,64864,0x7ff64c334d00,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,64869,0x7ff64c334d40,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,64876,0x7ff64c334d80,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,64882,0x7ff64c334dc0,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,64887,0x7ff64c334e00,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,64892,0x7ff64c334e40,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,64897,0x7ff64c334e80,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,64902,0x7ff64c334ec0,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,64907,0x7ff64c334f00,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,64912,0x7ff64c334f40,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,64917,0x7ff64c334f80,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,64922,0x7ff64c334fc0,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,64928,0x7ff64c335000,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,64933,0x7ff64c335040,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,64938,0x7ff64c335080,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,64943,0x7ff64c3350c0,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,64948,0x7ff64c335100,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,64953,0x7ff64c335140,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,64958,0x7ff64c335180,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,64963,0x7ff64c3351c0,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,64968,0x7ff64c335200,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,64973,0x7ff64c335240,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,64978,0x7ff64c335280,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,64983,0x7ff64c3352c0,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,64988,0x7ff64c335300,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,64993,0x7ff64c335340,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,64998,0x7ff64c335380,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,65003,0x7ff64c3353c0,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,65008,0x7ff64c335400,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,65013,0x7ff64c335440,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,65018,0x7ff64c335480,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,65023,0x7ff64c3354c0,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,65028,0x7ff64c335500,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,65033,0x7ff64c335540,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,65038,0x7ff64c335580,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,65043,0x7ff64c3355c0,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,65049,0x7ff64c335600,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,65054,0x7ff64c335640,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,65059,0x7ff64c335680,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,65065,0x7ff64c3356c0,12,TemporalDurationConstructor
code-creation,Builtin,2,65069,0x7ff64c335700,12,TemporalDurationFrom
code-creation,Builtin,2,65075,0x7ff64c335740,12,TemporalDurationCompare
code-creation,Builtin,2,65080,0x7ff64c335780,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,65085,0x7ff64c3357c0,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,65090,0x7ff64c335800,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,65095,0x7ff64c335840,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,65100,0x7ff64c335880,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,65105,0x7ff64c3358c0,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,65110,0x7ff64c335900,12,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,65115,0x7ff64c335940,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,65120,0x7ff64c335980,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,65125,0x7ff64c3359c0,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,65130,0x7ff64c335a00,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,65134,0x7ff64c335a40,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,65139,0x7ff64c335a80,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,65145,0x7ff64c335ac0,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,65149,0x7ff64c335b00,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,65154,0x7ff64c335b40,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,65159,0x7ff64c335b80,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,65164,0x7ff64c335bc0,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,65169,0x7ff64c335c00,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,65174,0x7ff64c335c40,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,65180,0x7ff64c335c80,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,65184,0x7ff64c335cc0,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,65189,0x7ff64c335d00,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,65194,0x7ff64c335d40,12,TemporalInstantConstructor
code-creation,Builtin,2,65199,0x7ff64c335d80,12,TemporalInstantFrom
code-creation,Builtin,2,65204,0x7ff64c335dc0,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,65208,0x7ff64c335e00,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,65213,0x7ff64c335e40,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,65219,0x7ff64c335e80,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,65224,0x7ff64c335ec0,12,TemporalInstantCompare
code-creation,Builtin,2,65228,0x7ff64c335f00,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,65233,0x7ff64c335f40,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,65238,0x7ff64c335f80,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,65243,0x7ff64c335fc0,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,65248,0x7ff64c336000,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,65253,0x7ff64c336040,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,65258,0x7ff64c336080,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,65263,0x7ff64c3360c0,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,65267,0x7ff64c336100,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,65273,0x7ff64c336140,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,65278,0x7ff64c336180,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,65283,0x7ff64c3361c0,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,65287,0x7ff64c336200,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,65293,0x7ff64c336240,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,65297,0x7ff64c336280,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,65302,0x7ff64c3362c0,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,65307,0x7ff64c336300,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,65312,0x7ff64c336340,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,65317,0x7ff64c336380,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,65321,0x7ff64c3363c0,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,65328,0x7ff64c336400,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,65334,0x7ff64c336440,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,65339,0x7ff64c336480,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,65344,0x7ff64c3364c0,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,65349,0x7ff64c336500,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,65354,0x7ff64c336540,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,65359,0x7ff64c336580,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,65364,0x7ff64c3365c0,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,65369,0x7ff64c336600,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,65374,0x7ff64c336640,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,65379,0x7ff64c336680,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,65384,0x7ff64c3366c0,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,65391,0x7ff64c336700,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,65396,0x7ff64c336740,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,65401,0x7ff64c336780,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,65407,0x7ff64c3367c0,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,65412,0x7ff64c336800,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,65417,0x7ff64c336840,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,65424,0x7ff64c336880,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,65429,0x7ff64c3368c0,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,65435,0x7ff64c336900,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,65440,0x7ff64c336940,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,65445,0x7ff64c336980,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,65450,0x7ff64c3369c0,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,65455,0x7ff64c336a00,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,65460,0x7ff64c336a40,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,65465,0x7ff64c336a80,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,65470,0x7ff64c336ac0,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,65475,0x7ff64c336b00,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,65480,0x7ff64c336b40,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,65485,0x7ff64c336b80,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,65491,0x7ff64c336bc0,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,65496,0x7ff64c336c00,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,65500,0x7ff64c336c40,12,TemporalTimeZoneFrom
code-creation,Builtin,2,65505,0x7ff64c336c80,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,65510,0x7ff64c336cc0,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,65516,0x7ff64c336d00,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,65521,0x7ff64c336d40,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,65526,0x7ff64c336d80,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,65531,0x7ff64c336dc0,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,65536,0x7ff64c336e00,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,65542,0x7ff64c336e40,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,65547,0x7ff64c336e80,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,65552,0x7ff64c336ec0,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,65557,0x7ff64c336f00,12,TemporalCalendarConstructor
code-creation,Builtin,2,65562,0x7ff64c336f40,12,TemporalCalendarFrom
code-creation,Builtin,2,65567,0x7ff64c336f80,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,65572,0x7ff64c336fc0,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,65578,0x7ff64c337000,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,65584,0x7ff64c337040,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,65590,0x7ff64c337080,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,65595,0x7ff64c3370c0,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,65600,0x7ff64c337100,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,65605,0x7ff64c337140,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,65609,0x7ff64c337180,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,65614,0x7ff64c3371c0,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,65619,0x7ff64c337200,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,65624,0x7ff64c337240,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,65629,0x7ff64c337280,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,65634,0x7ff64c3372c0,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,65639,0x7ff64c337300,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,65660,0x7ff64c337340,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,65665,0x7ff64c337380,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,65671,0x7ff64c3373c0,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,65676,0x7ff64c337400,3952,TemporalCalendarPrototypeFields
code-creation,Builtin,2,65681,0x7ff64c338380,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,65686,0x7ff64c3383c0,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,65691,0x7ff64c338400,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,65696,0x7ff64c338440,12,DatePrototypeToTemporalInstant
code-creation,Builtin,2,65701,0x7ff64c338480,1928,StringFixedArrayFromIterable
code-creation,Builtin,2,65707,0x7ff64c338c40,1928,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,65712,0x7ff64c339400,260,AggregateErrorConstructor
code-creation,Builtin,2,65717,0x7ff64c339540,808,ArrayPrototypeAt
code-creation,Builtin,2,65722,0x7ff64c339880,552,ArrayPrototypeConcat
code-creation,Builtin,2,65726,0x7ff64c339ac0,5016,ArrayPrototypeCopyWithin
code-creation,Builtin,2,65731,0x7ff64c33ae80,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,65736,0x7ff64c33af80,564,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,65741,0x7ff64c33b1c0,4472,ArrayEveryLoopContinuation
code-creation,Builtin,2,65746,0x7ff64c33c340,1492,ArrayEvery
code-creation,Builtin,2,65750,0x7ff64c33c940,272,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,65756,0x7ff64c33ca80,860,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,65761,0x7ff64c33ce00,4708,ArrayFilterLoopContinuation
code-creation,Builtin,2,65766,0x7ff64c33e080,4608,ArrayFilter
code-creation,Builtin,2,65782,0x7ff64c33f2c0,200,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,65787,0x7ff64c33f3c0,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,65792,0x7ff64c33f400,308,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,65798,0x7ff64c33f540,532,ArrayFindLoopContinuation
code-creation,Builtin,2,65803,0x7ff64c33f780,1472,ArrayPrototypeFind
code-creation,Builtin,2,65807,0x7ff64c33fd80,200,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,65812,0x7ff64c33fe80,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,65818,0x7ff64c33fec0,308,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,65823,0x7ff64c340000,528,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,65828,0x7ff64c340240,1464,ArrayPrototypeFindIndex
code-creation,Builtin,2,65833,0x7ff64c340800,464,ArrayFindLastLoopContinuation
code-creation,Builtin,2,65837,0x7ff64c340a00,1660,ArrayPrototypeFindLast
code-creation,Builtin,2,65843,0x7ff64c341080,460,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,65848,0x7ff64c341280,1648,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,65853,0x7ff64c341900,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,65859,0x7ff64c341a00,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,65865,0x7ff64c341b00,4336,ArrayForEachLoopContinuation
code-creation,Builtin,2,65870,0x7ff64c342c00,1336,ArrayForEach
code-creation,Builtin,2,65875,0x7ff64c343140,4808,ArrayFrom
code-creation,Builtin,2,65879,0x7ff64c344440,168,ArrayIsArray
code-creation,Builtin,2,65884,0x7ff64c344500,396,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,65889,0x7ff64c3446c0,40,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,65894,0x7ff64c344700,132,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,65899,0x7ff64c3447c0,196,ConvertToLocaleString
code-creation,Builtin,2,65904,0x7ff64c3448c0,796,JoinStackPush
code-creation,Builtin,2,65908,0x7ff64c344c00,320,JoinStackPop
code-creation,Builtin,2,65913,0x7ff64c344d80,9420,ArrayPrototypeJoin
code-creation,Builtin,2,65917,0x7ff64c347280,5784,ArrayPrototypeToLocaleString
code-creation,Builtin,2,65922,0x7ff64c348940,236,ArrayPrototypeToString
code-creation,Builtin,2,65927,0x7ff64c348a40,9220,TypedArrayPrototypeJoin
code-creation,Builtin,2,65931,0x7ff64c34ae80,5628,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,65936,0x7ff64c34c480,4276,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,65941,0x7ff64c34d540,236,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,65946,0x7ff64c34d640,244,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,65951,0x7ff64c34d740,472,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,65956,0x7ff64c34d940,4360,ArrayMapLoopContinuation
code-creation,Builtin,2,65961,0x7ff64c34ea80,3812,ArrayMap
code-creation,Builtin,2,65965,0x7ff64c34f980,1868,ArrayOf
code-creation,Builtin,2,65969,0x7ff64c350100,408,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,65974,0x7ff64c3502c0,200,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,65980,0x7ff64c3503c0,200,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,65985,0x7ff64c3504c0,4412,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,65990,0x7ff64c351600,1896,ArrayReduceRight
code-creation,Builtin,2,65994,0x7ff64c351d80,180,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,66000,0x7ff64c351e40,200,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,66008,0x7ff64c351f40,200,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,66013,0x7ff64c352040,4432,ArrayReduceLoopContinuation
code-creation,Builtin,2,66018,0x7ff64c3531c0,1544,ArrayReduce
code-creation,Builtin,2,66022,0x7ff64c353800,3588,ArrayPrototypeReverse
code-creation,Builtin,2,66027,0x7ff64c354640,3816,ArrayPrototypeShift
code-creation,Builtin,2,66031,0x7ff64c355540,6488,ArrayPrototypeSlice
code-creation,Builtin,2,66036,0x7ff64c356ec0,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,66041,0x7ff64c356fc0,532,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,66046,0x7ff64c357200,4460,ArraySomeLoopContinuation
code-creation,Builtin,2,66050,0x7ff64c358380,1476,ArraySome
code-creation,Builtin,2,66055,0x7ff64c358980,15040,ArrayPrototypeSplice
code-creation,Builtin,2,66060,0x7ff64c35c480,2100,GenericArrayToReversed
code-creation,Builtin,2,66064,0x7ff64c35ccc0,2856,ArrayPrototypeToReversed
code-creation,Builtin,2,66069,0x7ff64c35d800,6152,ArrayTimSortIntoCopy
code-creation,Builtin,2,66074,0x7ff64c35f040,2132,ArrayPrototypeToSorted
code-creation,Builtin,2,66078,0x7ff64c35f8c0,9352,ArrayPrototypeToSpliced
code-creation,Builtin,2,66083,0x7ff64c361d80,3104,ArrayPrototypeUnshift
code-creation,Builtin,2,66088,0x7ff64c3629c0,1428,GenericArrayWith
code-creation,Builtin,2,66092,0x7ff64c362f80,1112,ArrayPrototypeWith
code-creation,Builtin,2,66097,0x7ff64c363400,324,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,66102,0x7ff64c363580,484,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,66107,0x7ff64c363780,216,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,66112,0x7ff64c363880,216,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,66117,0x7ff64c363980,324,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,66123,0x7ff64c363b00,216,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,66129,0x7ff64c363c00,100,ArrayBufferIsView
code-creation,Builtin,2,66133,0x7ff64c363c80,440,ToInteger
code-creation,Builtin,2,66138,0x7ff64c363e40,3356,FastCreateDataProperty
code-creation,Builtin,2,66142,0x7ff64c364b80,1104,BooleanConstructor
code-creation,Builtin,2,66147,0x7ff64c365000,216,BooleanPrototypeToString
code-creation,Builtin,2,66151,0x7ff64c365100,212,BooleanPrototypeValueOf
code-creation,Builtin,2,66156,0x7ff64c365200,1072,BigIntAddNoThrow
code-creation,Builtin,2,66161,0x7ff64c365640,1148,BigIntAdd
code-creation,Builtin,2,66165,0x7ff64c365ac0,1072,BigIntSubtractNoThrow
code-creation,Builtin,2,66169,0x7ff64c365f00,1144,BigIntSubtract
code-creation,Builtin,2,66174,0x7ff64c366380,324,BigIntMultiplyNoThrow
code-creation,Builtin,2,66178,0x7ff64c366500,444,BigIntMultiply
code-creation,Builtin,2,66183,0x7ff64c3666c0,552,BigIntDivideNoThrow
code-creation,Builtin,2,66187,0x7ff64c366900,656,BigIntDivide
code-creation,Builtin,2,66192,0x7ff64c366bc0,464,BigIntModulusNoThrow
code-creation,Builtin,2,66196,0x7ff64c366dc0,572,BigIntModulus
code-creation,Builtin,2,66201,0x7ff64c367000,960,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,66205,0x7ff64c367400,1116,BigIntBitwiseAnd
code-creation,Builtin,2,66210,0x7ff64c367880,940,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,66215,0x7ff64c367c40,1064,BigIntBitwiseOr
code-creation,Builtin,2,66219,0x7ff64c368080,976,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,66224,0x7ff64c368480,1132,BigIntBitwiseXor
code-creation,Builtin,2,66228,0x7ff64c368900,1280,BigIntShiftLeftNoThrow
code-creation,Builtin,2,66233,0x7ff64c368e40,1388,BigIntShiftLeft
code-creation,Builtin,2,66237,0x7ff64c3693c0,1280,BigIntShiftRightNoThrow
code-creation,Builtin,2,66242,0x7ff64c369900,1388,BigIntShiftRight
code-creation,Builtin,2,66247,0x7ff64c369e80,168,BigIntEqual
code-creation,Builtin,2,66251,0x7ff64c369f40,208,BigIntLessThan
code-creation,Builtin,2,66255,0x7ff64c36a040,208,BigIntGreaterThan
code-creation,Builtin,2,66260,0x7ff64c36a140,208,BigIntLessThanOrEqual
code-creation,Builtin,2,66264,0x7ff64c36a240,208,BigIntGreaterThanOrEqual
code-creation,Builtin,2,66269,0x7ff64c36a340,328,BigIntUnaryMinus
code-creation,Builtin,2,66273,0x7ff64c36a4c0,2268,ToString
code-creation,Builtin,2,66278,0x7ff64c36adc0,212,StringPrototypeToString
code-creation,Builtin,2,66283,0x7ff64c36aec0,212,StringPrototypeValueOf
code-creation,Builtin,2,66287,0x7ff64c36afc0,2500,StringToList
code-creation,Builtin,2,66292,0x7ff64c36b9c0,856,StringPrototypeCharAt
code-creation,Builtin,2,66296,0x7ff64c36bd40,752,StringPrototypeCharCodeAt
code-creation,Builtin,2,66301,0x7ff64c36c040,1320,StringPrototypeCodePointAt
code-creation,Builtin,2,66306,0x7ff64c36c580,460,StringPrototypeConcat
code-creation,Builtin,2,66311,0x7ff64c36c780,1088,StringConstructor
code-creation,Builtin,2,66315,0x7ff64c36cc00,2292,StringAddConvertLeft
code-creation,Builtin,2,66320,0x7ff64c36d500,2360,StringAddConvertRight
code-creation,Builtin,2,66325,0x7ff64c36de40,628,StringCharAt
code-creation,Builtin,2,66330,0x7ff64c36e0c0,16,FastNewClosureBaseline
code-creation,Builtin,2,66334,0x7ff64c36e100,308,FastNewFunctionContextEval
code-creation,Builtin,2,66339,0x7ff64c36e240,308,FastNewFunctionContextFunction
code-creation,Builtin,2,66344,0x7ff64c36e380,240,CreateRegExpLiteral
code-creation,Builtin,2,66348,0x7ff64c36e480,1316,CreateShallowArrayLiteral
code-creation,Builtin,2,66353,0x7ff64c36e9c0,496,CreateEmptyArrayLiteral
code-creation,Builtin,2,66358,0x7ff64c36ebc0,2248,CreateShallowObjectLiteral
code-creation,Builtin,2,66363,0x7ff64c36f4c0,460,ObjectConstructor
code-creation,Builtin,2,66367,0x7ff64c36f6c0,228,CreateEmptyLiteralObject
code-creation,Builtin,2,66372,0x7ff64c36f7c0,548,NumberConstructor
code-creation,Builtin,2,66376,0x7ff64c36fa00,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,66381,0x7ff64c36fa40,60,StringToNumber
code-creation,Builtin,2,66385,0x7ff64c36fa80,188,NonNumberToNumber
code-creation,Builtin,2,66391,0x7ff64c36fb40,240,NonNumberToNumeric
code-creation,Builtin,2,66396,0x7ff64c36fc40,36,ToNumeric
code-creation,Builtin,2,66400,0x7ff64c36fc80,1268,NumberToString
code-creation,Builtin,2,66404,0x7ff64c370180,108,ToBoolean
code-creation,Builtin,2,66409,0x7ff64c370200,104,ToBooleanForBaselineJump
code-creation,Builtin,2,66413,0x7ff64c370280,640,ToLength
code-creation,Builtin,2,66418,0x7ff64c370540,1360,ToName
code-creation,Builtin,2,66422,0x7ff64c370ac0,1012,ToObject
code-creation,Builtin,2,66426,0x7ff64c370ec0,452,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,66431,0x7ff64c3710c0,452,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,66436,0x7ff64c3712c0,800,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,66441,0x7ff64c371600,20,OrdinaryToPrimitive_Number
code-creation,Builtin,2,66446,0x7ff64c371640,376,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,66451,0x7ff64c3717c0,376,OrdinaryToPrimitive_String
code-creation,Builtin,2,66455,0x7ff64c371940,224,FastConsoleAssert
code-creation,Builtin,2,66460,0x7ff64c371a40,184,DataViewPrototypeGetBuffer
code-creation,Builtin,2,66464,0x7ff64c371b00,764,DataViewPrototypeGetByteLength
code-creation,Builtin,2,66469,0x7ff64c371e00,440,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,66474,0x7ff64c371fc0,848,DataViewPrototypeGetUint8
code-creation,Builtin,2,66479,0x7ff64c372340,848,DataViewPrototypeGetInt8
code-creation,Builtin,2,66484,0x7ff64c3726c0,932,DataViewPrototypeGetUint16
code-creation,Builtin,2,66489,0x7ff64c372a80,928,DataViewPrototypeGetInt16
code-creation,Builtin,2,66494,0x7ff64c372e40,1076,DataViewPrototypeGetUint32
code-creation,Builtin,2,66498,0x7ff64c373280,964,DataViewPrototypeGetInt32
code-creation,Builtin,2,66503,0x7ff64c373680,1108,DataViewPrototypeGetFloat32
code-creation,Builtin,2,66508,0x7ff64c373b00,1172,DataViewPrototypeGetFloat64
code-creation,Builtin,2,66513,0x7ff64c373fc0,1228,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,66518,0x7ff64c3744c0,1252,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,66522,0x7ff64c3749c0,1268,DataViewPrototypeSetUint8
code-creation,Builtin,2,66527,0x7ff64c374ec0,1268,DataViewPrototypeSetInt8
code-creation,Builtin,2,66532,0x7ff64c3753c0,1356,DataViewPrototypeSetUint16
code-creation,Builtin,2,66537,0x7ff64c375940,1356,DataViewPrototypeSetInt16
code-creation,Builtin,2,66541,0x7ff64c375ec0,1392,DataViewPrototypeSetUint32
code-creation,Builtin,2,66546,0x7ff64c376440,1392,DataViewPrototypeSetInt32
code-creation,Builtin,2,66551,0x7ff64c3769c0,1356,DataViewPrototypeSetFloat32
code-creation,Builtin,2,66555,0x7ff64c376f40,1420,DataViewPrototypeSetFloat64
code-creation,Builtin,2,66560,0x7ff64c377500,1268,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,66565,0x7ff64c377a00,1268,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,66570,0x7ff64c377f00,1004,FinalizationRegistryConstructor
code-creation,Builtin,2,66575,0x7ff64c378300,1244,FinalizationRegistryRegister
code-creation,Builtin,2,66579,0x7ff64c378800,696,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,66584,0x7ff64c378ac0,364,FunctionPrototypeHasInstance
code-creation,Builtin,2,66589,0x7ff64c378c40,968,FastFunctionPrototypeBind
code-creation,Builtin,2,66594,0x7ff64c379040,152,IncBlockCounter
code-creation,Builtin,2,66598,0x7ff64c379100,236,GetTemplateObject
code-creation,Builtin,2,66603,0x7ff64c379200,84,ForInNext
code-creation,Builtin,2,66607,0x7ff64c379280,156,GetImportMetaObjectBaseline
code-creation,Builtin,2,66612,0x7ff64c379340,112,GetIteratorWithFeedback
code-creation,Builtin,2,66616,0x7ff64c3793c0,100,GetIteratorBaseline
code-creation,Builtin,2,66621,0x7ff64c379440,372,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,66626,0x7ff64c3795c0,1076,CallIteratorWithFeedback
code-creation,Builtin,2,66631,0x7ff64c379a00,964,IteratorConstructor
code-creation,Builtin,2,66635,0x7ff64c379e00,892,IteratorFrom
code-creation,Builtin,2,66639,0x7ff64c37a180,160,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,66664,0x7ff64c37a240,408,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,66670,0x7ff64c37a400,424,IteratorHelperPrototypeNext
code-creation,Builtin,2,66676,0x7ff64c37a5c0,1328,IteratorHelperPrototypeReturn
code-creation,Builtin,2,66681,0x7ff64c37ab00,372,IteratorPrototypeMap
code-creation,Builtin,2,66686,0x7ff64c37ac80,1440,IteratorMapHelperNext
code-creation,Builtin,2,66691,0x7ff64c37b240,372,IteratorPrototypeFilter
code-creation,Builtin,2,66695,0x7ff64c37b3c0,1640,IteratorFilterHelperNext
code-creation,Builtin,2,66700,0x7ff64c37ba40,516,IteratorPrototypeTake
code-creation,Builtin,2,66705,0x7ff64c37bc80,1692,IteratorTakeHelperNext
code-creation,Builtin,2,66710,0x7ff64c37c340,516,IteratorPrototypeDrop
code-creation,Builtin,2,66716,0x7ff64c37c580,1836,IteratorDropHelperNext
code-creation,Builtin,2,66720,0x7ff64c37ccc0,404,IteratorPrototypeFlatMap
code-creation,Builtin,2,66725,0x7ff64c37ce80,2784,IteratorFlatMapHelperNext
code-creation,Builtin,2,66730,0x7ff64c37d980,1636,IteratorPrototypeReduce
code-creation,Builtin,2,66734,0x7ff64c37e000,1652,IteratorPrototypeToArray
code-creation,Builtin,2,66739,0x7ff64c37e680,1064,IteratorPrototypeForEach
code-creation,Builtin,2,66744,0x7ff64c37eac0,1336,IteratorPrototypeSome
code-creation,Builtin,2,66748,0x7ff64c37f000,1332,IteratorPrototypeEvery
code-creation,Builtin,2,66753,0x7ff64c37f540,1340,IteratorPrototypeFind
code-creation,Builtin,2,66758,0x7ff64c37fa80,8584,MapGroupBy
code-creation,Builtin,2,66762,0x7ff64c381c40,312,MathAbs
code-creation,Builtin,2,66766,0x7ff64c381d80,452,MathCeil
code-creation,Builtin,2,66770,0x7ff64c381f80,460,MathFloor
code-creation,Builtin,2,66775,0x7ff64c382180,504,MathRound
code-creation,Builtin,2,66779,0x7ff64c382380,456,MathTrunc
code-creation,Builtin,2,66798,0x7ff64c382580,404,MathPow
code-creation,Builtin,2,66802,0x7ff64c382740,464,MathMax
code-creation,Builtin,2,66806,0x7ff64c382940,464,MathMin
code-creation,Builtin,2,66811,0x7ff64c382b40,316,MathAcos
code-creation,Builtin,2,66815,0x7ff64c382c80,316,MathAcosh
code-creation,Builtin,2,66820,0x7ff64c382dc0,316,MathAsin
code-creation,Builtin,2,66824,0x7ff64c382f00,316,MathAsinh
code-creation,Builtin,2,66828,0x7ff64c383040,316,MathAtan
code-creation,Builtin,2,66832,0x7ff64c383180,400,MathAtan2
code-creation,Builtin,2,66837,0x7ff64c383340,316,MathAtanh
code-creation,Builtin,2,66880,0x7ff64c383480,316,MathCbrt
code-creation,Builtin,2,66885,0x7ff64c3835c0,168,MathClz32
code-creation,Builtin,2,66889,0x7ff64c383680,316,MathCos
code-creation,Builtin,2,66893,0x7ff64c3837c0,316,MathCosh
code-creation,Builtin,2,66898,0x7ff64c383900,316,MathExp
code-creation,Builtin,2,66902,0x7ff64c383a40,316,MathExpm1
code-creation,Builtin,2,66906,0x7ff64c383b80,268,MathFround
code-creation,Builtin,2,66911,0x7ff64c383cc0,304,MathImul
code-creation,Builtin,2,66915,0x7ff64c383e00,316,MathLog
code-creation,Builtin,2,66919,0x7ff64c383f40,316,MathLog1p
code-creation,Builtin,2,66923,0x7ff64c384080,316,MathLog10
code-creation,Builtin,2,66928,0x7ff64c3841c0,316,MathLog2
code-creation,Builtin,2,66932,0x7ff64c384300,316,MathSin
code-creation,Builtin,2,66936,0x7ff64c384440,176,MathSign
code-creation,Builtin,2,66940,0x7ff64c384500,316,MathSinh
code-creation,Builtin,2,66945,0x7ff64c384640,264,MathSqrt
code-creation,Builtin,2,66949,0x7ff64c384780,316,MathTan
code-creation,Builtin,2,66953,0x7ff64c3848c0,316,MathTanh
code-creation,Builtin,2,66957,0x7ff64c384a00,1084,MathHypot
code-creation,Builtin,2,66961,0x7ff64c384e40,324,MathRandom
code-creation,Builtin,2,66966,0x7ff64c384fc0,2692,NumberPrototypeToString
code-creation,Builtin,2,66971,0x7ff64c385a80,132,NumberIsFinite
code-creation,Builtin,2,66975,0x7ff64c385b40,332,NumberIsInteger
code-creation,Builtin,2,66979,0x7ff64c385cc0,128,NumberIsNaN
code-creation,Builtin,2,66984,0x7ff64c385d80,364,NumberIsSafeInteger
code-creation,Builtin,2,66988,0x7ff64c385f00,212,NumberPrototypeValueOf
code-creation,Builtin,2,66993,0x7ff64c386000,200,NumberParseFloat
code-creation,Builtin,2,66997,0x7ff64c386100,248,ParseInt
code-creation,Builtin,2,67002,0x7ff64c386200,84,NumberParseInt
code-creation,Builtin,2,67006,0x7ff64c386280,844,Add
code-creation,Builtin,2,67010,0x7ff64c386600,476,Subtract
code-creation,Builtin,2,67016,0x7ff64c386800,604,Multiply
code-creation,Builtin,2,67025,0x7ff64c386a80,548,Divide
code-creation,Builtin,2,67029,0x7ff64c386cc0,596,Modulus
code-creation,Builtin,2,67033,0x7ff64c386f40,616,Exponentiate
code-creation,Builtin,2,67037,0x7ff64c3871c0,384,Negate
code-creation,Builtin,2,67042,0x7ff64c387380,208,BitwiseNot
code-creation,Builtin,2,67046,0x7ff64c387480,160,Decrement
code-creation,Builtin,2,67051,0x7ff64c387540,160,Increment
code-creation,Builtin,2,67055,0x7ff64c387600,608,ShiftLeft
code-creation,Builtin,2,67059,0x7ff64c387880,608,ShiftRight
code-creation,Builtin,2,67063,0x7ff64c387b00,640,ShiftRightLogical
code-creation,Builtin,2,67068,0x7ff64c387dc0,352,BitwiseAnd
code-creation,Builtin,2,67072,0x7ff64c387f40,352,BitwiseOr
code-creation,Builtin,2,67077,0x7ff64c3880c0,352,BitwiseXor
code-creation,Builtin,2,67081,0x7ff64c388240,1012,LessThan
code-creation,Builtin,2,67085,0x7ff64c388640,1012,LessThanOrEqual
code-creation,Builtin,2,67090,0x7ff64c388a40,1012,GreaterThan
code-creation,Builtin,2,67094,0x7ff64c388e40,1012,GreaterThanOrEqual
code-creation,Builtin,2,67098,0x7ff64c389240,1060,Equal
code-creation,Builtin,2,67103,0x7ff64c389680,512,StrictEqual
code-creation,Builtin,2,67107,0x7ff64c3898c0,3328,ObjectFromEntries
code-creation,Builtin,2,67112,0x7ff64c38a600,4196,GroupByGeneric
code-creation,Builtin,2,67116,0x7ff64c38b680,8996,ObjectGroupBy
code-creation,Builtin,2,67121,0x7ff64c38d9c0,884,CreateObjectWithoutProperties
code-creation,Builtin,2,67125,0x7ff64c38dd40,140,ObjectIsExtensible
code-creation,Builtin,2,67130,0x7ff64c38de00,144,ObjectPreventExtensions
code-creation,Builtin,2,67135,0x7ff64c38dec0,148,ObjectGetPrototypeOf
code-creation,Builtin,2,67139,0x7ff64c38df80,300,ObjectSetPrototypeOf
code-creation,Builtin,2,67144,0x7ff64c38e0c0,80,ObjectPrototypeToString
code-creation,Builtin,2,67149,0x7ff64c38e140,100,ObjectPrototypeValueOf
code-creation,Builtin,2,67154,0x7ff64c38e1c0,184,ObjectPrototypeToLocaleString
code-creation,Builtin,2,67159,0x7ff64c38e280,1004,FulfillPromise
code-creation,Builtin,2,67163,0x7ff64c38e680,1116,RejectPromise
code-creation,Builtin,2,67167,0x7ff64c38eb00,2528,NewPromiseCapability
code-creation,Builtin,2,67172,0x7ff64c38f500,192,PromiseCapabilityDefaultReject
code-creation,Builtin,2,67177,0x7ff64c38f600,172,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,67182,0x7ff64c38f6c0,1396,PerformPromiseThen
code-creation,Builtin,2,67187,0x7ff64c38fc40,664,PromiseReject
code-creation,Builtin,2,67191,0x7ff64c38ff00,324,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,67196,0x7ff64c390080,108,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,67201,0x7ff64c390100,4896,PromiseAll
code-creation,Builtin,2,67206,0x7ff64c391440,5304,PromiseAllSettled
code-creation,Builtin,2,67210,0x7ff64c392900,1124,PromiseAllResolveElementClosure
code-creation,Builtin,2,67215,0x7ff64c392d80,1516,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,67220,0x7ff64c393380,1516,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,67225,0x7ff64c393980,1164,PromiseAnyRejectElementClosure
code-creation,Builtin,2,67231,0x7ff64c393e40,2836,PromiseAny
code-creation,Builtin,2,67235,0x7ff64c394980,3184,PromiseConstructor
code-creation,Builtin,2,67240,0x7ff64c395600,292,PromisePrototypeCatch
code-creation,Builtin,2,67244,0x7ff64c395740,92,PromiseValueThunkFinally
code-creation,Builtin,2,67249,0x7ff64c3957c0,84,PromiseThrowerFinally
code-creation,Builtin,2,67254,0x7ff64c395840,1024,PromiseCatchFinally
code-creation,Builtin,2,67258,0x7ff64c395c80,1024,PromiseThenFinally
code-creation,Builtin,2,67263,0x7ff64c3960c0,1684,PromisePrototypeFinally
code-creation,Builtin,2,67268,0x7ff64c396780,1308,PromiseResolveThenableJob
code-creation,Builtin,2,67273,0x7ff64c396cc0,1576,PromiseRace
code-creation,Builtin,2,67277,0x7ff64c397300,348,PromiseFulfillReactionJob
code-creation,Builtin,2,67281,0x7ff64c397480,468,PromiseRejectReactionJob
code-creation,Builtin,2,67286,0x7ff64c397680,156,PromiseResolveTrampoline
code-creation,Builtin,2,67299,0x7ff64c397740,700,PromiseResolve
code-creation,Builtin,2,67305,0x7ff64c397a00,740,ResolvePromise
code-creation,Builtin,2,67311,0x7ff64c397d00,2404,PromisePrototypeThen
code-creation,Builtin,2,67316,0x7ff64c398680,332,PromiseWithResolvers
code-creation,Builtin,2,67320,0x7ff64c398800,444,ProxyConstructor
code-creation,Builtin,2,67325,0x7ff64c3989c0,2672,ProxyDeleteProperty
code-creation,Builtin,2,67329,0x7ff64c399440,2948,ProxyGetProperty
code-creation,Builtin,2,67334,0x7ff64c39a000,1104,ProxyGetPrototypeOf
code-creation,Builtin,2,67338,0x7ff64c39a480,2608,ProxyHasProperty
code-creation,Builtin,2,67343,0x7ff64c39aec0,792,ProxyIsExtensible
code-creation,Builtin,2,67347,0x7ff64c39b200,848,ProxyPreventExtensions
code-creation,Builtin,2,67352,0x7ff64c39b580,1144,ProxyRevocable
code-creation,Builtin,2,67356,0x7ff64c39ba00,136,ProxyRevoke
code-creation,Builtin,2,67361,0x7ff64c39bac0,3156,ProxySetProperty
code-creation,Builtin,2,67365,0x7ff64c39c740,1360,ProxySetPrototypeOf
code-creation,Builtin,2,67370,0x7ff64c39ccc0,208,ReflectIsExtensible
code-creation,Builtin,2,67375,0x7ff64c39cdc0,212,ReflectPreventExtensions
code-creation,Builtin,2,67379,0x7ff64c39cec0,184,ReflectGetPrototypeOf
code-creation,Builtin,2,67384,0x7ff64c39cf80,328,ReflectSetPrototypeOf
code-creation,Builtin,2,67389,0x7ff64c39d100,296,ReflectGet
code-creation,Builtin,2,67393,0x7ff64c39d240,156,ReflectDeleteProperty
code-creation,Builtin,2,67398,0x7ff64c39d300,156,ReflectHas
code-creation,Builtin,2,67402,0x7ff64c39d3c0,5028,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,67407,0x7ff64c39e780,5580,RegExpPrototypeExecSlow
code-creation,Builtin,2,67412,0x7ff64c39fd80,5600,RegExpPrototypeExec
code-creation,Builtin,2,67416,0x7ff64c3a1380,2752,RegExpPrototypeMatchAll
code-creation,Builtin,2,67421,0x7ff64c3a1e80,9996,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,67428,0x7ff64c3a45c0,9540,RegExpMatchFast
code-creation,Builtin,2,67433,0x7ff64c3a6b40,3824,RegExpPrototypeMatch
code-creation,Builtin,2,67437,0x7ff64c3a7a40,6400,RegExpReplace
code-creation,Builtin,2,67442,0x7ff64c3a9380,508,RegExpPrototypeReplace
code-creation,Builtin,2,67446,0x7ff64c3a9580,1444,RegExpSearchFast
code-creation,Builtin,2,67452,0x7ff64c3a9b40,1664,RegExpPrototypeSearch
code-creation,Builtin,2,67457,0x7ff64c3aa200,212,RegExpPrototypeSourceGetter
code-creation,Builtin,2,67462,0x7ff64c3aa300,6640,RegExpSplit
code-creation,Builtin,2,67467,0x7ff64c3abd00,468,RegExpPrototypeSplit
code-creation,Builtin,2,67471,0x7ff64c3abf00,2312,RegExpPrototypeTest
code-creation,Builtin,2,67476,0x7ff64c3ac840,1404,RegExpPrototypeTestFast
code-creation,Builtin,2,67481,0x7ff64c3acdc0,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,67485,0x7ff64c3acec0,252,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,67490,0x7ff64c3acfc0,252,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,67495,0x7ff64c3ad0c0,252,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,67500,0x7ff64c3ad1c0,252,RegExpPrototypeLinearGetter
code-creation,Builtin,2,67505,0x7ff64c3ad2c0,252,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,67510,0x7ff64c3ad3c0,284,RegExpPrototypeStickyGetter
code-creation,Builtin,2,67515,0x7ff64c3ad500,284,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,67520,0x7ff64c3ad640,252,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,67525,0x7ff64c3ad740,2612,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,67530,0x7ff64c3ae180,12196,SetPrototypeDifference
code-creation,Builtin,2,67535,0x7ff64c3b1140,13348,SetPrototypeIntersection
code-creation,Builtin,2,67539,0x7ff64c3b4580,3116,SetPrototypeIsDisjointFrom
code-creation,Builtin,2,67544,0x7ff64c3b51c0,1804,SetPrototypeIsSubsetOf
code-creation,Builtin,2,67549,0x7ff64c3b5900,2276,SetPrototypeIsSupersetOf
code-creation,Builtin,2,67554,0x7ff64c3b6200,12020,SetPrototypeSymmetricDifference
code-creation,Builtin,2,67559,0x7ff64c3b9100,7640,SetPrototypeUnion
code-creation,Builtin,2,67563,0x7ff64c3baf00,1300,StringPrototypeAt
code-creation,Builtin,2,67568,0x7ff64c3bb440,3232,StringPrototypeEndsWith
code-creation,Builtin,2,67573,0x7ff64c3bc100,496,CreateHTML
code-creation,Builtin,2,67578,0x7ff64c3bc300,148,StringPrototypeAnchor
code-creation,Builtin,2,67584,0x7ff64c3bc3c0,120,StringPrototypeBig
code-creation,Builtin,2,67589,0x7ff64c3bc440,120,StringPrototypeBlink
code-creation,Builtin,2,67593,0x7ff64c3bc4c0,120,StringPrototypeBold
code-creation,Builtin,2,67598,0x7ff64c3bc540,148,StringPrototypeFontcolor
code-creation,Builtin,2,67603,0x7ff64c3bc600,148,StringPrototypeFontsize
code-creation,Builtin,2,67608,0x7ff64c3bc6c0,120,StringPrototypeFixed
code-creation,Builtin,2,67612,0x7ff64c3bc740,120,StringPrototypeItalics
code-creation,Builtin,2,67617,0x7ff64c3bc7c0,148,StringPrototypeLink
code-creation,Builtin,2,67627,0x7ff64c3bc880,120,StringPrototypeSmall
code-creation,Builtin,2,67631,0x7ff64c3bc900,120,StringPrototypeStrike
code-creation,Builtin,2,67636,0x7ff64c3bc980,120,StringPrototypeSub
code-creation,Builtin,2,67640,0x7ff64c3bca00,120,StringPrototypeSup
code-creation,Builtin,2,67663,0x7ff64c3bca80,1024,StringPrototypeIncludes
code-creation,Builtin,2,67667,0x7ff64c3bcec0,648,StringPrototypeIndexOf
code-creation,Builtin,2,67672,0x7ff64c3bd180,648,StringPrototypeIsWellFormed
code-creation,Builtin,2,67677,0x7ff64c3bd440,348,StringPrototypeIterator
code-creation,Builtin,2,67681,0x7ff64c3bd5c0,1804,StringIteratorPrototypeNext
code-creation,Builtin,2,67686,0x7ff64c3bdd00,1360,StringPrototypeMatch
code-creation,Builtin,2,67691,0x7ff64c3be280,1360,StringPrototypeSearch
code-creation,Builtin,2,67696,0x7ff64c3be800,768,StringPrototypePadStart
code-creation,Builtin,2,67701,0x7ff64c3beb40,772,StringPrototypePadEnd
code-creation,Builtin,2,67710,0x7ff64c3bee80,156,StringRepeat
code-creation,Builtin,2,67714,0x7ff64c3bef40,408,StringPrototypeRepeat
code-creation,Builtin,2,67719,0x7ff64c3bf100,13464,StringPrototypeReplaceAll
code-creation,Builtin,2,67723,0x7ff64c3c25c0,4416,StringPrototypeSlice
code-creation,Builtin,2,67728,0x7ff64c3c3740,3232,StringPrototypeStartsWith
code-creation,Builtin,2,67733,0x7ff64c3c4400,4344,StringPrototypeSubstr
code-creation,Builtin,2,67738,0x7ff64c3c5500,4300,StringPrototypeSubstring
code-creation,Builtin,2,67742,0x7ff64c3c6600,936,StringPrototypeToWellFormed
code-creation,Builtin,2,67747,0x7ff64c3c69c0,8936,StringPrototypeTrim
code-creation,Builtin,2,67752,0x7ff64c3c8cc0,8468,StringPrototypeTrimStart
code-creation,Builtin,2,67756,0x7ff64c3cae00,8024,StringPrototypeTrimEnd
code-creation,Builtin,2,67761,0x7ff64c3ccd80,216,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,67766,0x7ff64c3cce80,212,SymbolPrototypeToPrimitive
code-creation,Builtin,2,67771,0x7ff64c3ccf80,232,SymbolPrototypeToString
code-creation,Builtin,2,67776,0x7ff64c3cd080,212,SymbolPrototypeValueOf
code-creation,Builtin,2,67782,0x7ff64c3cd180,1120,TypedArrayPrototypeAt
code-creation,Builtin,2,67813,0x7ff64c3cd600,11324,CreateTypedArray
code-creation,Builtin,2,67818,0x7ff64c3d0240,1784,TypedArrayPrototypeEvery
code-creation,Builtin,2,67823,0x7ff64c3d0940,412,TypedArrayPrototypeEntries
code-creation,Builtin,2,67828,0x7ff64c3d0b00,4600,TypedArrayPrototypeFilter
code-creation,Builtin,2,67838,0x7ff64c3d1d00,1784,TypedArrayPrototypeFind
code-creation,Builtin,2,67843,0x7ff64c3d2400,1792,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,67848,0x7ff64c3d2b40,1792,TypedArrayPrototypeFindLast
code-creation,Builtin,2,67853,0x7ff64c3d3280,1800,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,67859,0x7ff64c3d39c0,1636,TypedArrayPrototypeForEach
code-creation,Builtin,2,67864,0x7ff64c3d4040,3052,TypedArrayFrom
code-creation,Builtin,2,67868,0x7ff64c3d4c40,404,TypedArrayPrototypeKeys
code-creation,Builtin,2,67874,0x7ff64c3d4e00,1416,TypedArrayOf
code-creation,Builtin,2,67878,0x7ff64c3d53c0,1788,TypedArrayPrototypeReduce
code-creation,Builtin,2,67883,0x7ff64c3d5ac0,1716,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,67889,0x7ff64c3d6180,3312,TypedArrayPrototypeSet
code-creation,Builtin,2,67894,0x7ff64c3d6e80,4060,TypedArrayPrototypeSlice
code-creation,Builtin,2,67899,0x7ff64c3d7e80,1788,TypedArrayPrototypeSome
code-creation,Builtin,2,67904,0x7ff64c3d8580,896,TypedArrayMergeSort
code-creation,Builtin,2,67910,0x7ff64c3d8940,2320,TypedArrayPrototypeSort
code-creation,Builtin,2,67916,0x7ff64c3d9280,3088,TypedArrayPrototypeSubArray
code-creation,Builtin,2,67921,0x7ff64c3d9ec0,1796,TypedArrayPrototypeToReversed
code-creation,Builtin,2,68047,0x7ff64c3da600,3296,TypedArrayPrototypeToSorted
code-creation,Builtin,2,68053,0x7ff64c3db300,412,TypedArrayPrototypeValues
code-creation,Builtin,2,68058,0x7ff64c3db4c0,3160,TypedArrayPrototypeWith
code-creation,Builtin,2,68063,0x7ff64c3dc140,1136,WeakRefConstructor
code-creation,Builtin,2,68067,0x7ff64c3dc5c0,188,WeakRefDeref
code-creation,Builtin,2,68072,0x7ff64c3dc680,724,NewSloppyArgumentsElements
code-creation,Builtin,2,68077,0x7ff64c3dc980,352,NewStrictArgumentsElements
code-creation,Builtin,2,68082,0x7ff64c3dcb00,360,NewRestArgumentsElements
code-creation,Builtin,2,68087,0x7ff64c3dcc80,1476,FastNewSloppyArguments
code-creation,Builtin,2,68093,0x7ff64c3dd280,508,FastNewStrictArguments
code-creation,Builtin,2,68097,0x7ff64c3dd480,548,FastNewRestArguments
code-creation,Builtin,2,68102,0x7ff64c3dd6c0,664,StringSlowFlatten
code-creation,Builtin,2,68107,0x7ff64c3dd980,2204,StringIndexOf
code-creation,Builtin,2,68112,0x7ff64c3de240,2028,TestTurbofanType
code-creation,Builtin,2,68119,0x7ff64c3dea40,192,CheckTurbofanType
code-creation,Builtin,2,68124,0x7ff64c3deb40,532,CheckTurboshaftWord32Type
code-creation,Builtin,2,68129,0x7ff64c3ded80,1008,CheckTurboshaftWord64Type
code-creation,Builtin,2,68134,0x7ff64c3df180,1084,CheckTurboshaftFloat32Type
code-creation,Builtin,2,68139,0x7ff64c3df5c0,1080,CheckTurboshaftFloat64Type
code-creation,Builtin,2,68144,0x7ff64c3dfa00,176,DebugPrintWordPtr
code-creation,Builtin,2,68149,0x7ff64c3dfac0,180,DebugPrintFloat64
code-creation,Builtin,2,68154,0x7ff64c3dfb80,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,68159,0x7ff64c3dfbc0,20,TestHelperPlus1
code-creation,Builtin,2,68164,0x7ff64c3dfc00,20,TestHelperPlus2
code-creation,Builtin,2,68170,0x7ff64c3dfc40,92,NewSmiBox
code-creation,Builtin,2,68175,0x7ff64c3dfcc0,24,ReturnTwoValues
code-creation,Builtin,2,68186,0x7ff64c3dfd00,28,ThrowAsBuiltin
code-creation,Builtin,2,68191,0x7ff64c3dfd40,100,TestCallNever
code-creation,Builtin,2,68196,0x7ff64c3dfdc0,28,Load_FastSmiElements_0
code-creation,Builtin,2,68201,0x7ff64c3dfe00,28,Load_FastObjectElements_0
code-creation,Builtin,2,68206,0x7ff64c3dfe40,140,Load_FastDoubleElements_0
code-creation,Builtin,2,68211,0x7ff64c3dff00,28,Store_FastSmiElements_0
code-creation,Builtin,2,68216,0x7ff64c3dff40,92,Store_FastObjectElements_0
code-creation,Builtin,2,68221,0x7ff64c3dffc0,44,Store_FastDoubleElements_0
code-creation,Builtin,2,68226,0x7ff64c3e0000,36,Delete_FastSmiElements_0
code-creation,Builtin,2,68231,0x7ff64c3e0040,36,Delete_FastObjectElements_0
code-creation,Builtin,2,68236,0x7ff64c3e0080,40,Delete_FastDoubleElements_0
code-creation,Builtin,2,68241,0x7ff64c3e00c0,200,SortCompareDefault
code-creation,Builtin,2,68246,0x7ff64c3e01c0,96,SortCompareUserFn
code-creation,Builtin,2,68251,0x7ff64c3e0240,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,68257,0x7ff64c3e0280,364,Copy
code-creation,Builtin,2,68261,0x7ff64c3e0400,6016,MergeAt
code-creation,Builtin,2,68266,0x7ff64c3e1bc0,920,GallopLeft
code-creation,Builtin,2,68270,0x7ff64c3e1f80,928,GallopRight
code-creation,Builtin,2,68276,0x7ff64c3e2340,4108,ArrayTimSort
code-creation,Builtin,2,68281,0x7ff64c3e3380,2028,ArrayPrototypeSort
code-creation,Builtin,2,68287,0x7ff64c3e3b80,4112,StringFastLocaleCompare
code-creation,Builtin,2,68292,0x7ff64c3e4bc0,3400,JSToWasmWrapper
code-creation,Builtin,2,68297,0x7ff64c3e5940,3416,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,68305,0x7ff64c3e66c0,2680,JSToWasmHandleReturns
code-creation,Builtin,2,68310,0x7ff64c3e7140,92,WasmInt32ToHeapNumber
code-creation,Builtin,2,68315,0x7ff64c3e71c0,68,WasmFuncRefToJS
code-creation,Builtin,2,68320,0x7ff64c3e7240,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,68325,0x7ff64c3e72c0,76,WasmTaggedToFloat64
code-creation,Builtin,2,68330,0x7ff64c3e7340,84,WasmTaggedToFloat32
code-creation,Builtin,2,68335,0x7ff64c3e73c0,80,WasmMemoryGrow
code-creation,Builtin,2,68342,0x7ff64c3e7440,88,WasmTableInit
code-creation,Builtin,2,68347,0x7ff64c3e74c0,88,WasmTableCopy
code-creation,Builtin,2,68352,0x7ff64c3e7540,76,WasmTableFill
code-creation,Builtin,2,68357,0x7ff64c3e75c0,68,WasmTableGrow
code-creation,Builtin,2,68428,0x7ff64c3e7640,76,WasmTableGet
code-creation,Builtin,2,68437,0x7ff64c3e76c0,152,WasmTableSet
code-creation,Builtin,2,68441,0x7ff64c3e7780,148,WasmTableGetFuncRef
code-creation,Builtin,2,68446,0x7ff64c3e7840,104,WasmTableSetFuncRef
code-creation,Builtin,2,68452,0x7ff64c3e78c0,76,WasmRefFunc
code-creation,Builtin,2,68457,0x7ff64c3e7940,32,WasmInternalFunctionCreateExternal
code-creation,Builtin,2,68463,0x7ff64c3e7980,156,WasmAllocateFixedArray
code-creation,Builtin,2,68468,0x7ff64c3e7a40,44,WasmThrow
code-creation,Builtin,2,68472,0x7ff64c3e7a80,56,WasmRethrow
code-creation,Builtin,2,68477,0x7ff64c3e7ac0,44,WasmRethrowExplicitContext
code-creation,Builtin,2,68482,0x7ff64c3e7b00,44,WasmTriggerTierUp
code-creation,Builtin,2,68487,0x7ff64c3e7b40,32,WasmStackGuard
code-creation,Builtin,2,68492,0x7ff64c3e7b80,32,WasmStackOverflow
code-creation,Builtin,2,68497,0x7ff64c3e7bc0,40,WasmTraceMemory
code-creation,Builtin,2,68501,0x7ff64c3e7c00,32,WasmTraceEnter
code-creation,Builtin,2,68508,0x7ff64c3e7c40,40,WasmTraceExit
code-creation,Builtin,2,68512,0x7ff64c3e7c80,752,WasmAllocateJSArray
code-creation,Builtin,2,68517,0x7ff64c3e7f80,100,WasmAllocateStructWithRtt
code-creation,Builtin,2,68522,0x7ff64c3e8000,128,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,68527,0x7ff64c3e80c0,96,WasmArrayNewSegment
code-creation,Builtin,2,68532,0x7ff64c3e8140,184,WasmArrayInitSegment
code-creation,Builtin,2,68538,0x7ff64c3e8200,136,WasmArrayCopyWithChecks
code-creation,Builtin,2,68544,0x7ff64c3e82c0,100,WasmArrayCopy
code-creation,Builtin,2,68549,0x7ff64c3e8340,108,WasmUint32ToNumber
code-creation,Builtin,2,68554,0x7ff64c3e83c0,140,UintPtr53ToNumber
code-creation,Builtin,2,68559,0x7ff64c3e8480,116,WasmAtomicNotify
code-creation,Builtin,2,68564,0x7ff64c3e8500,108,WasmI32AtomicWait
code-creation,Builtin,2,68569,0x7ff64c3e8580,104,WasmI64AtomicWait
code-creation,Builtin,2,68574,0x7ff64c3e8600,1352,CallRefIC
code-creation,Builtin,2,68579,0x7ff64c3e8b80,1708,WasmGetOwnProperty
code-creation,Builtin,2,68583,0x7ff64c3e9240,92,WasmTrap
code-creation,Builtin,2,68588,0x7ff64c3e92c0,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,68593,0x7ff64c3e9300,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,68598,0x7ff64c3e9340,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,68603,0x7ff64c3e9380,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,68608,0x7ff64c3e93c0,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,68613,0x7ff64c3e9400,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,68618,0x7ff64c3e9440,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,68628,0x7ff64c3e9480,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,68633,0x7ff64c3e94c0,16,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,68638,0x7ff64c3e9500,16,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,68666,0x7ff64c3e9540,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,68671,0x7ff64c3e9580,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,68676,0x7ff64c3e95c0,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,68682,0x7ff64c3e9600,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,68687,0x7ff64c3e9640,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,68692,0x7ff64c3e9680,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,68698,0x7ff64c3e96c0,16,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,68703,0x7ff64c3e9700,148,WasmStringNewWtf8
code-creation,Builtin,2,68708,0x7ff64c3e97c0,164,WasmStringNewWtf8Array
code-creation,Builtin,2,68714,0x7ff64c3e9880,140,WasmStringNewWtf16
code-creation,Builtin,2,68719,0x7ff64c3e9940,1176,WasmStringNewWtf16Array
code-creation,Builtin,2,68724,0x7ff64c3e9e00,116,WasmStringFromDataSegment
code-creation,Builtin,2,68731,0x7ff64c3e9e80,52,WasmStringAsWtf16
code-creation,Builtin,2,68739,0x7ff64c3e9ec0,48,WasmStringConst
code-creation,Builtin,2,68745,0x7ff64c3e9f00,108,WasmStringMeasureUtf8
code-creation,Builtin,2,68750,0x7ff64c3e9f80,108,WasmStringMeasureWtf8
code-creation,Builtin,2,68756,0x7ff64c3ea000,156,WasmStringEncodeWtf8
code-creation,Builtin,2,68761,0x7ff64c3ea0c0,148,WasmStringEncodeWtf8Array
code-creation,Builtin,2,68766,0x7ff64c3ea180,104,WasmStringEncodeWtf16
code-creation,Builtin,2,68771,0x7ff64c3ea200,908,WasmStringEncodeWtf16Array
code-creation,Builtin,2,68776,0x7ff64c3ea5c0,68,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,68782,0x7ff64c3ea640,68,ThrowIndexOfCalledOnNull
code-creation,Builtin,2,68880,0x7ff64c3ea6c0,20,WasmStringConcat
code-creation,Builtin,2,68885,0x7ff64c3ea700,60,WasmStringEqual
code-creation,Builtin,2,68889,0x7ff64c3ea740,140,WasmStringIsUSVSequence
code-creation,Builtin,2,68894,0x7ff64c3ea800,40,WasmStringAsWtf8
code-creation,Builtin,2,68899,0x7ff64c3ea840,224,WasmStringViewWtf8Advance
code-creation,Builtin,2,68904,0x7ff64c3ea940,168,WasmStringViewWtf8Encode
code-creation,Builtin,2,68909,0x7ff64c3eaa00,172,WasmStringViewWtf8Slice
code-creation,Builtin,2,68914,0x7ff64c3eaac0,556,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,68919,0x7ff64c3ead00,140,WasmStringViewWtf16Encode
code-creation,Builtin,2,68925,0x7ff64c3eadc0,5220,WasmStringViewWtf16Slice
code-creation,Builtin,2,68930,0x7ff64c3ec240,100,WasmStringAsIter
code-creation,Builtin,2,68935,0x7ff64c3ec2c0,1196,WasmStringCodePointAt
code-creation,Builtin,2,68940,0x7ff64c3ec780,1232,WasmStringViewIterNext
code-creation,Builtin,2,68945,0x7ff64c3ecc80,1444,WasmStringViewIterAdvance
code-creation,Builtin,2,68950,0x7ff64c3ed240,1444,WasmStringViewIterRewind
code-creation,Builtin,2,68955,0x7ff64c3ed800,4708,WasmStringViewIterSlice
code-creation,Builtin,2,68960,0x7ff64c3eea80,2736,WasmIntToString
code-creation,Builtin,2,68965,0x7ff64c3ef540,160,WasmStringToDouble
code-creation,Builtin,2,68970,0x7ff64c3ef600,80,WasmStringFromCodePoint
code-creation,Builtin,2,68975,0x7ff64c3ef680,36,WasmStringHash
code-creation,Builtin,2,68979,0x7ff64c3ef6c0,60,WasmExternInternalize
code-creation,Builtin,2,68984,0x7ff64c3ef700,516,WebAssemblyStringFromWtf16Array
code-creation,Builtin,2,68990,0x7ff64c3ef940,528,WebAssemblyStringFromWtf8Array
code-creation,Builtin,2,68995,0x7ff64c3efb80,436,WebAssemblyStringToWtf16Array
code-creation,Builtin,2,69000,0x7ff64c3efd40,304,WebAssemblyStringFromCharCode
code-creation,Builtin,2,69005,0x7ff64c3efe80,364,WebAssemblyStringFromCodePoint
code-creation,Builtin,2,69010,0x7ff64c3f0000,1424,WebAssemblyStringCodePointAt
code-creation,Builtin,2,69015,0x7ff64c3f05c0,824,WebAssemblyStringCharCodeAt
code-creation,Builtin,2,69020,0x7ff64c3f0900,148,WebAssemblyStringLength
code-creation,Builtin,2,69025,0x7ff64c3f09c0,220,WebAssemblyStringConcat
code-creation,Builtin,2,69030,0x7ff64c3f0ac0,436,WebAssemblyStringSubstring
code-creation,Builtin,2,69039,0x7ff64c3f0c80,420,WebAssemblyStringEquals
code-creation,Builtin,2,69044,0x7ff64c3f0e40,220,WebAssemblyStringCompare
code-creation,Builtin,2,69049,0x7ff64c3f0f40,164,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,69055,0x7ff64c3f1000,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,69060,0x7ff64c3f1040,108,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,69065,0x7ff64c3f10c0,104,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,69071,0x7ff64c3f1140,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,69076,0x7ff64c3f1180,208,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,69081,0x7ff64c3f1280,236,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,69087,0x7ff64c3f1380,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,69092,0x7ff64c3f13c0,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,69097,0x7ff64c3f1400,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,69103,0x7ff64c3f1440,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,69108,0x7ff64c3f1480,124,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,69115,0x7ff64c3f1500,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,69120,0x7ff64c3f1540,40,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,69126,0x7ff64c3f1580,40,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,69131,0x7ff64c3f15c0,40,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,69136,0x7ff64c3f1600,24,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,69142,0x7ff64c3f1640,3844,Load_GenericElementsAccessor_0
code-creation,Builtin,2,69147,0x7ff64c3f2580,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,69152,0x7ff64c3f25c0,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,69158,0x7ff64c3f2600,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,69163,0x7ff64c3f2640,196,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,69168,0x7ff64c3f2740,576,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,69173,0x7ff64c3f29c0,108,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,69178,0x7ff64c3f2a40,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,69184,0x7ff64c3f2a80,548,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,69189,0x7ff64c3f2cc0,104,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,69200,0x7ff64c3f2d40,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,69205,0x7ff64c3f2d80,544,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,69210,0x7ff64c3f2fc0,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,69216,0x7ff64c3f3000,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,69221,0x7ff64c3f3040,1008,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,69227,0x7ff64c3f3440,208,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,69232,0x7ff64c3f3540,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,69238,0x7ff64c3f3580,548,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,69243,0x7ff64c3f37c0,236,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,69248,0x7ff64c3f38c0,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,69258,0x7ff64c3f3900,548,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,69263,0x7ff64c3f3b40,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,69268,0x7ff64c3f3b80,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,69274,0x7ff64c3f3bc0,576,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,69279,0x7ff64c3f3e40,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,69297,0x7ff64c3f3e80,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,69302,0x7ff64c3f3ec0,576,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,69308,0x7ff64c3f4140,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,69313,0x7ff64c3f4180,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,69322,0x7ff64c3f41c0,576,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,69327,0x7ff64c3f4440,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,69332,0x7ff64c3f4480,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,69338,0x7ff64c3f44c0,576,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,69343,0x7ff64c3f4740,124,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,69348,0x7ff64c3f47c0,196,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,69354,0x7ff64c3f48c0,576,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,69359,0x7ff64c3f4b40,12,CollatorConstructor
code-creation,Builtin,2,69364,0x7ff64c3f4b80,12,CollatorInternalCompare
code-creation,Builtin,2,69369,0x7ff64c3f4bc0,12,CollatorPrototypeCompare
code-creation,Builtin,2,69374,0x7ff64c3f4c00,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,69379,0x7ff64c3f4c40,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,69384,0x7ff64c3f4c80,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,69389,0x7ff64c3f4cc0,12,DatePrototypeToLocaleString
code-creation,Builtin,2,69395,0x7ff64c3f4d00,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,69401,0x7ff64c3f4d40,12,DateTimeFormatConstructor
code-creation,Builtin,2,69406,0x7ff64c3f4d80,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,69411,0x7ff64c3f4dc0,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,69416,0x7ff64c3f4e00,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,69421,0x7ff64c3f4e40,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,69427,0x7ff64c3f4e80,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,69432,0x7ff64c3f4ec0,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,69437,0x7ff64c3f4f00,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,69442,0x7ff64c3f4f40,12,DisplayNamesConstructor
code-creation,Builtin,2,69447,0x7ff64c3f4f80,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,69452,0x7ff64c3f4fc0,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,69457,0x7ff64c3f5000,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,69462,0x7ff64c3f5040,12,DurationFormatConstructor
code-creation,Builtin,2,69467,0x7ff64c3f5080,12,DurationFormatPrototypeFormat
code-creation,Builtin,2,69472,0x7ff64c3f50c0,12,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,69478,0x7ff64c3f5100,12,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,69483,0x7ff64c3f5140,12,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,69488,0x7ff64c3f5180,12,IntlGetCanonicalLocales
code-creation,Builtin,2,69493,0x7ff64c3f51c0,12,IntlSupportedValuesOf
code-creation,Builtin,2,69498,0x7ff64c3f5200,12,ListFormatConstructor
code-creation,Builtin,2,69503,0x7ff64c3f5240,200,ListFormatPrototypeFormat
code-creation,Builtin,2,69508,0x7ff64c3f5340,200,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,69513,0x7ff64c3f5440,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,69518,0x7ff64c3f5480,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,69523,0x7ff64c3f54c0,12,LocaleConstructor
code-creation,Builtin,2,69528,0x7ff64c3f5500,12,LocalePrototypeBaseName
code-creation,Builtin,2,69532,0x7ff64c3f5540,12,LocalePrototypeCalendar
code-creation,Builtin,2,69537,0x7ff64c3f5580,12,LocalePrototypeCalendars
code-creation,Builtin,2,69542,0x7ff64c3f55c0,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,69547,0x7ff64c3f5600,12,LocalePrototypeCollation
code-creation,Builtin,2,69552,0x7ff64c3f5640,12,LocalePrototypeCollations
code-creation,Builtin,2,69557,0x7ff64c3f5680,12,LocalePrototypeGetCalendars
code-creation,Builtin,2,69562,0x7ff64c3f56c0,12,LocalePrototypeGetCollations
code-creation,Builtin,2,69567,0x7ff64c3f5700,12,LocalePrototypeGetHourCycles
code-creation,Builtin,2,69572,0x7ff64c3f5740,12,LocalePrototypeGetNumberingSystems
code-creation,Builtin,2,69577,0x7ff64c3f5780,12,LocalePrototypeGetTimeZones
code-creation,Builtin,2,69583,0x7ff64c3f57c0,12,LocalePrototypeGetTextInfo
code-creation,Builtin,2,69588,0x7ff64c3f5800,12,LocalePrototypeGetWeekInfo
code-creation,Builtin,2,69592,0x7ff64c3f5840,12,LocalePrototypeHourCycle
code-creation,Builtin,2,69597,0x7ff64c3f5880,12,LocalePrototypeHourCycles
code-creation,Builtin,2,69602,0x7ff64c3f58c0,12,LocalePrototypeLanguage
code-creation,Builtin,2,69607,0x7ff64c3f5900,12,LocalePrototypeMaximize
code-creation,Builtin,2,69612,0x7ff64c3f5940,12,LocalePrototypeMinimize
code-creation,Builtin,2,69617,0x7ff64c3f5980,12,LocalePrototypeNumeric
code-creation,Builtin,2,69622,0x7ff64c3f59c0,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,69627,0x7ff64c3f5a00,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,69632,0x7ff64c3f5a40,12,LocalePrototypeRegion
code-creation,Builtin,2,69637,0x7ff64c3f5a80,12,LocalePrototypeScript
code-creation,Builtin,2,69642,0x7ff64c3f5ac0,12,LocalePrototypeTextInfo
code-creation,Builtin,2,69652,0x7ff64c3f5b00,12,LocalePrototypeTimeZones
code-creation,Builtin,2,69657,0x7ff64c3f5b40,12,LocalePrototypeToString
code-creation,Builtin,2,69662,0x7ff64c3f5b80,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,69667,0x7ff64c3f5bc0,12,NumberFormatConstructor
code-creation,Builtin,2,69718,0x7ff64c3f5c00,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,69724,0x7ff64c3f5c40,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,69729,0x7ff64c3f5c80,12,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,69734,0x7ff64c3f5cc0,12,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,69740,0x7ff64c3f5d00,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,69745,0x7ff64c3f5d40,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,69750,0x7ff64c3f5d80,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,69755,0x7ff64c3f5dc0,12,PluralRulesConstructor
code-creation,Builtin,2,69760,0x7ff64c3f5e00,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,69765,0x7ff64c3f5e40,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,69772,0x7ff64c3f5e80,12,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,69777,0x7ff64c3f5ec0,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,69782,0x7ff64c3f5f00,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,69787,0x7ff64c3f5f40,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,69792,0x7ff64c3f5f80,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,69797,0x7ff64c3f5fc0,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,69803,0x7ff64c3f6000,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,69808,0x7ff64c3f6040,12,SegmenterConstructor
code-creation,Builtin,2,69813,0x7ff64c3f6080,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,69818,0x7ff64c3f60c0,12,SegmenterPrototypeSegment
code-creation,Builtin,2,69823,0x7ff64c3f6100,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,69828,0x7ff64c3f6140,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,69833,0x7ff64c3f6180,12,SegmentsPrototypeContaining
code-creation,Builtin,2,69852,0x7ff64c3f61c0,12,SegmentsPrototypeIterator
code-creation,Builtin,2,69857,0x7ff64c3f6200,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,69862,0x7ff64c3f6240,1180,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,69867,0x7ff64c3f6700,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,69872,0x7ff64c3f6740,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,69878,0x7ff64c3f6840,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,69883,0x7ff64c3f6880,724,StringToLowerCaseIntl
code-creation,Builtin,2,69888,0x7ff64c3f6b80,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,69893,0x7ff64c3f6bc0,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,69898,0x7ff64c3f6c00,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,69903,0x7ff64c3f6c40,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,69909,0x7ff64c3f6c80,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,69914,0x7ff64c3f6cc0,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,69919,0x7ff64c3f6d00,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,69928,0x7ff64c3f6d40,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,69933,0x7ff64c3f6d80,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,69938,0x7ff64c3f6dc0,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,69944,0x7ff64c3f6e00,12,V8BreakIteratorConstructor
code-creation,Builtin,2,69949,0x7ff64c3f6e40,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,69954,0x7ff64c3f6e80,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,69959,0x7ff64c3f6ec0,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,69964,0x7ff64c3f6f00,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,69969,0x7ff64c3f6f40,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,69974,0x7ff64c3f6f80,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,69979,0x7ff64c3f6fc0,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,69994,0x7ff64c3f7000,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,69999,0x7ff64c3f7040,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,70004,0x7ff64c3f7080,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,70024,0x7ff64c3f70c0,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,70030,0x7ff64c3f7100,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,70036,0x7ff64c3f7140,24,Wide
code-creation,BytecodeHandler,0,70040,0x7ff64c3f7180,24,ExtraWide
code-creation,BytecodeHandler,0,70045,0x7ff64c3f71c0,104,DebugBreakWide
code-creation,BytecodeHandler,0,70050,0x7ff64c3f7240,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,70055,0x7ff64c3f72c0,164,DebugBreak0
code-creation,BytecodeHandler,0,70060,0x7ff64c3f7380,104,DebugBreak1
code-creation,BytecodeHandler,0,70065,0x7ff64c3f7400,104,DebugBreak2
code-creation,BytecodeHandler,0,70069,0x7ff64c3f7480,104,DebugBreak3
code-creation,BytecodeHandler,0,70074,0x7ff64c3f7500,104,DebugBreak4
code-creation,BytecodeHandler,0,70079,0x7ff64c3f7580,104,DebugBreak5
code-creation,BytecodeHandler,0,70083,0x7ff64c3f7600,104,DebugBreak6
code-creation,BytecodeHandler,0,70088,0x7ff64c3f7680,32,Ldar
code-creation,BytecodeHandler,0,70092,0x7ff64c3f76c0,56,LdaZero
code-creation,BytecodeHandler,0,70097,0x7ff64c3f7700,64,LdaSmi
code-creation,BytecodeHandler,0,70101,0x7ff64c3f7780,64,LdaUndefined
code-creation,BytecodeHandler,0,70106,0x7ff64c3f7800,64,LdaNull
code-creation,BytecodeHandler,0,70111,0x7ff64c3f7880,64,LdaTheHole
code-creation,BytecodeHandler,0,70115,0x7ff64c3f7900,24,LdaTrue
code-creation,BytecodeHandler,0,70120,0x7ff64c3f7940,24,LdaFalse
code-creation,BytecodeHandler,0,70125,0x7ff64c3f7980,64,LdaConstant
code-creation,BytecodeHandler,0,70129,0x7ff64c3f7a00,144,LdaContextSlot
code-creation,BytecodeHandler,0,70134,0x7ff64c3f7ac0,144,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,70139,0x7ff64c3f7b80,72,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,70144,0x7ff64c3f7c00,72,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,70150,0x7ff64c3f7c80,32,Star
code-creation,BytecodeHandler,0,70154,0x7ff64c3f7cc0,48,Mov
code-creation,BytecodeHandler,0,70158,0x7ff64c3f7d00,40,PushContext
code-creation,BytecodeHandler,0,70163,0x7ff64c3f7d40,36,PopContext
code-creation,BytecodeHandler,0,70168,0x7ff64c3f7d80,56,TestReferenceEqual
code-creation,BytecodeHandler,0,70173,0x7ff64c3f7dc0,60,TestUndetectable
code-creation,BytecodeHandler,0,70177,0x7ff64c3f7e00,44,TestNull
code-creation,BytecodeHandler,0,70182,0x7ff64c3f7e40,44,TestUndefined
code-creation,BytecodeHandler,0,70187,0x7ff64c3f7e80,368,TestTypeOf
code-creation,BytecodeHandler,0,70191,0x7ff64c3f8000,5312,LdaGlobal
code-creation,BytecodeHandler,0,70197,0x7ff64c3f9500,4156,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,70202,0x7ff64c3fa540,160,StaGlobal
code-creation,BytecodeHandler,0,70207,0x7ff64c3fa600,184,StaContextSlot
code-creation,BytecodeHandler,0,70211,0x7ff64c3fa6c0,112,StaCurrentContextSlot
code-creation,BytecodeHandler,0,70216,0x7ff64c3fa740,124,LdaLookupSlot
code-creation,BytecodeHandler,0,70221,0x7ff64c3fa7c0,292,LdaLookupContextSlot
code-creation,BytecodeHandler,0,70226,0x7ff64c3fa900,4500,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,70231,0x7ff64c3fbac0,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,70237,0x7ff64c3fbb40,292,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,70243,0x7ff64c3fbc80,4420,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,70248,0x7ff64c3fce00,220,StaLookupSlot
code-creation,BytecodeHandler,0,70253,0x7ff64c3fcf00,4928,GetNamedProperty
code-creation,BytecodeHandler,0,70257,0x7ff64c3fe280,184,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,70262,0x7ff64c3fe340,200,GetKeyedProperty
code-creation,BytecodeHandler,0,70267,0x7ff64c3fe440,192,LdaModuleVariable
code-creation,BytecodeHandler,0,70272,0x7ff64c3fe540,308,StaModuleVariable
code-creation,BytecodeHandler,0,70277,0x7ff64c3fe680,176,SetNamedProperty
code-creation,BytecodeHandler,0,70282,0x7ff64c3fe740,176,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,70287,0x7ff64c3fe800,168,SetKeyedProperty
code-creation,BytecodeHandler,0,70292,0x7ff64c3fe8c0,184,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,70311,0x7ff64c3fe980,168,StaInArrayLiteral
code-creation,BytecodeHandler,0,70316,0x7ff64c3fea40,200,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,70322,0x7ff64c3feb40,1448,Add
code-creation,BytecodeHandler,0,70326,0x7ff64c3ff100,1420,Sub
code-creation,BytecodeHandler,0,70330,0x7ff64c3ff6c0,1540,Mul
code-creation,BytecodeHandler,0,70335,0x7ff64c3ffd00,1604,Div
code-creation,BytecodeHandler,0,70339,0x7ff64c400380,1552,Mod
code-creation,BytecodeHandler,0,70344,0x7ff64c4009c0,928,Exp
code-creation,BytecodeHandler,0,70348,0x7ff64c400d80,1940,BitwiseOr
code-creation,BytecodeHandler,0,70353,0x7ff64c401540,1940,BitwiseXor
code-creation,BytecodeHandler,0,70357,0x7ff64c401d00,1940,BitwiseAnd
code-creation,BytecodeHandler,0,70362,0x7ff64c4024c0,1364,ShiftLeft
code-creation,BytecodeHandler,0,70367,0x7ff64c402a40,1364,ShiftRight
code-creation,BytecodeHandler,0,70371,0x7ff64c402fc0,1424,ShiftRightLogical
code-creation,BytecodeHandler,0,70376,0x7ff64c403580,1332,AddSmi
code-creation,BytecodeHandler,0,70381,0x7ff64c403ac0,1308,SubSmi
code-creation,BytecodeHandler,0,70385,0x7ff64c404000,1384,MulSmi
code-creation,BytecodeHandler,0,70390,0x7ff64c404580,1516,DivSmi
code-creation,BytecodeHandler,0,70394,0x7ff64c404b80,1380,ModSmi
code-creation,BytecodeHandler,0,70399,0x7ff64c405100,816,ExpSmi
code-creation,BytecodeHandler,0,70404,0x7ff64c405440,560,BitwiseOrSmi
code-creation,BytecodeHandler,0,70408,0x7ff64c405680,560,BitwiseXorSmi
code-creation,BytecodeHandler,0,70413,0x7ff64c4058c0,560,BitwiseAndSmi
code-creation,BytecodeHandler,0,70418,0x7ff64c405b00,584,ShiftLeftSmi
code-creation,BytecodeHandler,0,70422,0x7ff64c405d80,568,ShiftRightSmi
code-creation,BytecodeHandler,0,70427,0x7ff64c405fc0,856,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,70432,0x7ff64c406340,740,Inc
code-creation,BytecodeHandler,0,70436,0x7ff64c406640,736,Dec
code-creation,BytecodeHandler,0,70441,0x7ff64c406940,724,Negate
code-creation,BytecodeHandler,0,70445,0x7ff64c406c40,592,BitwiseNot
code-creation,BytecodeHandler,0,70450,0x7ff64c406ec0,124,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,70455,0x7ff64c406f40,44,LogicalNot
code-creation,BytecodeHandler,0,70460,0x7ff64c406f80,204,TypeOf
code-creation,BytecodeHandler,0,70464,0x7ff64c407080,124,DeletePropertyStrict
code-creation,BytecodeHandler,0,70469,0x7ff64c407100,116,DeletePropertySloppy
code-creation,BytecodeHandler,0,70474,0x7ff64c407180,40,GetSuperConstructor
code-creation,BytecodeHandler,0,70480,0x7ff64c4071c0,380,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,70485,0x7ff64c407340,1108,CallAnyReceiver
code-creation,BytecodeHandler,0,70490,0x7ff64c4077c0,1108,CallProperty
code-creation,BytecodeHandler,0,70495,0x7ff64c407c40,1036,CallProperty0
code-creation,BytecodeHandler,0,70499,0x7ff64c408080,1048,CallProperty1
code-creation,BytecodeHandler,0,70504,0x7ff64c4084c0,1060,CallProperty2
code-creation,BytecodeHandler,0,70509,0x7ff64c408900,1020,CallUndefinedReceiver
code-creation,BytecodeHandler,0,70514,0x7ff64c408d00,1040,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,70519,0x7ff64c409140,1052,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,70524,0x7ff64c409580,1068,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,70529,0x7ff64c4099c0,1108,CallWithSpread
code-creation,BytecodeHandler,0,70534,0x7ff64c409e40,128,CallRuntime
code-creation,BytecodeHandler,0,70539,0x7ff64c409f00,152,CallRuntimeForPair
code-creation,BytecodeHandler,0,70544,0x7ff64c409fc0,80,CallJSRuntime
code-creation,BytecodeHandler,0,70549,0x7ff64c40a040,1376,InvokeIntrinsic
code-creation,BytecodeHandler,0,70553,0x7ff64c40a5c0,1076,Construct
code-creation,BytecodeHandler,0,70558,0x7ff64c40aa00,496,ConstructWithSpread
code-creation,BytecodeHandler,0,70563,0x7ff64c40ac00,2224,TestEqual
code-creation,BytecodeHandler,0,70567,0x7ff64c40b4c0,1328,TestEqualStrict
code-creation,BytecodeHandler,0,70572,0x7ff64c40ba00,1840,TestLessThan
code-creation,BytecodeHandler,0,70577,0x7ff64c40c140,1840,TestGreaterThan
code-creation,BytecodeHandler,0,70582,0x7ff64c40c880,1840,TestLessThanOrEqual
code-creation,BytecodeHandler,0,70600,0x7ff64c40cfc0,1840,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,70606,0x7ff64c40d700,880,TestInstanceOf
code-creation,BytecodeHandler,0,70611,0x7ff64c40da80,156,TestIn
code-creation,BytecodeHandler,0,70615,0x7ff64c40db40,92,ToName
code-creation,BytecodeHandler,0,70619,0x7ff64c40dbc0,212,ToNumber
code-creation,BytecodeHandler,0,70624,0x7ff64c40dcc0,236,ToNumeric
code-creation,BytecodeHandler,0,70628,0x7ff64c40ddc0,116,ToObject
code-creation,BytecodeHandler,0,70633,0x7ff64c40de40,124,ToString
code-creation,BytecodeHandler,0,70638,0x7ff64c40dec0,124,ToBoolean
code-creation,BytecodeHandler,0,70642,0x7ff64c40df40,396,CreateRegExpLiteral
code-creation,BytecodeHandler,0,70656,0x7ff64c40e100,1652,CreateArrayLiteral
code-creation,BytecodeHandler,0,70661,0x7ff64c40e780,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,70667,0x7ff64c40e800,780,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,70672,0x7ff64c40eb40,2580,CreateObjectLiteral
code-creation,BytecodeHandler,0,70677,0x7ff64c40f580,328,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,70687,0x7ff64c40f700,172,CloneObject
code-creation,BytecodeHandler,0,70692,0x7ff64c40f7c0,204,GetTemplateObject
code-creation,BytecodeHandler,0,70696,0x7ff64c40f8c0,332,CreateClosure
code-creation,BytecodeHandler,0,70701,0x7ff64c40fa40,116,CreateBlockContext
code-creation,BytecodeHandler,0,70706,0x7ff64c40fac0,132,CreateCatchContext
code-creation,BytecodeHandler,0,70711,0x7ff64c40fb80,348,CreateFunctionContext
code-creation,BytecodeHandler,0,70716,0x7ff64c40fd00,348,CreateEvalContext
code-creation,BytecodeHandler,0,70721,0x7ff64c40fe80,132,CreateWithContext
code-creation,BytecodeHandler,0,70726,0x7ff64c40ff40,1680,CreateMappedArguments
code-creation,BytecodeHandler,0,70731,0x7ff64c410600,572,CreateUnmappedArguments
code-creation,BytecodeHandler,0,70736,0x7ff64c410840,680,CreateRestParameter
code-creation,BytecodeHandler,0,70741,0x7ff64c410b00,1140,JumpLoop
code-creation,BytecodeHandler,0,70746,0x7ff64c410f80,24,Jump
code-creation,BytecodeHandler,0,70750,0x7ff64c410fc0,32,JumpConstant
code-creation,BytecodeHandler,0,70755,0x7ff64c411000,56,JumpIfNullConstant
code-creation,BytecodeHandler,0,70760,0x7ff64c411040,56,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,70765,0x7ff64c411080,56,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,70770,0x7ff64c4110c0,56,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,70775,0x7ff64c411100,64,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,70780,0x7ff64c411180,56,JumpIfTrueConstant
code-creation,BytecodeHandler,0,70785,0x7ff64c4111c0,56,JumpIfFalseConstant
code-creation,BytecodeHandler,0,70790,0x7ff64c411200,68,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,70795,0x7ff64c411280,136,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,70801,0x7ff64c411340,136,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,70806,0x7ff64c411400,124,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,70811,0x7ff64c411480,124,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,70815,0x7ff64c411500,48,JumpIfTrue
code-creation,BytecodeHandler,0,70821,0x7ff64c411540,48,JumpIfFalse
code-creation,BytecodeHandler,0,70825,0x7ff64c411580,48,JumpIfNull
code-creation,BytecodeHandler,0,70830,0x7ff64c4115c0,48,JumpIfNotNull
code-creation,BytecodeHandler,0,70835,0x7ff64c411600,48,JumpIfUndefined
code-creation,BytecodeHandler,0,70849,0x7ff64c411640,48,JumpIfNotUndefined
code-creation,BytecodeHandler,0,70854,0x7ff64c411680,56,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,70859,0x7ff64c4116c0,56,JumpIfJSReceiver
code-creation,BytecodeHandler,0,70864,0x7ff64c411700,84,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,70869,0x7ff64c411780,476,ForInEnumerate
code-creation,BytecodeHandler,0,70874,0x7ff64c411980,240,ForInPrepare
code-creation,BytecodeHandler,0,70878,0x7ff64c411a80,64,ForInContinue
code-creation,BytecodeHandler,0,70883,0x7ff64c411b00,252,ForInNext
code-creation,BytecodeHandler,0,70888,0x7ff64c411c00,48,ForInStep
code-creation,BytecodeHandler,0,70906,0x7ff64c411c40,36,SetPendingMessage
code-creation,BytecodeHandler,0,70913,0x7ff64c411c80,116,Throw
code-creation,BytecodeHandler,0,70918,0x7ff64c411d00,116,ReThrow
code-creation,BytecodeHandler,0,70922,0x7ff64c411d80,112,Return
code-creation,BytecodeHandler,0,70927,0x7ff64c411e00,188,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,70932,0x7ff64c411ec0,136,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,70937,0x7ff64c411f80,136,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,70943,0x7ff64c412040,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,70948,0x7ff64c412100,104,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,70953,0x7ff64c412180,532,SuspendGenerator
code-creation,BytecodeHandler,0,70958,0x7ff64c4123c0,152,ResumeGenerator
code-creation,BytecodeHandler,0,70962,0x7ff64c412480,164,GetIterator
code-creation,BytecodeHandler,0,70969,0x7ff64c412540,104,Debugger
code-creation,BytecodeHandler,0,70974,0x7ff64c4125c0,124,IncBlockCounter
code-creation,BytecodeHandler,0,70979,0x7ff64c412640,56,Abort
code-creation,BytecodeHandler,0,70984,0x7ff64c412680,32,Star0
code-creation,BytecodeHandler,0,70988,0x7ff64c4126c0,60,Illegal
code-creation,BytecodeHandler,0,71006,0x7ff64c412700,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,71011,0x7ff64c412780,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,71016,0x7ff64c412800,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,71021,0x7ff64c412880,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,71026,0x7ff64c412900,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,71031,0x7ff64c412980,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,71036,0x7ff64c412a00,32,Ldar.Wide
code-creation,BytecodeHandler,0,71041,0x7ff64c412a40,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,71045,0x7ff64c412a80,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,71050,0x7ff64c412ac0,116,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,71055,0x7ff64c412b40,116,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,71061,0x7ff64c412bc0,44,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,71066,0x7ff64c412c00,44,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,71072,0x7ff64c412c40,32,Star.Wide
code-creation,BytecodeHandler,0,71076,0x7ff64c412c80,48,Mov.Wide
code-creation,BytecodeHandler,0,71081,0x7ff64c412cc0,40,PushContext.Wide
code-creation,BytecodeHandler,0,71086,0x7ff64c412d00,36,PopContext.Wide
code-creation,BytecodeHandler,0,71091,0x7ff64c412d40,56,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,71096,0x7ff64c412d80,4292,LdaGlobal.Wide
code-creation,BytecodeHandler,0,71100,0x7ff64c413e80,4220,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,71105,0x7ff64c414f00,164,StaGlobal.Wide
code-creation,BytecodeHandler,0,71110,0x7ff64c414fc0,184,StaContextSlot.Wide
code-creation,BytecodeHandler,0,71116,0x7ff64c415080,112,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,71121,0x7ff64c415100,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,71126,0x7ff64c4151c0,296,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,71131,0x7ff64c415300,4512,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,71136,0x7ff64c4164c0,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,71142,0x7ff64c416580,296,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,71148,0x7ff64c4166c0,4432,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,71154,0x7ff64c417840,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,71159,0x7ff64c417940,4952,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,71164,0x7ff64c418cc0,192,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,71169,0x7ff64c418dc0,156,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,71174,0x7ff64c418e80,192,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,71179,0x7ff64c418f80,312,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,71184,0x7ff64c4190c0,180,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,71189,0x7ff64c419180,180,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,71208,0x7ff64c419240,172,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,71214,0x7ff64c419300,188,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,71219,0x7ff64c4193c0,172,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,71225,0x7ff64c419480,204,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,71231,0x7ff64c419580,1420,Add.Wide
code-creation,BytecodeHandler,0,71235,0x7ff64c419b40,1392,Sub.Wide
code-creation,BytecodeHandler,0,71240,0x7ff64c41a0c0,1512,Mul.Wide
code-creation,BytecodeHandler,0,71245,0x7ff64c41a6c0,1616,Div.Wide
code-creation,BytecodeHandler,0,71249,0x7ff64c41ad40,1564,Mod.Wide
code-creation,BytecodeHandler,0,71254,0x7ff64c41b380,952,Exp.Wide
code-creation,BytecodeHandler,0,71258,0x7ff64c41b740,2024,BitwiseOr.Wide
code-creation,BytecodeHandler,0,71263,0x7ff64c41bf40,2024,BitwiseXor.Wide
code-creation,BytecodeHandler,0,71268,0x7ff64c41c740,2024,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,71273,0x7ff64c41cf40,1504,ShiftLeft.Wide
code-creation,BytecodeHandler,0,71277,0x7ff64c41d540,1504,ShiftRight.Wide
code-creation,BytecodeHandler,0,71282,0x7ff64c41db40,1564,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,71288,0x7ff64c41e180,1312,AddSmi.Wide
code-creation,BytecodeHandler,0,71292,0x7ff64c41e6c0,1284,SubSmi.Wide
code-creation,BytecodeHandler,0,71297,0x7ff64c41ec00,1396,MulSmi.Wide
code-creation,BytecodeHandler,0,71302,0x7ff64c41f180,1532,DivSmi.Wide
code-creation,BytecodeHandler,0,71306,0x7ff64c41f780,1396,ModSmi.Wide
code-creation,BytecodeHandler,0,71311,0x7ff64c41fd00,812,ExpSmi.Wide
code-creation,BytecodeHandler,0,71316,0x7ff64c420040,572,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,71321,0x7ff64c420280,572,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,71326,0x7ff64c4204c0,572,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,71331,0x7ff64c420700,592,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,71336,0x7ff64c420980,580,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,71341,0x7ff64c420c00,868,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,71346,0x7ff64c420f80,712,Inc.Wide
code-creation,BytecodeHandler,0,71351,0x7ff64c421280,712,Dec.Wide
code-creation,BytecodeHandler,0,71355,0x7ff64c421580,736,Negate.Wide
code-creation,BytecodeHandler,0,71360,0x7ff64c421880,612,BitwiseNot.Wide
code-creation,BytecodeHandler,0,71364,0x7ff64c421b00,128,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,71370,0x7ff64c421bc0,120,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,71375,0x7ff64c421c40,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,71380,0x7ff64c421c80,384,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,71386,0x7ff64c421e40,1108,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,71391,0x7ff64c4222c0,1108,CallProperty.Wide
code-creation,BytecodeHandler,0,71396,0x7ff64c422740,1036,CallProperty0.Wide
code-creation,BytecodeHandler,0,71401,0x7ff64c422b80,1048,CallProperty1.Wide
code-creation,BytecodeHandler,0,71406,0x7ff64c422fc0,1060,CallProperty2.Wide
code-creation,BytecodeHandler,0,71411,0x7ff64c423400,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,71416,0x7ff64c423800,1040,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,71421,0x7ff64c423c40,1052,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,71427,0x7ff64c424080,1068,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,71432,0x7ff64c4244c0,1108,CallWithSpread.Wide
code-creation,BytecodeHandler,0,71437,0x7ff64c424940,132,CallRuntime.Wide
code-creation,BytecodeHandler,0,71442,0x7ff64c424a00,160,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,71447,0x7ff64c424ac0,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,71452,0x7ff64c424b40,1376,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,71458,0x7ff64c4250c0,1032,Construct.Wide
code-creation,BytecodeHandler,0,71463,0x7ff64c425500,444,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,71468,0x7ff64c4256c0,2256,TestEqual.Wide
code-creation,BytecodeHandler,0,71473,0x7ff64c425fc0,1336,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,71563,0x7ff64c426500,1816,TestLessThan.Wide
code-creation,BytecodeHandler,0,71570,0x7ff64c426c40,1816,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,71575,0x7ff64c427380,1816,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,71581,0x7ff64c427ac0,1816,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,71586,0x7ff64c428200,888,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,71591,0x7ff64c428580,156,TestIn.Wide
code-creation,BytecodeHandler,0,71595,0x7ff64c428640,216,ToNumber.Wide
code-creation,BytecodeHandler,0,71600,0x7ff64c428740,240,ToNumeric.Wide
code-creation,BytecodeHandler,0,71605,0x7ff64c428840,120,ToObject.Wide
code-creation,BytecodeHandler,0,71610,0x7ff64c4288c0,400,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,71615,0x7ff64c428a80,1580,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,71620,0x7ff64c4290c0,780,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,71625,0x7ff64c429400,2504,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,71631,0x7ff64c429e00,176,CloneObject.Wide
code-creation,BytecodeHandler,0,71636,0x7ff64c429ec0,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,71641,0x7ff64c429f80,332,CreateClosure.Wide
code-creation,BytecodeHandler,0,71657,0x7ff64c42a100,120,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,71662,0x7ff64c42a180,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,71667,0x7ff64c42a240,348,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,71673,0x7ff64c42a3c0,348,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,71678,0x7ff64c42a540,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,71683,0x7ff64c42a600,1180,JumpLoop.Wide
code-creation,BytecodeHandler,0,71687,0x7ff64c42aac0,24,Jump.Wide
code-creation,BytecodeHandler,0,71692,0x7ff64c42ab00,32,JumpConstant.Wide
code-creation,BytecodeHandler,0,71697,0x7ff64c42ab40,56,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,71702,0x7ff64c42ab80,56,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,71708,0x7ff64c42abc0,56,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,71713,0x7ff64c42ac00,56,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,71719,0x7ff64c42ac40,64,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,71724,0x7ff64c42acc0,56,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,71729,0x7ff64c42ad00,56,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,71734,0x7ff64c42ad40,68,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,71740,0x7ff64c42adc0,136,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,71745,0x7ff64c42ae80,136,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,71751,0x7ff64c42af40,124,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,71756,0x7ff64c42afc0,124,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,71761,0x7ff64c42b040,48,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,71766,0x7ff64c42b080,48,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,71771,0x7ff64c42b0c0,48,JumpIfNull.Wide
code-creation,BytecodeHandler,0,71776,0x7ff64c42b100,48,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,71781,0x7ff64c42b140,48,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,71786,0x7ff64c42b180,48,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,71791,0x7ff64c42b1c0,56,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,71796,0x7ff64c42b200,56,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,71802,0x7ff64c42b240,84,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,71807,0x7ff64c42b2c0,480,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,71812,0x7ff64c42b4c0,240,ForInPrepare.Wide
code-creation,BytecodeHandler,0,71817,0x7ff64c42b5c0,64,ForInContinue.Wide
code-creation,BytecodeHandler,0,71822,0x7ff64c42b640,256,ForInNext.Wide
code-creation,BytecodeHandler,0,71826,0x7ff64c42b780,48,ForInStep.Wide
code-creation,BytecodeHandler,0,71831,0x7ff64c42b7c0,160,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,71837,0x7ff64c42b880,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,71855,0x7ff64c42b940,104,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,71861,0x7ff64c42b9c0,532,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,71866,0x7ff64c42bc00,152,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,71871,0x7ff64c42bcc0,168,GetIterator.Wide
code-creation,BytecodeHandler,0,71876,0x7ff64c42bd80,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,71881,0x7ff64c42be40,56,Abort.Wide
code-creation,BytecodeHandler,0,71886,0x7ff64c42be80,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,71891,0x7ff64c42bf00,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,71896,0x7ff64c42bf80,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,71901,0x7ff64c42c000,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,71906,0x7ff64c42c080,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,71911,0x7ff64c42c100,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,71917,0x7ff64c42c180,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,71922,0x7ff64c42c1c0,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,71927,0x7ff64c42c200,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,71932,0x7ff64c42c240,116,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,71937,0x7ff64c42c2c0,116,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,71943,0x7ff64c42c340,44,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,71949,0x7ff64c42c380,44,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,71954,0x7ff64c42c3c0,32,Star.ExtraWide
code-creation,BytecodeHandler,0,71959,0x7ff64c42c400,44,Mov.ExtraWide
code-creation,BytecodeHandler,0,71964,0x7ff64c42c440,40,PushContext.ExtraWide
code-creation,BytecodeHandler,0,71969,0x7ff64c42c480,36,PopContext.ExtraWide
code-creation,BytecodeHandler,0,71974,0x7ff64c42c4c0,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,71980,0x7ff64c42c500,4284,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,71985,0x7ff64c42d5c0,4208,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,71994,0x7ff64c42e640,164,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,71999,0x7ff64c42e700,184,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,72004,0x7ff64c42e7c0,112,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,72009,0x7ff64c42e840,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,72014,0x7ff64c42e900,296,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,72020,0x7ff64c42ea40,4504,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,72025,0x7ff64c42fc00,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,72031,0x7ff64c42fcc0,296,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,72037,0x7ff64c42fe00,4420,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,72043,0x7ff64c430f80,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,72048,0x7ff64c431080,4940,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,72058,0x7ff64c432400,188,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,72064,0x7ff64c4324c0,156,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,72069,0x7ff64c432580,192,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,72074,0x7ff64c432680,312,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,72079,0x7ff64c4327c0,176,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,72085,0x7ff64c432880,176,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,72090,0x7ff64c432940,168,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,72096,0x7ff64c432a00,184,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,72101,0x7ff64c432ac0,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,72106,0x7ff64c432b80,200,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,72112,0x7ff64c432c80,1416,Add.ExtraWide
code-creation,BytecodeHandler,0,72117,0x7ff64c433240,1388,Sub.ExtraWide
code-creation,BytecodeHandler,0,72123,0x7ff64c4337c0,1508,Mul.ExtraWide
code-creation,BytecodeHandler,0,72128,0x7ff64c433dc0,1612,Div.ExtraWide
code-creation,BytecodeHandler,0,72133,0x7ff64c434440,1560,Mod.ExtraWide
code-creation,BytecodeHandler,0,72138,0x7ff64c434a80,948,Exp.ExtraWide
code-creation,BytecodeHandler,0,72143,0x7ff64c434e40,2020,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,72148,0x7ff64c435640,2020,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,72153,0x7ff64c435e40,2020,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,72158,0x7ff64c436640,1500,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,72163,0x7ff64c436c40,1500,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,72168,0x7ff64c437240,1556,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,72174,0x7ff64c437880,1304,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,72179,0x7ff64c437dc0,1280,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,72184,0x7ff64c438300,1392,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,72189,0x7ff64c438880,1528,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,72194,0x7ff64c438e80,1392,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,72199,0x7ff64c439400,812,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,72204,0x7ff64c439740,572,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,72209,0x7ff64c439980,572,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,72214,0x7ff64c439bc0,572,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,72220,0x7ff64c439e00,592,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,72281,0x7ff64c43a080,580,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,72286,0x7ff64c43a300,864,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,72292,0x7ff64c43a680,712,Inc.ExtraWide
code-creation,BytecodeHandler,0,72297,0x7ff64c43a980,712,Dec.ExtraWide
code-creation,BytecodeHandler,0,72302,0x7ff64c43ac80,736,Negate.ExtraWide
code-creation,BytecodeHandler,0,72307,0x7ff64c43af80,612,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,72313,0x7ff64c43b200,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,72319,0x7ff64c43b280,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,72324,0x7ff64c43b300,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,72330,0x7ff64c43b340,380,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,72336,0x7ff64c43b4c0,1108,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,72342,0x7ff64c43b940,1108,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,72347,0x7ff64c43bdc0,1036,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,72353,0x7ff64c43c200,1048,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,72358,0x7ff64c43c640,1056,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,72364,0x7ff64c43ca80,1020,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,72370,0x7ff64c43ce80,1040,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,72375,0x7ff64c43d2c0,1052,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,72381,0x7ff64c43d700,1068,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,72387,0x7ff64c43db40,1108,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,72392,0x7ff64c43dfc0,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,72398,0x7ff64c43e080,156,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,72404,0x7ff64c43e140,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,72409,0x7ff64c43e1c0,1376,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,72415,0x7ff64c43e740,1028,Construct.ExtraWide
code-creation,BytecodeHandler,0,72420,0x7ff64c43eb80,440,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,72426,0x7ff64c43ed40,2256,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,72431,0x7ff64c43f640,1336,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,72437,0x7ff64c43fb80,1816,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,72442,0x7ff64c4402c0,1816,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,72448,0x7ff64c440a00,1816,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,72455,0x7ff64c441140,1816,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,72462,0x7ff64c441880,888,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,72467,0x7ff64c441c00,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,72472,0x7ff64c441cc0,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,72478,0x7ff64c441dc0,240,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,72483,0x7ff64c441ec0,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,72488,0x7ff64c441f40,396,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,72494,0x7ff64c442100,1580,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,72500,0x7ff64c442740,780,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,72505,0x7ff64c442a80,2504,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,72511,0x7ff64c443480,172,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,72517,0x7ff64c443540,164,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,72522,0x7ff64c443600,328,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,72528,0x7ff64c443780,120,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,72533,0x7ff64c443800,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,72539,0x7ff64c4438c0,348,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,72545,0x7ff64c443a40,348,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,72550,0x7ff64c443bc0,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,72556,0x7ff64c443c80,1176,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,72561,0x7ff64c444140,20,Jump.ExtraWide
code-creation,BytecodeHandler,0,72566,0x7ff64c444180,32,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,72572,0x7ff64c4441c0,56,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,72577,0x7ff64c444200,56,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,72583,0x7ff64c444240,56,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,72589,0x7ff64c444280,56,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,72596,0x7ff64c4442c0,64,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,72602,0x7ff64c444340,56,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,72607,0x7ff64c444380,56,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,72613,0x7ff64c4443c0,68,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,72619,0x7ff64c444440,136,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,72625,0x7ff64c444500,136,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,72631,0x7ff64c4445c0,124,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,72637,0x7ff64c444640,124,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,72660,0x7ff64c4446c0,44,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,72667,0x7ff64c444700,44,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,72672,0x7ff64c444740,44,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,72678,0x7ff64c444780,44,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,72683,0x7ff64c4447c0,44,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,72689,0x7ff64c444800,44,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,72694,0x7ff64c444840,56,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,72700,0x7ff64c444880,56,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,72705,0x7ff64c4448c0,80,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,72711,0x7ff64c444940,480,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,72717,0x7ff64c444b40,240,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,72723,0x7ff64c444c40,64,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,72728,0x7ff64c444cc0,252,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,72734,0x7ff64c444dc0,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,72739,0x7ff64c444e00,160,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,72747,0x7ff64c444ec0,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,72753,0x7ff64c444f80,100,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,72759,0x7ff64c445000,532,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,72764,0x7ff64c445240,152,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,72770,0x7ff64c445300,164,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,72776,0x7ff64c4453c0,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,72781,0x7ff64c445440,56,Abort.ExtraWide
new,MemoryChunk,0x1bc2d80000,262144
tick,0x7ff6acc106d4,73801,0,0x0,5
new,MemoryChunk,0x1fe174c0000,262144
new,MemoryChunk,0x2d346780000,262144
new,MemoryChunk,0x11336000000,262144
new,MemoryChunk,0x33d09c80000,262144
code-creation,Eval,10,78141,0x33d09cbd714,5, node:internal/main/run_main_module:1:1,0x33d09cbd5c0,~
script-source,80,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst { RegExpPrototypeExec } = primordials;\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x2C\x0d\n  markBootstrapComplete\x2C\x0d\n} = require('internal/process/pre_execution');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst mainEntry = prepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Necessary to reset RegExp statics before user code runs.\x0d\nRegExpPrototypeExec(/^/\x2C '');\x0d\n\x0d\nif (getOptionValue('--experimental-default-type') === 'module') {\x0d\n  require('internal/modules/run_main').executeUserEntryPoint(mainEntry);\x0d\n} else {\x0d\n  /**\x0d\n   * To support legacy monkey-patching of `Module.runMain`\x2C we call `runMain` here to have the CommonJS loader begin\x0d\n   * the execution of the main entry point\x2C even if the ESM loader immediately takes over because the main entry is an\x0d\n   * ES module or one of the other opt-in conditions (such as the use of `--import`) are met. Users can monkey-patch\x0d\n   * before the main entry point is loaded by doing so via scripts loaded through `--require`. This monkey-patchability\x0d\n   * is undesirable and is removed in `--experimental-default-type=module` mode.\x0d\n   */\x0d\n  require('internal/modules/cjs/loader').Module.runMain(mainEntry);\x0d\n}\x0d\n
code-source-info,0x33d09cbd714,80,0,1211,C0O0C4O1211,,
code-creation,JS,10,78222,0x33d09cbd804,120, node:internal/main/run_main_module:1:1,0x33d09cbd688,~
code-source-info,0x33d09cbd804,80,0,1211,C0O25C5O135C8O135C13O76C18O107C23O206C26O206C31O187C36O256C38O256C43O293C46O382C55O382C60O415C63O419C70O465C75O484C78O484C83O520C88O521C95O1141C98O1141C103O1179C108O1186C113O1187C119O1210,,
code-creation,JS,10,78615,0x33d09cbdd6c,45,prepareMainThreadExecution node:internal/process/pre_execution:54:36,0x22671cb9468,~
script-source,67,node:internal/process/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Date\x2C\x0d\n  DatePrototypeGetDate\x2C\x0d\n  DatePrototypeGetFullYear\x2C\x0d\n  DatePrototypeGetHours\x2C\x0d\n  DatePrototypeGetMinutes\x2C\x0d\n  DatePrototypeGetMonth\x2C\x0d\n  DatePrototypeGetSeconds\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolDispose\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  refreshOptions\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  exposeInterface\x2C\x0d\n  exposeLazyInterfaces\x2C\x0d\n  defineReplaceableLazyAttribute\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\x0d\n  ERR_NO_CRYPTO\x2C\x0d\n  ERR_MISSING_OPTION\x2C\x0d\n  ERR_ACCESS_DENIED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\x0d\n  return prepareExecution({\x0d\n    expandArgv1\x2C\x0d\n    initializeModules\x2C\x0d\n    isMainThread: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareWorkerThreadExecution() {\x0d\n  prepareExecution({\x0d\n    expandArgv1: false\x2C\x0d\n    initializeModules: false\x2C  // Will need to initialize it after policy setup\x0d\n    isMainThread: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareExecution(options) {\x0d\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\x0d\n\x0d\n  refreshRuntimeOptions();\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object and get the resolved main entry point.\x0d\n  const mainEntry = patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupInspectorHooks();\x0d\n  setupNavigator();\x0d\n  setupWarningHandler();\x0d\n  setupUndici();\x0d\n  setupWebCrypto();\x0d\n  setupCustomEvent();\x0d\n  setupCodeCoverage();\x0d\n  setupDebugEnv();\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n\x0d\n  // Load permission system API\x0d\n  initializePermission();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n\x0d\n  require('internal/dns/utils').initializeDns();\x0d\n\x0d\n  setupSymbolDisposePolyfill();\x0d\n\x0d\n  if (isMainThread) {\x0d\n    assert(internalBinding('worker').isMainThread);\x0d\n    // Worker threads will get the manifest in the message handler.\x0d\n    const policy = readPolicyFromDisk();\x0d\n    if (policy) {\x0d\n      require('internal/process/policy')\x0d\n        .setup(policy.manifestSrc\x2C policy.manifestURL);\x0d\n    }\x0d\n\x0d\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n    setupStacktracePrinterOnSigint();\x0d\n    initializeReportSignalHandlers();  // Main-thread-only.\x0d\n    initializeHeapSnapshotSignalHandlers();\x0d\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n    // spawned by our child_process module\x2C then initialize IPC.\x0d\n    // This attaches some internal event listeners and creates:\x0d\n    // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n    // process.disconnect().\x0d\n    setupChildProcessIpcChannel();\x0d\n    // If this is a worker in cluster mode\x2C start up the communication\x0d\n    // channel. This needs to be done before any user code gets executed\x0d\n    // (including preload modules).\x0d\n    initializeClusterIPC();\x0d\n\x0d\n    // TODO(joyeecheung): do this for worker threads as well.\x0d\n    require('internal/v8/startup_snapshot').runDeserializeCallbacks();\x0d\n  } else {\x0d\n    assert(!internalBinding('worker').isMainThread);\x0d\n    // The setup should be called in LOAD_SCRIPT message handler.\x0d\n    assert(!initializeModules);\x0d\n  }\x0d\n\x0d\n  if (initializeModules) {\x0d\n    setupUserModules();\x0d\n  }\x0d\n\x0d\n  return mainEntry;\x0d\n}\x0d\n\x0d\nfunction setupSymbolDisposePolyfill() {\x0d\n  // TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\x0d\n  // eslint-disable-next-line node-core/prefer-primordials\x0d\n  if (typeof Symbol.dispose !== 'symbol') {\x0d\n    ObjectDefineProperty(Symbol\x2C 'dispose'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: SymbolDispose\x2C\x0d\n      writable: false\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line node-core/prefer-primordials\x0d\n  if (typeof Symbol.asyncDispose !== 'symbol') {\x0d\n    ObjectDefineProperty(Symbol\x2C 'asyncDispose'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: SymbolAsyncDispose\x2C\x0d\n      writable: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupUserModules(isLoaderWorker = false) {\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader(isLoaderWorker);\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  // Loader workers are responsible for doing this themselves.\x0d\n  if (isLoaderWorker) {\x0d\n    return;\x0d\n  }\x0d\n  loadPreloadModules();\x0d\n  // Need to be done after --require setup.\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction refreshRuntimeOptions() {\x0d\n  refreshOptions();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Patch the process object with legacy properties and normalizations.\x0d\n * Replace `process.argv[0]` with `process.execPath`\x2C preserving the original `argv[0]` value as `process.argv0`.\x0d\n * Replace `process.argv[1]` with the resolved absolute file path of the entry point\x2C if found.\x0d\n * @param {boolean} expandArgv1 - Whether to replace `process.argv[1]` with the resolved absolute file path of\x0d\n * the main entry point.\x0d\n */\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  // Since we replace process.argv[0] below\x2C preserve the original value in case the user needs it.\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    // Only set it to true during snapshot building.\x0d\n    configurable: isBuildingSnapshot()\x2C\x0d\n    value: process.argv[0]\x2C\x0d\n  });\x0d\n\x0d\n  process.exitCode = undefined;\x0d\n  process._exiting = false;\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  /** @type {string} */\x0d\n  let mainEntry;\x0d\n  // If requested\x2C update process.argv[1] to replace whatever the user provided with the resolved absolute file path of\x0d\n  // the entry point.\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      mainEntry = path.resolve(process.argv[1]);\x0d\n      process.argv[1] = mainEntry;\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // We need to initialize the global console here again with process.stdout\x0d\n  // and friends for snapshot deserialization.\x0d\n  const globalConsole = require('internal/console/global');\x0d\n  const { initializeGlobalConsole } = require('internal/console/constructor');\x0d\n  initializeGlobalConsole(globalConsole);\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n\x0d\n  return mainEntry;\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x2C\x0d\n    resetForSerialization\x2C\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n\x0d\n    // The code above would add the listener back during deserialization\x2C\x0d\n    // if applicable.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      addSerializeCallback(() => {\x0d\n        process.removeListener('warning'\x2C onWarning);\x0d\n        resetForSerialization();\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\n// https://websockets.spec.whatwg.org/\x0d\nfunction setupUndici() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let undici;\x0d\n  function lazyUndici() {\x0d\n    if (undici) {\x0d\n      return undici;\x0d\n    }\x0d\n\x0d\n    undici = require('internal/deps/undici/undici');\x0d\n    return undici;\x0d\n  }\x0d\n\x0d\n  function lazyInterface(name) {\x0d\n    return {\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      get() {\x0d\n        return lazyUndici()[name];\x0d\n      }\x2C\x0d\n      set(value) {\x0d\n        exposeInterface(globalThis\x2C name\x2C value);\x0d\n      }\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  if (!getOptionValue('--no-experimental-fetch')) {\x0d\n    // Fetch is meant to return a Promise\x2C but not be async.\x0d\n    function fetch(input\x2C init = undefined) {\x0d\n      return lazyUndici().fetch(input\x2C init);\x0d\n    }\x0d\n\x0d\n    defineOperation(globalThis\x2C 'fetch'\x2C fetch);\x0d\n\x0d\n    ObjectDefineProperties(globalThis\x2C {\x0d\n      FormData: lazyInterface('FormData')\x2C\x0d\n      Headers: lazyInterface('Headers')\x2C\x0d\n      Request: lazyInterface('Request')\x2C\x0d\n      Response: lazyInterface('Response')\x2C\x0d\n    });\x0d\n\x0d\n    // The WebAssembly Web API: https://webassembly.github.io/spec/web-api\x0d\n    internalBinding('wasm_web_api').setImplementation((streamState\x2C source) => {\x0d\n      require('internal/wasm_web_api').wasmStreamingCallback(streamState\x2C source);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (getOptionValue('--experimental-websocket')) {\x0d\n    ObjectDefineProperties(globalThis\x2C {\x0d\n      WebSocket: lazyInterface('WebSocket')\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupNavigator() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals ||\x0d\n      getOptionValue('--no-experimental-global-navigator')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/system-state.html#the-navigator-object\x0d\n  exposeLazyInterfaces(globalThis\x2C 'internal/navigator'\x2C ['Navigator']);\x0d\n  defineReplaceableLazyAttribute(globalThis\x2C 'internal/navigator'\x2C ['navigator']\x2C false);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals ||\x0d\n      getOptionValue('--no-experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    defineReplaceableLazyAttribute(\x0d\n      globalThis\x2C\x0d\n      'internal/crypto/webcrypto'\x2C\x0d\n      ['crypto']\x2C\x0d\n      false\x2C\x0d\n      function cryptoThisCheck() {\x0d\n        if (this !== globalThis && this != null)\x0d\n          throw new ERR_INVALID_THIS(\x0d\n            'nullish or must be the global object');\x0d\n      }\x2C\x0d\n    );\x0d\n    exposeLazyInterfaces(\x0d\n      globalThis\x2C 'internal/crypto/webcrypto'\x2C\x0d\n      ['Crypto'\x2C 'CryptoKey'\x2C 'SubtleCrypto']\x2C\x0d\n    );\x0d\n  } else {\x0d\n    ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                         { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\x0d\n                           get crypto() {\x0d\n                             throw new ERR_NO_CRYPTO();\x0d\n                           }\x2C\x0d\n                         }\x2C 'crypto') });\x0d\n\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupCodeCoverage() {\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd. Don't do anything if the\x0d\n  // --experimental-test-coverage flag is present\x2C as the test runner will\x0d\n  // handle coverage.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !getOptionValue('--experimental-test-coverage')) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(daeyeon): move this to internal/bootstrap/web/* when the CLI flag is\x0d\n//                removed.\x0d\nfunction setupCustomEvent() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals ||\x0d\n      getOptionValue('--no-experimental-global-customevent')) {\x0d\n    return;\x0d\n  }\x0d\n  const { CustomEvent } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      const { report } = require('internal/process/report');\x0d\n      return report;\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/realm').BuiltinModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  if (getOptionValue('--report-on-signal')) {\x0d\n    const { addSignalHandler } = require('internal/process/report');\x0d\n    addSignalHandler();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n  const diagnosticDir = getOptionValue('--diagnostic-dir');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  function doWriteHeapSnapshot() {\x0d\n    const heapSnapshotFilename = getHeapSnapshotFilename(diagnosticDir);\x0d\n    writeHeapSnapshot(heapSnapshotFilename);\x0d\n  }\x0d\n  process.on(signal\x2C doWriteHeapSnapshot);\x0d\n\x0d\n  // The code above would add the listener back during deserialization\x2C\x0d\n  // if applicable.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    addSerializeCallback(() => {\x0d\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x2C\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePermission() {\x0d\n  const experimentalPermission = getOptionValue('--experimental-permission');\x0d\n  if (experimentalPermission) {\x0d\n    process.binding = function binding(_module) {\x0d\n      throw new ERR_ACCESS_DENIED('process.binding');\x0d\n    };\x0d\n    process.emitWarning('Permission is an experimental feature'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { has\x2C deny } = require('internal/process/permission');\x0d\n    const warnFlags = [\x0d\n      '--allow-child-process'\x2C\x0d\n      '--allow-worker'\x2C\x0d\n    ];\x0d\n    for (const flag of warnFlags) {\x0d\n      if (getOptionValue(flag)) {\x0d\n        process.emitWarning(\x0d\n          `The flag ${flag} must be used with extreme caution. ` +\x0d\n        'It could invalidate the permission model.'\x2C 'SecurityWarning');\x0d\n      }\x0d\n    }\x0d\n    const warnCommaFlags = [\x0d\n      '--allow-fs-read'\x2C\x0d\n      '--allow-fs-write'\x2C\x0d\n    ];\x0d\n    for (const flag of warnCommaFlags) {\x0d\n      const value = getOptionValue(flag);\x0d\n      if (value.length === 1 && value[0].includes('\x2C')) {\x0d\n        process.emitWarning(\x0d\n          `The ${flag} CLI flag has changed. ` +\x0d\n        'Passing a comma-separated list of paths is no longer valid. ' +\x0d\n        'Documentation can be found at ' +\x0d\n        'https://nodejs.org/api/permissions.html#file-system-permissions'\x2C\x0d\n          'Warning'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ObjectDefineProperty(process\x2C 'permission'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x2C\x0d\n      value: {\x0d\n        has\x2C\x0d\n        deny\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  } else {\x0d\n    const availablePermissionFlags = [\x0d\n      '--allow-fs-read'\x2C\x0d\n      '--allow-fs-write'\x2C\x0d\n      '--allow-child-process'\x2C\x0d\n      '--allow-worker'\x2C\x0d\n    ];\x0d\n    ArrayPrototypeForEach(availablePermissionFlags\x2C (flag) => {\x0d\n      const value = getOptionValue(flag);\x0d\n      if (value.length) {\x0d\n        throw new ERR_MISSING_OPTION('--experimental-permission');\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPolicyFromDisk() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = pathToFileURL(experimentalPolicy);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x2C\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    return {\x0d\n      manifestSrc: src\x2C manifestURL: manifestURL.href\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const { initializeCJS } = require('internal/modules/cjs/loader');\x0d\n  initializeCJS();\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader(isLoaderWorker) {\x0d\n  const { initializeESM } = require('internal/modules/esm/utils');\x0d\n  initializeESM(isLoaderWorker);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n  } = require('internal/source_map/source_map_cache');\x0d\n  setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x2C\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markBootstrapComplete() {\x0d\n  internalBinding('performance').markBootstrapComplete();\x0d\n}\x0d\n\x0d\n// Sequence number for diagnostic filenames\x0d\nlet sequenceNumOfheapSnapshot = 0;\x0d\n\x0d\n// To generate the HeapSnapshotFilename while using custom diagnosticDir\x0d\nfunction getHeapSnapshotFilename(diagnosticDir) {\x0d\n  if (!diagnosticDir) return undefined;\x0d\n\x0d\n  const date = new Date();\x0d\n\x0d\n  const year = DatePrototypeGetFullYear(date);\x0d\n  const month = String(DatePrototypeGetMonth(date) + 1).padStart(2\x2C '0');\x0d\n  const day = String(DatePrototypeGetDate(date)).padStart(2\x2C '0');\x0d\n  const hours = String(DatePrototypeGetHours(date)).padStart(2\x2C '0');\x0d\n  const minutes = String(DatePrototypeGetMinutes(date)).padStart(2\x2C '0');\x0d\n  const seconds = String(DatePrototypeGetSeconds(date)).padStart(2\x2C '0');\x0d\n\x0d\n  const dateString = `${year}${month}${day}`;\x0d\n  const timeString = `${hours}${minutes}${seconds}`;\x0d\n  const pid = process.pid;\x0d\n  const threadId = internalBinding('worker').threadId;\x0d\n  const fileSequence = (++sequenceNumOfheapSnapshot).toString().padStart(3\x2C '0');\x0d\n\x0d\n  return `${diagnosticDir}/Heap.${dateString}.${timeString}.${pid}.${threadId}.${fileSequence}.heapsnapshot`;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupUserModules\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  prepareWorkerThreadExecution\x2C\x0d\n  markBootstrapComplete\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n};\x0d\n
code-source-info,0x33d09cbdd6c,67,1179,1334,C20O1232C30O1263C36O1281C40O1239C44O1331,,
code-creation,JS,10,79782,0x33d09cbf9e4,313,prepareExecution node:internal/process/pre_execution:70:26,0x22671cb99c0,~
code-source-info,0x33d09cbf9e
code-creation,JS,10,79876,0x33d09cbfcdc,10,refreshRuntimeOptions node:internal/process/pre_execution:178:31,0x22671cb9ac8,~
code-source-info,0x33d09cbfcdc,67,5068,5096,C0O5076C5O5076C9O5095,,
new,MemoryChunk,0x121eb100000,262144
code-creation,JS,10,79956,0x33d09cbfdc4,22,refreshOptions node:internal/options:39:24,0x22671c832b8,~
script-source,17,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction refreshOptions() {\x0d\n  optionsMap = undefined;\x0d\n  aliasesMap = undefined;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x2C\x0d\n};\x0d\n
code-source-info,0x33d09cbfdc4,17,940,1001,C0O948C4O959C10O975C14O986C21O1000,,
code-creation,JS,10,80159,0x121eb101454,19,reconnectZeroFillToggle node:internal/buffer:1083:33,0x22671c94ee0,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x2C\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    untransferable_object_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  obj[untransferable_object_private_symbol] = true;\x0d\n}\x0d\n\x0d\n// This simply checks if the object is marked as untransferable and doesn't\x0d\n// check whether we are able to transfer it.\x0d\nfunction isMarkedAsUntransferable(obj) {\x0d\n  if (obj == null)\x0d\n    return false;\x0d\n  // Private symbols are not inherited.\x0d\n  return obj[untransferable_object_private_symbol] !== undefined;\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  isMarkedAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x2C\x0d\n};\x0d\n
code-source-info,0x121eb101454,25,32104,32146,C0O32112C5O32123C11O32121C18O32145,,
code-creation,JS,10,81693,0x121eb103d94,462,patchProcessObject node:internal/process/pre_execution:189:28,0x22671cb9b20,~
code-source-info,0x121eb103d
code-creation,JS,10,81978,0x121eb104394,132,set node:internal/bootstrap/node:116:8,0xfca8d3a3c8,~
script-source,12,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `Realm::BootstrapRealm()` in `src/node_realm.cc`\x2C\x0d\n// and is responsible for setting up Node.js core before main scripts\x0d\n// under `lib/internal/main/` are executed.\x0d\n//\x0d\n// By default\x2C Node.js binaries come with an embedded V8 startup snapshot\x0d\n// that is generated at build-time with a `node_mksnapshot` executable.\x0d\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\x0d\n// from `src/node_snapshotable.cc`.\x0d\n// This snapshot captures the V8 heap initialized by scripts under\x0d\n// `lib/internal/bootstrap/`\x2C including this file. When initializing the main\x0d\n// thread\x2C Node.js deserializes the heap from the snapshot\x2C instead of actually\x0d\n// running this script and others in `lib/internal/bootstrap/`. To disable this\x0d\n// behavior\x2C pass `--no-node-snapshot` when starting the process so that\x0d\n// Node.js actually runs this script to initialize the heap.\x0d\n//\x0d\n// This script is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\x0d\n// query any run-time states (e.g. command line arguments\x2C environment\x0d\n// variables) when being executed - functions in this script that are invoked\x0d\n// at a later time can\x2C however\x2C query those states lazily.\x0d\n// The majority of the code here focuses on setting up the global object and\x0d\n// the process object in a synchronous\x2C environment-independent manner.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/per_context/domexception.js`: implementation of the\x0d\n//   `DOMException` class.\x0d\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\x0d\n//   `MessagePort` implementation.\x0d\n// - `lib/internal/bootstrap/realm.js`: this sets up internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `BuiltinModule`\x2C and per-realm internal states\x0d\n//   and bindings\x2C including `prepare_stack_trace_callback`.\x0d\n//\x0d\n// The initialization done in this script is included in both the main thread\x0d\n// and the worker threads. After this\x2C further initialization is done based\x0d\n// on the configuration of the Node.js instance by executing the scripts in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by `BuiltinLoader::CompileAndCall()`.\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  constants: {\x0d\n    kExitCode\x2C\x0d\n    kExiting\x2C\x0d\n    kHasExitCode\x2C\x0d\n  }\x2C\x0d\n  privateSymbols: {\x0d\n    exit_info_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\n\x0d\n// process._exiting and process.exitCode\x0d\n{\x0d\n  const fields = process[exit_info_private_symbol];\x0d\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return fields[kExiting] === 1;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      fields[kExiting] = value ? 1 : 0;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  let exitCode;\x0d\n  ObjectDefineProperty(process\x2C 'exitCode'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return exitCode;\x0d\n    }\x2C\x0d\n    set(code) {\x0d\n      if (code !== null && code !== undefined) {\x0d\n        let value = code;\x0d\n        if (typeof code === 'string' && code !== '' &&\x0d\n          NumberIsNaN((value = Number(code)))) {\x0d\n          value = code;\x0d\n        }\x0d\n        validateInteger(value\x2C 'code');\x0d\n        fields[kExitCode] = value;\x0d\n        fields[kHasExitCode] = 1;\x0d\n      } else {\x0d\n        fields[kHasExitCode] = 0;\x0d\n      }\x0d\n      exitCode = code;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n  });\x0d\n}\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst binding = internalBinding('builtins');\x0d\n\x0d\nconst processConfig = JSONParse(binding.config\x2C (_key\x2C value) => {\x0d\n  // The `reviver` argument of the JSONParse method will visit all the values of\x0d\n  // the parsed config\x2C including the "root" object\x2C so there is no need to\x0d\n  // explicitly freeze the config outside of this method\x0d\n  return ObjectFreeze(value);\x0d\n});\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  value: processConfig\x2C\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n  process.getActiveResourcesInfo = rawMethods.getActiveResourcesInfo;\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.constrainedMemory = rawMethods.constrainedMemory;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n} = require('internal/process/task_queues');\x0d\nconst timers = require('timers');\x0d\n// Non-standard extensions:\x0d\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x2C\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because --no-node-snapshot disables the\x0d\n  // code cache even if the binary is built with embedded code cache.\x0d\n  get cached_builtins() {\x0d\n    return binding.hasCachedBuiltins();\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x2C\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x2C\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n{\x0d\n  const {\x0d\n    getSourceMapsEnabled\x2C\x0d\n    setSourceMapsEnabled\x2C\x0d\n    maybeCacheGeneratedSourceMap\x2C\x0d\n  } = require('internal/source_map/source_map_cache');\x0d\n  const {\x0d\n    setMaybeCacheGeneratedSourceMap\x2C\x0d\n  } = internalBinding('errors');\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'sourceMapsEnabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return getSourceMapsEnabled();\x0d\n    }\x2C\x0d\n  });\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n  // The C++ land calls back to maybeCacheGeneratedSourceMap()\x0d\n  // when code is generated by user with eval() or new Function()\x0d\n  // to cache the source maps from the evaluated code\x2C if any.\x0d\n  setMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x2C\x0d\n  });\x0d\n\x0d\n  // Create global.process as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  globalThis.global = globalThis;\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n\x0d\n  // Create global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x121eb104394,12,4246,4676,C0O4262C8O4326C11O4341C19O4378C28O4399C35O4420C38O4420C43O4399C49O4449C54O4483C64O4483C69O4524C78O4531C83O4542C87O4560C94O4567C99O4581C105O4611C114O4618C118O4632C122O4653C124O4662C131O4675,,
code-creation,JS,10,83004,0x121eb1053ec,834,resolve node:path:162:10,0x22671c9a9d0,~
script-source,34,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction formatExt(ext) {\x0d\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C `paths[${i}]`);\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x2C\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n      validateString(path\x2C `paths[${i}]`);\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x2C\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x121eb1053ec
code-creation,JS,10,85114,0x121eb108a14,17,isPathSeparator node:path:52:25,0x22671c9a5c8,~
code-source-info,0x121eb108a14,34,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,JS,10,85154,0x121eb108b14,35,isWindowsDeviceRoot node:path:60:29,0x22671c9a870,~
code-source-info,0x121eb108b14,34,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,JS,10,85211,0x121eb108c2c,31,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:136:20,0x22671cbd268,~
script-source,73,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x2C\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x2C\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id >>>= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nif (isBuildingSnapshot()) {\x0d\n  addSerializeCallback(() => {\x0d\n    cachedCwd = '';\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x121eb108c2c,73,3695,3783,C0O3703C7O3717C12O3730C17O3753C22O3753C26O3740C28O3763C30O3780,,
code-creation,JS,10,85496,0x121eb1092ec,438,normalizeString node:path:66:25,0x22671c9a8c8,~
code-source-info,0x121eb1092ec,34,2226,4212,C0O2292C3O2323C5O2345C8O2363C10O2380C12O2399C14O2412C18O2404C23O2445C27O2438C32O2460C37O2467C45O2517C51O2547C53O2571C58O2609C64O2641C66O2661C69O2655C76O2673C83O2713C85O2722C90O2748C97O2755C104O2780C111O2802C114O2837C118O2844C122O2802C130O2853C132O2849C140O2913C144O2920C148O2878C156O2925C161O2960C168O2967C173O3010C178O3010C184O3067C186O3086C191O3111C194O3136C198O3196C211O3202C217O3304C221O3311C228O3317C233O3315C237O3389C240O3417C242O3440C244O3476C250O3483C255O3505C258O3528C260O3564C263O3592C265O3615C267O3658C271O3702C277O3709C287O3718C302O3751C307O3818C313O3825C318O3841C320O3851C324O3863C329O3900C339O3863C357O3936C364O3979C374O3942C380O3997C382O4019C385O4031C389O4052C392O4074C396O4096C398O4109C400O4105C407O4126C412O4143C419O4172C422O2422C427O2386C435O4198C437O4209,,
new,MemoryChunk,0x3c570240000,262144
new,MemoryChunk,0x7ff62c4c0000,262144
code-creation,JS,11,85735,0x7ff62c4c3040,2544,normalizeString node:path:66:25,0x22671c9a8c8,^
code-source-info,0x7ff62c4c3040,34,2226,4212,,,
code-creation,JS,11,85786,0x7ff62c4c3a80,600,requireBuiltin node:internal/bootstrap/realm:414:24,0xfca8d34690,^
script-source,9,node:internal/bootstrap/realm,// This file is executed in every realm that is created by Node.js\x2C including\x0d\n// the context of main thread\x2C worker threads\x2C and ShadowRealms.\x0d\n// Only per-realm internal states and bindings should be bootstrapped in this\x0d\n// file and no globals should be exposed to the user code.\x0d\n//\x0d\n// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_BINDING_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_BINDING_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - BuiltinModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/realm') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n});\x0d\n\x0d\n\x0d\n// processBindingAllowList contains the name of bindings that are allowed\x0d\n// for access via process.binding(). This is used to provide a transition\x0d\n// path for modules that are being moved over to internalBinding.\x0d\n// Certain bindings may not actually correspond to an internalBinding any\x0d\n// more\x2C we just implement them as legacy wrappers instead. See the\x0d\n// legacyWrapperList.\x0d\nconst processBindingAllowList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'natives'\x2C\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// The code bellow assumes that the two lists must not contain any modules\x0d\n// beginning with "internal/".\x0d\n// Modules that can only be imported via the node: scheme.\x0d\nconst schemelessBlockList = new SafeSet([\x0d\n  'test'\x2C\x0d\n  'test/reporters'\x2C\x0d\n]);\x0d\n// Modules that will only be enabled at run time.\x0d\nconst experimentalModuleList = new SafeSet();\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = { __proto__: null };\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (processBindingAllowList.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return requireBuiltin('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Set up internalBinding() in the closure.\x0d\n * @type {import('typings/globals').internalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = { __proto__: null };\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst selfId = 'internal/bootstrap/realm';\x0d\nconst {\x0d\n  builtinIds\x2C\x0d\n  compileFunction\x2C\x0d\n  setInternalLoaders\x2C\x0d\n} = internalBinding('builtins');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\nconst publicBuiltinIds = builtinIds\x0d\n  .filter((id) =>\x0d\n    !StringPrototypeStartsWith(id\x2C 'internal/') &&\x0d\n      !experimentalModuleList.has(id)\x2C\x0d\n  );\x0d\n// Do not expose the loaders to user land even with --expose-internals.\x0d\nconst internalBuiltinIds = builtinIds\x0d\n  .filter((id) => StringPrototypeStartsWith(id\x2C 'internal/') && id !== selfId);\x0d\n\x0d\n// When --expose-internals is on we'll add the internal builtin ids to these.\x0d\nconst canBeRequiredByUsersList = new SafeSet(publicBuiltinIds);\x0d\nconst canBeRequiredByUsersWithoutSchemeList =\x0d\n  new SafeSet(publicBuiltinIds.filter((id) => !schemelessBlockList.has(id)));\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass BuiltinModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C BuiltinModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x2C\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the built-in module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  static allowRequireByUsers(id) {\x0d\n    if (id === selfId) {\x0d\n      // No code because this is an assertion against bugs.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not allow ${id}`);\x0d\n    }\x0d\n    canBeRequiredByUsersList.add(id);\x0d\n    if (!schemelessBlockList.has(id)) {\x0d\n      canBeRequiredByUsersWithoutSchemeList.add(id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (let i = 0; i < internalBuiltinIds.length; ++i) {\x0d\n      BuiltinModule.allowRequireByUsers(internalBuiltinIds[i]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return BuiltinModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    return canBeRequiredByUsersList.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredWithoutScheme(id) {\x0d\n    return canBeRequiredByUsersWithoutSchemeList.has(id);\x0d\n  }\x0d\n\x0d\n  static normalizeRequirableId(id) {\x0d\n    if (StringPrototypeStartsWith(id\x2C 'node:')) {\x0d\n      const normalizedId = StringPrototypeSlice(id\x2C 5);\x0d\n      if (BuiltinModule.canBeRequiredByUsers(normalizedId)) {\x0d\n        return normalizedId;\x0d\n      }\x0d\n    } else if (BuiltinModule.canBeRequiredWithoutScheme(id)) {\x0d\n      return id;\x0d\n    }\x0d\n\x0d\n    return undefined;\x0d\n  }\x0d\n\x0d\n  static isBuiltin(id) {\x0d\n    return BuiltinModule.canBeRequiredWithoutScheme(id) || (\x0d\n      typeof id === 'string' &&\x0d\n        StringPrototypeStartsWith(id\x2C 'node:') &&\x0d\n        BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(id\x2C 5))\x0d\n    );\x0d\n  }\x0d\n\x0d\n  static getCanBeRequiredByUsersWithoutSchemeList() {\x0d\n    return ArrayFrom(canBeRequiredByUsersWithoutSchemeList);\x0d\n  }\x0d\n\x0d\n  static getSchemeOnlyModuleNames() {\x0d\n    return ArrayFrom(schemelessBlockList);\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!BuiltinModule.canBeRequiredByUsers(this.id)) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    // TODO(aduh95): move this to C++\x2C alongside the initialization of the class.\x0d\n    ObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\x0d\n    const url = `node:${this.id}`;\x0d\n    const builtin = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        builtin.syncExports();\x0d\n        this.setExport('default'\x2C builtin.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : requireBuiltin;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      // Arguments must match the parameters specified in\x0d\n      // BuiltinLoader::LookupAndCompile().\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\x0d\n    // here to avoid breaking users who parse process.moduleLoadList.\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  BuiltinModule\x2C\x0d\n  require: requireBuiltin\x2C\x0d\n};\x0d\n\x0d\nfunction requireBuiltin(id) {\x0d\n  if (id === selfId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = BuiltinModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    request = StringPrototypeSlice(request\x2C 5);\x0d\n  } else if (!BuiltinModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return requireBuiltin(request);\x0d\n}\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x2C\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x2C\x0d\n    }\x2C\x0d\n  } = requireBuiltin('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\n// Store the internal loaders in C++.\x0d\nsetInternalLoaders(internalBinding\x2C requireBuiltin);\x0d\n\x0d\n// Setup per-realm bindings.\x0d\nsetupPrepareStackTrace();\x0d\n
code-source-info,0x7ff62c4c3a80,9,13681,14033,,,
code-creation,JS,11,86403,0x7ff62c4c3d00,1152,compileForInternalLoader node:internal/bootstrap/realm:377:27,0xfca8d34410,^
code-source-info,0x7ff62c4c3d00,9,12628,13452,,,
code-creation,JS,11,86423,0x7ff62c4c41c0,476,internalBinding node:internal/bootstrap/realm:185:45,0xfca8d33bc8,^
code-source-info,0x7ff62c4c41c0,9,6163,6408,,,
code-creation,JS,11,86439,0x7ff62c4c43c0,192,isPathSeparator node:path:52:25,0x22671c9a5c8,^
code-source-info,0x7ff62c4c43c0,34,1794,1876,,,
code-creation,JS,10,86599,0x121eb10a90c,370,initializeGlobalConsole node:internal/console/constructor:690:33,0x22671ca3588,~
script-source,44,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (new.target === undefined) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: key\x2C\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x2C\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x2C\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x2C\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          __proto__: null\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x2C\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x2C\x0d\n        }\x2C\x0d\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x2C\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          __proto__: null\x2C\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x2C\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = lazyUtilColors().shouldColorize(stream);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x2C\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x2C\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x2C\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    cliTable ??= require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = { __proto__: null };\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          map[key] ??= [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x2C\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nfunction initializeGlobalConsole(globalConsole) {\x0d\n  globalConsole[kBindStreamsLazy](process);\x0d\n  globalConsole[kBindProperties](true\x2C 'auto');\x0d\n\x0d\n  const {\x0d\n    namespace: {\x0d\n      addSerializeCallback\x2C\x0d\n      isBuildingSnapshot\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/v8/startup_snapshot');\x0d\n\x0d\n  if (!internalBinding('config').hasInspector || !isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n  const { console: consoleFromVM } = internalBinding('inspector');\x0d\n  const nodeConsoleKeys = ObjectKeys(Console.prototype);\x0d\n  const vmConsoleKeys = ObjectKeys(consoleFromVM);\x0d\n  const originalKeys = new SafeSet(vmConsoleKeys.concat(nodeConsoleKeys));\x0d\n  const inspectorConsoleKeys = new SafeSet();\x0d\n  for (const key of ObjectKeys(globalConsole)) {\x0d\n    if (!originalKeys.has(key)) {\x0d\n      inspectorConsoleKeys.add(key);\x0d\n    }\x0d\n  }\x0d\n  // During deserialization these should be reinstalled to console by\x0d\n  // V8 when the inspector client is created.\x0d\n  addSerializeCallback(() => {\x0d\n    for (const key of inspectorConsoleKeys) {\x0d\n      globalConsole[key] = undefined;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  initializeGlobalConsole\x2C\x0d\n  formatTime\x2C // exported for tests\x0d\n};\x0d\n
code-source-info,0x121eb10a90c,44,21146,22184,C0O21146C12O21167C19O21181C21O21180C30O21198C35O21212C42O21226C44O21225C53O21242C59O21360C67O21360C72O21287C77O21296C82O21325C87O21406C95O21411C100O21436C106O21454C111O21483C112O21490C113O21534C121O21534C126O21516C131O21591C143O21610C148O21591C153O21647C158O21647C163O21698C170O21724C175O21724C183O21698C189O21782C194O21782C199O21782C201O21818C209O21818C231O21811C261O21811C264O21870C270O21870C277O21889C281O21910C287O21910C292O21800C359O22053C364O22053C369O22183,,
code-creation,JS,10,87566,0x121eb10c5fc,94,value node:internal/console/constructor:205:20,0x22671ca2b10,~
code-source-info,0x121eb10c5fc,44,6044,6706,C0O6044C15O6066C16O6066C18O6085C19O6085C21O6100C33O6151C38O6253C46O6364C60O6428C65O6530C73O6645C87O6100C93O6705,,
code-creation,JS,10,87771,0x121eb10cc84,396,value node:internal/console/constructor:235:20,0x22671ca2bd8,~
code-source-info,0x121eb10cc84,44,6811,8247,C17O6868C27O6931C34O6975C52O7046C55O7016C74O7119C84O7218C87O7188C102O7269C113O7313C122O7354C125O7354C140O7408C151O7430C160O7464C163O7460C181O7557C185O7567C196O7589C206O7619C225O7646C229O7659C240O7681C249O7711C263O7734C267O7747C278O7769C286O7799C300O7817C304O7832C315O7854C324O7884C338O7900C342O7925C353O7969C362O8010C376O8050C380O8070C389O6868C395O8246,,
code-creation,JS,10,87886,0x121eb10d1f4,18,createWriteErrorHandler node:internal/console/constructor:357:33,0x22671ca2ea8,~
code-source-info,0x121eb10d1f4,44,11050,11925,C0O11050C13O11080C17O11922,,
code-creation,JS,10,88110,0x121eb10d71c,63,addReadOnlyProcessAlias node:internal/process/pre_execution:249:33,0x22671cb9b78,~
code-source-info,0x121eb10d71c,67,8056,8316,C16O8109C21O8109C26O8136C28O8154C36O8184C43O8274C49O8293C56O8154C62O8315,,
code-creation,JS,10,88220,0x121eb10d8bc,82,getOptionValue node:internal/options:44:24,0x22671c83310,~
code-source-info,0x121eb10d8bc,17,1028,1278,C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275,,
code-creation,JS,10,88290,0x121eb10da14,24,getCLIOptionsFromBinding node:internal/options:18:34,0x22671c830d8,~
code-source-info,0x121eb10da14,17,514,620,C0O522C6O546C11O573C15O558C21O599C23O617,,
tick,0x7ff6abebb7cc,89627,0,0x0,0,0x7ff6abdeaaa0,0x7ff64c2ee6f5,0x7ff64c28ef5f,0x121eb10da1f,0x121eb10d8bf,0x121eb10d731,0x121eb103eae,0x33d09cbfa04,0x33d09cbdd94,0x33d09cbd82a
code-creation,JS,10,89879,0x121eb10e28c,46,setupTraceCategoryState node:internal/process/pre_execution:474:33,0x22671cba070,~
code-source-info,0x121eb10e28c,67,14705,14936,C0O14748C6O14748C11O14721C16O14821C22O14821C27O14792C32O14864C35O14889C40O14864C45O14935,,
code-creation,JS,10,89981,0x121eb10e424,66,toggleTraceCategoryState node:internal/process/per_thread:410:34,0x22671c963a8,~
script-source,27,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ErrnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\nconst { exitCodes: { kNoFailure } } = internalBinding('errors');\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x2C\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    const {\x0d\n      handleProcessExit\x2C\x0d\n    } = require('internal/modules/esm/handle_process_exit');\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (arguments.length !== 0) {\x0d\n      process.exitCode = code;\x0d\n    }\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || kNoFailure);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || kNoFailure);\x0d\n\x0d\n    // If this is a worker\x2C v8::Isolate::TerminateExecution() is called above.\x0d\n    // That function spoofs the stack pointer to cause the stack guard\x0d\n    // check to throw the termination exception. Because v8 performs\x0d\n    // stack guard check upon every function call\x2C we give it a chance.\x0d\n    //\x0d\n    // Without this\x2C user code after `process.exit()` would take effect.\x0d\n    // test/parallel/test-worker-voluntarily-exit-followed-by-addition.js\x0d\n    // test/parallel/test-worker-voluntarily-exit-followed-by-throw.js\x0d\n    nop();\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw new ErrnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvvar }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvvar) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvvar;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x2C\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x121eb10e424,27,12426,12733,C0O12451C4O12481C10O12517C16O12549C21O12593C26O12594C30O12538C32O12620C35O12641C40O12641C46O12661C52O12694C55O12715C60O12715C65O12732,,
code-creation,JS,10,90518,0x121eb10f344,62,setupInspectorHooks node:internal/process/pre_execution:480:29,0x22671cba0c8,~
code-source-info,0x121eb10f344,67,14968,15535,C0O15317C6O15321C11O15346C17O15416C23O15416C28O15383C33O15398C38O15463C44O15463C49O15491C54O15492C61O15534,,
code-creation,JS,10,90571,0x121eb10f5c4,79,setupNavigator node:internal/process/pre_execution:342:24,0x22671cb9ce0,~
code-source-info,0x121eb10f5c4,67,10502,10889,C0O10510C5O10514C9O10534C17O10562C23O10562C29O10623C30O10630C31O10725C38O10746C49O10725C54O10799C65O10830C72O10799C78O10888,,
code-creation,JS,10,90608,0x121eb10f70c,19,getEmbedderOptions node:internal/options:32:28,0x22671c83260,~
code-source-info,0x121eb10f70c,17,791,913,C0O799C6O828C11O846C14O844C16O887C18O910,,
code-creation,JS,10,90779,0x121eb10fdc4,126,setupWarningHandler node:internal/process/pre_execution:262:29,0x22671cb9bd0,~
code-source-info,0x121eb10fdc4,67,8348,8858,C0O8348C11O8415C19O8415C24O8369C30O8385C36O8455C46O8459C57O8504C62O8508C69O8525C74O8541C79O8549C90O8549C96O8680C103O8684C108O8715C120O8715C125O8857,,
code-creation,JS,10,90896,0x121eb110444,232,setupUndici node:internal/process/pre_execution:284:21,0x22671cb9c28,~
code-source-info,0x121eb110444,67,8957,10371,C0O8957C19O8965C26O8969C30O8989C36O9015C37O9022C38O9037C39O9037C41O9464C51O9469C62O9684C73O9700C82O9684C87O9736C99O9759C107O9790C118O9833C129O9875C140O9918C148O9736C153O10037C161O10037C166O10068C176O10069C181O10217C189O10221C195O10272C206O10295C217O10327C225O10272C231O10370,,
code-creation,JS,10,90964,0x121eb110974,33,lazyInterface node:internal/process/pre_execution:299:25,0x121eb1101b8,~
code-source-info,0x121eb110974,67,9228,9458,C0O9228C9O9242C14O9311C22O9372C32O9453,,
code-creation,JS,10,91047,0x121eb110fbc,172,setupWebCrypto node:internal/process/pre_execution:355:24,0x22671cb9d38,~
code-source-info,0x121eb110fbc,67,11020,11980,C0O11028C5O11032C9O11052C17O11080C23O11080C29O11141C30O11148C31O11159C37O11163C42O11188C48O11208C55O11247C73O11208C78O11530C89O11559C94O11530C101O11673C108O11694C121O11764C152O11764C165O11673C171O11979,,
code-creation,JS,10,91137,0x121eb11148c,70,setupCustomEvent node:internal/process/pre_execution:403:26,0x22671cb9e10,~
code-source-info,0x121eb11148c,67,12651,12910,C0O12659C5O12663C9O12683C17O12711C23O12711C29O12774C30O12781C31O12814C37O12814C42O12798C47O12851C54O12867C63O12851C69O12909,,
code-creation,JS,10,91189,0x121eb11165c,64,setupCodeCoverage node:internal/process/pre_execution:388:27,0x22671cb9db8,~
code-source-info,0x121eb11165c,67,12010,12516,C0O12322C3O12334C8O12338C16O12366C22O12366C28O12421C31O12429C38O12459C44O12486C49O12490C54O12459C58O12450C63O12515,,
code-creation,JS,10,91233,0x121eb11183c,75,setupDebugEnv node:internal/process/pre_execution:434:23,0x22671cb9f40,~
code-source-info,0x121eb11183c,67,13436,13650,C0O13444C6O13444C11O13477C19O13505C24O13509C29O13478C34O13525C42O13529C48O13574C54O13574C59O13609C64O13623C69O13624C74O13649,,
code-creation,JS,10,91311,0x121eb111bac,153,initializeDebugEnv node:internal/util/debuglog:21:28,0x22671c89150,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = { __proto__: null };\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = lazyUtilColors().shouldColorize(process.stderr);\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x2C\x0d\n};\x0d\n
code-source-info,0x121eb111bac,22,550,1008,C0O566C7O577C13O603C24O718C38O718C45O763C56O764C63O793C74O794C82O845C94O860C110O845C115O845C117O884C126O896C138O974C145O986C152O1007,,
code-creation,JS,10,91605,0x121eb11224c,31,initializeReport node:internal/process/pre_execution:422:26,0x22671cb9ec0,~
code-source-info,0x121eb11224c,67,13176,13410,C0O13184C11O13205C16O13301C24O13184C30O13409,,
code-creation,JS,10,91723,0x121eb112aac,553,initializePermission node:internal/process/pre_execution:587:30,0x22671cba228,~
code-source-info,0x121eb112aac
code-creation,JS,10,91824,0x121eb112ecc,34, node:internal/process/pre_execution:640:53,0x121eb112760,~
code-source-info,0x121eb112ecc,67,20385,20550,C0O20418C5O20418C10O20457C16O20476C26O20482C31O20476C33O20549,,
code-creation,JS,10,91864,0x121eb113044,35,initializeSourceMapsHandlers node:internal/process/pre_execution:721:38,0x22671cba3c0,~
code-source-info,0x121eb113044,67,23194,23360,C0O23244C6O23244C11O23215C16O23296C18O23317C24O23317C29O23296C34O23359,,
code-creation,JS,10,91931,0x121eb1131ec,94,setSourceMapsEnabled node:internal/source_map/source_map_cache:52:30,0x22671c9c3e8,~
script-source,38,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectKeys\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\nconst {\x0d\n  setSourceMapsEnabled: setSourceMapsNative\x2C\x0d\n  setPrepareStackTraceCallback\x2C\x0d\n} = internalBinding('errors');\x0d\nconst { getLazy } = require('internal/util');\x0d\n\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst getCjsSourceMapCache = getLazy(() => {\x0d\n  const { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\n  return new IterableWeakMap();\x0d\n});\x0d\n\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst generatedSourceMapCache = new SafeMap();\x0d\nconst kLeadingProtocol = /^\\w+:\\/\\//;\x0d\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/g;\x0d\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/g;\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\n\x0d\nlet SourceMap;\x0d\n\x0d\n// This is configured with --enable-source-maps during pre-execution.\x0d\nlet sourceMapsEnabled = false;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  setSourceMapsNative(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction extractSourceURLMagicComment(content) {\x0d\n  let match;\x0d\n  let matchSourceURL;\x0d\n  // A while loop is used here to get the last occurrence of sourceURL.\x0d\n  // This is needed so that we don't match sourceURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceURLMagicComment\x2C content))) {\x0d\n    matchSourceURL = match;\x0d\n  }\x0d\n  if (matchSourceURL == null) {\x0d\n    return null;\x0d\n  }\x0d\n  let sourceURL = matchSourceURL.groups.sourceURL;\x0d\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  return sourceURL;\x0d\n}\x0d\n\x0d\nfunction extractSourceMapURLMagicComment(content) {\x0d\n  let match;\x0d\n  let lastMatch;\x0d\n  // A while loop is used here to get the last occurrence of sourceMappingURL.\x0d\n  // This is needed so that we don't match sourceMappingURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceMappingURLMagicComment\x2C content))) {\x0d\n    lastMatch = match;\x0d\n  }\x0d\n  if (lastMatch == null) {\x0d\n    return null;\x0d\n  }\x0d\n  return lastMatch.groups.sourceMappingURL;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource\x2C sourceURL\x2C sourceMapURL) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    const { normalizeReferrerURL } = require('internal/modules/helpers');\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (sourceMapURL === undefined) {\x0d\n    sourceMapURL = extractSourceMapURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  // Bail out when there is no source map url.\x0d\n  if (typeof sourceMapURL !== 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (sourceURL === undefined) {\x0d\n    sourceURL = extractSourceURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  const data = dataFromUrl(filename\x2C sourceMapURL);\x0d\n  const url = data ? null : sourceMapURL;\x0d\n  if (cjsModuleInstance) {\x0d\n    getCjsSourceMapCache().set(cjsModuleInstance\x2C {\x0d\n      __proto__: null\x2C\x0d\n      filename\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    });\x0d\n  } else if (isGeneratedSource) {\x0d\n    const entry = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    generatedSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      generatedSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  } else {\x0d\n    // If there is no cjsModuleInstance and is not generated source assume we are in a\x0d\n    // "modules/esm" context.\x0d\n    const entry = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    esmSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      esmSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCacheGeneratedSourceMap(content) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n\x0d\n  const sourceURL = extractSourceURLMagicComment(content);\x0d\n  if (sourceURL === null) {\x0d\n    return;\x0d\n  }\x0d\n  try {\x0d\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true\x2C sourceURL);\x0d\n  } catch (err) {\x0d\n    // This can happen if the filename is not a valid URL.\x0d\n    // If we fail to cache the source map\x2C we should not fail the whole process.\x0d\n    debug(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const fs = require('fs');\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = { __proto__: null };\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of getCjsSourceMapCache()) {\x0d\n    obj[value.filename] = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: value.lineLengths\x2C\x0d\n      data: value.data\x2C\x0d\n      url: value.url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let entry = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\x0d\n  if (entry === undefined) {\x0d\n    for (const value of getCjsSourceMapCache()) {\x0d\n      const filename = value.filename;\x0d\n      const cachedSourceURL = value.sourceURL;\x0d\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\x0d\n        entry = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (entry === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n  let sourceMap = entry.sourceMap;\x0d\n  if (sourceMap === undefined) {\x0d\n    sourceMap = new SourceMap(entry.data\x2C { lineLengths: entry.lineLengths });\x0d\n    entry.sourceMap = sourceMap;\x0d\n  }\x0d\n  return sourceMap;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  maybeCacheGeneratedSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x121eb1131ec,38,1741,2272,C0O1752C8O1752C13O1786C18O1786C22O1815C26O1874C32O1874C37O1846C42O1931C47O1931C53O1990C59O2153C65O2153C70O2125C75O2186C80O2186C84O2245C86O2263C93O2271,,
code-creation,JS,10,92390,0x121eb113dd4,30, node:internal/validators:216:41,0xfca8d3dbc0,~
script-source,15,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT: { HideStackFramesError: ERR_SOCKET_BAD_PORT }\x2C\x0d\n    ERR_INVALID_ARG_TYPE: { HideStackFramesError: ERR_INVALID_ARG_TYPE }\x2C\x0d\n    ERR_INVALID_ARG_VALUE: { HideStackFramesError: ERR_INVALID_ARG_VALUE }\x2C\x0d\n    ERR_OUT_OF_RANGE: { HideStackFramesError: ERR_OUT_OF_RANGE }\x2C\x0d\n    ERR_UNKNOWN_SIGNAL: { HideStackFramesError: ERR_UNKNOWN_SIGNAL }\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateUint32(value\x2C name);\x0d\n  return value;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateInteger\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInteger} */\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateInt32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInt32} */\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateUint32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number|boolean} [positive=false]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateUint32} */\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\x0d\n  if (typeof value !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n  }\x0d\n  if (!NumberIsInteger(value)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n  const min = positive ? 1 : 0;\x0d\n  // 2 ** 32 === 4294967296\x0d\n  const max = 4_294_967_295;\x0d\n  if (value < min || value > max) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateString\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string}\x0d\n */\x0d\n\x0d\n/** @type {validateString} */\x0d\nconst validateString = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateNumber\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateNumber} */\x0d\nconst validateNumber = hideStackFrames((value\x2C name\x2C min = undefined\x2C max) => {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n\x0d\n  if ((min != null && value < min) || (max != null && value > max) ||\x0d\n    ((min != null || max != null) && NumberIsNaN(value))) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      name\x2C\x0d\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\x0d\n      value);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateOneOf\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} oneOf\x0d\n */\x0d\n\x0d\n/** @type {validateOneOf} */\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBoolean\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean}\x0d\n */\x0d\n\x0d\n/** @type {validateBoolean} */\x0d\nconst validateBoolean = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n});\x0d\n\x0d\nconst kValidateObjectNone = 0;\x0d\nconst kValidateObjectAllowNullable = 1 << 0;\x0d\nconst kValidateObjectAllowArray = 1 << 1;\x0d\nconst kValidateObjectAllowFunction = 1 << 2;\x0d\n\x0d\n/**\x0d\n * @callback validateObject\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [options]\x0d\n */\x0d\n\x0d\n/** @type {validateObject} */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options = kValidateObjectNone) => {\x0d\n    if (options === kValidateObjectNone) {\x0d\n      if (value === null || ArrayIsArray(value)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      if (typeof value !== 'object') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n    } else {\x0d\n      const throwOnNullable = (kValidateObjectAllowNullable & options) === 0;\x0d\n\x0d\n      if (throwOnNullable && value === null) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      const throwOnArray = (kValidateObjectAllowArray & options) === 0;\x0d\n\x0d\n      if (throwOnArray && ArrayIsArray(value)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      const throwOnFunction = (kValidateObjectAllowFunction & options) === 0;\x0d\n      const typeofValue = typeof value;\x0d\n\x0d\n      if (typeofValue !== 'object' && (throwOnFunction || typeofValue !== 'function')) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateDictionary - We are using the Web IDL Standard definition\x0d\n *                                of "dictionary" here\x2C which means any value\x0d\n *                                whose Type is either Undefined\x2C Null\x2C or\x0d\n *                                Object (which includes functions).\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @see https://webidl.spec.whatwg.org/#es-dictionary\x0d\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\x0d\n */\x0d\n\x0d\n/** @type {validateDictionary} */\x0d\nconst validateDictionary = hideStackFrames(\x0d\n  (value\x2C name) => {\x0d\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [minLength]\x0d\n * @returns {asserts value is any[]}\x0d\n */\x0d\n\x0d\n/** @type {validateArray} */\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateStringArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string[]}\x0d\n */\x0d\n\x0d\n/** @type {validateStringArray} */\x0d\nconst validateStringArray = hideStackFrames((value\x2C name) => {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; ++i) {\x0d\n    // Don't use validateString here for performance reasons\x2C as\x0d\n    // we would generate intermediate strings for the name.\x0d\n    if (typeof value[i] !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'string'\x2C value[i]);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBooleanArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean[]}\x0d\n */\x0d\n\x0d\n/** @type {validateBooleanArray} */\x0d\nconst validateBooleanArray = hideStackFrames((value\x2C name) => {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; ++i) {\x0d\n    // Don't use validateBoolean here for performance reasons\x2C as\x0d\n    // we would generate intermediate strings for the name.\x0d\n    if (value[i] !== true && value[i] !== false) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'boolean'\x2C value[i]);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateAbortSignalArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is AbortSignal[]}\x0d\n */\x0d\n\x0d\n/** @type {validateAbortSignalArray} */\x0d\nfunction validateAbortSignalArray(value\x2C name) {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; i++) {\x0d\n    const signal = value[i];\x0d\n    const indexedName = `${name}[${i}]`;\x0d\n    if (signal == null) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(indexedName\x2C 'AbortSignal'\x2C signal);\x0d\n    }\x0d\n    validateAbortSignal(signal\x2C indexedName);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} signal\x0d\n * @param {string} [name='signal']\x0d\n * @returns {asserts signal is keyof signals}\x0d\n */\x0d\nconst validateSignalName = hideStackFrames((signal\x2C name = 'signal') => {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBuffer\x0d\n * @param {*} buffer\x0d\n * @param {string} [name='buffer']\x0d\n * @returns {asserts buffer is ArrayBufferView}\x0d\n */\x0d\n\x0d\n/** @type {validateBuffer} */\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {string} data\x0d\n * @param {string} encoding\x0d\n */\x0d\nconst validateEncoding = hideStackFrames((data\x2C encoding) => {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Check that the port number is not NaN when coerced to a number\x2C\x0d\n * is an integer and that it falls within the legal range of port numbers.\x0d\n * @param {*} port\x0d\n * @param {string} [name='Port']\x0d\n * @param {boolean} [allowZero=true]\x0d\n * @returns {number}\x0d\n */\x0d\nconst validatePort = hideStackFrames((port\x2C name = 'Port'\x2C allowZero = true) => {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateAbortSignal\x0d\n * @param {*} signal\x0d\n * @param {string} name\x0d\n */\x0d\n\x0d\n/** @type {validateAbortSignal} */\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validateFunction} */\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validatePlainFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validatePlainFunction} */\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateUndefined\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is undefined}\x0d\n */\x0d\n\x0d\n/** @type {validateUndefined} */\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} union\x0d\n */\x0d\nfunction validateUnion(value\x2C name\x2C union) {\x0d\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\n/*\x0d\n  The rules for the Link header field are described here:\x0d\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\x0d\n\x0d\n  This regex validates any string surrounded by angle brackets\x0d\n  (not necessarily a valid URI reference) followed by zero or more\x0d\n  link-params separated by semicolons.\x0d\n*/\x0d\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;"\\s]+(?:=(")?[^;"\\s]*\\1)?)*$/;\x0d\n\x0d\n/**\x0d\n * @param {any} value\x0d\n * @param {string} name\x0d\n */\x0d\nconst validateLinkHeaderFormat = hideStackFrames((value\x2C name) => {\x0d\n  if (\x0d\n    typeof value === 'undefined' ||\x0d\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\x0d\n  ) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      name\x2C\x0d\n      value\x2C\x0d\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\x0d\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('this'\x2C className\x2C object);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {any} hints\x0d\n * @return {string}\x0d\n */\x0d\nconst validateLinkHeaderValue = hideStackFrames((hints) => {\x0d\n  if (typeof hints === 'string') {\x0d\n    validateLinkHeaderFormat.withoutStackTrace(hints\x2C 'hints');\x0d\n    return hints;\x0d\n  } else if (ArrayIsArray(hints)) {\x0d\n    const hintsLength = hints.length;\x0d\n    let result = '';\x0d\n\x0d\n    if (hintsLength === 0) {\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < hintsLength; i++) {\x0d\n      const link = hints[i];\x0d\n      validateLinkHeaderFormat.withoutStackTrace(link\x2C 'hints');\x0d\n      result += link;\x0d\n\x0d\n      if (i !== hintsLength - 1) {\x0d\n        result += '\x2C ';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE(\x0d\n    'hints'\x2C\x0d\n    hints\x2C\x0d\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\x0d\n  );\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateBooleanArray\x2C\x0d\n  validateAbortSignalArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateDictionary\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  kValidateObjectNone\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateUnion\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateLinkHeaderValue\x2C\x0d\n  validateInternalField\x2C\x0d\n};\x0d\n
code-source-info,0x121eb113dd4,15,6102,6219,C0O6124C6O6161C22O6167C27O6161C29O6218,,
code-creation,JS,10,93138,0x121eb115654,348,initializeDeprecations node:internal/process/pre_execution:498:32,0x22671cba120,~
code-source-info,0x121eb115654,67,15766,17746,C0O15796C6O15796C11O15782C16O15852C24O15852C29O16047C35O16047C40O16089C46O16089C51O16143C73O16135C101O16135C104O16479C112O16499C116O16542C127O16617C138O16709C149O16663C158O16527C167O16770C170O16497C174O16124C239O17054C245O17054C250O17033C255O17084C257O17113C268O17134C275O17280C279O17113C284O17317C288O17348C294O17384C304O17462C311O17366C316O17364C320O17551C326O17593C337O17575C342O17573C347O17745,,
code-creation,JS,10,93251,0x121eb1159f4,65,initializeDns node:internal/dns/utils:202:23,0x22671cbc6e0,~
script-source,71,node:internal/dns/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst { isIP } = require('internal/net');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInt32\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nlet binding;\x0d\nfunction lazyBinding() {\x0d\n  binding ??= internalBinding('cares_wrap');\x0d\n  return binding;\x0d\n}\x0d\nconst IANA_DNS_PORT = 53;\x0d\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\x0d\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\x0d\nconst {\x0d\n  ERR_DNS_SET_SERVERS_FAILED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_IP_ADDRESS\x2C\x0d\n} = errors.codes;\x0d\n\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    addDeserializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nfunction validateTimeout(options) {\x0d\n  const { timeout = -1 } = { ...options };\x0d\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1);\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nfunction validateTries(options) {\x0d\n  const { tries = 4 } = { ...options };\x0d\n  validateInt32(tries\x2C 'options.tries'\x2C 1);\x0d\n  return tries;\x0d\n}\x0d\n\x0d\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\x0d\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\x0d\nconst kSnapshotStates = Symbol('dns:resolver:config');\x0d\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\x0d\nconst kSetServersInteral = Symbol('dns:resolver:setServers');\x0d\n\x0d\n// Resolver instances correspond 1:1 to c-ares channels.\x0d\n\x0d\nclass ResolverBase {\x0d\n  constructor(options = undefined) {\x0d\n    const timeout = validateTimeout(options);\x0d\n    const tries = validateTries(options);\x0d\n    // If we are building snapshot\x2C save the states of the resolver along\x0d\n    // the way.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates] = { timeout\x2C tries };\x0d\n    }\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  [kInitializeHandle](timeout\x2C tries) {\x0d\n    const { ChannelWrap } = lazyBinding();\x0d\n    this._handle = new ChannelWrap(timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  cancel() {\x0d\n    this._handle.cancel();\x0d\n  }\x0d\n\x0d\n  getServers() {\x0d\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\x0d\n      if (!val[1] || val[1] === IANA_DNS_PORT)\x0d\n        return val[0];\x0d\n\x0d\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\x0d\n      return `${host}:${val[1]}`;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setServers(servers) {\x0d\n    validateArray(servers\x2C 'servers');\x0d\n\x0d\n    // Cache the original servers because in the event of an error while\x0d\n    // setting the servers\x2C c-ares won't have any servers available for\x0d\n    // resolution.\x0d\n    const newSet = [];\x0d\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\x0d\n      validateString(serv\x2C `servers[${index}]`);\x0d\n      let ipVersion = isIP(serv);\x0d\n\x0d\n      if (ipVersion !== 0)\x0d\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\x0d\n\x0d\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\x0d\n\x0d\n      // Check for an IPv6 in brackets.\x0d\n      if (match) {\x0d\n        ipVersion = isIP(match[1]);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          const port = NumberParseInt(\x0d\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\x0d\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // addr::port\x0d\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\x0d\n\x0d\n      if (addrSplitMatch) {\x0d\n        const hostIP = addrSplitMatch[1];\x0d\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\x0d\n\x0d\n        ipVersion = isIP(hostIP);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          return ArrayPrototypePush(\x0d\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      throw new ERR_INVALID_IP_ADDRESS(serv);\x0d\n    });\x0d\n\x0d\n    this[kSetServersInteral](newSet\x2C servers);\x0d\n  }\x0d\n\x0d\n  [kSetServersInteral](newSet\x2C servers) {\x0d\n    const orig = this._handle.getServers() || [];\x0d\n    const errorNumber = this._handle.setServers(newSet);\x0d\n\x0d\n    if (errorNumber !== 0) {\x0d\n      // Reset the servers to the old servers\x2C because ares probably unset them.\x0d\n      this._handle.setServers(ArrayPrototypeJoin(orig\x2C '\x2C'));\x0d\n      const { strerror } = lazyBinding();\x0d\n      const err = strerror(errorNumber);\x0d\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\x0d\n    }\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].servers = newSet;\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  setLocalAddress(ipv4\x2C ipv6) {\x0d\n    validateString(ipv4\x2C 'ipv4');\x0d\n\x0d\n    if (ipv6 !== undefined) {\x0d\n      validateString(ipv6\x2C 'ipv6');\x0d\n    }\x0d\n\x0d\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].localAddress = { ipv4\x2C ipv6 };\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\x0d\n  // end up being useful for snapshot users.\x0d\n  [kSerializeResolver]() {\x0d\n    this._handle = null;  // We'll restore it during deserialization.\x0d\n    addDeserializeCallback(function deserializeResolver(resolver) {\x0d\n      resolver[kDeserializeResolver]();\x0d\n    }\x2C this);\x0d\n  }\x0d\n\x0d\n  [kDeserializeResolver]() {\x0d\n    const { timeout\x2C tries\x2C localAddress\x2C servers } = this[kSnapshotStates];\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n    if (localAddress) {\x0d\n      const { ipv4\x2C ipv6 } = localAddress;\x0d\n      this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n    }\x0d\n    if (servers) {\x0d\n      this[kSetServersInteral](servers\x2C servers);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nlet defaultResolver;\x0d\nlet dnsOrder;\x0d\n\x0d\nfunction initializeDns() {\x0d\n  const orderFromCLI = getOptionValue('--dns-result-order');\x0d\n  if (!orderFromCLI) {\x0d\n    dnsOrder ??= 'verbatim';\x0d\n  } else {\x0d\n    // Allow the deserialized application to override order from CLI.\x0d\n    dnsOrder = orderFromCLI;\x0d\n  }\x0d\n\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  addSerializeCallback(() => {\x0d\n    defaultResolver?.[kSerializeResolver]();\x0d\n  });\x0d\n}\x0d\n\x0d\nconst resolverKeys = [\x0d\n  'getServers'\x2C\x0d\n  'resolve'\x2C\x0d\n  'resolve4'\x2C\x0d\n  'resolve6'\x2C\x0d\n  'resolveAny'\x2C\x0d\n  'resolveCaa'\x2C\x0d\n  'resolveCname'\x2C\x0d\n  'resolveMx'\x2C\x0d\n  'resolveNaptr'\x2C\x0d\n  'resolveNs'\x2C\x0d\n  'resolvePtr'\x2C\x0d\n  'resolveSoa'\x2C\x0d\n  'resolveSrv'\x2C\x0d\n  'resolveTxt'\x2C\x0d\n  'reverse'\x2C\x0d\n];\x0d\n\x0d\nfunction getDefaultResolver() {\x0d\n  // We do this here instead of pre-execution so that the default resolver is\x0d\n  // only ever created when the user loads any dns module.\x0d\n  if (defaultResolver === undefined) {\x0d\n    defaultResolver = new ResolverBase();\x0d\n  }\x0d\n  return defaultResolver;\x0d\n}\x0d\n\x0d\nfunction setDefaultResolver(resolver) {\x0d\n  defaultResolver = resolver;\x0d\n}\x0d\n\x0d\nfunction bindDefaultResolver(target\x2C source) {\x0d\n  const defaultResolver = getDefaultResolver();\x0d\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\x0d\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction validateHints(hints) {\x0d\n  const { AI_ADDRCONFIG\x2C AI_ALL\x2C AI_V4MAPPED } = lazyBinding();\x0d\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet invalidHostnameWarningEmitted = false;\x0d\nfunction emitInvalidHostnameWarning(hostname) {\x0d\n  if (!invalidHostnameWarningEmitted) {\x0d\n    process.emitWarning(\x0d\n      `The provided hostname "${hostname}" is not a valid ` +\x0d\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0118'\x2C\x0d\n    );\x0d\n    invalidHostnameWarningEmitted = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDefaultVerbatim() {\x0d\n  return dnsOrder !== 'ipv4first';\x0d\n}\x0d\n\x0d\nfunction setDefaultResultOrder(value) {\x0d\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first']);\x0d\n  dnsOrder = value;\x0d\n}\x0d\n\x0d\nfunction getDefaultResultOrder() {\x0d\n  return dnsOrder;\x0d\n}\x0d\n\x0d\nfunction createResolverClass(resolver) {\x0d\n  const resolveMap = { __proto__: null };\x0d\n\x0d\n  class Resolver extends ResolverBase {}\x0d\n\x0d\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\x0d\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\x0d\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\x0d\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\x0d\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\x0d\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\x0d\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\x0d\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\x0d\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\x0d\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\x0d\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\x0d\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\x0d\n  Resolver.prototype.reverse = resolver('getHostByAddr');\x0d\n\x0d\n  return {\x0d\n    resolveMap\x2C\x0d\n    Resolver\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// ERROR CODES\x0d\nconst errorCodes = {\x0d\n  NODATA: 'ENODATA'\x2C\x0d\n  FORMERR: 'EFORMERR'\x2C\x0d\n  SERVFAIL: 'ESERVFAIL'\x2C\x0d\n  NOTFOUND: 'ENOTFOUND'\x2C\x0d\n  NOTIMP: 'ENOTIMP'\x2C\x0d\n  REFUSED: 'EREFUSED'\x2C\x0d\n  BADQUERY: 'EBADQUERY'\x2C\x0d\n  BADNAME: 'EBADNAME'\x2C\x0d\n  BADFAMILY: 'EBADFAMILY'\x2C\x0d\n  BADRESP: 'EBADRESP'\x2C\x0d\n  CONNREFUSED: 'ECONNREFUSED'\x2C\x0d\n  TIMEOUT: 'ETIMEOUT'\x2C\x0d\n  EOF: 'EOF'\x2C\x0d\n  FILE: 'EFILE'\x2C\x0d\n  NOMEM: 'ENOMEM'\x2C\x0d\n  DESTRUCTION: 'EDESTRUCTION'\x2C\x0d\n  BADSTR: 'EBADSTR'\x2C\x0d\n  BADFLAGS: 'EBADFLAGS'\x2C\x0d\n  NONAME: 'ENONAME'\x2C\x0d\n  BADHINTS: 'EBADHINTS'\x2C\x0d\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\x0d\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\x0d\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\x0d\n  CANCELLED: 'ECANCELLED'\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  bindDefaultResolver\x2C\x0d\n  getDefaultResolver\x2C\x0d\n  setDefaultResolver\x2C\x0d\n  validateHints\x2C\x0d\n  validateTimeout\x2C\x0d\n  validateTries\x2C\x0d\n  emitInvalidHostnameWarning\x2C\x0d\n  getDefaultVerbatim\x2C\x0d\n  getDefaultResultOrder\x2C\x0d\n  setDefaultResultOrder\x2C\x0d\n  errorCodes\x2C\x0d\n  createResolverClass\x2C\x0d\n  initializeDns\x2C\x0d\n};\x0d\n
code-source-info,0x121eb1159f4,71,5650,6030,C0O5679C8O5679C13O5720C15O5746C25O5755C29O5859C31O5868C37O5894C42O5899C47O5928C48O5935C49O5946C59O5946C64O6029,,
code-creation,JS,10,93705,0x121eb1167c4,84,setupSymbolDisposePolyfill node:internal/process/pre_execution:139:36,0x22671cb9a18,~
code-source-info,0x121eb1167c4,67,3867,4590,C0O4040C5O4058C13O4087C24O4108C31O4221C37O4087C42O4339C45O4357C53O4391C64O4412C71O4530C77O4391C83O4589,,
code-creation,JS,10,93775,0x121eb116984,21,assert node:internal/assert:11:16,0xfca8d39d50,~
script-source,11,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x121eb116984,11,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,JS,10,93912,0x121eb116ef4,430,readPolicyFromDisk node:internal/process/pre_execution:649:28,0x22671cba2b8,~
code-source-info,0x121eb116ef
code-creation,JS,10,94000,0x121eb117304,49,setupStacktracePrinterOnSigint node:internal/process/pre_execution:412:40,0x22671cb9e68,~
code-source-info,0x121eb117304,67,12953,13147,C0O12961C8O12966C14O13007C15O13014C16O13050C22O13050C27O13031C32O13102C38O13136C43O13136C48O13146,,
code-creation,JS,10,94038,0x121eb1174a4,35,initializeReportSignalHandlers node:internal/process/pre_execution:442:40,0x22671cb9f98,~
code-source-info,0x121eb1174a4,67,13754,13908,C0O13762C8O13766C14O13840C20O13840C25O13819C30O13881C34O13907,,
code-creation,JS,10,94087,0x121eb1177ac,153,initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:449:46,0x22671cb9ff0,~
code-source-info,0x121eb1177ac,67,13957,14669,C0O13957C20O13980C30O13980C34O13980C36O14046C44O14046C48O14046C50O14087C54O14105C55O14112C56O14118C64O14118C69O14148C77O14149C82O14210C90O14210C95O14188C101O14391C106O14399C117O14399C123O14531C130O14535C135O14564C147O14564C152O14668,,
code-creation,JS,10,94149,0x121eb117aec,138,setupChildProcessIpcChannel node:internal/process/pre_execution:559:37,0x22671cba178,~
code-source-info,0x121eb117aec,67,17786,18332,C0O17794C3O17806C8O17810C14O17849C20O17849C25O17895C33O17918C38O17922C46O17895C52O17949C53O17959C57O17949C61O18043C64O18058C73O18119C76O18127C81O18131C90O18179C93O18194C102O18238C108O18238C113O18262C118O18263C124O18303C127O18318C132O18303C137O18331,,
code-creation,JS,10,94206,0x121eb117d0c,63,initializeClusterIPC node:internal/process/pre_execution:578:30,0x22671cba1d0,~
code-source-info,0x121eb117d0c,67,18365,18613,C0O18373C3O18385C10O18389C18O18404C23O18408C29O18447C35O18447C40O18480C45O18480C49O18571C52O18586C62O18612,,
code-creation,JS,10,94261,0x121eb117e4c,52,runDeserializeCallbacks node:internal/v8/startup_snapshot:39:33,0x22671ca9010,~
script-source,53,node:internal/v8/startup_snapshot,'use strict';\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_NOT_BUILDING_SNAPSHOT\x2C\x0d\n    ERR_NOT_SUPPORTED_IN_SNAPSHOT\x2C\x0d\n    ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  setSerializeCallback\x2C\x0d\n  setDeserializeCallback\x2C\x0d\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\x0d\n  isBuildingSnapshotBuffer\x2C\x0d\n} = internalBinding('mksnapshot');\x0d\n\x0d\nfunction isBuildingSnapshot() {\x0d\n  return isBuildingSnapshotBuffer[0];\x0d\n}\x0d\n\x0d\nfunction throwIfNotBuildingSnapshot() {\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfBuildingSnapshot(reason) {\x0d\n  if (isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_SUPPORTED_IN_SNAPSHOT(reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst deserializeCallbacks = [];\x0d\nlet deserializeCallbackIsSet = false;\x0d\nfunction runDeserializeCallbacks() {\x0d\n  while (deserializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addDeserializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (!deserializeCallbackIsSet) {\x0d\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\x0d\n    // the deserialize callbacks can always be invoked. For now only\x0d\n    // store it in C++ when it's actually used to avoid unnecessary\x0d\n    // C++ -> JS costs.\x0d\n    setDeserializeCallback(runDeserializeCallbacks);\x0d\n    deserializeCallbackIsSet = true;\x0d\n  }\x0d\n  deserializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nconst serializeCallbacks = [];\x0d\nfunction runSerializeCallbacks() {\x0d\n  while (serializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addSerializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  serializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nfunction initializeCallbacks() {\x0d\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\x0d\n  // they throw.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    setSerializeCallback(runSerializeCallbacks);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet deserializeMainIsSet = false;\x0d\nfunction setDeserializeMainFunction(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\x0d\n  // main function to run the lib/internal/main scripts and make sure that\x0d\n  // the main function set in the snapshot building process takes precedence.\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (deserializeMainIsSet) {\x0d\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\x0d\n  }\x0d\n  deserializeMainIsSet = true;\x0d\n\x0d\n  _setDeserializeMainFunction(function deserializeMain() {\x0d\n    const {\x0d\n      prepareMainThreadExecution\x2C\x0d\n      markBootstrapComplete\x2C\x0d\n    } = require('internal/process/pre_execution');\x0d\n\x0d\n    // This should be in sync with run_main_module.js until we make that\x0d\n    // a built-in main function.\x0d\n    // TODO(joyeecheung): make a copy of argv[0] and insert it as argv[1].\x0d\n    prepareMainThreadExecution(false);\x0d\n    markBootstrapComplete();\x0d\n    callback(data);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeCallbacks\x2C\x0d\n  runDeserializeCallbacks\x2C\x0d\n  throwIfBuildingSnapshot\x2C\x0d\n  // Exposed to require('v8').startupSnapshot\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    setDeserializeMainFunction\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x121eb117e4c,53,901,1047,C0O944C5O937C11O944C16O989C19O1010C24O1010C31O967C38O980C42O1024C46O909C51O1046,,
code-creation,JS,10,94444,0x121eb118374,69,setupUserModules node:internal/process/pre_execution:164:26,0x22671cb9a70,~
code-source-info,0x121eb118374,67,4619,5034,C10O4649C13O4649C16O4675C19O4675C23O4733C29O4733C34O4776C39O4794C45O4776C49O4889C53O4916C54O4923C55O4932C58O4932C61O5002C64O5002C68O5033,,
code-creation,JS,10,94480,0x121eb1184c4,21,initializeCJSLoader node:internal/process/pre_execution:699:29,0x22671cba310,~
code-source-info,0x121eb1184c4,67,22463,22559,C0O22497C6O22497C11O22479C16O22540C20O22558,,
code-creation,JS,10,94608,0x121eb118624,90,initializeCJS node:internal/modules/cjs/loader:383:23,0x22671cb6c78,~
script-source,63,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x2C\x0d\n  initializeCJS\x2C\x0d\n};\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURL } = require('internal/url');\x0d\nconst {\x0d\n  pendingDeprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  setOwnProperty\x2C\x0d\n  getLazy\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  internalCompileFunction\x2C\x0d\n  makeContextifyScript\x2C\x0d\n  runScriptInThisContext\x2C\x0d\n} = require('internal/vm');\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst path = require('path');\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    require_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  getCjsConditions\x2C\x0d\n  initializeCjsConditions\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n  toRealPath\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { getOptionValue\x2C getEmbedderOptions } = require('internal/options');\x0d\nconst policy = getLazy(\x0d\n  () => (getOptionValue('--experimental-policy') ? require('internal/process/policy') : null)\x2C\x0d\n);\x0d\nconst shouldReportRequiredModules = getLazy(() => process.env.WATCH_REPORT_DEPENDENCIES);\x0d\n\x0d\nconst getCascadedLoader = getLazy(\x0d\n  () => require('internal/process/esm_loader').esmLoader\x2C\x0d\n);\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = { __proto__: null };\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet isPreloading = false;\x0d\nlet statCache = null;\x0d\n\x0d\n/**\x0d\n * Our internal implementation of `require`.\x0d\n * @param {Module} module Parent module of what is being required\x0d\n * @param {string} id Specifier of the child module being imported\x0d\n */\x0d\nfunction internalRequire(module\x2C id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C module\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get a path's properties\x2C using an in-memory cache to minimize lookups.\x0d\n * @param {string} filename Absolute path to the file\x0d\n */\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) { return result; }\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nlet _stat = stat;\x0d\nObjectDefineProperty(Module\x2C '_stat'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _stat; }\x2C\x0d\n  set(stat) {\x0d\n    emitExperimentalWarning('Module._stat');\x0d\n    _stat = stat;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Update the parent's children array with the child module.\x0d\n * @param {Module} parent Module requiring the children\x0d\n * @param {Module} child Module being required\x0d\n * @param {boolean} scan Add the child to the parent's children if not already present\x0d\n */\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child))) {\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tell the watch mode that a module was required.\x0d\n * @param {string} filename Absolute path of the module\x0d\n */\x0d\nfunction reportModuleToWatchMode(filename) {\x0d\n  if (shouldReportRequiredModules() && process.send) {\x0d\n    process.send({ 'watch:require': [filename] });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tell the watch mode that a module was not found.\x0d\n * @param {string} basePath The absolute path that errored\x0d\n * @param {string[]} extensions The extensions that were tried\x0d\n */\x0d\nfunction reportModuleNotFoundToWatchMode(basePath\x2C extensions) {\x0d\n  if (shouldReportRequiredModules() && process.send) {\x0d\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions\x2C (ext) => path.resolve(`${basePath}${ext}`)) });\x0d\n  }\x0d\n}\x0d\n\x0d\n/** @type {Map<Module\x2C Module>} */\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\n/**\x0d\n * Create a new module instance.\x0d\n * @param {string} id\x0d\n * @param {Module} parent\x0d\n */\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  setOwnProperty(this\x2C 'exports'\x2C {});\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n  let redirects;\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const moduleURL = pathToFileURL(id);\x0d\n    redirects = manifest.getDependencyMapper(moduleURL);\x0d\n    // TODO(rafaelgss): remove the necessity of this branch\x0d\n    setOwnProperty(this\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\x0d\n    // eslint-disable-next-line no-proto\x0d\n    setOwnProperty(this.__proto__\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\x0d\n  }\x0d\n  this[require_private_symbol] = internalRequire;\x0d\n}\x0d\n\x0d\n/** @type {Record<string\x2C Module>} */\x0d\nModule._cache = { __proto__: null };\x0d\n/** @type {Record<string\x2C string>} */\x0d\nModule._pathCache = { __proto__: null };\x0d\n/** @type {Record<string\x2C (module: Module\x2C filename: string) => void>} */\x0d\nModule._extensions = { __proto__: null };\x0d\n/** @type {string[]} */\x0d\nlet modulePaths = [];\x0d\n/** @type {string[]} */\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n/**\x0d\n * Add the CommonJS wrapper around a module's source code.\x0d\n * @param {string} script Module source code\x0d\n */\x0d\nlet wrap = function(script) { // eslint-disable-line func-style\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\n/**\x0d\n * Get the parent of the current module from our cache.\x0d\n */\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Set the parent of the current module in our cache.\x0d\n * @param {Module} value\x0d\n */\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x2C\x0d\n  )\x2C\x0d\n  set: pendingDeprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x2C\x0d\n  )\x2C\x0d\n});\x0d\nModule._debug = pendingDeprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\nModule.isBuiltin = BuiltinModule.isBuiltin;\x0d\n\x0d\n/**\x0d\n * Prepare to run CommonJS code.\x0d\n * This function is called during pre-execution\x2C before any user code is run.\x0d\n */\x0d\nfunction initializeCJS() {\x0d\n  // This need to be done at runtime in case --expose-internals is set.\x0d\n  const builtinModules = BuiltinModule.getCanBeRequiredByUsersWithoutSchemeList();\x0d\n  Module.builtinModules = ObjectFreeze(builtinModules);\x0d\n\x0d\n  initializeCjsConditions();\x0d\n\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    Module._initPaths();\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nlet _readPackage = packageJsonReader.readPackage;\x0d\nObjectDefineProperty(Module\x2C '_readPackage'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _readPackage; }\x2C\x0d\n  set(readPackage) {\x0d\n    emitExperimentalWarning('Module._readPackage');\x0d\n    _readPackage = readPackage;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Try to load a specifier as a package.\x0d\n * @param {string} requestPath The path to what we are trying to load\x0d\n * @param {string[]} exts File extensions to try appending in order to resolve the file\x0d\n * @param {boolean} isMain Whether the file is the main entry point of the app\x0d\n * @param {string} originalPath The specifier passed to `require`\x0d\n */\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = _readPackage(requestPath).main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x2C\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Check if the file exists and is not a directory if using `--preserve-symlinks` and `isMain` is false\x2C keep symlinks\x0d\n * intact\x2C otherwise resolve to the absolute realpath.\x0d\n * @param {string} requestPath The path to the file to load.\x0d\n * @param {boolean} isMain Whether the file is the main module.\x0d\n */\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = _stat(requestPath);\x0d\n  if (rc !== 0) { return; }\x0d\n  if (getOptionValue('--preserve-symlinks') && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Given a path\x2C check if the file exists with any of the set extensions.\x0d\n * @param {string} basePath The path and filename without extension\x0d\n * @param {string[]} exts The extensions to try\x0d\n * @param {boolean} isMain Whether the module is the main module\x0d\n */\x0d\nfunction tryExtensions(basePath\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(basePath + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Find the longest (possibly multi-dot) extension registered in `Module._extensions`.\x0d\n * @param {string} filename The filename to find the longest registered extension for.\x0d\n */\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) { continue; } // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) { return currentExtension; }\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tries to get the absolute file path of the parent module.\x0d\n * @param {Module} parent The parent module object.\x0d\n */\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) { return false; }\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Attempt to resolve a module request using the parent module package metadata.\x0d\n * @param {string} parentPath The path of the parent module\x0d\n * @param {string} request The module request to resolve\x0d\n */\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) { return false; }\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = packageJsonReader.readPackageScope(parentPath);\x0d\n  if (!pkg || pkg.exports == null || pkg.name === undefined) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const { packageExportsResolve } = require('internal/modules/esm/resolve');\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C getCjsConditions())\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    }\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This only applies to requests of a specific form:\x0d\n * 1. `name/.*`\x0d\n * 2. `@scope/name/.*`\x0d\n */\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\n\x0d\n/**\x0d\n * Resolves the exports for a given module path and request.\x0d\n * @param {string} nmPath The path to the module.\x0d\n * @param {string} request The request for the module.\x0d\n */\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\x0d\n  if (!name) { return; }\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = _readPackage(pkgPath);\x0d\n  if (pkg.exists && pkg.exports != null) {\x0d\n    try {\x0d\n      const { packageExportsResolve } = require('internal/modules/esm/resolve');\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        getCjsConditions())\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the absolute path to a module.\x0d\n * @param {string} request Relative or absolute file path\x0d\n * @param {Array<string>} paths Folders to search as file paths\x0d\n * @param {boolean} isMain Whether the request is the main app entry point\x0d\n * @returns {string | false}\x0d\n */\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry) {\x0d\n    return entry;\x0d\n  }\x0d\n\x0d\n  let exts;\x0d\n  const trailingSlash = request.length > 0 &&\x0d\n    (StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH || (\x0d\n      StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_DOT &&\x0d\n      (\x0d\n        request.length === 1 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_FORWARD_SLASH ||\x0d\n        (StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_DOT && (\x0d\n          request.length === 2 ||\x0d\n          StringPrototypeCharCodeAt(request\x2C request.length - 3) === CHAR_FORWARD_SLASH\x0d\n        ))\x0d\n      )\x0d\n    ));\x0d\n\x0d\n  const isRelative = StringPrototypeCharCodeAt(request\x2C 0) === CHAR_DOT &&\x0d\n    (\x0d\n      request.length === 1 ||\x0d\n      StringPrototypeCharCodeAt(request\x2C 1) === CHAR_FORWARD_SLASH ||\x0d\n      (isWindows && StringPrototypeCharCodeAt(request\x2C 1) === CHAR_BACKWARD_SLASH) ||\x0d\n      (StringPrototypeCharCodeAt(request\x2C 1) === CHAR_DOT && ((\x0d\n        request.length === 2 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C 2) === CHAR_FORWARD_SLASH) ||\x0d\n        (isWindows && StringPrototypeCharCodeAt(request\x2C 2) === CHAR_BACKWARD_SLASH)))\x0d\n    );\x0d\n  let insidePath = true;\x0d\n  if (isRelative) {\x0d\n    const normalizedRequest = path.normalize(request);\x0d\n    if (StringPrototypeStartsWith(normalizedRequest\x2C '..')) {\x0d\n      insidePath = false;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    // or doesn't have permission to it\x0d\n    const curPath = paths[i];\x0d\n    if (insidePath && curPath &&\x0d\n      ((permission.isEnabled() && !permission.has('fs.read'\x2C curPath)) || _stat(curPath) < 1)\x0d\n    ) {\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved) {\x0d\n        return exportsResolved;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = _stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (getOptionValue('--preserve-symlinks')) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (getOptionValue('--preserve-symlinks-main')) {\x0d\n          // For the main module\x2C we use the --preserve-symlinks-main flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the --preserve-symlinks-main option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined) {\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        }\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined) {\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      }\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n\x0d\n    const extensions = [''];\x0d\n    if (exts !== undefined) {\x0d\n      ArrayPrototypePushApply(extensions\x2C exts);\x0d\n    }\x0d\n    reportModuleNotFoundToWatchMode(basePath\x2C extensions);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n/** `node_modules` character codes reversed */\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  /**\x0d\n   * Get the paths to the `node_modules` folder for a given path.\x0d\n   * @param {string} from `__dirname` of the module\x0d\n   */\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON) {\x0d\n      return [from + 'node_modules'];\x0d\n    }\x0d\n\x0d\n    /** @type {string[]} */\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen) {\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x2C\x0d\n          );\x0d\n        }\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  /**\x0d\n   * Get the paths to the `node_modules` folder for a given path.\x0d\n   * @param {string} from `__dirname` of the module\x0d\n   */\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/') {\x0d\n      return ['/node_modules'];\x0d\n    }\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    /** @type {string[]} */\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen) {\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x2C\x0d\n          );\x0d\n        }\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the paths for module resolution.\x0d\n * @param {string} request\x0d\n * @param {Module} parent\x0d\n */\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (BuiltinModule.normalizeRequirableId(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    /** @type {string[]} */\x0d\n    let paths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeSlice(modulePaths);\x0d\n      ArrayPrototypeUnshiftApply(paths\x2C parent.paths);\x0d\n    } else {\x0d\n      paths = modulePaths;\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Emits a warning when a non-existent property of module exports is accessed inside a circular dependency.\x0d\n * @param {string} prop The name of the non-existent property.\x0d\n */\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') { return target[prop]; }\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule') {\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    }\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Returns the exports object for a module that has a circular `require`.\x0d\n * If the exports object is a plain object\x2C it is wrapped in a proxy that warns\x0d\n * about circular dependencies.\x0d\n * @param {Module} module The module instance\x0d\n */\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Load a module from cache if it exists\x2C otherwise create a new module instance.\x0d\n * 1. If a module already exists in the cache: return its exports object.\x0d\n * 2. If the module is native: call\x0d\n *    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n * 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n *    Then have it load the file contents before returning its exports object.\x0d\n * @param {string} request Specifier of module to load via `require`\x0d\n * @param {string} parent Absolute path of the module importing the child\x0d\n * @param {boolean} isMain Whether the module is the main entry point\x0d\n */\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    reportModuleToWatchMode(filename);\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded) {\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        }\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(request\x2C 5);\x0d\n\x0d\n    if (!BuiltinModule.canBeRequiredByUsers(id)) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\x0d\n    }\x0d\n\x0d\n    const module = loadBuiltinModule(id\x2C request);\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded) {\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      }\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (BuiltinModule.canBeRequiredWithoutScheme(filename)) {\x0d\n    const mod = loadBuiltinModule(filename\x2C request);\x0d\n    return mod.exports;\x0d\n  }\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    setOwnProperty(process\x2C 'mainModule'\x2C module);\x0d\n    setOwnProperty(module.require\x2C 'main'\x2C process.mainModule);\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  reportModuleToWatchMode(filename);\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Given a `require` string and its context\x2C get its absolute file path.\x0d\n * @param {string} request The specifier to resolve\x0d\n * @param {Module} parent The module containing the `require` call\x0d\n * @param {boolean} isMain Whether the module is the main entry point\x0d\n * @param {ResolveFilenameOptions} options Options object\x0d\n * @typedef {object} ResolveFilenameOptions\x0d\n * @property {string[]} paths Paths to search for modules in\x0d\n */\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (BuiltinModule.normalizeRequirableId(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j])) {\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\x0d\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\x0d\n    const pkg = packageJsonReader.readPackageScope(parentPath) || { __proto__: null };\x0d\n    if (pkg.data?.imports != null) {\x0d\n      try {\x0d\n        const { packageImportsResolve } = require('internal/modules/esm/resolve');\x0d\n        return finalizeEsmResolution(\x0d\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\x0d\n                                getCjsConditions())\x2C parentPath\x2C\x0d\n          pkg.path);\x0d\n      } catch (e) {\x0d\n        if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n          throw createEsmNotFoundErr(request);\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain);\x0d\n  if (filename) { return filename; }\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Finishes resolving an ES module specifier into an absolute file path.\x0d\n * @param {string} resolved The resolved module specifier\x0d\n * @param {string} parentPath The path of the parent module\x0d\n * @param {string} pkgPath The path of the package.json file\x0d\n * @throws {ERR_INVALID_MODULE_SPECIFIER} If the resolved module specifier contains encoded `/` or `\\\\` characters\x0d\n * @throws {Error} If the module cannot be found\x0d\n */\x0d\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\x0d\n  const { encodedSepRegEx } = require('internal/modules/esm/resolve');\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  }\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  const actual = tryFile(filename);\x0d\n  if (actual) {\x0d\n    return actual;\x0d\n  }\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates an error object for when a requested ES module cannot be found.\x0d\n * @param {string} request The name of the requested module\x0d\n * @param {string} [path] The path to the requested module\x0d\n */\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path) {\x0d\n    err.path = path;\x0d\n  }\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Given a file name\x2C pass it to the proper extension handler.\x0d\n * @param {string} filename The `require` specifier\x0d\n */\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs']) {\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n  }\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const cascadedLoader = getCascadedLoader();\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !cascadedLoader.cjsCache.has(this)) {\x0d\n    cascadedLoader.cjsCache.set(this\x2C exports);\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Loads a module at the given file path. Returns that module's `exports` property.\x0d\n * Note: when using the experimental policy mechanism this function is overridden.\x0d\n * @param {string} id\x0d\n * @throws {ERR_INVALID_ARG_TYPE} When `id` is not a string\x0d\n */\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Resolved path to `process.argv[1]` will be lazily placed here\x0d\n * (needed for setting breakpoint when called with `--inspect-brk`).\x0d\n * @type {string | undefined}\x0d\n */\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n/** @type {import('vm').Script} */\x0d\n\x0d\n/**\x0d\n * Wraps the given content in a script and runs it in a new context.\x0d\n * @param {string} filename The name of the file being loaded\x0d\n * @param {string} content The content of the file being loaded\x0d\n * @param {Module} cjsModuleInstance The CommonJS loader instance\x0d\n * @param {object} codeCache The SEA code cache\x0d\n */\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance\x2C codeCache) {\x0d\n  const hostDefinedOptionId = Symbol(`cjs:${filename}`);\x0d\n  async function importModuleDynamically(specifier\x2C _\x2C importAttributes) {\x0d\n    const cascadedLoader = getCascadedLoader();\x0d\n    return cascadedLoader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                                 importAttributes);\x0d\n  }\x0d\n  if (patched) {\x0d\n    const wrapped = Module.wrap(content);\x0d\n    const script = makeContextifyScript(\x0d\n      wrapped\x2C                 // code\x0d\n      filename\x2C                // filename\x0d\n      0\x2C                       // lineOffset\x0d\n      0\x2C                       // columnOffset\x0d\n      undefined\x2C               // cachedData\x0d\n      false\x2C                   // produceCachedData\x0d\n      undefined\x2C               // parsingContext\x0d\n      hostDefinedOptionId\x2C     // hostDefinedOptionId\x0d\n      importModuleDynamically\x2C // importModuleDynamically\x0d\n    );\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (script.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C script.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return runScriptInThisContext(script\x2C true\x2C false);\x0d\n  }\x0d\n\x0d\n  const params = [ 'exports'\x2C 'require'\x2C 'module'\x2C '__filename'\x2C '__dirname' ];\x0d\n  try {\x0d\n    const result = internalCompileFunction(\x0d\n      content\x2C                           // code\x2C\x0d\n      filename\x2C                          // filename\x0d\n      0\x2C                                 // lineOffset\x0d\n      0\x2C                                 // columnOffset\x2C\x0d\n      codeCache\x2C                         // cachedData\x0d\n      false\x2C                             // produceCachedData\x0d\n      undefined\x2C                         // parsingContext\x0d\n      undefined\x2C                         // contextExtensions\x0d\n      params\x2C                            // params\x0d\n      hostDefinedOptionId\x2C               // hostDefinedOptionId\x0d\n      importModuleDynamically\x2C           // importModuleDynamically\x0d\n    );\x0d\n\x0d\n    // The code cache is used for SEAs only.\x0d\n    if (codeCache &&\x0d\n        result.cachedDataRejected !== false &&\x0d\n        internalBinding('sea').isSea()) {\x0d\n      process.emitWarning('Code cache data rejected.');\x0d\n    }\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (result.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C result.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return result.function;\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance) {\x0d\n      const { enrichCJSError } = require('internal/modules/esm/translators');\x0d\n      enrichCJSError(err\x2C content\x2C filename);\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Run the file contents in the correct scope or sandbox. Expose the correct helper variables (`require`\x2C `module`\x2C\x0d\n * `exports`) to the file. Returns exception\x2C if any.\x0d\n * @param {string} content The source code of the module\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = manifest.getDependencyMapper(moduleURL);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) { statCache = new SafeMap(); }\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) { statCache = null; }\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.js` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = packageJsonReader.readPackageScope(filename) || { __proto__: null };\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg.data?.type === 'module') {\x0d\n      // This is an error path because `require` of a `.js` file in a `"type": "module"` scope is not allowed.\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = containsModuleSyntax(content\x2C filename);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.json` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.node` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a `require` function that can be used to load modules from the specified path.\x0d\n * @param {string} filename The path to the module\x0d\n */\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\n/**\x0d\n * Creates a new `require` function that can be used to load modules.\x0d\n * @param {string | URL} filename The path or URL to the module context for this `require`\x0d\n * @throws {ERR_INVALID_ARG_VALUE} If `filename` is not a string or URL\x2C or if it is a relative path that cannot be\x0d\n * resolved to an absolute path.\x0d\n */\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURL(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\n/**\x0d\n * Define the paths to use for resolving a module.\x0d\n */\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x2C\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Handle modules loaded via `--require`.\x0d\n * @param {string[]} requests The values of `--require`\x0d\n */\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests)) { return; }\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++) {\x0d\n    internalRequire(parent\x2C requests[n]);\x0d\n  }\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\n/**\x0d\n * If the user has overridden an export from a builtin module\x2C this function can ensure that the override is used in\x0d\n * both CommonJS and ES module contexts.\x0d\n */\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of BuiltinModule.map.values()) {\x0d\n    if (BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'constructor'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return policy() ? undefined : Module;\x0d\n  }\x2C\x0d\n  configurable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x121eb118624,63,11096,11588,C0O11200C5O11214C10O11214C15O11261C20O11285C23O11285C27O11283C31O11320C36O11320C39O11352C44O11357C48O11377C54O11406C57O11413C62O11413C66O11504C75O11526C80O11562C84O11519C89O11587,,
code-creation,JS,10,96845,0x121eb11b9ec,19,getCanBeRequiredByUsersWithoutSchemeList node:internal/bootstrap/realm:313:50,0xfca8d34230,~
code-source-info,0x121eb11b9ec,9,10191,10262,C0O10201C11O10218C14O10208C18O10257,,
code-creation,JS,10,96928,0x121eb11bad4,13,desc.value node:internal/per_context/primordials:388:32,0xfca8d31de0,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringFromCharCode'\x2C\x0d\n  'StringFromCodePoint'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x2C\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'Atomics'\x2C\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Define Symbol.dispose and Symbol.asyncDispose\x0d\n// Until these are defined by the environment.\x0d\n// TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\x0d\nprimordials.SymbolDispose ??= primordials.SymbolFor('nodejs.dispose');\x0d\nprimordials.SymbolAsyncDispose ??= primordials.SymbolFor('nodejs.asyncDispose');\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  Array: ArrayConstructor\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectSet\x2C\x0d\n  ReflectGet\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototype\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetFlags\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolMatch\x2C\x0d\n  SymbolMatchAll\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSearch\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolSplit\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n\x0d\n/**\x0d\n * Creates a class that can be safely iterated over.\x0d\n *\x0d\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\x0d\n * `primordials` object\x2C it's important to use const references to the\x0d\n * primordials that they use.\x0d\n * @template {Iterable} T\x0d\n * @template {*} TReturn\x0d\n * @template {*} TNext\x0d\n * @param {(self: T) => IterableIterator<T>} factory\x0d\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\x0d\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\x0d\n */\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x2C\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x2C\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\x0d\n  new primordials.SafeArrayIterator(\x0d\n    ArrayPrototypeMap(\x0d\n      promises\x2C\x0d\n      (promise\x2C i) =>\x0d\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\x0d\n    )\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used for internal functions\x2C this would produce similar\x0d\n * results as `Promise.all` but without prototype pollution\x2C and the return\x0d\n * value is not a genuine Array but an array-like object.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<ArrayLike<Awaited<U>>>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    const { length } = promises;\x0d\n\x0d\n    const returnVal = ArrayConstructor(length);\x0d\n    ObjectSetPrototypeOf(returnVal\x2C null);\x0d\n    if (length === 0) resolve(returnVal);\x0d\n\x0d\n    let pendingPromises = length;\x0d\n    for (let i = 0; i < length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\x0d\n        returnVal[i] = result;\x0d\n        if (--pendingPromises === 0) resolve(returnVal);\x0d\n      }\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * resolve\x2C not what value they resolve to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    let pendingPromises = promises.length;\x0d\n    if (pendingPromises === 0) resolve();\x0d\n    for (let i = 0; i < promises.length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C () => {\x0d\n        if (--pendingPromises === 0) resolve();\x0d\n      }\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<PromiseSettledResult<any>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * settle\x2C not what value they resolve or reject to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettledReturnVoid = async (promises\x2C mapFn) => {\x0d\n  await primordials.SafePromiseAllSettled(promises\x2C mapFn);\x0d\n};\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n\x0d\nconst {\x0d\n  exec: OriginalRegExpPrototypeExec\x2C\x0d\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n} = RegExpPrototype;\x0d\n\x0d\nclass RegExpLikeForStringSplitting {\x0d\n  #regex;\x0d\n  constructor() {\x0d\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\x0d\n  }\x0d\n\x0d\n  get lastIndex() {\x0d\n    return ReflectGet(this.#regex\x2C 'lastIndex');\x0d\n  }\x0d\n  set lastIndex(value) {\x0d\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\x0d\n  }\x0d\n\x0d\n  exec() {\x0d\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\x0d\n\x0d\n/**\x0d\n * @param {RegExp} pattern\x0d\n * @returns {RegExp}\x0d\n */\x0d\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\x0d\n  ObjectDefineProperties(pattern\x2C {\x0d\n    [SymbolMatch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n    }\x2C\x0d\n    [SymbolMatchAll]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n    }\x2C\x0d\n    [SymbolReplace]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n    }\x2C\x0d\n    [SymbolSearch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n    }\x2C\x0d\n    [SymbolSplit]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n    }\x2C\x0d\n    constructor: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: {\x0d\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\x0d\n      }\x2C\x0d\n    }\x2C\x0d\n    dotAll: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\x0d\n    }\x2C\x0d\n    exec: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeExec\x2C\x0d\n    }\x2C\x0d\n    global: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\x0d\n    }\x2C\x0d\n    hasIndices: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\x0d\n    }\x2C\x0d\n    ignoreCase: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\x0d\n    }\x2C\x0d\n    multiline: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\x0d\n    }\x2C\x0d\n    source: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSource(pattern)\x2C\x0d\n    }\x2C\x0d\n    sticky: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSticky(pattern)\x2C\x0d\n    }\x2C\x0d\n    unicode: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: RegExpPrototypeGetFlags(pattern)\x2C\x0d\n  });\x0d\n  return pattern;\x0d\n};\x0d\n\x0d\n\x0d\n/**\x0d\n * @param {string} str\x0d\n * @param {RegExp} regexp\x0d\n * @returns {number}\x0d\n */\x0d\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\x0d\n  regexp.lastIndex = 0;\x0d\n  const match = RegExpPrototypeExec(regexp\x2C str);\x0d\n  return match ? match.index : -1;\x0d\n};\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x121eb11bad4,6,11647,11708,C0O11665C7O11672C12O11695,,
code-creation,JS,10,97855,0x121eb11d314,13,SafeIterator node:internal/per_context/primordials:333:16,0xfca8d31518,~
code-source-info,0x121eb11d314,6,9855,9917,C0O9875C3O9892C7O9890C12O9916,,
code-creation,JS,10,97901,0x121eb11d51c,13,next node:internal/per_context/primordials:336:9,0xfca8d31570,~
code-source-info,0x121eb11d51c,6,9927,9974,C0O9939C3O9956C8O9946C12O9967,,
code-creation,JS,10,98014,0x121eb11d80c,156,initializeCjsConditions node:internal/modules/helpers:65:33,0x22671cb81c0,~
script-source,64,node:internal/modules/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst fs = require('fs'); // Import all of `fs` so that it can be monkey-patched.\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { setOwnProperty } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    require_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\n/** @typedef {import('internal/modules/cjs/loader.js').Module} Module */\x0d\n\x0d\n/**\x0d\n * Cache for storing resolved real paths of modules.\x0d\n * In order to minimize unnecessary lstat() calls\x2C this cache is a list of known-real paths.\x0d\n * Set to an empty Map to reset.\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst realpathCache = new SafeMap();\x0d\n/**\x0d\n * Resolves the path of a given `require` specifier\x2C following symlinks.\x0d\n * @param {string} requestPath The `require` specifier\x0d\n */\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n/** @type {Set<string>} */\x0d\nlet cjsConditions;\x0d\n/**\x0d\n * Define the conditions that apply to the CommonJS loader.\x0d\n */\x0d\nfunction initializeCjsConditions() {\x0d\n  const userConditions = getOptionValue('--conditions');\x0d\n  const noAddons = getOptionValue('--no-addons');\x0d\n  const addonConditions = noAddons ? [] : ['node-addons'];\x0d\n  // TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\n  cjsConditions = new SafeSet([\x0d\n    'require'\x2C\x0d\n    'node'\x2C\x0d\n    ...addonConditions\x2C\x0d\n    ...userConditions\x2C\x0d\n  ]);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the conditions that apply to the CommonJS loader.\x0d\n */\x0d\nfunction getCjsConditions() {\x0d\n  if (cjsConditions === undefined) {\x0d\n    initializeCjsConditions();\x0d\n  }\x0d\n  return cjsConditions;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Provide one of Node.js' public modules to user code.\x0d\n * @param {string} id - The identifier/specifier of the builtin module to load\x0d\n * @param {string} request - The module requiring or importing the builtin module\x0d\n */\x0d\nfunction loadBuiltinModule(id\x2C request) {\x0d\n  if (!BuiltinModule.canBeRequiredByUsers(id)) {\x0d\n    return;\x0d\n  }\x0d\n  /** @type {import('internal/bootstrap/realm.js').BuiltinModule} */\x0d\n  const mod = BuiltinModule.map.get(id);\x0d\n  debug('load built-in module %s'\x2C request);\x0d\n  // compileForPublicLoader() throws if canBeRequiredByUsers is false:\x0d\n  mod.compileForPublicLoader();\x0d\n  return mod;\x0d\n}\x0d\n\x0d\n/** @type {Module} */\x0d\nlet $Module = null;\x0d\n/**\x0d\n * Import the Module class on first use.\x0d\n */\x0d\nfunction lazyModule() {\x0d\n  $Module = $Module || require('internal/modules/cjs/loader').Module;\x0d\n  return $Module;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invoke with `makeRequireFunction(module)` where `module` is the `Module` object to use as the context for the\x0d\n * `require()` function.\x0d\n * Use redirects to set up a mapping from a policy and restrict dependencies.\x0d\n */\x0d\nconst urlToFileCache = new SafeMap();\x0d\n/**\x0d\n * Create the module-scoped `require` function to pass into CommonJS modules.\x0d\n * @param {Module} mod - The module to create the `require` function for.\x0d\n * @param {ReturnType<import('internal/policy/manifest.js').Manifest['getDependencyMapper']>} redirects\x0d\n * @typedef {(specifier: string) => unknown} RequireFunction\x0d\n */\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  // lazy due to cycle\x0d\n  const Module = lazyModule();\x0d\n  if (mod instanceof Module !== true) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mod'\x2C 'Module'\x2C mod);\x0d\n  }\x0d\n\x0d\n  /** @type {RequireFunction} */\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = getCjsConditions();\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const { href\x2C protocol } = destination;\x0d\n        if (protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n\x0d\n          if (BuiltinModule.canBeRequiredByUsers(specifier)) {\x0d\n            const mod = loadBuiltinModule(specifier\x2C href);\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (protocol === 'file:') {\x0d\n          let filepath = urlToFileCache.get(href);\x0d\n          if (!filepath) {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod[require_private_symbol](mod\x2C filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x2C\x0d\n        ));\x0d\n      }\x0d\n      return mod[require_private_symbol](mod\x2C specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      // When no policy manifest\x2C the original prototype.require is sustained\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * The `resolve` method that gets attached to module-scope `require`.\x0d\n   * @param {string} request\x0d\n   * @param {Parameters<Module['_resolveFilename']>[3]} options\x0d\n   */\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  /**\x0d\n   * The `paths` method that gets attached to module-scope `require`.\x0d\n   * @param {string} request\x0d\n   */\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  setOwnProperty(require\x2C 'main'\x2C process.mainModule);\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n * @param {string} content\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add built-in modules to a global or REPL scope object.\x0d\n * @param {Record<string\x2C unknown>} object - The object such as `globalThis` to add the built-in modules to.\x0d\n * @param {string} dummyModuleName - The label representing the set of built-in modules to add.\x0d\n */\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        try {\x0d\n          // Override the current getter/setter and set up a new\x0d\n          // non-enumerable property.\x0d\n          ObjectDefineProperty(object\x2C name\x2C {\x0d\n            __proto__: null\x2C\x0d\n            get: () => lib\x2C\x0d\n            set: setReal\x2C\x0d\n            configurable: true\x2C\x0d\n            enumerable: false\x2C\x0d\n          });\x0d\n        } catch {\x0d\n          // If the property is no longer configurable\x2C ignore the error.\x0d\n        }\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * If a referrer is an URL instance or absolute path\x2C convert it into an URL string.\x0d\n * @param {string | URL} referrer\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  getCjsConditions\x2C\x0d\n  initializeCjsConditions\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n  toRealPath\x2C\x0d\n};\x0d\n
code-source-info,0x121eb11d80c,64,1870,2241,C0O1901C8O1901C13O1953C19O1953C24O2011C35O2124C48O2191C93O2216C140O2140C148O2138C155O2240,,
code-creation,JS,10,98503,0x121eb11e59c,299,Module._initPaths node:internal/modules/cjs/loader:1530:29,0x22671cb7a18,~
code-source-info,0x121eb11e59c,63,51222,52207,C0O51246C9O51266C14O51270C22O51284C28O51284C33O51324C40O51344C45O51348C53O51360C59O51360C64O51559C70O51576C73O51581C81O51597C89O51581C99O51620C102O51625C110O51641C121O51625C127O51683C137O51689C151O51689C163O51730C167O51750C175O51784C183O51784C190O51750C195O51827C201O51861C209O51861C216O51827C221O51907C225O51928C232O51962C237O51991C243O52027C248O51991C256O52046C259O51962C265O51928C270O52074C272O52086C278O52150C283O52171C289O52171C293O52169C298O52206,,
code-creation,JS,11,98654,0x7ff62c4c44c0,356,isWindowsDeviceRoot node:path:60:29,0x22671c9a870,^
code-source-info,0x7ff62c4c44c0,34,1991,2136,,,
code-creation,JS,11,98683,0x7ff62c4c4680,268,SafeMap node:internal/per_context/primordials:414:16,0xfca8d31fb8,^
code-source-info,0x7ff62c4c4680,6,12401,12418,,,
code-creation,JS,11,98707,0x7ff62c4c47c0,288,getCLIOptionsFromBinding node:internal/options:18:34,0x22671c830d8,^
code-source-info,0x7ff62c4c47c0,17,514,620,,,
code-creation,JS,11,98772,0x7ff62c4c4900,504,getOptionValue node:internal/options:44:24,0x22671c83310,^
code-source-info,0x7ff62c4c4900,17,1028,1278,,,
code-creation,JS,11,98794,0x7ff62c4c4b40,424,addReadOnlyProcessAlias node:internal/process/pre_execution:249:33,0x22671cb9b78,^
code-source-info,0x7ff62c4c4b40,67,8056,8316,,,
code-creation,JS,11,98858,0x7ff62c4c4d40,132,exposeLazyInterfaces node:internal/util:687:30,0x22671c824d8,^
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferPrototypeGetByteLength\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  isArrayBufferDetached: _isArrayBufferDetached\x2C\x0d\n  guessHandleType: _guessHandleType\x2C\x0d\n  privateSymbols: {\x0d\n    arrow_message_private_symbol\x2C\x0d\n    decorated_private_symbol\x2C\x0d\n  }\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError\x2C isPromise } = internalBinding('types');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\nfunction getDeprecationWarningEmitter(\x0d\n  code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\x0d\n  shouldEmitWarning = () => true\x2C\x0d\n) {\x0d\n  let warned = false;\x0d\n  return function() {\x0d\n    if (!warned && shouldEmitWarning()) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          const emitWarning = useEmitSync ?\x0d\n            require('internal/process/warning').emitWarningSync :\x0d\n            process.emitWarning;\x0d\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction isPendingDeprecation() {\x0d\n  return getOptionValue('--pending-deprecation') &&\x0d\n    !getOptionValue('--no-deprecation');\x0d\n}\x0d\n\x0d\n// Internal deprecator for pending --pending-deprecation. This can be invoked\x0d\n// at snapshot building time as the warning permission is only queried at\x0d\n// run time.\x0d\nfunction pendingDeprecate(fn\x2C msg\x2C code) {\x0d\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\x0d\n    code\x2C msg\x2C deprecated\x2C false\x2C isPendingDeprecation\x2C\x0d\n  );\x0d\n  function deprecated(...args) {\x0d\n    emitDeprecationWarning();\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\x0d\n    code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\x0d\n  );\x0d\n\x0d\n  function deprecated(...args) {\x0d\n    emitDeprecationWarning();\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\x0d\n    return;\x0d\n\x0d\n  const arrow = err[arrow_message_private_symbol];\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    err[decorated_private_symbol] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature and might change at any time`;\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { __proto__: null\x2C value: type.name }\x2C\x0d\n    length: { __proto__: null\x2C value: type.length }\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = { __proto__: null };\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nlet cachedURL;\x0d\nlet cachedCWD;\x0d\n\x0d\n/**\x0d\n * Get the current working directory while accounting for the possibility that it has been deleted.\x0d\n * `process.cwd()` can fail if the parent directory is deleted while the process runs.\x0d\n * @returns {URL} The current working directory or the volume root if it cannot be determined.\x0d\n */\x0d\nfunction getCWDURL() {\x0d\n  const { sep } = require('path');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  let cwd;\x0d\n\x0d\n  try {\x0d\n    // The implementation of `process.cwd()` already uses proper cache when it can.\x0d\n    // It's a relatively cheap call performance-wise for the most common use case.\x0d\n    cwd = process.cwd();\x0d\n  } catch {\x0d\n    cachedURL ??= pathToFileURL(sep);\x0d\n  }\x0d\n\x0d\n  if (cwd != null && cwd !== cachedCWD) {\x0d\n    cachedURL = pathToFileURL(cwd + sep);\x0d\n    cachedCWD = cwd;\x0d\n  }\x0d\n\x0d\n  return cachedURL;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      if (isPromise(ReflectApply(original\x2C this\x2C args))) {\x0d\n        process.emitWarning('Calling promisify on a function that returns a Promise is likely a mistake.'\x2C\x0d\n                            'DeprecationWarning'\x2C 'DEP0174');\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\x0d\n  const propertiesValues = ObjectValues(descriptors);\x0d\n  for (let i = 0; i < propertiesValues.length; i++) {\x0d\n    // We want to use null-prototype objects to not rely on globally mutable\x0d\n    // %Object.prototype%.\x0d\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n  }\x0d\n  return ObjectDefineProperties(fn\x2C descriptors);\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\x0d\n        continue;\x0d\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    return ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction exposeGetterAndSetter(target\x2C name\x2C getter\x2C setter = undefined) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get: getter\x2C\x0d\n    set: setter\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction defineLazyProperties(target\x2C id\x2C keys\x2C enumerable = true) {\x0d\n  const descriptors = { __proto__: null };\x0d\n  let mod;\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    let lazyLoadedValue;\x0d\n    function set(value) {\x0d\n      ObjectDefineProperty(target\x2C key\x2C {\x0d\n        __proto__: null\x2C\x0d\n        writable: true\x2C\x0d\n        value\x2C\x0d\n      });\x0d\n    }\x0d\n    ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `set ${key}`\x2C\x0d\n    });\x0d\n    function get() {\x0d\n      mod ??= require(id);\x0d\n      if (lazyLoadedValue === undefined) {\x0d\n        lazyLoadedValue = mod[key];\x0d\n        set(lazyLoadedValue);\x0d\n      }\x0d\n      return lazyLoadedValue;\x0d\n    }\x0d\n    ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `get ${key}`\x2C\x0d\n    });\x0d\n    descriptors[key] = {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      get\x2C\x0d\n      set\x2C\x0d\n    };\x0d\n  }\x0d\n  ObjectDefineProperties(target\x2C descriptors);\x0d\n}\x0d\n\x0d\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\x0d\n  let mod;\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    let value;\x0d\n    let setterCalled = false;\x0d\n\x0d\n    function get() {\x0d\n      if (check !== undefined) {\x0d\n        FunctionPrototypeCall(check\x2C this);\x0d\n      }\x0d\n      if (setterCalled) {\x0d\n        return value;\x0d\n      }\x0d\n      mod ??= require(id);\x0d\n      value ??= mod[key];\x0d\n      return value;\x0d\n    }\x0d\n\x0d\n    ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `get ${key}`\x2C\x0d\n    });\x0d\n\x0d\n    function set(val) {\x0d\n      setterCalled = true;\x0d\n      value = val;\x0d\n    }\x0d\n    ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `set ${key}`\x2C\x0d\n    });\x0d\n\x0d\n    ObjectDefineProperty(target\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      get\x2C\x0d\n      set: writable ? set : undefined\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\x0d\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\x0d\n}\x0d\n\x0d\nlet _DOMException;\x0d\nconst lazyDOMExceptionClass = () => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return _DOMException;\x0d\n};\x0d\n\x0d\nconst lazyDOMException = (message\x2C name) => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  if (isErrorStackTraceLimitWritable()) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    Error.stackTraceLimit = 0;\x0d\n    const ex = new _DOMException(message\x2C name);\x0d\n    Error.stackTraceLimit = limit;\x0d\n    ErrorCaptureStackTrace(ex\x2C lazyDOMException);\x0d\n    return ex;\x0d\n  }\x0d\n  return new _DOMException(message\x2C name);\x0d\n\x0d\n};\x0d\n\x0d\nconst kEnumerableProperty = { __proto__: null };\x0d\nkEnumerableProperty.enumerable = true;\x0d\nObjectFreeze(kEnumerableProperty);\x0d\n\x0d\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\x0d\n\x0d\nfunction filterOwnProperties(source\x2C keys) {\x0d\n  const filtered = { __proto__: null };\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\x0d\n      filtered[key] = source[key];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return filtered;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\x0d\n * @param {any} obj\x0d\n * @param {string} key\x0d\n * @param {any} value\x0d\n * @returns {any}\x0d\n */\x0d\nfunction setOwnProperty(obj\x2C key\x2C value) {\x0d\n  return ObjectDefineProperty(obj\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet internalGlobal;\x0d\nfunction getInternalGlobal() {\x0d\n  if (internalGlobal == null) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\x0d\n  }\x0d\n  return internalGlobal;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\x0d\n}\x0d\n\x0d\nconst crossRelmRegexes = new SafeWeakMap();\x0d\nfunction getCrossRelmRegex(regex) {\x0d\n  const cached = crossRelmRegexes.get(regex);\x0d\n  if (cached) return cached;\x0d\n\x0d\n  let flagString = '';\x0d\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\x0d\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\x0d\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\x0d\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\x0d\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\x0d\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\x0d\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\x0d\n\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  const crossRelmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\x0d\n  crossRelmRegexes.set(regex\x2C crossRelmRegex);\x0d\n  return crossRelmRegex;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\x0d\n  return getCrossRelmRegex(regex)[SymbolReplace](string\x2C replacement);\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\x0d\n  return getCrossRelmRegex(regex)[SymbolSplit](string\x2C limit);\x0d\n}\x0d\n\x0d\n\x0d\nfunction isArrayBufferDetached(value) {\x0d\n  if (ArrayBufferPrototypeGetByteLength(value) === 0) {\x0d\n    return _isArrayBufferDetached(value);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Helper function to lazy-load an initialize-once value.\x0d\n * @template T Return value of initializer\x0d\n * @param {()=>T} initializer Initializer of the lazily loaded value.\x0d\n * @returns {()=>T}\x0d\n */\x0d\nfunction getLazy(initializer) {\x0d\n  let value;\x0d\n  let initialized = false;\x0d\n  return function() {\x0d\n    if (initialized === false) {\x0d\n      value = initializer();\x0d\n      initialized = true;\x0d\n    }\x0d\n    return value;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage objects to a specified directory.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\n\x0d\nconst handleTypes = ['TCP'\x2C 'TTY'\x2C 'UDP'\x2C 'FILE'\x2C 'PIPE'\x2C 'UNKNOWN'];\x0d\nfunction guessHandleType(fd) {\x0d\n  const type = _guessHandleType(fd);\x0d\n  return handleTypes[type];\x0d\n}\x0d\n\x0d\nclass WeakReference {\x0d\n  #weak = null;\x0d\n  #strong = null;\x0d\n  #refCount = 0;\x0d\n  constructor(object) {\x0d\n    this.#weak = new SafeWeakRef(object);\x0d\n  }\x0d\n\x0d\n  incRef() {\x0d\n    this.#refCount++;\x0d\n    if (this.#refCount === 1) {\x0d\n      const derefed = this.#weak.deref();\x0d\n      if (derefed !== undefined) {\x0d\n        this.#strong = derefed;\x0d\n      }\x0d\n    }\x0d\n    return this.#refCount;\x0d\n  }\x0d\n\x0d\n  decRef() {\x0d\n    this.#refCount--;\x0d\n    if (this.#refCount === 0) {\x0d\n      this.#strong = null;\x0d\n    }\x0d\n    return this.#refCount;\x0d\n  }\x0d\n\x0d\n  get() {\x0d\n    return this.#weak.deref();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getLazy\x2C\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  defineLazyProperties\x2C\x0d\n  defineReplaceableLazyAttribute\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  exposeLazyInterfaces\x2C\x0d\n  exposeNamespace\x2C\x0d\n  exposeGetterAndSetter\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  filterOwnProperties\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getCWDURL\x2C\x0d\n  getInternalGlobal\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  guessHandleType\x2C\x0d\n  isArrayBufferDetached\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  lazyDOMExceptionClass\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  setOwnProperty\x2C\x0d\n  pendingDeprecate\x2C\x0d\n  WeakReference\x2C\x0d\n};\x0d\n
code-source-info,0x7ff62c4c4d40,16,19414,19487,,,
code-creation,JS,11,99920,0x7ff62c4cba80,2488,defineLazyProperties node:internal/util:604:30,0x22671c81ab8,^
code-source-info,0x7ff62c4cba80,16,17494,18436,,,
code-creation,JS,11,99937,0x7ff62c4c4e00,100,next node:internal/per_context/primordials:336:9,0xfca8d31570,^
code-source-info,0x7ff62c4c4e00,6,9927,9974,,,
code-creation,JS,11,99954,0x7ff62c4c4ec0,268,SafeSet node:internal/per_context/primordials:427:16,0xfca8d32208,^
code-source-info,0x7ff62c4c4ec0,6,12743,12760,,,
code-creation,JS,11,100034,0x7ff62c4cc480,5556,resolve node:path:162:10,0x22671c9a9d0,^
code-source-info,0x7ff62c4cc480,34,4971,9889,,,
code-creation,JS,10,100169,0x121eb120afc,91,initializeESMLoader node:internal/process/pre_execution:704:29,0x22671cba368,~
code-source-info,0x121eb120afc,67,22591,23153,C0O22639C6O22639C11O22621C16O22681C20O22848C28O22852C34O22971C40O22971C45O22919C50O22927C55O22945C60O23018C66O23018C71O23038C73O23048C77O23063C79O23083C83O23108C85O23127C90O23152,,
code-creation,JS,10,100243,0x121eb120c6c,50,initializeESM node:internal/modules/esm/utils:202:23,0x22671cb8ff8,~
script-source,66,node:internal/modules/esm/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  ObjectFreeze\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    host_defined_option_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  default_host_defined_options\x2C\x0d\n  vm_dynamic_import_missing_flag\x2C\x0d\n} = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG\x2C\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  loadPreloadModules\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n} = require('internal/process/pre_execution');\x0d\nconst { getCWDURL } = require('internal/util');\x0d\nconst {\x0d\n  setImportModuleDynamicallyCallback\x2C\x0d\n  setInitializeImportMetaObjectCallback\x2C\x0d\n} = internalBinding('module_wrap');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nlet defaultConditions;\x0d\n/**\x0d\n * Returns the default conditions for ES module loading.\x0d\n */\x0d\nfunction getDefaultConditions() {\x0d\n  assert(defaultConditions !== undefined);\x0d\n  return defaultConditions;\x0d\n}\x0d\n\x0d\n/** @type {Set<string>} */\x0d\nlet defaultConditionsSet;\x0d\n/**\x0d\n * Returns the default conditions for ES module loading\x2C as a Set.\x0d\n */\x0d\nfunction getDefaultConditionsSet() {\x0d\n  assert(defaultConditionsSet !== undefined);\x0d\n  return defaultConditionsSet;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Initializes the default conditions for ESM module loading.\x0d\n * This function is called during pre-execution\x2C before any user code is run.\x0d\n */\x0d\nfunction initializeDefaultConditions() {\x0d\n  const userConditions = getOptionValue('--conditions');\x0d\n  const noAddons = getOptionValue('--no-addons');\x0d\n  const addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n  defaultConditions = ObjectFreeze([\x0d\n    'node'\x2C\x0d\n    'import'\x2C\x0d\n    ...addonConditions\x2C\x0d\n    ...userConditions\x2C\x0d\n  ]);\x0d\n  defaultConditionsSet = new SafeSet(defaultConditions);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== getDefaultConditions()) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return getDefaultConditionsSet();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback ImportModuleDynamicallyCallback\x0d\n * @param {string} specifier\x0d\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\x0d\n * @param {Record<string\x2C string>} attributes\x0d\n * @returns { Promise<void> }\x0d\n */\x0d\n\x0d\n/**\x0d\n * @callback InitializeImportMetaCallback\x0d\n * @param {object} meta\x0d\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {{\x0d\n *   callbackReferrer: ModuleWrap|ContextifyScript|Function|vm.Module\x0d\n *   initializeImportMeta? : InitializeImportMetaCallback\x2C\x0d\n *   importModuleDynamically? : ImportModuleDynamicallyCallback\x0d\n * }} ModuleRegistry\x0d\n */\x0d\n\x0d\n/**\x0d\n * @type {WeakMap<symbol\x2C ModuleRegistry>}\x0d\n */\x0d\nconst moduleRegistries = new SafeWeakMap();\x0d\n\x0d\n/**\x0d\n * @typedef {ContextifyScript|Function|ModuleWrap|ContextifiedObject} Referrer\x0d\n * A referrer can be a Script Record\x2C a Cyclic Module Record\x2C or a Realm Record\x0d\n * as defined in https://tc39.es/ecma262/#sec-HostLoadImportedModule.\x0d\n *\x0d\n * In Node.js\x2C a referrer is represented by a wrapper object of these records.\x0d\n * A referrer object has a field |host_defined_option_symbol| initialized with\x0d\n * a symbol.\x0d\n */\x0d\n\x0d\n/**\x0d\n * V8 would make sure that as long as import() can still be initiated from\x0d\n * the referrer\x2C the symbol referenced by |host_defined_option_symbol| should\x0d\n * be alive\x2C which in term would keep the settings object alive through the\x0d\n * WeakMap\x2C and in turn that keeps the referrer object alive\x2C which would be\x0d\n * passed into the callbacks.\x0d\n * The reference goes like this:\x0d\n * [v8::internal::Script] (via host defined options) ----1--> [idSymbol]\x0d\n * [callbackReferrer] (via host_defined_option_symbol) ------2------^  |\x0d\n *                                 ^----------3---- (via WeakMap)------\x0d\n * 1+3 makes sure that as long as import() can still be initiated\x2C the\x0d\n * referrer wrap is still around and can be passed into the callbacks.\x0d\n * 2 is only there so that we can get the id symbol to configure the\x0d\n * weak map.\x0d\n * @param {Referrer} referrer The referrer to\x0d\n *   get the id symbol from. This is different from callbackReferrer which\x0d\n *   could be set by the caller.\x0d\n * @param {ModuleRegistry} registry\x0d\n */\x0d\nfunction registerModule(referrer\x2C registry) {\x0d\n  const idSymbol = referrer[host_defined_option_symbol];\x0d\n  if (idSymbol === default_host_defined_options ||\x0d\n      idSymbol === vm_dynamic_import_missing_flag) {\x0d\n    // The referrer is compiled without custom callbacks\x2C so there is\x0d\n    // no registry to hold on to. We'll throw\x0d\n    // ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING when a callback is\x0d\n    // needed.\x0d\n    return;\x0d\n  }\x0d\n  // To prevent it from being GC'ed.\x0d\n  registry.callbackReferrer ??= referrer;\x0d\n  moduleRegistries.set(idSymbol\x2C registry);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Defines the `import.meta` object for a given module.\x0d\n * @param {symbol} symbol - Reference to the module.\x0d\n * @param {Record<string\x2C string | Function>} meta - The import.meta object to initialize.\x0d\n */\x0d\nfunction initializeImportMetaObject(symbol\x2C meta) {\x0d\n  if (moduleRegistries.has(symbol)) {\x0d\n    const { initializeImportMeta\x2C callbackReferrer } = moduleRegistries.get(symbol);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      meta = initializeImportMeta(meta\x2C callbackReferrer);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously imports a module dynamically using a callback function. The native callback.\x0d\n * @param {symbol} referrerSymbol - Referrer symbol of the registered script\x2C function\x2C module\x2C or contextified object.\x0d\n * @param {string} specifier - The module specifier string.\x0d\n * @param {Record<string\x2C string>} attributes - The import attributes object.\x0d\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} - The imported module object.\x0d\n * @throws {ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING} - If the callback function is missing.\x0d\n */\x0d\nasync function importModuleDynamicallyCallback(referrerSymbol\x2C specifier\x2C attributes) {\x0d\n  if (moduleRegistries.has(referrerSymbol)) {\x0d\n    const { importModuleDynamically\x2C callbackReferrer } = moduleRegistries.get(referrerSymbol);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(specifier\x2C callbackReferrer\x2C attributes);\x0d\n    }\x0d\n  }\x0d\n  if (referrerSymbol === vm_dynamic_import_missing_flag) {\x0d\n    throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG();\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n}\x0d\n\x0d\nlet _isLoaderWorker = false;\x0d\n/**\x0d\n * Initializes handling of ES modules.\x0d\n * This is configured during pre-execution. Specifically it's set to true for\x0d\n * the loader worker in internal/main/worker_thread.js.\x0d\n * @param {boolean} [isLoaderWorker=false] - A boolean indicating whether the loader is a worker or not.\x0d\n */\x0d\nfunction initializeESM(isLoaderWorker = false) {\x0d\n  _isLoaderWorker = isLoaderWorker;\x0d\n  initializeDefaultConditions();\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(importModuleDynamicallyCallback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determine whether the current process is a loader worker.\x0d\n * @returns {boolean} Whether the current process is a loader worker.\x0d\n */\x0d\nfunction isLoaderWorker() {\x0d\n  return _isLoaderWorker;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Register module customization hooks.\x0d\n */\x0d\nasync function initializeHooks() {\x0d\n  const customLoaderURLs = getOptionValue('--experimental-loader');\x0d\n\x0d\n  const { Hooks } = require('internal/modules/esm/hooks');\x0d\n  const esmLoader = require('internal/process/esm_loader').esmLoader;\x0d\n\x0d\n  const hooks = new Hooks();\x0d\n  esmLoader.setCustomizations(hooks);\x0d\n\x0d\n  // We need the loader customizations to be set _before_ we start invoking\x0d\n  // `--require`\x2C otherwise loops can happen because a `--require` script\x0d\n  // might call `register(...)` before we've installed ourselves. These\x0d\n  // global values are magically set in `setupUserModules` just for us and\x0d\n  // we call them in the correct order.\x0d\n  // N.B.  This block appears here specifically in order to ensure that\x0d\n  // `--require` calls occur before `--loader` ones do.\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n\x0d\n  const parentURL = getCWDURL().href;\x0d\n  for (let i = 0; i < customLoaderURLs.length; i++) {\x0d\n    await hooks.register(\x0d\n      customLoaderURLs[i]\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return hooks;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  registerModule\x2C\x0d\n  initializeESM\x2C\x0d\n  initializeHooks\x2C\x0d\n  getDefaultConditions\x2C\x0d\n  getConditionsSet\x2C\x0d\n  loaderWorkerId: 'internal/modules/esm/worker'\x2C\x0d\n  isLoaderWorker\x2C\x0d\n};\x0d\n
code-source-info,0x121eb120c6c,66,7074,7435,C10O7104C12O7120C18O7141C21O7141C24O7294C32O7294C36O7364C44O7364C49O7434,,
code-creation,JS,10,100774,0x121eb121694,177,initializeDefaultConditions node:internal/modules/esm/utils:60:37,0x22671cb8e40,~
code-source-info,0x121eb121694,66,1522,1880,C0O1553C8O1553C13O1605C19O1605C24O1663C35O1701C48O1772C93O1797C138O1721C145O1719C151O1823C161O1846C169O1844C176O1879,,
code-creation,JS,10,100846,0x121eb12187c,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:72:32,0x22671cb5000,~
code-source-info,0x121eb12187c,63,2288,2328,C0O2293C4O2326,,
code-creation,JS,10,100888,0x121eb121984,53,loadPreloadModules node:internal/process/pre_execution:736:28,0x22671cba470,~
code-source-info,0x121eb121984,67,23658,23990,C0O23747C8O23747C13O23779C15O23816C21O23823C26O23905C32O23905C37O23858C42O23869C47O23950C52O23989,,
code-creation,JS,10,100964,0x121eb121b8c,149,Module._preloadModules node:internal/modules/cjs/loader:1564:34,0x22671cb7ab0,~
code-source-info,0x121eb121b8c,63,52355,52965,C0O52371C5O52376C11O52402C12O52409C13O52417C17O52430C23O52630C33O52630C42O52682C45O52704C53O52729C58O52729C63O52704C68O52695C85O52759C88O52765C95O52770C100O52793C101O52806C105O52822C107O52822C110O52859C112O52875C116O52864C121O52895C126O52927C130O52895C135O52884C140O52846C144O52941C145O52954C148O52964,,
code-creation,JS,10,101050,0x121eb121e5c,212,Module node:internal/modules/cjs/loader:252:16,0x22671cb6858,~
code-source-info,0x121eb121e5c,63,7494,8256,C14O7517C16O7525C20O7534C22O7546C25O7551C30O7551C35O7544C39O7567C52O7567C57O7607C62O7625C67O7625C73O7647C84O7647C89O7687C90O7701C94O7712C95O7724C99O7736C101O7750C105O7763C107O7794C112O7794C118O7802C126O7817C128O7856C133O7856C138O7901C143O7901C149O7999C157O8031C160O8031C169O7999C174O8117C177O8137C188O8159C194O8117C199O8206C201O8211C206O8235C211O8255,,
code-creation,JS,10,101209,0x121eb1221f4,439,dirname node:path:657:10,0x22671c9abe0,~
code-source-info,0x121eb1221f
code-creation,JS,10,101338,0x121eb12264c,28,setOwnProperty node:internal/util:736:24,0x22671c826f8,~
code-source-info,0x121eb12264c,16,20752,20927,C0O20775C5O20808C12O20890C22O20782C27O20924,,
code-creation,JS,10,101395,0x121eb1227cc,45,updateChildren node:internal/modules/cjs/loader:217:24,0x22671cb6750,~
code-source-info,0x121eb1227cc,63,6398,6582,C0O6442C7O6448C15O6463C19O6481C23O6489C26O6489C33O6538C38O6538C44O6581,,
code-creation,JS,10,101442,0x121eb1229c4,33, node:internal/util:807:18,0x22671c82a90,~
code-source-info,0x121eb1229c4,16,23100,23226,C0O23110C10O23146C13O23154C19O23152C25O23176C26O23188C28O23208C32O23221,,
code-creation,JS,10,101474,0x121eb122ad4,28, node:internal/modules/cjs/loader:117:3,0x22671cb64e8,~
code-source-info,0x121eb122ad4,63,3589,3680,C0O3596C8O3596C20O3638C27O3680,,
code-creation,JS,10,101558,0x121eb122ce4,246,Module._nodeModulePaths node:internal/modules/cjs/loader:741:37,0x22671cb7080,~
code-source-info,0x121eb122ce
code-creation,JS,10,101691,0x121eb12318c,111,internalRequire node:internal/modules/cjs/loader:167:25,0x22671cb65f0,~
code-source-info,0x121eb12318c,63,4981,5294,C0O4999C8O4999C13O5028C15O5035C20O5050C36O5056C41O5050C42O5168C48O5180C53O5198C56O5212C69O5212C86O5271C90O5283C110O5293,,
code-creation,JS,10,101882,0x121eb123564,675,Module._load node:internal/modules/cjs/loader:950:24,0x22671cb7310,~
code-source-info,0x121eb
code-creation,JS,10,102023,0x121eb123a4c,89,logger node:internal/util/debuglog:100:18,0x22671c89778,~
code-source-info,0x121eb123a4c,22,3064,3265,C0O3064C3O3097C24O3122C30O3139C34O3129C38O3144C39O3160C45O3177C51O3186C55O3167C60O3191C61O3208C65O3215C72O3228C77O3224C83O3215C88O3253,,
code-creation,JS,10,102079,0x121eb123ca4,3, node:internal/per_context/primordials:339:21,0xfca8d315c8,~
code-source-info,0x121eb123ca4,6,9996,10027,C0O10008C2O10020,,
code-creation,JS,10,102132,0x121eb123d74,132,debug node:internal/util/debuglog:81:15,0x22671c896c8,~
code-source-info,0x121eb123d74,22,2533,2939,C0O2533C3O2553C6O2553C9O2664C16O2685C22O2672C30O2670C36O2705C42O2742C48O2742C52O2771C73O2796C77O2813C81O2803C85O2818C86O2834C90O2851C96O2860C100O2841C105O2865C106O2882C115O2902C120O2898C126O2889C131O2927,,
code-creation,JS,10,102178,0x121eb123f14,41,init node:internal/util/debuglog:77:16,0x22671c89670,~
code-source-info,0x121eb123f14,22,2431,2517,C0O2441C10O2447C14O2445C16O2485C26O2495C33O2493C40O2516,,
code-creation,JS,10,102209,0x121eb124004,2,testEnabled node:internal/util/debuglog:31:19,0x121eb111a80,~
code-source-info,0x121eb124004,22,988,999,C0O994C1O999,,
code-creation,JS,10,102251,0x121eb124184,110,debuglogImpl node:internal/util/debuglog:54:22,0x22671c89418,~
code-source-info,0x121eb124184,22,1607,2160,C0O1607C9O1627C18O1641C23O1669C34O1703C39O1711C43O1703C45O1723C55O1723C59O1756C69O1767C73O1772C81O2095C93O2113C95O2111C99O2134C106O2151C109O2157,,
code-creation,JS,10,102294,0x121eb124334,10, node:internal/modules/cjs/loader:357:66,0x22671cb6c20,~
code-source-info,0x121eb124334,63,10303,10330,C0O10316C2O10322C9O10329,,
code-creation,JS,10,102319,0x121eb1243e4,2,noop node:internal/util/debuglog:46:14,0x22671c89368,~
code-source-info,0x121eb1243e4,22,1449,1457,C1O1456,,
code-creation,JS,10,102354,0x121eb1245a4,58,reportModuleToWatchMode node:internal/modules/cjs/loader:228:33,0x22671cb67a8,~
code-source-info,0x121eb1245a4,63,6737,6865,C0O6753C5O6757C13O6798C19O6811C22O6819C32O6843C41O6844C51O6819C57O6864,,
code-creation,JS,10,102383,0x121eb1246f4,13, node:internal/modules/cjs/loader:119:45,0x22671cb6540,~
code-source-info,0x121eb1246f4,63,3731,3774,C0O3749C3O3745C8O3749C12O3774,,
code-creation,JS,10,102587,0x121eb124c34,875,Module._resolveFilename node:internal/modules/cjs/loader:1058:35,0x22671cb7388,~
code-source-info,0x121eb124c
code-creation,JS,10,102787,0x121eb125274,77,normalizeRequirableId node:internal/bootstrap/realm:292:31,0xfca8d34180,~
code-source-info,0x121eb125274,9,9543,9878,C0O9555C10O9559C17O9629C27O9629C33O9665C38O9683C43O9683C50O9730C52O9750C55O9772C60O9790C65O9790C72O9831C74O9841C75O9856C76O9873,,
code-creation,JS,10,102826,0x121eb1253bc,18,canBeRequiredWithoutScheme node:internal/bootstrap/realm:288:36,0xfca8d34128,~
code-source-info,0x121eb1253bc,9,9439,9509,C0O9451C7O9496C12O9496C17O9504,,
code-creation,JS,10,102897,0x121eb1256a4,337,Module._resolveLookupPaths node:internal/modules/cjs/loader:839:38,0x22671cb7118,~
code-source-info,0x121eb1256a
code-creation,JS,10,102978,0x121eb1259b4,76,trySelfParentPath node:internal/modules/cjs/loader:520:27,0x22671cb6ee0,~
code-source-info,0x121eb1259b4,63,15713,15992,C0O15727C4O15742C5O15755C6O15774C12O15805C16O15814C17O15836C24O15839C29O15862C36O15865C44O15909C47O15924C52O15924C59O15932C62O15937C66O15930C69O15941C72O15964C73O15977C75O15991,,
code-creation,JS,10,103054,0x121eb125c64,247,trySelf node:internal/modules/cjs/loader:539:17,0x22671cb6f38,~
code-source-info,0x121eb125c64,63,16223,17163,C0O16250C4O16269C5O16282C6O16327C11O16345C16O16345C22O16304C27O16315C32O16378C36O16394C43O16417C49O16444C50O16457C51O16472C53O16506C57O16498C62O16519C67O16546C72O16592C84O16550C91O16609C96O16627C99O16661C104O16666C109O16627C114O16625C120O16692C121O16705C125O16761C131O16761C136O16735C141O16807C146O16866C151O16888C155O16866C163O16931C170O16958C173O16958C183O16836C195O16814C200O17000C212O17023C215O17029C222O17034C227O17071C234O17115C238O17077C243O17071C244O17147C246O17147,,
code-creation,JS,10,103148,0x121eb12601c,174,readPackageScope node:internal/modules/package_json_reader:132:26,0x22671cb8918,~
script-source,65,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { resolve\x2C sep\x2C toNamespacedPath } = require('path');\x0d\nconst permission = require('internal/process/permission');\x0d\nconst { kEmptyObject\x2C setOwnProperty } = require('internal/util');\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL } = require('internal/url');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n * @typedef {{\x0d\n *   exists: boolean\x2C\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: string | string[] | Record<string\x2C unknown>\x2C\x0d\n *   imports?: string | string[] | Record<string\x2C unknown>\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type: 'commonjs' | 'module' | 'none'\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\n/**\x0d\n * @param {string} jsonPath\x0d\n * @param {{\x0d\n *   base?: string\x2C\x0d\n *   specifier: string\x2C\x0d\n *   isESM: boolean\x2C\x0d\n * }} options\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction read(jsonPath\x2C { base\x2C specifier\x2C isESM } = kEmptyObject) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const string = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x2C\x0d\n  );\x0d\n  const result = {\x0d\n    __proto__: null\x2C\x0d\n    exists: false\x2C\x0d\n    pjsonPath: jsonPath\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C // Ignore unknown types for forwards compatibility\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n\x0d\n  if (string !== undefined) {\x0d\n    let parsed;\x0d\n    try {\x0d\n      parsed = JSONParse(string);\x0d\n    } catch (cause) {\x0d\n      const error = new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        jsonPath\x2C\x0d\n        isESM && (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n        cause.message\x2C\x0d\n      );\x0d\n      setOwnProperty(error\x2C 'cause'\x2C cause);\x0d\n      throw error;\x0d\n    }\x0d\n\x0d\n    result.exists = true;\x0d\n\x0d\n    // ObjectPrototypeHasOwnProperty is used to avoid prototype pollution.\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'name') && typeof parsed.name === 'string') {\x0d\n      result.name = parsed.name;\x0d\n    }\x0d\n\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'main') && typeof parsed.main === 'string') {\x0d\n      result.main = parsed.main;\x0d\n    }\x0d\n\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'exports')) {\x0d\n      result.exports = parsed.exports;\x0d\n    }\x0d\n\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'imports')) {\x0d\n      result.imports = parsed.imports;\x0d\n    }\x0d\n\x0d\n    // Ignore unknown types for forwards compatibility\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'type') && (parsed.type === 'commonjs' || parsed.type === 'module')) {\x0d\n      result.type = parsed.type;\x0d\n    }\x0d\n\x0d\n    if (manifest === undefined) {\x0d\n      const { getOptionValue } = require('internal/options');\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} requestPath\x0d\n * @return {PackageConfig}\x0d\n */\x0d\nfunction readPackage(requestPath) {\x0d\n  return read(resolve(requestPath\x2C 'package.json'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the nearest parent package.json file from a given path.\x0d\n * Return the package.json data and the path to the package.json file\x2C or false.\x0d\n * @param {string} checkPath The path to start searching from.\x0d\n */\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  const enabledPermission = permission.isEnabled();\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    // Stop the search when the process doesn't have permissions\x0d\n    // to walk upwards\x0d\n    if (enabledPermission && !permission.has('fs.read'\x2C checkPath + sep)) {\x0d\n      return false;\x0d\n    }\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules')) {\x0d\n      return false;\x0d\n    }\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson.exists) {\x0d\n      return {\x0d\n        data: pjson\x2C\x0d\n        path: checkPath\x2C\x0d\n      };\x0d\n    }\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  read\x2C\x0d\n  readPackage\x2C\x0d\n  readPackageScope\x2C\x0d\n};\x0d\n
code-source-info,0x121eb12601c,65,3657,4476,C0O3701C7O3735C10O3701C16O3748C18O3793C23O3804C28O3804C33O3830C41O3847C47O3896C60O3908C67O4055C74O4092C84O4117C88O4092C96O4134C97O4147C98O4160C108O4203C112O4164C119O4231C120O4244C121O4271C126O4293C130O4271C135O4316C141O4333C148O4357C154O4379C160O4399C161O4434C163O4434C168O3820C172O4460C173O4473,,
code-creation,JS,10,103376,0x121eb126744,34,isEnabled node:internal/process/permission:16:12,0x22671ca4040,~
script-source,46,node:internal/process/permission,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst permission = internalBinding('permission');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst { resolve } = require('path');\x0d\n\x0d\nlet experimentalPermission;\x0d\n\x0d\nmodule.exports = ObjectFreeze({\x0d\n  __proto__: null\x2C\x0d\n  isEnabled() {\x0d\n    if (experimentalPermission === undefined) {\x0d\n      const { getOptionValue } = require('internal/options');\x0d\n      experimentalPermission = getOptionValue('--experimental-permission');\x0d\n    }\x0d\n    return experimentalPermission;\x0d\n  }\x2C\x0d\n  has(scope\x2C reference) {\x0d\n    validateString(scope\x2C 'scope');\x0d\n    if (reference != null) {\x0d\n      // TODO: add support for WHATWG URLs and Uint8Arrays.\x0d\n      validateString(reference\x2C 'reference');\x0d\n      if (StringPrototypeStartsWith(scope\x2C 'fs')) {\x0d\n        reference = resolve(reference);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return permission.has(scope\x2C reference);\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x121eb126744,46,339,580,C0O349C6O427C12O427C17O408C22O463C25O488C29O486C31O545C33O575,,
code-creation,JS,10,103453,0x121eb1269bc,22,readPackage node:internal/modules/package_json_reader:123:21,0x22671cb88c0,~
code-source-info,0x121eb1269bc,65,3336,3408,C0O3355C5O3367C11O3367C17O3362C21O3405,,
code-creation,JS,10,103573,0x121eb126dac,497,read node:internal/modules/package_json_reader:47:14,0x22671cb86d0,~
code-source-info,0x121eb126dac
code-creation,JS,10,103691,0x121eb12724c,218,toNamespacedPath node:path:622:19,0x22671c9ab88,~
code-source-info,0x121eb12724c,34,20189,21304,C0O20255C6O20292C12O20299C17O20313C19O20325C20O20354C25O20360C30O20360C36O20399C43O20406C48O20419C50O20431C51O20439C58O20443C66O20490C68O20486C73O20548C79O20552C87O20595C92O20644C98O20644C104O20697C106O20710C108O20706C115O20741C117O20737C122O20841C127O20863C133O20863C142O20903C145O20936C153O20968C159O20948C171O21022C179O21069C181O21065C192O21090C200O21133C205O21240C210O21257C214O21272C215O21287C217O21299,,
tick,0x7ff6acc444b1,103979,0,0x0,3,0x7ff6abde9970,0x121eb126df4,0x121eb1269cd,0x121eb12609e,0x121eb125c74,0x121eb124ea8,0x121eb123640,0x121eb1231d1,0x121eb121c0e,0x121eb1219b3,0x121eb1183ae,0x33d09cbfb17,0x33d09cbdd94,0x33d09cbd82a
code-creation,JS,10,104399,0x121eb12793c,849,Module._findPath node:internal/modules/cjs/loader:610:28,0x22671cb6fe8,~
code-source-info,0x121eb12793c
code-creation,JS,10,104568,0x121eb127f44,105,isAbsolute node:path:406:13,0x22671c9aa80,~
code-source-info,0x121eb127f44,34,13207,13626,C0O13221C8O13221C13O13273C18O13286C19O13294C24O13308C25O13321C26O13342C33O13342C39O13383C42O13390C50O13458C58O13472C70O13508C78O13547C80O13543C94O13584C100O13568C104O13621,,
code-creation,JS,10,104684,0x121eb128144,79,stat node:internal/modules/cjs/loader:185:14,0x22671cb6648,~
code-source-info,0x121eb128144,63,5451,5864,C0O5467C5O5483C10O5483C17O5514C23O5560C26O5570C31O5570C37O5590C39O5618C41O5632C42O5658C47O5658C52O5691C57O5724C62O5806C65O5816C70O5816C76O5847C78O5861,,
code-creation,JS,10,104911,0x121eb128294,45,tryExtensions node:internal/modules/cjs/loader:487:23,0x22671cb6e30,~
code-source-info,0x121eb128294,63,14673,14880,C0O14716C2O14728C6O14721C11O14765C16O14788C19O14782C23O14765C29O14809C31O14832C33O14848C34O14737C39O14703C43O14864C44O14877,,
code-creation,JS,10,104973,0x121eb1283dc,62,tryFile node:internal/modules/cjs/loader:472:17,0x22671cb6dd8,~
code-source-info,0x121eb1283dc,63,14151,14378,C0O14189C5O14189C10O14212C11O14219C16O14228C17O14235C18O14241C26O14245C34O14287C36O14302C41O14314C46O14314C51O14335C52O14344C57O14351C61O14375,,
code-creation,JS,10,105098,0x121eb12859c,42,toRealPath node:internal/modules/helpers:54:20,0x22671cb8168,~
code-source-info,0x121eb12859c,64,1598,1715,C0O1617C5O1627C10O1640C17O1661C20O1672C28O1691C35O1627C41O1712,,
code-creation,JS,10,105482,0x121eb128a0c,996,realpathSync node:fs:2614:22,0x22671cad860,~
script-source,55,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  Boolean\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x2C\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\n\x0d\nconst { createBlobFromFilePath } = require('internal/blob');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  UVException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  FSReqCallback\x2C\x0d\n  statValues\x2C\x0d\n} = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify: {\x0d\n    custom: kCustomPromisifiedSymbol\x2C\x0d\n  }\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  defineLazyProperties\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  possiblyTransformPath\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\nlet kResistStopPropagation;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isInt32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function exists(path) { // eslint-disable-line func-name-matching\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return binding.existsSync(pathModule.toNamespacedPath(path));\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\x0d\n  // wise\x2C similar to the promise based version (less peak memory and chunked\x0d\n  // stringify operations vs multiple C++/JS boundary crossings).\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\x0d\n      // the result and reuse the buffer instead of allocating a new one.\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const ReadFileContext = require('internal/fs/read/context');\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw new UVException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n\x0d\n  if (options.encoding === 'utf8' || options.encoding === 'utf-8') {\x0d\n    if (!isInt32(path)) {\x0d\n      path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n    }\x0d\n    return binding.readFileUtf8(path\x2C stringToFlags(options.flag));\x0d\n  }\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  return binding.close(fd);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  return binding.open(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    stringToFlags(flags)\x2C\x0d\n    parseFileMode(mode\x2C 'mode'\x2C 0o666)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | Buffer | URL } path\x0d\n * @param {{\x0d\n *   type?: string;\x0d\n *   }} [options]\x0d\n * @returns {Promise<Blob>}\x0d\n */\x0d\nfunction openAsBlob(path\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const type = options.type || '';\x0d\n  validateString(type\x2C 'options.type');\x0d\n  // The underlying implementation here returns the Blob synchronously for now.\x0d\n  // To give ourselves flexibility to maybe return the Blob asynchronously\x2C\x0d\n  // this API returns a Promise.\x0d\n  path = getValidatedPath(path);\x0d\n  return PromiseResolve(createBlobFromFilePath(pathModule.toNamespacedPath(path)\x2C { type }));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offsetOrOptions\x0d\n * @param {number} length\x0d\n * @param {number | bigint | null} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  let params = null;\x0d\n  if (arguments.length <= 4) {\x0d\n    if (arguments.length === 4) {\x0d\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n      callback = length;\x0d\n      params = offsetOrOptions;\x0d\n    } else if (arguments.length === 3) {\x0d\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\x0d\n      if (!isArrayBufferView(buffer)) {\x0d\n        // This is fs.read(fd\x2C params\x2C callback)\x0d\n        params = buffer;\x0d\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\x0d\n      }\x0d\n      callback = offsetOrOptions;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      callback = buffer;\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n\x0d\n    if (params !== undefined) {\x0d\n      validateObject(params\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n    }\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer?.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = params ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null) {\x0d\n    position = -1;\x0d\n  } else {\x0d\n    validatePosition(position\x2C 'position'\x2C length);\x0d\n  }\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (arguments.length <= 3 || typeof offsetOrOptions === 'object') {\x0d\n    if (offsetOrOptions !== undefined) {\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offsetOrOptions ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null) {\x0d\n    position = -1;\x0d\n  } else {\x0d\n    validatePosition(position\x2C 'position'\x2C length);\x0d\n  }\x0d\n\x0d\n  return binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {number | object} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = buffer;\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  binding.rename(\x0d\n    pathModule.toNamespacedPath(oldPath)\x2C\x0d\n    pathModule.toNamespacedPath(newPath)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  binding.ftruncate(fd\x2C len);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  return binding.fdatasync(fd);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  return binding.fsync(fd);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const result = binding.mkdir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    parseFileMode(mode\x2C 'mode')\x2C\x0d\n    recursive\x2C\x0d\n  );\x0d\n\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * An iterative algorithm for reading the entire contents of the `basePath` directory.\x0d\n * This function does not validate `basePath` as a directory. It is passed directly to\x0d\n * `binding.readdir`.\x0d\n * @param {string} basePath\x0d\n * @param {{ encoding: string\x2C withFileTypes: boolean }} options\x0d\n * @returns {string[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSyncRecursive(basePath\x2C options) {\x0d\n  const withFileTypes = Boolean(options.withFileTypes);\x0d\n  const encoding = options.encoding;\x0d\n\x0d\n  const readdirResults = [];\x0d\n  const pathsQueue = [basePath];\x0d\n\x0d\n  function read(path) {\x0d\n    const readdirResult = binding.readdir(\x0d\n      pathModule.toNamespacedPath(path)\x2C\x0d\n      encoding\x2C\x0d\n      withFileTypes\x2C\x0d\n    );\x0d\n\x0d\n    if (readdirResult === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (withFileTypes) {\x0d\n      // Calling `readdir` with `withFileTypes=true`\x2C the result is an array of arrays.\x0d\n      // The first array is the names\x2C and the second array is the types.\x0d\n      // They are guaranteed to be the same length; hence\x2C setting `length` to the length\x0d\n      // of the first array within the result.\x0d\n      const length = readdirResult[0].length;\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        const dirent = getDirent(path\x2C readdirResult[0][i]\x2C readdirResult[1][i]);\x0d\n        ArrayPrototypePush(readdirResults\x2C dirent);\x0d\n        if (dirent.isDirectory()) {\x0d\n          ArrayPrototypePush(pathsQueue\x2C pathModule.join(dirent.path\x2C dirent.name));\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      for (let i = 0; i < readdirResult.length; i++) {\x0d\n        const resultPath = pathModule.join(path\x2C readdirResult[i]);\x0d\n        const relativeResultPath = pathModule.relative(basePath\x2C resultPath);\x0d\n        const stat = binding.internalModuleStat(resultPath);\x0d\n        ArrayPrototypePush(readdirResults\x2C relativeResultPath);\x0d\n        // 1 indicates directory\x0d\n        if (stat === 1) {\x0d\n          ArrayPrototypePush(pathsQueue\x2C resultPath);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  for (let i = 0; i < pathsQueue.length; i++) {\x0d\n    read(pathsQueue[i]);\x0d\n  }\x0d\n\x0d\n  return readdirResults;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Dirent[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  if (options.recursive != null) {\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  }\x0d\n\x0d\n  if (options.recursive) {\x0d\n    callback(null\x2C readdirSyncRecursive(path\x2C options));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  if (options.recursive != null) {\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  }\x0d\n\x0d\n  if (options.recursive) {\x0d\n    return readdirSyncRecursive(path\x2C options);\x0d\n  }\x0d\n\x0d\n  const result = binding.readdir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n    !!options.withFileTypes\x2C\x0d\n  );\x0d\n\x0d\n  return result !== undefined && options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction statfs(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = maybeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n\x0d\n    callback(err\x2C getStatFsFromBinding(stats));\x0d\n  };\x0d\n  binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const stats = binding.stat(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.bigint\x2C\x0d\n    undefined\x2C\x0d\n    options.throwIfNoEntry\x2C\x0d\n  );\x0d\n  if (stats === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\nfunction statfsSync(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const stats = binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint);\x0d\n  return getStatFsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  binding.symlink(\x0d\n    preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    stringToSymlinkType(type)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  binding.link(\x0d\n    pathModule.toNamespacedPath(existingPath)\x2C\x0d\n    pathModule.toNamespacedPath(newPath)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  return binding.unlink(path);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  binding.fchmod(\x0d\n    getValidatedFd(fd)\x2C\x0d\n    parseFileMode(mode\x2C 'mode')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  binding.chmod(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    mode\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  binding.lchown(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    uid\x2C\x0d\n    gid\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  binding.chown(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    uid\x2C\x0d\n    gid\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  binding.utimes(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    toUnixTimestamp(atime)\x2C\x0d\n    toUnixTimestamp(mtime)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  binding.futimes(\x0d\n    getValidatedFd(fd)\x2C\x0d\n    toUnixTimestamp(atime\x2C 'atime')\x2C\x0d\n    toUnixTimestamp(mtime\x2C 'mtime')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  binding.lutimes(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    toUnixTimestamp(atime)\x2C\x0d\n    toUnixTimestamp(mtime)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (!flush) {\x0d\n        if (isUserFd) {\x0d\n          callback(null);\x0d\n        } else {\x0d\n          fs.close(fd\x2C callback);\x0d\n        }\x0d\n      } else {\x0d\n        fs.fsync(fd\x2C (syncErr) => {\x0d\n          if (syncErr) {\x0d\n            if (isUserFd) {\x0d\n              callback(syncErr);\x0d\n            } else {\x0d\n              fs.close(fd\x2C (err) => {\x0d\n                callback(aggregateTwoErrors(err\x2C syncErr));\x0d\n              });\x0d\n            }\x0d\n          } else if (isUserFd) {\x0d\n            callback(null);\x0d\n          } else {\x0d\n            fs.close(fd\x2C callback);\x0d\n          }\x0d\n        });\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   flush?: boolean;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n    mode: 0o666\x2C\x0d\n    flag: 'w'\x2C\x0d\n    flush: false\x2C\x0d\n  });\x0d\n  const flag = options.flag || 'w';\x0d\n  const flush = options.flush ?? false;\x0d\n\x0d\n  validateBoolean(flush\x2C 'options.flush');\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   flush?: boolean;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n    mode: 0o666\x2C\x0d\n    flag: 'w'\x2C\x0d\n    flush: false\x2C\x0d\n  });\x0d\n\x0d\n  const flush = options.flush ?? false;\x0d\n\x0d\n  validateBoolean(flush\x2C 'options.flush');\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n\x0d\n    if (flush) {\x0d\n      fs.fsyncSync(fd);\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options);\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n\x0d\n  let watcher;\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  const path = possiblyTransformPath(filename);\x0d\n  // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\x0d\n  // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\x0d\n  // e.g. Linux due to the limitations of inotify.\x0d\n  if (options.recursive && !isOSX && !isWindows) {\x0d\n    const nonNativeWatcher = require('internal/fs/recursive_watch');\x0d\n    watcher = new nonNativeWatcher.FSWatcher(options);\x0d\n    watcher[watchers.kFSWatchStart](path);\x0d\n  } else {\x0d\n    watcher = new watchers.FSWatcher();\x0d\n    watcher[watchers.kFSWatchStart](path\x2C\x0d\n                                    options.persistent\x2C\x0d\n                                    options.recursive\x2C\x0d\n                                    options.encoding);\x0d\n  }\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n      options.signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C [kResistStopPropagation]: true });\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard.add(base);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base) || cache?.get(base) === base) {\x0d\n      if (isFileType(statValues\x2C S_IFIFO) ||\x0d\n          isFileType(statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard.add(base);\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks.has(id)) {\x0d\n          linkTarget = seenLinks.get(id);\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C true);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard.add(base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard.has(base)) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard.add(base);\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base)) {\x0d\n      if (isFileType(statValues\x2C S_IFIFO) ||\x0d\n          isFileType(statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard.add(base);\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks.has(id)) {\x0d\n        return gotTarget(null\x2C seenLinks.get(id));\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks.set(id\x2C target);\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard.add(base);\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string | Buffer | URL} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n\x0d\n  prefix = getValidatedPath(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n\x0d\n  let path;\x0d\n  if (typeof prefix === 'string') {\x0d\n    path = `${prefix}XXXXXX`;\x0d\n  } else {\x0d\n    path = Buffer.concat([prefix\x2C Buffer.from('XXXXXX')]);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(path\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string | Buffer | URL} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  prefix = getValidatedPath(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n\x0d\n  let path;\x0d\n  if (typeof prefix === 'string') {\x0d\n    path = `${prefix}XXXXXX`;\x0d\n  } else {\x0d\n    path = Buffer.concat([prefix\x2C Buffer.from('XXXXXX')]);\x0d\n  }\x0d\n\x0d\n  return binding.mkdtemp(path\x2C options.encoding);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  binding.copyFile(\x0d\n    pathModule.toNamespacedPath(src)\x2C\x0d\n    pathModule.toNamespacedPath(dest)\x2C\x0d\n    getValidMode(mode\x2C 'copyFile')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 KiB.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: object | null;\x0d\n *   flush?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  openAsBlob\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statfs\x2C\x0d\n  statSync\x2C\x0d\n  statfsSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x2C\x0d\n};\x0d\n\x0d\ndefineLazyProperties(\x0d\n  fs\x2C\x0d\n  'internal/fs/dir'\x2C\x0d\n  ['Dir'\x2C 'opendir'\x2C 'opendirSync']\x2C\x0d\n);\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x121eb128a0c,55,71508,75384,C0O71526C6O71536C12O71560C18O71564C24O71587C28O71621C38O71638C44O71638C48O71658C54O71673C60O71673C67O71704C69O71712C71O71711C75O71760C79O71765C85O71767C94O71778C96O71808C98O71833C99O71862C105O71862C111O71898C117O71898C123O71933C126O71983C128O72060C130O72157C132O72235C134O72272C140O72289C146O72320C151O72405C157O72439C165O72447C172O72460C178O72468C188O72485C194O72485C210O72468C215O72538C221O72538C225O72582C231O72582C236O72731C240O72727C245O72788C251O72788C257O72811C260O72836C262O72847C267O72877C273O72877C280O72914C282O72925C289O72938C291O72954C295O72977C302O73006C304O73017C310O73053C321O73017C333O73066C346O73084C351O73082C355O73129C357O73142C361O73233C367O73233C381O73251C387O73253C399O73263C404O73282C410O73297C416O73309C420O73286C437O73355C441O73332C448O73377C450O73400C452O73428C454O73475C461O73480C467O73482C476O73498C478O73532C485O73719C489O73730C495O73730C501O73773C509O73781C516O73810C522O73818C540O73818C546O73864C552O73864C556O73902C562O73925C566O73907C573O73956C579O73956C584O73976C591O73981C597O73983C606O74009C608O74168C611O74185C614O74196C618O74235C625O74264C634O74235C641O74295C647O74324C656O74295C663O74343C677O74358C683O74388C689O74388C696O74433C702O74433C709O74469C713O74505C717O74513C735O74513C740O74562C744O74583C753O74583C761O74630C765O74656C771O74656C778O74696C785O74701C791O74703C800O74735C804O74761C810O74761C816O74838C820O74853C830O74875C837O74853C845O74937C849O74954C855O74987C860O75076C864O75104C870O75104C877O75136C885O75144C892O75159C898O75167C908O75184C914O75184C930O75167C935O75239C941O75239C945O75285C951O75285C956O72716C964O75313C971O75318C977O75320C986O75341C990O75348C995O75381,,
code-creation,JS,10,109337,0x121eb12f73c,135,getOptions node:internal/fs/utils:323:20,0x22671cb3110,~
script-source,60,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeAt\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  UVException\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isDate\x2C\x0d\n  isUint8Array\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x2C\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x2C\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x2C\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GiB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type\x2C path) {\x0d\n    this.name = name;\x0d\n    this.path = path;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats\x2C path) {\x0d\n    super(name\x2C null\x2C path);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats\x2C path);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]\x2C path);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats\x2C filepath));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type\x2C path));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const filepath = join(path\x2C name);\x0d\n    const stats = lazyLoadFs().lstatSync(filepath);\x0d\n    return new DirentFromStats(name\x2C stats\x2C path);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type\x2C path);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\x0d\n  if (options == null || typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = new UVException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() on the absolute value\x0d\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\n// Refs: https://github.com/nodejs/node/pull/43714\x0d\nfunction dateFromMs(ms) {\x0d\n  // Coercing to number\x2C ms can be bigint\x0d\n  return new Date(MathRound(Number(ms)));\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigInt64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigInt64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x2C\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nclass StatFs {\x0d\n  constructor(type\x2C bsize\x2C blocks\x2C bfree\x2C bavail\x2C files\x2C ffree) {\x0d\n    this.type = type;\x0d\n    this.bsize = bsize;\x0d\n    this.blocks = blocks;\x0d\n    this.bfree = bfree;\x0d\n    this.bavail = bavail;\x0d\n    this.files = files;\x0d\n    this.ffree = ffree;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getStatFsFromBinding(stats) {\x0d\n  return new StatFs(\x0d\n    stats[0]\x2C stats[1]\x2C stats[2]\x2C stats[3]\x2C stats[4]\x2C stats[5]\x2C stats[6]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C\x0d\n                                                      `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32.withoutStackTrace(length\x2C 'length'\x2C 0);\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE.HideStackFramesError(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string\x2C Uint8Array\x2C or URL without null bytes'\x2C\x0d\n  );\x0d\n});\x0d\n\x0d\n// TODO(rafaelgss): implement the path.resolve on C++ side\x0d\n// See: https://github.com/nodejs/node/pull/44004#discussion_r930958420\x0d\n// The permission model needs the absolute path for the fs_permission\x0d\nconst resolvePath = pathModule.resolve;\x0d\nconst { isBuffer: BufferIsBuffer\x2C from: BufferFrom } = Buffer;\x0d\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\x0d\nfunction possiblyTransformPath(path) {\x0d\n  if (permission.isEnabled()) {\x0d\n    if (typeof path === 'string') {\x0d\n      return resolvePath(path);\x0d\n    }\x0d\n    assert(isUint8Array(path));\x0d\n    if (!BufferIsBuffer(path)) path = BufferFrom(path);\x0d\n    return BufferFrom(resolvePath(BufferToString(path)));\x0d\n  }\x0d\n  return path;\x0d\n}\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return possiblyTransformPath(path);\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn &&\x0d\n    ((typeof template === 'string' && StringPrototypeEndsWith(template\x2C 'X')) ||\x0d\n    (typeof template !== 'string' && TypedArrayPrototypeAt(template\x2C -1) === 0x58))) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  options.mode = getValidMode(options.mode\x2C 'copyFile');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR.HideStackFramesError('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      const err = new ERR_FS_EISDIR.HideStackFramesError({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x2C\x0d\n      });\x0d\n\x0d\n      return cb(err);\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions.withoutStackTrace(options\x2C defaultRmOptions);\x0d\n  validateBoolean.withoutStackTrace(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .lstatSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR.HideStackFramesError({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x2C\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject.withoutStackTrace(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean.withoutStackTrace(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32.withoutStackTrace(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32.withoutStackTrace(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  validateInteger.withoutStackTrace(mode\x2C 'mode'\x2C min\x2C max);\x0d\n  return mode;\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(\x0d\n      name\x2C\x0d\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      buffer\x2C\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name\x2C length) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger.withoutStackTrace(position\x2C name\x2C -1);\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    const maxPosition = 2n ** 63n - 1n - BigInt(length);\x0d\n    if (!(position >= -1n && position <= maxPosition)) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError(name\x2C\x0d\n                                                      `>= -1 && <= ${maxPosition}`\x2C\x0d\n                                                      position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(name\x2C ['integer'\x2C 'bigint']\x2C position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  possiblyTransformPath\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n};\x0d\n
code-source-info,0x121eb12f73c,60,7779,8407,C9O7806C16O7825C27O7886C29O7908C30O7919C36O7959C41O8004C43O8028C47O8044C54O8080C60O8120C78O8126C83O8120C84O8216C91O8225C96O8244C99O8267C104O8244C108O8295C114O8324C119O8352C127O8324C132O8389C134O8404,,
code-creation,JS,10,110440,0x121eb13176c,48,assertEncoding node:internal/fs/utils:158:24,0x22671cb2b70,~
code-source-info,0x121eb13176c,60,3812,3994,C0O3828C6O3845C9O3852C14O3852C21O3896C24O3924C40O3930C45O3924C47O3993,,
code-creation,JS,10,110556,0x121eb131884,20,toPathIfFileURL node:internal/url:1487:25,0x22671ca0480,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Boolean\x2C\x0d\n  Int8Array\x2C\x0d\n  IteratorPrototype\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x2C\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  markTransferMode\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x2C\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst bindingUrl = internalBinding('url');\x0d\n\x0d\nconst FORWARD_SLASH = /\\//g;\x0d\n\x0d\nconst contextForInspect = Symbol('context');\x0d\n\x0d\n// `unsafeProtocol`\x2C `hostlessProtocol` and `slashedProtocol` is\x0d\n// deliberately moved to `internal/url` rather than `url`.\x0d\n// Workers does not bootstrap URL module. Therefore\x2C `SafeSet`\x0d\n// is not initialized on bootstrap. This case breaks the\x0d\n// test-require-delete-array-iterator test.\x0d\n\x0d\n// Protocols that can allow "unsafe" and "unwise" chars.\x0d\nconst unsafeProtocol = new SafeSet([\x0d\n  'javascript'\x2C\x0d\n  'javascript:'\x2C\x0d\n]);\x0d\n// Protocols that never have a hostname.\x0d\nconst hostlessProtocol = new SafeSet([\x0d\n  'javascript'\x2C\x0d\n  'javascript:'\x2C\x0d\n]);\x0d\n// Protocols that always contain a // bit.\x0d\nconst slashedProtocol = new SafeSet([\x0d\n  'http'\x2C\x0d\n  'http:'\x2C\x0d\n  'https'\x2C\x0d\n  'https:'\x2C\x0d\n  'ftp'\x2C\x0d\n  'ftp:'\x2C\x0d\n  'gopher'\x2C\x0d\n  'gopher:'\x2C\x0d\n  'file'\x2C\x0d\n  'file:'\x2C\x0d\n  'ws'\x2C\x0d\n  'ws:'\x2C\x0d\n  'wss'\x2C\x0d\n  'wss:'\x2C\x0d\n]);\x0d\n\x0d\nconst updateActions = {\x0d\n  kProtocol: 0\x2C\x0d\n  kHost: 1\x2C\x0d\n  kHostname: 2\x2C\x0d\n  kPort: 3\x2C\x0d\n  kUsername: 4\x2C\x0d\n  kPassword: 5\x2C\x0d\n  kPathname: 6\x2C\x0d\n  kSearch: 7\x2C\x0d\n  kHash: 8\x2C\x0d\n  kHref: 9\x2C\x0d\n};\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  // This is the maximum value uint32_t can get.\x0d\n  // Ada uses uint32_t(-1) for declaring omitted values.\x0d\n  static #omitted = 4294967295;\x0d\n\x0d\n  href = '';\x0d\n  protocol_end = 0;\x0d\n  username_end = 0;\x0d\n  host_start = 0;\x0d\n  host_end = 0;\x0d\n  pathname_start = 0;\x0d\n  search_start = 0;\x0d\n  hash_start = 0;\x0d\n  port = 0;\x0d\n  /**\x0d\n   * Refers to `ada::scheme::type`\x0d\n   *\x0d\n   * enum type : uint8_t {\x0d\n   *   HTTP = 0\x2C\x0d\n   *   NOT_SPECIAL = 1\x2C\x0d\n   *   HTTPS = 2\x2C\x0d\n   *   WS = 3\x2C\x0d\n   *   FTP = 4\x2C\x0d\n   *   WSS = 5\x2C\x0d\n   *   FILE = 6\x0d\n   * };\x0d\n   * @type {number}\x0d\n   */\x0d\n  scheme_type = 1;\x0d\n\x0d\n  get hasPort() {\x0d\n    return this.port !== URLContext.#omitted;\x0d\n  }\x0d\n\x0d\n  get hasSearch() {\x0d\n    return this.search_start !== URLContext.#omitted;\x0d\n  }\x0d\n\x0d\n  get hasHash() {\x0d\n    return this.hash_start !== URLContext.#omitted;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet setURLSearchParamsContext;\x0d\nlet getURLSearchParamsList;\x0d\nlet setURLSearchParams;\x0d\n\x0d\nclass URLSearchParamsIterator {\x0d\n  #target;\x0d\n  #kind;\x0d\n  #index;\x0d\n\x0d\n  // https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\n  constructor(target\x2C kind) {\x0d\n    this.#target = target;\x0d\n    this.#kind = kind;\x0d\n    this.#index = 0;\x0d\n  }\x0d\n\x0d\n  next() {\x0d\n    if (typeof this !== 'object' || this === null || !(#target in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    const index = this.#index;\x0d\n    const values = getURLSearchParamsList(this.#target);\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this.#index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (this.#kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (this.#kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!this || typeof this !== 'object' || !(#target in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const index = this.#index;\x0d\n    const values = getURLSearchParamsList(this.#target);\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(values\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (this.#kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (this.#kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (this.#kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [values[index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x2C\x0d\n    );\x0d\n    const breakLn = StringPrototypeIncludes(inspect(output\x2C innerOpts)\x2C '\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\ndelete URLSearchParamsIterator.prototype.constructor;\x0d\nObjectSetPrototypeOf(URLSearchParamsIterator.prototype\x2C IteratorPrototype);\x0d\n\x0d\nObjectDefineProperties(URLSearchParamsIterator.prototype\x2C {\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams Iterator' }\x2C\x0d\n  next: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n\x0d\nclass URLSearchParams {\x0d\n  #searchParams = [];\x0d\n\x0d\n  // "associated url object"\x0d\n  #context;\x0d\n\x0d\n  static {\x0d\n    setURLSearchParamsContext = (obj\x2C ctx) => {\x0d\n      obj.#context = ctx;\x0d\n    };\x0d\n    getURLSearchParamsList = (obj) => obj.#searchParams;\x0d\n    setURLSearchParams = (obj\x2C query) => {\x0d\n      if (query === undefined) {\x0d\n        obj.#searchParams = [];\x0d\n      } else {\x0d\n        obj.#searchParams = parseParams(query);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    markTransferMode(this\x2C false\x2C false);\x0d\n\x0d\n    if (init == null) {\x0d\n      // Do nothing\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator] && #searchParams in init) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init.#searchParams;\x0d\n        this.#searchParams = childParams.slice();\x0d\n      } else if (method != null) {\x0d\n        // Sequence<sequence<USVString>>\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // The following implementationd differs from the URL specification:\x0d\n        // Sequences must first be converted from ECMAScript objects before\x0d\n        // and operations are done on them\x2C and the operation of converting\x0d\n        // the sequences would first exhaust the iterators. If the iterator\x0d\n        // returns something invalid in the middle\x2C whether it would be called\x0d\n        // after that would be an observable change to the users.\x0d\n        // Exhausting the iterator and later converting them to USVString comes\x0d\n        // with a significant cost (~40-80%). In order optimize URLSearchParams\x0d\n        // creation duration\x2C Node.js merges the iteration and converting\x0d\n        // iterations into a single iteration.\x0d\n        for (const pair of init) {\x0d\n          if (pair == null) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          } else if (ArrayIsArray(pair)) {\x0d\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\x0d\n            if (pair.length !== 2) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n            // Append (innerSequence[0]\x2C innerSequence[1]) to querys list.\x0d\n            ArrayPrototypePush(this.#searchParams\x2C toUSVString(pair[0])\x2C toUSVString(pair[1]));\x0d\n          } else {\x0d\n            if (((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n                typeof pair[SymbolIterator] !== 'function')) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n\x0d\n            let length = 0;\x0d\n\x0d\n            for (const element of pair) {\x0d\n              length++;\x0d\n              ArrayPrototypePush(this.#searchParams\x2C toUSVString(element));\x0d\n            }\x0d\n\x0d\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\x0d\n            if (length !== 2) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        const visited = new SafeMap();\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n\x0d\n            // Two different keys may become the same USVString after normalization.\x0d\n            // In that case\x2C we retain the later one. Refer to WPT.\x0d\n            const keyIdx = visited.get(typedKey);\x0d\n            if (keyIdx !== undefined) {\x0d\n              this.#searchParams[keyIdx] = typedValue;\x0d\n            } else {\x0d\n              visited.set(typedKey\x2C ArrayPrototypePush(this.#searchParams\x2C\x0d\n                                                       typedKey\x2C\x0d\n                                                       typedValue) - 1);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // https://url.spec.whatwg.org/#dom-urlsearchparams-urlsearchparams\x0d\n      init = toUSVString(init);\x0d\n      this.#searchParams = init ? parseParams(init) : [];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x2C\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  get size() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n    return this.#searchParams.length / 2;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this.#searchParams\x2C name\x2C value);\x0d\n    if (this.#context) {\x0d\n      this.#context.search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  delete(name\x2C value = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = toUSVString(name);\x0d\n\x0d\n    if (value !== undefined) {\x0d\n      value = toUSVString(value);\x0d\n      for (let i = 0; i < list.length;) {\x0d\n        if (list[i] === name && list[i + 1] === value) {\x0d\n          list.splice(i\x2C 2);\x0d\n        } else {\x0d\n          i += 2;\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      for (let i = 0; i < list.length;) {\x0d\n        if (list[i] === name) {\x0d\n          list.splice(i\x2C 2);\x0d\n        } else {\x0d\n          i += 2;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (this.#context) {\x0d\n      this.#context.search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name\x2C value = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = toUSVString(name);\x0d\n\x0d\n    if (value !== undefined) {\x0d\n      value = toUSVString(value);\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        if (value === undefined || list[i + 1] === value) {\x0d\n          return true;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    if (this.#context) {\x0d\n      this.#context.search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    const a = this.#searchParams;\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this.#context) {\x0d\n      this.#context.search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    let list = this.#searchParams;\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this.#searchParams;\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this.#searchParams);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  size: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Checks if a value has the shape of a WHATWG URL object.\x0d\n *\x0d\n * Using a symbol or instanceof would not be able to recognize URL objects\x0d\n * coming from other implementations (e.g. in Electron)\x2C so instead we are\x0d\n * checking some well known properties for a lack of a better test.\x0d\n *\x0d\n * We use `href` and `protocol` as they are the only properties that are\x0d\n * easy to retrieve and calculate due to the lazy nature of the getters.\x0d\n *\x0d\n * We check for `auth` and `path` attribute to distinguish legacy url instance with\x0d\n * WHATWG URL instance.\x0d\n * @param {*} self\x0d\n * @returns {self is URL}\x0d\n */\x0d\nfunction isURL(self) {\x0d\n  return Boolean(self?.href && self.protocol && self.auth === undefined && self.path === undefined);\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  #context = new URLContext();\x0d\n  #searchParams;\x0d\n\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    markTransferMode(this\x2C false\x2C false);\x0d\n\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('url');\x0d\n    }\x0d\n\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n\x0d\n    if (base !== undefined) {\x0d\n      base = `${base}`;\x0d\n    }\x0d\n\x0d\n    this.#updateContext(bindingUrl.parse(input\x2C base));\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = { __proto__: { constructor } };\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj[contextForInspect] = this.#context;\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  #updateContext(href) {\x0d\n    this.#context.href = href;\x0d\n\x0d\n    const {\x0d\n      0: protocol_end\x2C\x0d\n      1: username_end\x2C\x0d\n      2: host_start\x2C\x0d\n      3: host_end\x2C\x0d\n      4: port\x2C\x0d\n      5: pathname_start\x2C\x0d\n      6: search_start\x2C\x0d\n      7: hash_start\x2C\x0d\n      8: scheme_type\x2C\x0d\n    } = bindingUrl.urlComponents;\x0d\n\x0d\n    this.#context.protocol_end = protocol_end;\x0d\n    this.#context.username_end = username_end;\x0d\n    this.#context.host_start = host_start;\x0d\n    this.#context.host_end = host_end;\x0d\n    this.#context.port = port;\x0d\n    this.#context.pathname_start = pathname_start;\x0d\n    this.#context.search_start = search_start;\x0d\n    this.#context.hash_start = hash_start;\x0d\n    this.#context.scheme_type = scheme_type;\x0d\n\x0d\n    if (this.#searchParams) {\x0d\n      if (this.#context.hasSearch) {\x0d\n        setURLSearchParams(this.#searchParams\x2C this.search);\x0d\n      } else {\x0d\n        setURLSearchParams(this.#searchParams\x2C undefined);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  set href(value) {\x0d\n    value = `${value}`;\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHref\x2C value);\x0d\n    if (!href) { throw new ERR_INVALID_URL(value); }\x0d\n    this.#updateContext(href);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    const protocol = StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\x0d\n\x0d\n    // Check if scheme_type is not `NOT_SPECIAL`\x0d\n    if (this.#context.scheme_type !== 1) {\x0d\n      // Check if scheme_type is `FILE`\x0d\n      if (this.#context.scheme_type === 6) {\x0d\n        return 'null';\x0d\n      }\x0d\n      return `${protocol}//${this.host}`;\x0d\n    }\x0d\n\x0d\n    if (protocol === 'blob:') {\x0d\n      const path = this.pathname;\x0d\n      if (path.length > 0) {\x0d\n        try {\x0d\n          const out = new URL(path);\x0d\n          // Only return origin of scheme is `http` or `https`\x0d\n          // Otherwise return a new opaque origin (null).\x0d\n          if (out.#context.scheme_type === 0 || out.#context.scheme_type === 2) {\x0d\n            return `${out.protocol}//${out.host}`;\x0d\n          }\x0d\n        } catch {\x0d\n          // Do nothing.\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return 'null';\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\x0d\n  }\x0d\n\x0d\n  set protocol(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kProtocol\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    if (this.#context.protocol_end + 2 < this.#context.username_end) {\x0d\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.protocol_end + 2\x2C this.#context.username_end);\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set username(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kUsername\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    if (this.#context.host_start - this.#context.username_end > 0) {\x0d\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.username_end + 1\x2C this.#context.host_start);\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set password(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPassword\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    let startsAt = this.#context.host_start;\x0d\n    if (this.#context.href[startsAt] === '@') {\x0d\n      startsAt++;\x0d\n    }\x0d\n    // If we have an empty host\x2C then the space between components.host_end and\x0d\n    // components.pathname_start may be occupied by /.\x0d\n    if (startsAt === this.#context.host_end) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.pathname_start);\x0d\n  }\x0d\n\x0d\n  set host(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHost\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    let startsAt = this.#context.host_start;\x0d\n    // host_start might be "@" if the URL has credentials\x0d\n    if (this.#context.href[startsAt] === '@') {\x0d\n      startsAt++;\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.host_end);\x0d\n  }\x0d\n\x0d\n  set hostname(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHostname\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    if (this.#context.hasPort) {\x0d\n      return `${this.#context.port}`;\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set port(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPort\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    let endsAt;\x0d\n    if (this.#context.hasSearch) {\x0d\n      endsAt = this.#context.search_start;\x0d\n    } else if (this.#context.hasHash) {\x0d\n      endsAt = this.#context.hash_start;\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.pathname_start\x2C endsAt);\x0d\n  }\x0d\n\x0d\n  set pathname(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPathname\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    if (!this.#context.hasSearch) { return ''; }\x0d\n    let endsAt = this.#context.href.length;\x0d\n    if (this.#context.hasHash) { endsAt = this.#context.hash_start; }\x0d\n    if (endsAt - this.#context.search_start <= 1) { return ''; }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.search_start\x2C endsAt);\x0d\n  }\x0d\n\x0d\n  set search(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C toUSVString(value));\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    // Create URLSearchParams on demand to greatly improve the URL performance.\x0d\n    if (this.#searchParams == null) {\x0d\n      this.#searchParams = new URLSearchParams(this.search);\x0d\n      setURLSearchParamsContext(this.#searchParams\x2C this);\x0d\n    }\x0d\n    return this.#searchParams;\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    if (!this.#context.hasHash || (this.#context.href.length - this.#context.hash_start <= 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.hash_start);\x0d\n  }\x0d\n\x0d\n  set hash(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHash\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  static canParse(url\x2C base = undefined) {\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('url');\x0d\n    }\x0d\n\x0d\n    url = `${url}`;\x0d\n\x0d\n    if (base !== undefined) {\x0d\n      return bindingUrl.canParse(url\x2C `${base}`);\x0d\n    }\x0d\n\x0d\n    // It is important to differentiate the canParse call statements\x0d\n    // since they resolve into different v8 fast api overloads.\x0d\n    return bindingUrl.canParse(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperties(URL\x2C {\x0d\n  canParse: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction installObjectURLMethods() {\x0d\n  const bindingBlob = internalBinding('blob');\x0d\n\x0d\n  function createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    bindingBlob.storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  function revokeObjectURL(url) {\x0d\n    bindingBlob.revokeObjectURL(`${url}`);\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperties(URL\x2C {\x0d\n    createObjectURL: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: createObjectURL\x2C\x0d\n    }\x2C\x0d\n    revokeObjectURL: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: revokeObjectURL\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i = qs[0] === '?' ? 1 : 0;\x0d\n  let pairStart = i;\x0d\n  let lastPos = i;\x0d\n  for (; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return bindingUrl.domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return bindingUrl.domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Utility function that converts a URL object into an ordinary options object\x0d\n * as expected by the `http.request` and `https.request` APIs.\x0d\n * @param {URL} url\x0d\n * @returns {Record<string\x2C unknown>}\x0d\n */\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const { hostname\x2C pathname\x2C port\x2C username\x2C password\x2C search } = url;\x0d\n  const options = {\x0d\n    __proto__: null\x2C\x0d\n    ...url\x2C // In case the url object was extended by the user.\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: hostname && StringPrototypeStartsWith(hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(hostname\x2C 1\x2C -1) :\x0d\n      hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: search\x2C\x0d\n    pathname: pathname\x2C\x0d\n    path: `${pathname || ''}${search || ''}`\x2C\x0d\n    href: url.href\x2C\x0d\n  };\x0d\n  if (port !== '') {\x0d\n    options.port = Number(port);\x0d\n  }\x0d\n  if (username || password) {\x0d\n    options.auth = `${decodeURIComponent(username)}:${decodeURIComponent(password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = StringPrototypeCodePointAt(pathname\x2C 1) | 0x20;\x0d\n  const sep = StringPrototypeCharAt(pathname\x2C 2);\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return StringPrototypeSlice(pathname\x2C 1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURL(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\nconst questionRegex = /\\?/g;\x0d\nconst hashRegex = /#/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '%') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(percentRegEx\x2C filepath\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIndexOf(filepath\x2C '\\\\') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(backslashRegEx\x2C filepath\x2C '%5C');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\n') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(newlineRegEx\x2C filepath\x2C '%0A');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\r') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(carriageReturnRegEx\x2C filepath\x2C '%0D');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\t') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(tabRegEx\x2C filepath\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    const outURL = new URL('file://');\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const hostnameEndIndex = StringPrototypeIndexOf(filepath\x2C '\\\\'\x2C 2);\x0d\n    if (hostnameEndIndex === -1) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'path'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x2C\x0d\n      );\x0d\n    }\x0d\n    if (hostnameEndIndex === 2) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'path'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x2C\x0d\n      );\x0d\n    }\x0d\n    const hostname = StringPrototypeSlice(filepath\x2C 2\x2C hostnameEndIndex);\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      RegExpPrototypeSymbolReplace(backslashRegEx\x2C StringPrototypeSlice(filepath\x2C hostnameEndIndex)\x2C '/'));\x0d\n    return outURL;\x0d\n  }\x0d\n  let resolved = path.resolve(filepath);\x0d\n  // path.resolve strips trailing slashes so we must add them back\x0d\n  const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                 filepath.length - 1);\x0d\n  if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n       (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n      resolved[resolved.length - 1] !== path.sep)\x0d\n    resolved += '/';\x0d\n\x0d\n  // Call encodePathChars first to avoid encoding % again for ? and #.\x0d\n  resolved = encodePathChars(resolved);\x0d\n\x0d\n  // Question and hash character should be included in pathname.\x0d\n  // Therefore\x2C encoding is required to eliminate parsing them in different states.\x0d\n  // This is done as an optimization to not creating a URL instance and\x0d\n  // later triggering pathname setter\x2C which impacts performance\x0d\n  if (StringPrototypeIndexOf(resolved\x2C '?') !== -1)\x0d\n    resolved = RegExpPrototypeSymbolReplace(questionRegex\x2C resolved\x2C '%3F');\x0d\n  if (StringPrototypeIndexOf(resolved\x2C '#') !== -1)\x0d\n    resolved = RegExpPrototypeSymbolReplace(hashRegex\x2C resolved\x2C '%23');\x0d\n  return new URL(`file://${resolved}`);\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURL(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\n/**\x0d\n * This util takes a string containing a URL and return the URL origin\x2C\x0d\n * its meant to avoid calls to `new URL` constructor.\x0d\n * @param {string} url\x0d\n * @returns {URL['origin']}\x0d\n */\x0d\nfunction getURLOrigin(url) {\x0d\n  return bindingUrl.getOrigin(url);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  installObjectURLMethods\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  encodeStr\x2C\x0d\n  isURL\x2C\x0d\n\x0d\n  urlUpdateActions: updateActions\x2C\x0d\n  getURLOrigin\x2C\x0d\n  unsafeProtocol\x2C\x0d\n  hostlessProtocol\x2C\x0d\n  slashedProtocol\x2C\x0d\n};\x0d\n
code-source-info,0x121eb131884,39,44395,44512,C0O44416C3O44421C9O44448C11O44469C12O44473C15O44480C19O44509,,
code-creation,JS,10,112673,0x121eb13496c,45,isURL node:internal/url:761:15,0x22671c9eef0,~
code-source-info,0x121eb13496c,39,22165,22278,C0O22177C12O22196C21O22211C27O22228C34O22255C40O22184C44O22275,,
code-creation,JS,10,112758,0x121eb134ba4,149, node:internal/fs/utils:673:38,0x22671cb3c30,~
code-source-info,0x121eb134ba4,60,19003,19735,C14O19037C22O19070C25O19070C31O19097C36O19128C41O19149C54O19103C59O19097C60O19226C65O19280C70O19280C75O19377C81O19400C85O19429C89O19446C95O19446C104O19498C108O19519C113O19519C120O19565C121O19572C122O19583C127O19615C143O19589C148O19583,,
code-creation,JS,10,112817,0x121eb134d54,16,isUint8Array node:internal/util/types:13:22,0x22671c837f0,~
script-source,18,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x2C\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x121eb134d54,18,269,356,C0O282C5O289C12O336C15O353,,
code-creation,JS,10,113012,0x121eb1351cc,23,splitRoot node:fs:2566:33,0x22671cad720,~
code-source-info,0x121eb1351cc,55,70179,70259,C0O70192C9O70233C12O70199C19O70250C22O70254,,
code-creation,JS,10,113051,0x121eb13531c,39,SideEffectFreeRegExpPrototypeExec node:internal/util:756:43,0x22671c827a8,~
code-source-info,0x121eb13531c,16,21280,21454,C0O21344C3O21344C7O21317C12O21368C17O21420C22O21430C33O21375C38O21451,,
code-creation,JS,10,113091,0x121eb1354b4,43,getInternalGlobal node:internal/util:747:27,0x22671c82750,~
code-source-info,0x121eb1354b4,16,20978,21234,C0O20986C7O21099C13O21099C18O21079C23O21119C28O21160C33O21136C38O21134C40O21209C42O21231,,
code-creation,Eval,10,113437,0x121eb136c0c,5, node:vm:1:1,0x121eb136820,~
script-source,81,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  makeContext\x2C\x0d\n  constants\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateInt32\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateUint32\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  getHostDefinedOptionId\x2C\x0d\n  internalCompileFunction\x2C\x0d\n  isContext\x2C\x0d\n  registerImportModuleDynamically\x2C\x0d\n} = require('internal/vm');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = kEmptyObject) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined) {\x0d\n      validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    const hostDefinedOptionId =\x0d\n        getHostDefinedOptionId(importModuleDynamically\x2C filename);\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext\x2C\x0d\n            hostDefinedOptionId);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      registerImportModuleDynamically(this\x2C importModuleDynamically);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(null\x2C options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(\x0d\n      contextifiedObject\x2C\x0d\n      options\x2C\x0d\n    );\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(contextifiedObject\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [\x0d\n      contextifiedObject\x2C\x0d\n      timeout\x2C\x0d\n      displayErrors\x2C\x0d\n      breakOnSigint\x2C\x0d\n      breakFirstLine\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = kEmptyObject) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  validateOneOf(microtaskMode\x2C\x0d\n                'options.microtaskMode'\x2C\x0d\n                ['afterEvaluate'\x2C undefined]);\x0d\n  const microtaskQueue = (microtaskMode === 'afterEvaluate');\x0d\n\x0d\n  const hostDefinedOptionId =\x0d\n    getHostDefinedOptionId(importModuleDynamically\x2C name);\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue\x2C hostDefinedOptionId);\x0d\n  // Register the context scope callback after the context was initialized.\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    registerImportModuleDynamically(contextObject\x2C importModuleDynamically);\x0d\n  }\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x2C\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = kEmptyObject) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateStringArray(params\x2C 'params');\x0d\n  }\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C kValidateObjectAllowNullable);\x0d\n  });\x0d\n\x0d\n  const hostDefinedOptionId =\x0d\n      getHostDefinedOptionId(importModuleDynamically\x2C filename);\x0d\n\x0d\n  return internalCompileFunction(\x0d\n    code\x2C filename\x2C lineOffset\x2C columnOffset\x2C\x0d\n    cachedData\x2C produceCachedData\x2C parsingContext\x2C contextExtensions\x2C\x0d\n    params\x2C hostDefinedOptionId\x2C importModuleDynamically\x2C\x0d\n  ).function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = kEmptyObject) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x121eb136c0c,81,0,12648,C0O0C4O12648,,
code-creation,JS,10,113976,0x121eb13768c,580, node:vm:1:1,0x121eb136b80,~
code-source-info,0x121eb13768c,81,0,12648,C0O0C157O1183C163O1209C168O1220C174O1238C180O1371C183O1371C188O1284C193O1305C199O1321C204O1350C210O1473C213O1473C218O1499C223O1414C229O1446C235O1728C238O1728C243O1519C249O1537C255O1557C261O1576C267O1594C273O1612C279O1631C285O1650C291O1674C297O1693C303O1847C306O1847C311O1772C317O1800C323O1817C329O1992C332O1992C337O1885C343O1912C349O1940C355O1954C361O2041C364O2041C368O2041C374O2099C417O2078C419O6642C421O6642C423O11453C428O11477C433O11491C438O11496C446O11528C451O11542C456O11547C466O11453C468O11596C473O11620C478O11634C483O11644C491O11673C496O11687C501O11697C511O11596C513O12299C520O12321C526O12332C532O12350C538O12367C544O12384C550O12404C556O12425C562O12439C568O12459C574O12314C579O12647,,
code-creation,JS,10,114297,0x121eb138324,82,runInNewContext node:vm:290:25,0x121eb136ea8,~
code-source-info,0x121eb138324,81,9251,9586,C0O9287C6O9327C13O9349C22O9368C28O9413C33O9384C40O9445C47O9470C53O9488C61O9508C64O9515C70O9542C75O9543C81O9583,,
code-creation,JS,10,114374,0x121eb139364,214,getContextOptions node:vm:180:27,0x121eb136cf0,~
code-source-info,0x121eb139364,81,5540,6608,C0O5555C4O5574C5O5584C6O5611C11O5632C19O5666C28O5702C32O5741C43O5784C49O5809C54O5839C62O5809C67O5891C73O5918C78O5948C86O5918C91O5997C97O6041C102O6064C110O6041C115O6180C120O6154C125O6163C130O6208C134O6242C142O6242C147O6314C151O6345C159O6345C164O6411C171O6445C177O6454C183O6441C187O6482C193O6516C198O6539C206O6516C211O6583C213O6605,,
code-creation,JS,10,114504,0x121eb139b64,288,createContext node:vm:209:23,0x121eb136d48,~
code-source-info,0x121eb139b64,81,6668,8094,C4O6668C16O6699C23O6718C28O6722C34O6755C36O6776C37O6787C45O6787C50O6841C64O6848C71O6885C80O6896C85O6909C90O6930C95O6950C100O6996C108O6996C113O7037C117O7068C123O7068C128O7113C132O7152C138O7152C143O7229C145O7249C147O7258C151O7302C162O7318C170O7356C178O7356C183O7421C189O7421C194O7485C202O7499C211O7591C218O7485C223O7630C225O7645C229O7705C234O7705C240O7765C266O7765C271O7939C275O7989C280O7989C285O8070C287O8091,,
code-creation,JS,10,114587,0x121eb139df4,31,isContext node:internal/vm:31:19,0x22671c9b348,~
script-source,36,node:internal/vm,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  compileFunction\x2C\x0d\n  isContext: _isContext\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  runInContext\x2C\x0d\n} = ContextifyScript.prototype;\x0d\nconst {\x0d\n  default_host_defined_options\x2C\x0d\n  vm_dynamic_import_missing_flag\x2C\x0d\n} = internalBinding('symbols');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n} = require('internal/options');\x0d\n\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C kValidateObjectAllowArray);\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nfunction getHostDefinedOptionId(importModuleDynamically\x2C hint) {\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    // Check that it's either undefined or a function before we pass\x0d\n    // it into the native constructor.\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n  }\x0d\n  if (importModuleDynamically === undefined) {\x0d\n    // We need a default host defined options that are the same for all\x0d\n    // scripts not needing custom module callbacks so that the isolate\x0d\n    // compilation cache can be hit.\x0d\n    return default_host_defined_options;\x0d\n  }\x0d\n  // We should've thrown here immediately when we introduced\x0d\n  // --experimental-vm-modules and importModuleDynamically\x2C but since\x0d\n  // users are already using this callback to throw a similar error\x2C\x0d\n  // we also defer the error to the time when an actual import() is called\x0d\n  // to avoid breaking them. To ensure that the isolate compilation\x0d\n  // cache can still be hit\x2C use a constant sentinel symbol here.\x0d\n  if (!getOptionValue('--experimental-vm-modules')) {\x0d\n    return vm_dynamic_import_missing_flag;\x0d\n  }\x0d\n\x0d\n  return Symbol(hint);\x0d\n}\x0d\n\x0d\nfunction registerImportModuleDynamically(referrer\x2C importModuleDynamically) {\x0d\n  const { importModuleDynamicallyWrap } = require('internal/vm/module');\x0d\n  const { registerModule } = require('internal/modules/esm/utils');\x0d\n  registerModule(referrer\x2C {\x0d\n    __proto__: null\x2C\x0d\n    importModuleDynamically:\x0d\n      importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction internalCompileFunction(\x0d\n  code\x2C filename\x2C lineOffset\x2C columnOffset\x2C\x0d\n  cachedData\x2C produceCachedData\x2C parsingContext\x2C contextExtensions\x2C\x0d\n  params\x2C hostDefinedOptionId\x2C importModuleDynamically) {\x0d\n  const result = compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x2C\x0d\n    hostDefinedOptionId\x2C\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (typeof result.cachedDataRejected === 'boolean') {\x0d\n    result.function.cachedDataRejected = result.cachedDataRejected;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    registerImportModuleDynamically(result.function\x2C importModuleDynamically);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction makeContextifyScript(code\x2C\x0d\n                              filename\x2C\x0d\n                              lineOffset\x2C\x0d\n                              columnOffset\x2C\x0d\n                              cachedData\x2C\x0d\n                              produceCachedData\x2C\x0d\n                              parsingContext\x2C\x0d\n                              hostDefinedOptionId\x2C\x0d\n                              importModuleDynamically) {\x0d\n  let script;\x0d\n  // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n  // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n  // protects against that.\x0d\n  try { // eslint-disable-line no-useless-catch\x0d\n    script = new ContextifyScript(code\x2C\x0d\n                                  filename\x2C\x0d\n                                  lineOffset\x2C\x0d\n                                  columnOffset\x2C\x0d\n                                  cachedData\x2C\x0d\n                                  produceCachedData\x2C\x0d\n                                  parsingContext\x2C\x0d\n                                  hostDefinedOptionId);\x0d\n  } catch (e) {\x0d\n    throw e; /* node-do-not-add-exception-line */\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    registerImportModuleDynamically(script\x2C importModuleDynamically);\x0d\n  }\x0d\n  return script;\x0d\n}\x0d\n\x0d\n// Internal version of vm.Script.prototype.runInThisContext() which skips\x0d\n// argument validation.\x0d\nfunction runScriptInThisContext(script\x2C displayErrors\x2C breakOnFirstLine) {\x0d\n  return ReflectApply(\x0d\n    runInContext\x2C\x0d\n    script\x2C\x0d\n    [\x0d\n      null\x2C                // sandbox - use current context\x0d\n      -1\x2C                  // timeout\x0d\n      displayErrors\x2C       // displayErrors\x0d\n      false\x2C               // breakOnSigint\x0d\n      breakOnFirstLine\x2C    // breakOnFirstLine\x0d\n    ]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHostDefinedOptionId\x2C\x0d\n  internalCompileFunction\x2C\x0d\n  isContext\x2C\x0d\n  makeContextifyScript\x2C\x0d\n  registerImportModuleDynamically\x2C\x0d\n  runScriptInThisContext\x2C\x0d\n};\x0d\n
code-source-info,0x121eb139df4,36,557,666,C0O571C10O604C16O571C21O637C26O644C30O663,,
code-creation,JS,10,114897,0x121eb13a4ec,251, node:internal/validators:235:3,0xfca8d3dc18,~
code-source-info,0x121eb13a4ec,15,6585,7633,C12O6609C19O6640C21O6656C23O6652C28O6686C34O6708C37O6708C43O6740C59O6746C64O6740C65O6813C71O6855C87O6861C92O6855C95O6964C102O6994C107O7005C111O7021C117O7071C133O7077C138O7071C139O7165C146O7192C151O7203C155O7219C159O7239C162O7239C168O7271C184O7277C189O7271C190O7368C197O7398C202O7409C206O7443C210O7466C218O7499C222O7530C227O7558C243O7564C248O7558C250O7632,,
code-creation,JS,10,115056,0x121eb13a80c,75, node:internal/validators:197:39,0xfca8d3db68,~
code-source-info,0x121eb13a80c,15,5554,5896,C0O5583C5O5588C12O5649C19O5676C22O5694C27O5676C36O5649C42O5800C47O5819C51O5835C67O5841C72O5835C74O5895,,
code-creation,JS,10,115125,0x121eb13a9ec,55,getHostDefinedOptionId node:internal/vm:37:32,0x22671c9b4c8,~
code-source-info,0x121eb13a9ec,36,701,1828,C0O738C4O898C12O898C17O1006C21O1239C25O1275C26O1699C34O1704C40O1756C44O1794C45O1805C50O1812C54O1825,,
code-creation,JS,10,115901,0x3c5702682e4,19,createScript node:vm:254:22,0x121eb136da0,~
code-source-info,0x3c5702682e4,81,8119,8176,C0O8140C13O8147C18O8173,,
code-creation,JS,10,116116,0x3c5702685f4,313,Script node:vm:67:14,0x121eb137008,~
code-source-info,0x3c5702685f4,81,2132,3679,C14O2149C21O2170C25O2193C31O2235C38O2257C49O2289C59O2289C64O2354C76O2399C84O2422C92O2447C97O2466C105O2500C114O2533C122O2592C132O2592C137O2643C147O2643C152O2697C160O2697C165O2755C169O2794C179O2794C184O2856C194O2856C199O2965C206O2965C215O3258C260O3258C287O3492C289O3492C290O3552C294O3604C304O3604C312O3678,,
code-creation,JS,10,116317,0x3c5702688e4,155, node:internal/validators:114:3,0xfca8d3d920,~
code-source-info,0x3c5702688e4,15,3158,3632,C36O3301C42O3341C58O3347C63O3341C64O3408C69O3413C75O3446C91O3452C96O3446C97O3513C99O3523C106O3538C111O3554C121O3593C134O3606C147O3560C152O3554C154O3631,,
code-creation,Script,10,116393,0x3c570268bfc,5, evalmachine.<anonymous>:1:1,0x3c570268b30,~
script-source,82,evalmachine.<anonymous>,this
code-source-info,0x3c570268bfc,82,0,4,C0O0C4O4,,
code-creation,JS,10,116453,0x3c570268de4,33,runInNewContext node:vm:136:18,0x121eb137110,~
code-source-info,0x3c570268de4,81,4408,4567,C0O4456C10O4485C15O4456C21O4531C26O4531C32O4562,,
code-creation,JS,10,116532,0x3c570268f0c,109,runInContext node:vm:124:15,0x121eb1370b8,~
code-source-info,0x3c570268f0c,81,4004,4387,C0O4041C5O4041C9O4115C14O4115C20O4091C25O4106C30O4192C39O4221C47O4221C54O4245C59O4259C66O4291C77O4266C82O4317C83O4330C92O4356C103O4337C108O4382,,
code-creation,JS,10,116575,0x3c5702690b4,35,validateContext node:vm:142:25,0x121eb136c40,~
code-source-info,0x3c5702690b4,81,4598,4798,C0O4624C5O4629C11O4667C27O4673C32O4667C34O4797,,
code-creation,JS,10,116634,0x3c57026931c,184,getRunInContextArgs node:vm:149:29,0x121eb136c98,~
code-source-info,0x3c57026931c,81,4830,5510,C9O4861C16O4880C24O4880C29O4943C34O4955C36O4989C41O5020C54O5020C59O5093C70O5120C80O5149C91O5220C99O5220C104O5280C110O5280C115O5342C122O5356C126O5382C135O5391C144O5418C153O5434C162O5456C171O5478C183O5507,,
code-creation,JS,10,117153,0x3c57026980c,66,handleErrorFromBinding node:internal/fs/utils:349:32,0x22671cb3168,~
code-source-info,0x3c57026980c,60,8501,9016,C0O8520C6O8584C13O8584C19O8611C27O8611C32O8669C34O8669C35O8696C41O8928C46O8955C54O8928C59O9002C63O8992C65O9015,,
code-creation,JS,10,117225,0x3c57026996c,54,nextPart node:fs:2592:31,0x22671cad808,~
code-source-info,0x3c57026996c,55,70950,71201,C0O70977C4O70973C9O71010C14O71010C20O71094C22O71105C24O71101C31O71135C33O71131C38O71164C40O71173C41O70987C47O70964C51O71186C53O71196,,
code-creation,JS,10,117411,0x3c570269ab4,34,isFileType node:fs:206:20,0x22671cab6e8,~
code-source-info,0x3c570269ab4,55,5291,5539,C0O5428C2O5433C6O5441C10O5476C15O5483C20O5500C22O5515C24O5513C30O5523C33O5536,,
code-creation,JS,11,117634,0x7ff62c4c5000,1428,toNamespacedPath node:path:622:19,0x22671c9ab88,^
code-source-info,0x7ff62c4c5000,34,20189,21304,,,
code-creation,JS,11,117693,0x7ff62c4c55c0,260, node:internal/validators:160:40,0xfca8d3d9d0,^
code-source-info,0x7ff62c4c55c0,15,4529,4644,,,
code-creation,JS,11,117735,0x7ff62c4c5700,1816,Module._nodeModulePaths node:internal/modules/cjs/loader:741:37,0x22671cb7080,^
code-source-info,0x7ff62c4c5700,63,23234,24837,,,
code-creation,JS,11,117879,0x7ff62c4c5e40,556,wrappedFn node:internal/errors:508:21,0xfca8d37ab0,^
script-source,10,node:internal/errors,/* eslint node-core/documented-errors: "error" */\x0d\n/* eslint node-core/alphabetize-errors: "error" */\x0d\n/* eslint node-core/prefer-util-format-errors: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// The whole point behind this internal module is to allow Node.js to no\x0d\n// longer be forced to treat every error message change as a semver-major\x0d\n// change. The NodeError classes here all expose a `code` property whose\x0d\n// value statically and permanently identifies the error. While the error\x0d\n// message may change\x2C the code should not.\x0d\n\x0d\nconst {\x0d\n  AggregateError\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGet\x2C\x0d\n  MathAbs\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectIsExtensible\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RangeError\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kIsNodeError = Symbol('kIsNodeError');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst messages = new SafeMap();\x0d\nconst codes = {};\x0d\n\x0d\nconst classRegExp = /^[A-Z][a-zA-Z0-9]*$/;\x0d\n\x0d\n// Sorted by a rough estimate on most frequently used entries.\x0d\nconst kTypes = [\x0d\n  'string'\x2C\x0d\n  'function'\x2C\x0d\n  'number'\x2C\x0d\n  'object'\x2C\x0d\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\x0d\n  'Function'\x2C\x0d\n  'Object'\x2C\x0d\n  'boolean'\x2C\x0d\n  'bigint'\x2C\x0d\n  'symbol'\x2C\x0d\n];\x0d\n\x0d\nconst MainContextError = Error;\x0d\nconst overrideStackTrace = new SafeWeakMap();\x0d\nconst kNoOverride = Symbol('kNoOverride');\x0d\n\x0d\nconst prepareStackTrace = (globalThis\x2C error\x2C trace) => {\x0d\n  // API for node internals to override error stack formatting\x0d\n  // without interfering with userland code.\x0d\n  if (overrideStackTrace.has(error)) {\x0d\n    const f = overrideStackTrace.get(error);\x0d\n    overrideStackTrace.delete(error);\x0d\n    return f(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  const globalOverride =\x0d\n    maybeOverridePrepareStackTrace(globalThis\x2C error\x2C trace);\x0d\n  if (globalOverride !== kNoOverride) return globalOverride;\x0d\n\x0d\n  // Normal error formatting:\x0d\n  //\x0d\n  // Error: Message\x0d\n  //     at function (file)\x0d\n  //     at file\x0d\n  let errorString;\x0d\n  if (kIsNodeError in error) {\x0d\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\x0d\n  } else {\x0d\n    errorString = ErrorPrototypeToString(error);\x0d\n  }\x0d\n  if (trace.length === 0) {\x0d\n    return errorString;\x0d\n  }\x0d\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\x0d\n};\x0d\n\x0d\nconst maybeOverridePrepareStackTrace = (globalThis\x2C error\x2C trace) => {\x0d\n  // Polyfill of V8's Error.prepareStackTrace API.\x0d\n  // https://crbug.com/v8/7848\x0d\n  // `globalThis` is the global that contains the constructor which\x0d\n  // created `error`.\x0d\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\x0d\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n  // We still have legacy usage that depends on the main context's `Error`\x0d\n  // being used\x2C even when the error is from a different context.\x0d\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\x0d\n  if (typeof MainContextError.prepareStackTrace === 'function') {\x0d\n    return MainContextError.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  return kNoOverride;\x0d\n};\x0d\n\x0d\nconst aggregateTwoErrors = (innerError\x2C outerError) => {\x0d\n  if (innerError && outerError && innerError !== outerError) {\x0d\n    if (ArrayIsArray(outerError.errors)) {\x0d\n      // If `outerError` is already an `AggregateError`.\x0d\n      ArrayPrototypePush(outerError.errors\x2C innerError);\x0d\n      return outerError;\x0d\n    }\x0d\n    let err;\x0d\n    if (isErrorStackTraceLimitWritable()) {\x0d\n      const limit = Error.stackTraceLimit;\x0d\n      Error.stackTraceLimit = 0;\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      err = new AggregateError(new SafeArrayIterator([\x0d\n        outerError\x2C\x0d\n        innerError\x2C\x0d\n      ])\x2C outerError.message);\x0d\n      Error.stackTraceLimit = limit;\x0d\n      ErrorCaptureStackTrace(err\x2C aggregateTwoErrors);\x0d\n    } else {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      err = new AggregateError(new SafeArrayIterator([\x0d\n        outerError\x2C\x0d\n        innerError\x2C\x0d\n      ])\x2C outerError.message);\x0d\n    }\x0d\n    err.code = outerError.code;\x0d\n    return err;\x0d\n  }\x0d\n  return innerError || outerError;\x0d\n};\x0d\n\x0d\nclass NodeAggregateError extends AggregateError {\x0d\n  constructor(errors\x2C message) {\x0d\n    super(new SafeArrayIterator(errors)\x2C message);\x0d\n    this.code = errors[0]?.code;\x0d\n  }\x0d\n\x0d\n  get [kIsNodeError]() {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return AggregateError;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\n// Lazily loaded\x0d\nlet util;\x0d\n\x0d\nlet internalUtil = null;\x0d\nfunction lazyInternalUtil() {\x0d\n  internalUtil ??= require('internal/util');\x0d\n  return internalUtil;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect = null;\x0d\nfunction lazyInternalUtilInspect() {\x0d\n  internalUtilInspect ??= require('internal/util/inspect');\x0d\n  return internalUtilInspect;\x0d\n}\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\nlet buffer;\x0d\nfunction lazyBuffer() {\x0d\n  buffer ??= require('buffer').Buffer;\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction isErrorStackTraceLimitWritable() {\x0d\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\x0d\n  // it again during deserialization.\x0d\n  if (require('internal/v8/startup_snapshot').namespace.isBuildingSnapshot()) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\x0d\n  if (desc === undefined) {\x0d\n    return ObjectIsExtensible(Error);\x0d\n  }\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\x0d\n    desc.writable :\x0d\n    desc.set !== undefined;\x0d\n}\x0d\n\x0d\nfunction inspectWithNoCustomRetry(obj\x2C options) {\x0d\n  const utilInspect = lazyInternalUtilInspect();\x0d\n\x0d\n  try {\x0d\n    return utilInspect.inspect(obj\x2C options);\x0d\n  } catch {\x0d\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\n// A specialized Error that includes an additional info property with\x0d\n// additional information about the error condition.\x0d\n// It has the properties present in a UVException but with a custom error\x0d\n// message followed by the uv error code and uv error message.\x0d\n// It also has its own error code with the original uv error context put into\x0d\n// `err.info`.\x0d\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\x0d\n// and may have .path and .dest.\x0d\nclass SystemError extends Error {\x0d\n  constructor(key\x2C context) {\x0d\n    super();\x0d\n    const prefix = getMessage(key\x2C []\x2C this);\x0d\n    let message = `${prefix}: ${context.syscall} returned ` +\x0d\n                  `${context.code} (${context.message})`;\x0d\n\x0d\n    if (context.path !== undefined)\x0d\n      message += ` ${context.path}`;\x0d\n    if (context.dest !== undefined)\x0d\n      message += ` => ${context.dest}`;\x0d\n\x0d\n    this.code = key;\x0d\n\x0d\n    ObjectDefineProperties(this\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        __proto__: null\x2C\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      name: {\x0d\n        __proto__: null\x2C\x0d\n        value: 'SystemError'\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        __proto__: null\x2C\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      info: {\x0d\n        __proto__: null\x2C\x0d\n        value: context\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        writable: false\x2C\x0d\n      }\x2C\x0d\n      errno: {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.errno;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.errno = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      syscall: {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.syscall;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.syscall = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    if (context.path !== undefined) {\x0d\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\x0d\n      // introduced. The `path` and `dest` properties in the context seem to\x0d\n      // always be of type string. We should probably just remove the\x0d\n      // `.toString()` and `Buffer.from()` operations and set the value on the\x0d\n      // context as the user did.\x0d\n      ObjectDefineProperty(this\x2C 'path'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.path != null ?\x0d\n            context.path.toString() : context.path;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.path = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (context.dest !== undefined) {\x0d\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.dest != null ?\x0d\n            context.dest.toString() : context.dest;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.dest = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    return `${this.name} [${this.code}]: ${this.message}`;\x0d\n  }\x0d\n\x0d\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\x0d\n    return lazyInternalUtilInspect().inspect(this\x2C {\x0d\n      ...ctx\x2C\x0d\n      getters: true\x2C\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeSystemErrorWithCode(key) {\x0d\n  return class NodeError extends SystemError {\x0d\n    constructor(ctx) {\x0d\n      super(key\x2C ctx);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n// This is a special error type that is only used for the E function.\x0d\nclass HideStackFramesError extends Error {\x0d\n}\x0d\n\x0d\nfunction makeNodeErrorForHideStackFrame(Base\x2C clazz) {\x0d\n  class HideStackFramesError extends Base {\x0d\n    constructor(...args) {\x0d\n      if (isErrorStackTraceLimitWritable()) {\x0d\n        const limit = Error.stackTraceLimit;\x0d\n        Error.stackTraceLimit = 0;\x0d\n        super(...args);\x0d\n        Error.stackTraceLimit = limit;\x0d\n      } else {\x0d\n        super(...args);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // This is a workaround for wpt tests that expect that the error\x0d\n    // constructor has a `name` property of the base class.\x0d\n    get ['constructor']() {\x0d\n      return clazz;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return HideStackFramesError;\x0d\n}\x0d\n\x0d\nfunction makeNodeErrorWithCode(Base\x2C key) {\x0d\n  const msg = messages.get(key);\x0d\n  const expectedLength = typeof msg !== 'string' ? -1 : getExpectedArgumentLength(msg);\x0d\n\x0d\n  switch (expectedLength) {\x0d\n    case 0: {\x0d\n      class NodeError extends Base {\x0d\n        code = key;\x0d\n\x0d\n        constructor(...args) {\x0d\n          assert(\x0d\n            args.length === 0\x2C\x0d\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n              `match the required ones (${expectedLength}).`\x2C\x0d\n          );\x0d\n          super(msg);\x0d\n        }\x0d\n\x0d\n        // This is a workaround for wpt tests that expect that the error\x0d\n        // constructor has a `name` property of the base class.\x0d\n        get ['constructor']() {\x0d\n          return Base;\x0d\n        }\x0d\n\x0d\n        get [kIsNodeError]() {\x0d\n          return true;\x0d\n        }\x0d\n\x0d\n        toString() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x0d\n      }\x0d\n      return NodeError;\x0d\n    }\x0d\n    case -1: {\x0d\n      class NodeError extends Base {\x0d\n        code = key;\x0d\n\x0d\n        constructor(...args) {\x0d\n          super();\x0d\n          ObjectDefineProperty(this\x2C 'message'\x2C {\x0d\n            __proto__: null\x2C\x0d\n            value: getMessage(key\x2C args\x2C this)\x2C\x0d\n            enumerable: false\x2C\x0d\n            writable: true\x2C\x0d\n            configurable: true\x2C\x0d\n          });\x0d\n        }\x0d\n\x0d\n        // This is a workaround for wpt tests that expect that the error\x0d\n        // constructor has a `name` property of the base class.\x0d\n        get ['constructor']() {\x0d\n          return Base;\x0d\n        }\x0d\n\x0d\n        get [kIsNodeError]() {\x0d\n          return true;\x0d\n        }\x0d\n\x0d\n        toString() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x0d\n      }\x0d\n      return NodeError;\x0d\n    }\x0d\n    default: {\x0d\n\x0d\n      class NodeError extends Base {\x0d\n        code = key;\x0d\n\x0d\n        constructor(...args) {\x0d\n          assert(\x0d\n            args.length === expectedLength\x2C\x0d\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n              `match the required ones (${expectedLength}).`\x2C\x0d\n          );\x0d\n\x0d\n          ArrayPrototypeUnshift(args\x2C msg);\x0d\n          super(ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args));\x0d\n        }\x0d\n\x0d\n        // This is a workaround for wpt tests that expect that the error\x0d\n        // constructor has a `name` property of the base class.\x0d\n        get ['constructor']() {\x0d\n          return Base;\x0d\n        }\x0d\n\x0d\n        get [kIsNodeError]() {\x0d\n          return true;\x0d\n        }\x0d\n\x0d\n        toString() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x0d\n      }\x0d\n      return NodeError;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This function removes unnecessary frames from Node.js core errors.\x0d\n * @template {(...args: unknown[]) => unknown} T\x0d\n * @param {T} fn\x0d\n * @returns {T}\x0d\n */\x0d\nfunction hideStackFrames(fn) {\x0d\n  function wrappedFn(...args) {\x0d\n    try {\x0d\n      return ReflectApply(fn\x2C this\x2C args);\x0d\n    } catch (error) {\x0d\n      Error.stackTraceLimit && ErrorCaptureStackTrace(error\x2C wrappedFn);\x0d\n      throw error;\x0d\n    }\x0d\n  }\x0d\n  wrappedFn.withoutStackTrace = fn;\x0d\n  return wrappedFn;\x0d\n}\x0d\n\x0d\n// Utility function for registering the error codes. Only used here. Exported\x0d\n// *only* to allow for testing.\x0d\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\x0d\n  // Special case for SystemError that formats the error message differently\x0d\n  // The SystemErrors only have SystemError as their base classes.\x0d\n  messages.set(sym\x2C val);\x0d\n\x0d\n  const ErrClass = def === SystemError ?\x0d\n    makeSystemErrorWithCode(sym) :\x0d\n    makeNodeErrorWithCode(def\x2C sym);\x0d\n\x0d\n  if (otherClasses.length !== 0) {\x0d\n    if (otherClasses.includes(HideStackFramesError)) {\x0d\n      if (otherClasses.length !== 1) {\x0d\n        otherClasses.forEach((clazz) => {\x0d\n          if (clazz !== HideStackFramesError) {\x0d\n            ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\x0d\n            ErrClass[clazz.name].HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass[clazz.name]\x2C clazz);\x0d\n          }\x0d\n        });\x0d\n      }\x0d\n    } else {\x0d\n      otherClasses.forEach((clazz) => {\x0d\n        ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (otherClasses.includes(HideStackFramesError)) {\x0d\n    ErrClass.HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass\x2C def);\x0d\n  }\x0d\n\x0d\n  codes[sym] = ErrClass;\x0d\n}\x0d\n\x0d\nfunction getExpectedArgumentLength(msg) {\x0d\n  let expectedLength = 0;\x0d\n  const regex = /%[dfijoOs]/g;\x0d\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\x0d\n  return expectedLength;\x0d\n}\x0d\n\x0d\nfunction getMessage(key\x2C args\x2C self) {\x0d\n  const msg = messages.get(key);\x0d\n\x0d\n  if (typeof msg === 'function') {\x0d\n    assert(\x0d\n      msg.length <= args.length\x2C // Default options do not count.\x0d\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n        `match the required ones (${msg.length}).`\x2C\x0d\n    );\x0d\n    return ReflectApply(msg\x2C self\x2C args);\x0d\n  }\x0d\n\x0d\n  const expectedLength = getExpectedArgumentLength(msg);\x0d\n  assert(\x0d\n    expectedLength === args.length\x2C\x0d\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n      `match the required ones (${expectedLength}).`\x2C\x0d\n  );\x0d\n  if (args.length === 0)\x0d\n    return msg;\x0d\n\x0d\n  ArrayPrototypeUnshift(args\x2C msg);\x0d\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\x0d\n\x0d\nfunction uvErrmapGet(name) {\x0d\n  uvBinding = lazyUv();\x0d\n  uvBinding.errmap ??= uvBinding.getErrorMap();\x0d\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\x0d\n}\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * function UVException using a context object with data assembled in C++.\x0d\n * The goal is to migrate them to ERR_* errors later when compatibility is\x0d\n * not a concern.\x0d\n */\x0d\nclass UVException extends Error {\x0d\n  /**\x0d\n   * @param {object} ctx\x0d\n   */\x0d\n  constructor(ctx) {\x0d\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\x0d\n    let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\x0d\n\x0d\n    let path;\x0d\n    let dest;\x0d\n    if (ctx.path) {\x0d\n      path = ctx.path.toString();\x0d\n      message += ` '${path}'`;\x0d\n    }\x0d\n    if (ctx.dest) {\x0d\n      dest = ctx.dest.toString();\x0d\n      message += ` -> '${dest}'`;\x0d\n    }\x0d\n\x0d\n    super(message);\x0d\n\x0d\n    for (const prop of ObjectKeys(ctx)) {\x0d\n      if (prop === 'message' || prop === 'path' || prop === 'dest') {\x0d\n        continue;\x0d\n      }\x0d\n      this[prop] = ctx[prop];\x0d\n    }\x0d\n\x0d\n    this.code = code;\x0d\n    if (path) {\x0d\n      this.path = path;\x0d\n    }\x0d\n    if (dest) {\x0d\n      this.dest = dest;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * This function should replace the deprecated\x0d\n * `exceptionWithHostPort()` function.\x0d\n */\x0d\nclass UVExceptionWithHostPort extends Error {\x0d\n  /**\x0d\n   * @param {number} err - A libuv error number\x0d\n   * @param {string} syscall\x0d\n   * @param {string} address\x0d\n   * @param {number} [port]\x0d\n   */\x0d\n  constructor(err\x2C syscall\x2C address\x2C port) {\x0d\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\x0d\n    const message = `${syscall} ${code}: ${uvmsg}`;\x0d\n    let details = '';\x0d\n\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n\x0d\n    super(`${message}${details}`);\x0d\n\x0d\n    this.code = code;\x0d\n    this.errno = err;\x0d\n    this.syscall = syscall;\x0d\n    this.address = address;\x0d\n    if (port) {\x0d\n      this.port = port;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This used to be util._errnoException().\x0d\n */\x0d\nclass ErrnoException extends Error {\x0d\n  /**\x0d\n   * @param {number} err - A libuv error number\x0d\n   * @param {string} syscall\x0d\n   * @param {string} [original] err\x0d\n   */\x0d\n  constructor(err\x2C syscall\x2C original) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    util ??= require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    const message = original ?\x0d\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\x0d\n\x0d\n    super(message);\x0d\n\x0d\n    this.errno = err;\x0d\n    this.code = code;\x0d\n    this.syscall = syscall;\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Deprecated\x2C new Error is `UVExceptionWithHostPort()`\x0d\n * New function added the error description directly\x0d\n * from C++. this method for backwards compatibility\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @param {string} [additional]\x0d\n * @returns {Error}\x0d\n */\x0d\nclass ExceptionWithHostPort extends Error {\x0d\n  constructor(err\x2C syscall\x2C address\x2C port\x2C additional) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    util ??= require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    let details = '';\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n    if (additional) {\x0d\n      details += ` - Local (${additional})`;\x0d\n    }\x0d\n\x0d\n    super(`${syscall} ${code}${details}`);\x0d\n\x0d\n    this.errno = err;\x0d\n    this.code = code;\x0d\n    this.syscall = syscall;\x0d\n    this.address = address;\x0d\n    if (port) {\x0d\n      this.port = port;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DNSException extends Error {\x0d\n  /**\x0d\n   * @param {number|string} code - A libuv error number or a c-ares error code\x0d\n   * @param {string} syscall\x0d\n   * @param {string} [hostname]\x0d\n   */\x0d\n  constructor(code\x2C syscall\x2C hostname) {\x0d\n    let errno;\x0d\n    // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\x0d\n    // c-ares error code.\x0d\n    // TODO(joyeecheung): translate c-ares error codes into numeric ones and\x0d\n    // make them available in a property that's not error.errno (since they\x0d\n    // can be in conflict with libuv error codes). Also make sure\x0d\n    // util.getSystemErrorName() can understand them when an being informed that\x0d\n    // the number is a c-ares error code.\x0d\n    if (typeof code === 'number') {\x0d\n      errno = code;\x0d\n      // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\x0d\n      // long enough that it's not practical to remove it.\x0d\n      if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\x0d\n        code = 'ENOTFOUND'; // Fabricated error name.\x0d\n      } else {\x0d\n        code = lazyInternalUtil().getSystemErrorName(code);\x0d\n      }\x0d\n    }\x0d\n    super(`${syscall} ${code}${hostname ? ` ${hostname}` : ''}`);\x0d\n    this.errno = errno;\x0d\n    this.code = code;\x0d\n    this.syscall = syscall;\x0d\n    if (hostname) {\x0d\n      this.hostname = hostname;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ConnResetException extends Error {\x0d\n  constructor(msg) {\x0d\n    super(msg);\x0d\n    this.code = 'ECONNRESET';\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet maxStack_ErrorName;\x0d\nlet maxStack_ErrorMessage;\x0d\n\x0d\n/**\x0d\n * Returns true if `err.name` and `err.message` are equal to engine-specific\x0d\n * values indicating max call stack size has been exceeded.\x0d\n * "Maximum call stack size exceeded" in V8.\x0d\n * @param {Error} err\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isStackOverflowError(err) {\x0d\n  if (maxStack_ErrorMessage === undefined) {\x0d\n    try {\x0d\n      function overflowStack() { overflowStack(); }\x0d\n      overflowStack();\x0d\n    } catch (err) {\x0d\n      maxStack_ErrorMessage = err.message;\x0d\n      maxStack_ErrorName = err.name;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return err && err.name === maxStack_ErrorName &&\x0d\n         err.message === maxStack_ErrorMessage;\x0d\n}\x0d\n\x0d\n// Only use this for integers! Decimal numbers do not work with this function.\x0d\nfunction addNumericalSeparator(val) {\x0d\n  let res = '';\x0d\n  let i = val.length;\x0d\n  const start = val[0] === '-' ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\x0d\n  }\x0d\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\x0d\n}\x0d\n\x0d\n// Used to enhance the stack that will be picked up by the inspector\x0d\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\x0d\n\x0d\n// These are supposed to be called only on fatal exceptions before\x0d\n// the process exits.\x0d\nconst fatalExceptionStackEnhancers = {\x0d\n  beforeInspector(error) {\x0d\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\x0d\n      return error.stack;\x0d\n    }\x0d\n\x0d\n    try {\x0d\n      // Set the error.stack here so it gets picked up by the\x0d\n      // inspector.\x0d\n      error.stack = error[kEnhanceStackBeforeInspector]();\x0d\n    } catch {\x0d\n      // We are just enhancing the error. If it fails\x2C ignore it.\x0d\n    }\x0d\n    return error.stack;\x0d\n  }\x2C\x0d\n  afterInspector(error) {\x0d\n    const originalStack = error.stack;\x0d\n    let useColors = true;\x0d\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\x0d\n    // rather display them directly to the stdout. On those consoles\x2C\x0d\n    // libuv emulates colors by intercepting stdout stream and calling\x0d\n    // corresponding Windows API functions for setting console colors.\x0d\n    // However\x2C fatal error are handled differently and we cannot easily\x0d\n    // highlight them. On Windows\x2C detecting whether a console supports\x0d\n    // ANSI escape sequences is not reliable.\x0d\n    if (isWindows) {\x0d\n      const info = internalBinding('os').getOSInformation();\x0d\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\x0d\n                                    Number);\x0d\n      if (ver[0] !== 10 || ver[2] < 14393) {\x0d\n        useColors = false;\x0d\n      }\x0d\n    }\x0d\n    const {\x0d\n      inspect\x2C\x0d\n      inspectDefaultOptions: {\x0d\n        colors: defaultColors\x2C\x0d\n      }\x2C\x0d\n    } = lazyInternalUtilInspect();\x0d\n    const colors = useColors && (lazyUtilColors().shouldColorize(process.stderr) || defaultColors);\x0d\n    try {\x0d\n      return inspect(error\x2C {\x0d\n        colors\x2C\x0d\n        customInspect: false\x2C\x0d\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x2C\x0d\n      });\x0d\n    } catch {\x0d\n      return originalStack;\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    arrow_message_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n// Ensures the printed error line is from user code.\x0d\nfunction setArrowMessage(err\x2C arrowMessage) {\x0d\n  err[arrow_message_private_symbol] = arrowMessage;\x0d\n}\x0d\n\x0d\n// Hide stack lines before the first user code line.\x0d\nfunction hideInternalStackFrames(error) {\x0d\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\x0d\n    let frames = stackFrames;\x0d\n    if (typeof stackFrames === 'object') {\x0d\n      frames = ArrayPrototypeFilter(\x0d\n        stackFrames\x2C\x0d\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\x0d\n                                            'node:internal')\x2C\x0d\n      );\x0d\n    }\x0d\n    ArrayPrototypeUnshift(frames\x2C error);\x0d\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\x0d\n  });\x0d\n}\x0d\n\x0d\n// Node uses an AbortError that isn't exactly the same as the DOMException\x0d\n// to make usage of the error in userland and readable-stream easier.\x0d\n// It is a regular error with `.code` and `.name`.\x0d\nclass AbortError extends Error {\x0d\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\x0d\n    if (options !== undefined && typeof options !== 'object') {\x0d\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n    }\x0d\n    super(message\x2C options);\x0d\n    this.code = 'ABORT_ERR';\x0d\n    this.name = 'AbortError';\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This creates a generic Node.js error.\x0d\n * @param {string} message The error message.\x0d\n * @param {object} errorProperties Object with additional properties to be added to the error.\x0d\n * @returns {Error}\x0d\n */\x0d\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  ObjectAssign(err\x2C errorProperties);\x0d\n  return err;\x0d\n});\x0d\n\x0d\n/**\x0d\n * Determine the specific type of a value for type-mismatch errors.\x0d\n * @param {*} value\x0d\n * @returns {string}\x0d\n */\x0d\nfunction determineSpecificType(value) {\x0d\n  if (value === null) {\x0d\n    return 'null';\x0d\n  } else if (value === undefined) {\x0d\n    return 'undefined';\x0d\n  }\x0d\n\x0d\n  const type = typeof value;\x0d\n\x0d\n  switch (type) {\x0d\n    case 'bigint':\x0d\n      return `type bigint (${value}n)`;\x0d\n    case 'number':\x0d\n      if (value === 0) {\x0d\n        return 1 / value === -Infinity ? 'type number (-0)' : 'type number (0)';\x0d\n      } else if (value !== value) { // eslint-disable-line no-self-compare\x0d\n        return 'type number (NaN)';\x0d\n      } else if (value === Infinity) {\x0d\n        return 'type number (Infinity)';\x0d\n      } else if (value === -Infinity) {\x0d\n        return 'type number (-Infinity)';\x0d\n      }\x0d\n      return `type number (${value})`;\x0d\n    case 'boolean':\x0d\n      return value ? 'type boolean (true)' : 'type boolean (false)';\x0d\n    case 'symbol':\x0d\n      return `type symbol (${String(value)})`;\x0d\n    case 'function':\x0d\n      return `function ${value.name}`;\x0d\n    case 'object':\x0d\n      if (value.constructor && 'name' in value.constructor) {\x0d\n        return `an instance of ${value.constructor.name}`;\x0d\n      }\x0d\n      return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\x0d\n    case 'string':\x0d\n      value.length > 28 && (value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`);\x0d\n      if (StringPrototypeIndexOf(value\x2C "'") === -1) {\x0d\n        return `type string ('${value}')`;\x0d\n      }\x0d\n      return `type string (${JSONStringify(value)})`;\x0d\n    default:\x0d\n      value = lazyInternalUtilInspect().inspect(value\x2C { colors: false });\x0d\n      if (value.length > 28) {\x0d\n        value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`;\x0d\n      }\x0d\n\x0d\n      return `type ${type} (${value})`;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Create a list string in the form like 'A and B' or 'A\x2C B\x2C ...\x2C and Z'.\x0d\n * We cannot use Intl.ListFormat because it's not available in\x0d\n * --without-intl builds.\x0d\n * @param {string[]} array An array of strings.\x0d\n * @param {string} [type] The list type to be inserted before the last element.\x0d\n * @returns {string}\x0d\n */\x0d\nfunction formatList(array\x2C type = 'and') {\x0d\n  switch (array.length) {\x0d\n    case 0: return '';\x0d\n    case 1: return `${array[0]}`;\x0d\n    case 2: return `${array[0]} ${type} ${array[1]}`;\x0d\n    case 3: return `${array[0]}\x2C ${array[1]}\x2C ${type} ${array[2]}`;\x0d\n    default:\x0d\n      return `${ArrayPrototypeJoin(ArrayPrototypeSlice(array\x2C 0\x2C -1)\x2C '\x2C ')}\x2C ${type} ${array[array.length - 1]}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  AbortError\x2C\x0d\n  aggregateTwoErrors\x2C\x0d\n  NodeAggregateError\x2C\x0d\n  codes\x2C\x0d\n  ConnResetException\x2C\x0d\n  DNSException\x2C\x0d\n  // This is exported only to facilitate testing.\x0d\n  determineSpecificType\x2C\x0d\n  E\x2C\x0d\n  ErrnoException\x2C\x0d\n  ExceptionWithHostPort\x2C\x0d\n  fatalExceptionStackEnhancers\x2C\x0d\n  formatList\x2C\x0d\n  genericNodeError\x2C\x0d\n  getMessage\x2C\x0d\n  hideInternalStackFrames\x2C\x0d\n  hideStackFrames\x2C\x0d\n  inspectWithNoCustomRetry\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  isStackOverflowError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  kIsNodeError\x2C\x0d\n  kNoOverride\x2C\x0d\n  maybeOverridePrepareStackTrace\x2C\x0d\n  overrideStackTrace\x2C\x0d\n  prepareStackTrace\x2C\x0d\n  setArrowMessage\x2C\x0d\n  SystemError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  UVException\x2C\x0d\n  UVExceptionWithHostPort\x2C\x0d\n};\x0d\n\x0d\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\x0d\n// must be an upper case string. The val can be either a function or a string.\x0d\n// The def must be an error class.\x0d\n// The return value of the function must be a string.\x0d\n// Examples:\x0d\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\x0d\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\x0d\n//\x0d\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\x0d\n// any given error code must never be reused to identify a different error.\x0d\n//\x0d\n// Any error code added here should also be added to the documentation\x0d\n//\x0d\n// Note: Please try to keep these in alphabetical order\x0d\n//\x0d\n// Note: Node.js specific errors must begin with the prefix ERR_\x0d\n\x0d\nE('ERR_ACCESS_DENIED'\x2C\x0d\n  'Access to this API has been restricted. Permission: %s'\x2C\x0d\n  Error);\x0d\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\x0d\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\x0d\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\x0d\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\x0d\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\x0d\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\x0d\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name = undefined) => {\x0d\n    if (name) {\x0d\n      return `"${name}" is outside of buffer bounds`;\x0d\n    }\x0d\n    return 'Attempt to access memory outside buffer bounds';\x0d\n  }\x2C RangeError);\x0d\nE('ERR_BUFFER_TOO_LARGE'\x2C\x0d\n  'Cannot create a Buffer larger than %s bytes'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\x0d\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\x0d\n  'Child closed before reply received'\x2C Error);\x0d\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\x0d\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\x0d\n  Error);\x0d\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\x0d\n  'Console expects a writable stream instance for %s'\x2C TypeError);\x0d\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\x0d\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\x0d\n  'Custom engines not supported by this OpenSSL'\x2C Error);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\x0d\n  'Public key is not valid for specified curve'\x2C Error);\x0d\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\x0d\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\x0d\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\x0d\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\x0d\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\x0d\n// Switch to TypeError. The current implementation does not seem right.\x0d\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\x0d\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\x0d\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\x0d\n  'Cannot do synchronous work on directory handle with concurrent ' +\x0d\n  'asynchronous operations'\x2C Error);\x0d\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\x0d\n  'A callback was registered through ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\x0d\n     'exclusive with using the `domain` module'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\x0d\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\x0d\n  Error);\x0d\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\x0d\n  'Deserialize main function is already configured.'\x2C Error);\x0d\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\x0d\n  this.errno = ret;\x0d\n  return `The encoded data was not valid for encoding ${encoding}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\x0d\n  RangeError);\x0d\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\x0d\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\x0d\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\x0d\n  this.reason = reason;\x0d\n  return 'Promise was rejected with falsy value';\x0d\n}\x2C Error\x2C HideStackFramesError);\x0d\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\x0d\n  'The feature %s is unavailable on the current platform' +\x0d\n  '\x2C which is being used to run Node.js'\x2C\x0d\n  TypeError);\x0d\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\x0d\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\x0d\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\x0d\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\x0d\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\x0d\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\x0d\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\x0d\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\x0d\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\x0d\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError\x2C HideStackFramesError);\x0d\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\x0d\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\x0d\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\x0d\n  Error); // Switch to TypeError. The current implementation does not seem right\x0d\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\x0d\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\x0d\n  ':authority header is required for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_PATH'\x2C\x0d\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\x0d\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\x0d\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\x0d\n  'Cannot specify additional headers after response initiated'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\x0d\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\x0d\n  'Header field "%s" must only have a single value'\x2C TypeError);\x0d\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\x0d\n  'Informational status codes cannot be used'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\x0d\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\x0d\n  'Invalid informational status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\x0d\n  'Packed settings length must be a multiple of six'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\x0d\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\x0d\n  // Using default arguments here is important so the arguments are not counted\x0d\n  // towards `Function#length`.\x0d\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\x0d\n    this.actual = actual;\x0d\n    if (min !== undefined) {\x0d\n      this.min = min;\x0d\n      this.max = max;\x0d\n    }\x0d\n    return `Invalid value for setting "${name}": ${actual}`;\x0d\n  }\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\x0d\n  'Maximum number of pending settings acknowledgements'\x2C Error);\x0d\nE('ERR_HTTP2_NESTED_PUSH'\x2C\x0d\n  'A push stream cannot initiate another push stream.'\x2C Error);\x0d\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\x0d\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\x0d\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\x0d\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\x0d\n  'No stream ID is available because maximum stream ID has been reached'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\x0d\n  'Responses with %s status must not have a payload'\x2C Error);\x0d\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\x0d\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\x0d\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\x0d\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\x0d\n  'Offset or length can only be specified for regular files'\x2C Error);\x0d\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\x0d\n  'The socket is already bound to an Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\x0d\n  'The socket has been disconnected from the Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_101'\x2C\x0d\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\x0d\n  let msg = 'The pending stream has been canceled';\x0d\n  if (error) {\x0d\n    this.cause = error;\x0d\n    if (typeof error.message === 'string')\x0d\n      msg += ` (caused by: ${error.message})`;\x0d\n  }\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\x0d\n  'A stream cannot depend on itself'\x2C Error);\x0d\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\x0d\n  'Trailing headers have already been sent'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\x0d\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\x0d\n  'emitted'\x2C Error);\x0d\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\x0d\nE('ERR_HTTP_BODY_NOT_ALLOWED'\x2C\x0d\n  'Adding content for this request method or response status is not allowed.'\x2C Error);\x0d\nE('ERR_HTTP_CONTENT_LENGTH_MISMATCH'\x2C\x0d\n  'Response body\\'s content-length of %s byte(s) does not match the content-length of %s byte(s) set in header'\x2C Error);\x0d\nE('ERR_HTTP_HEADERS_SENT'\x2C\x0d\n  'Cannot %s headers after they are sent to the client'\x2C Error);\x0d\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\x0d\nE('ERR_HTTP_SOCKET_ASSIGNED'\x2C\x0d\n  'ServerResponse has an already assigned socket'\x2C Error);\x0d\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\x0d\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\x0d\nE('ERR_HTTP_TRAILER_INVALID'\x2C\x0d\n  'Trailers are invalid with this transfer encoding'\x2C Error);\x0d\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\x0d\nE('ERR_IMPORT_ATTRIBUTE_MISSING'\x2C\x0d\n  'Module "%s" needs an import attribute of "%s: %s"'\x2C TypeError);\x0d\nE('ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE'\x2C\x0d\n  'Module "%s" is not of type "%s"'\x2C TypeError);\x0d\nE('ERR_IMPORT_ATTRIBUTE_UNSUPPORTED'\x2C\x0d\n  'Import attribute "%s" with value "%s" is not supported'\x2C TypeError);\x0d\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\x0d\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\x0d\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\x0d\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\x0d\n  'Inspector is already activated. Close it with inspector.close() ' +\x0d\n  'before activating it again.'\x2C\x0d\n  Error);\x0d\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\x0d\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\x0d\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\x0d\n  const suffix = 'This is caused by either a bug in Node.js ' +\x0d\n    'or incorrect usage of Node.js internals.\\n' +\x0d\n    'Please open an issue with this stack trace at ' +\x0d\n    'https://github.com/nodejs/node/issues\\n';\x0d\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\x0d\n  this.host = host;\x0d\n  this.port = port;\x0d\n  return `Invalid address family: ${addressType} ${host}:${port}`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_INVALID_ARG_TYPE'\x2C\x0d\n  (name\x2C expected\x2C actual) => {\x0d\n    assert(typeof name === 'string'\x2C "'name' must be a string");\x0d\n    if (!ArrayIsArray(expected)) {\x0d\n      expected = [expected];\x0d\n    }\x0d\n\x0d\n    let msg = 'The ';\x0d\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\x0d\n      // For cases like 'first argument'\x0d\n      msg += `${name} `;\x0d\n    } else {\x0d\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n      msg += `"${name}" ${type} `;\x0d\n    }\x0d\n    msg += 'must be ';\x0d\n\x0d\n    const types = [];\x0d\n    const instances = [];\x0d\n    const other = [];\x0d\n\x0d\n    for (const value of expected) {\x0d\n      assert(typeof value === 'string'\x2C\x0d\n             'All expected entries have to be of type string');\x0d\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\x0d\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\x0d\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\x0d\n        ArrayPrototypePush(instances\x2C value);\x0d\n      } else {\x0d\n        assert(value !== 'object'\x2C\x0d\n               'The value "object" should be written as "Object"');\x0d\n        ArrayPrototypePush(other\x2C value);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Special handle `object` in case other instances are allowed to outline\x0d\n    // the differences between each other.\x0d\n    if (instances.length > 0) {\x0d\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\x0d\n      if (pos !== -1) {\x0d\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\x0d\n        ArrayPrototypePush(instances\x2C 'Object');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (types.length > 0) {\x0d\n      msg += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(types\x2C 'or')}`;\x0d\n      if (instances.length > 0 || other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (instances.length > 0) {\x0d\n      msg += `an instance of ${formatList(instances\x2C 'or')}`;\x0d\n      if (other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (other.length > 0) {\x0d\n      if (other.length > 1) {\x0d\n        msg += `one of ${formatList(other\x2C 'or')}`;\x0d\n      } else {\x0d\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\x0d\n          msg += 'an ';\x0d\n        msg += `${other[0]}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    msg += `. Received ${determineSpecificType(actual)}`;\x0d\n\x0d\n    return msg;\x0d\n  }\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\x0d\n  let inspected = lazyInternalUtilInspect().inspect(value);\x0d\n  if (inspected.length > 128) {\x0d\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\x0d\n  }\x0d\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\x0d\n}\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_INVALID_CHAR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name\x2C field = undefined) => {\x0d\n    let msg = `Invalid character in ${name}`;\x0d\n    if (field !== undefined) {\x0d\n      msg += ` ["${field}"]`;\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_CURSOR_POS'\x2C\x0d\n  'Cannot set cursor row without setting its column'\x2C TypeError);\x0d\nE('ERR_INVALID_FD'\x2C\x0d\n  '"fd" must be a positive integer: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_HOST'\x2C\x0d\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\x0d\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\x0d\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_MIME_SYNTAX'\x2C (production\x2C str\x2C invalidIndex) => {\x0d\n  const msg = invalidIndex !== -1 ? ` at ${invalidIndex}` : '';\x0d\n  return `The MIME syntax for a ${production} in "${str}" is invalid` + msg;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\x0d\n  return `Invalid module "${request}" ${reason}${base ?\x0d\n    ` imported from ${base}` : ''}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\x0d\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\x0d\n    ''}${message ? `. ${message}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\x0d\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\x0d\n    const relError = typeof target === 'string' && !isImport &&\x0d\n      target.length && !StringPrototypeStartsWith(target\x2C './');\x0d\n    if (key === '.') {\x0d\n      assert(isImport === false);\x0d\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\x0d\n        `in the package config ${pkgPath}package.json${base ?\x0d\n          ` imported from ${base}` : ''}${relError ?\x0d\n          '; targets must start with "./"' : ''}`;\x0d\n    }\x0d\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\x0d\n      JSONStringify(target)} defined for '${key}' in the package config ${\x0d\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\x0d\n      '; targets must start with "./"' : ''}`;\x0d\n  }\x2C Error);\x0d\nE('ERR_INVALID_PROTOCOL'\x2C\x0d\n  'Protocol "%s" not supported. Expected "%s"'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\x0d\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\x0d\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" function but got ${determineSpecificType(value)}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  return `Expected ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" function but got ${determineSpecificType(value)}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\x0d\n  const type = determineSpecificType(value);\x0d\n\x0d\n  return `Expected ${input} to be returned from the "${name}"` +\x0d\n         ` function but got ${type}.`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\x0d\n  'Asynchronous forks do not support ' +\x0d\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\x0d\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\x0d\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\x0d\nE('ERR_INVALID_URL'\x2C function(input\x2C base = null) {\x0d\n  this.input = input;\x0d\n\x0d\n  if (base != null) {\x0d\n    this.base = base;\x0d\n  }\x0d\n\x0d\n  // Don't include URL in message.\x0d\n  // (See https://github.com/nodejs/node/pull/38614)\x0d\n  return 'Invalid URL';\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_URL_SCHEME'\x2C\x0d\n  (expected) => {\x0d\n    if (typeof expected === 'string')\x0d\n      expected = [expected];\x0d\n    assert(expected.length <= 2);\x0d\n    const res = expected.length === 2 ?\x0d\n      `one of scheme ${expected[0]} or ${expected[1]}` :\x0d\n      `of scheme ${expected[0]}`;\x0d\n    return `The URL must be ${res}`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\x0d\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\x0d\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\x0d\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\x0d\nE(\x0d\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\x0d\n  '"%s" did not call the next hook in its chain and did not' +\x0d\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\x0d\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\x0d\n  Error\x2C\x0d\n);\x0d\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\x0d\n  (moduleURL\x2C realIntegrities) => {\x0d\n    let msg = `The content of "${\x0d\n      moduleURL\x0d\n    }" does not match the expected integrity.`;\x0d\n    if (realIntegrities.size) {\x0d\n      const sri = ArrayPrototypeJoin(\x0d\n        ArrayFrom(realIntegrities.entries()\x2C\x0d\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\x0d\n        ' '\x2C\x0d\n      );\x0d\n      msg += ` Integrities found are: ${sri}`;\x0d\n    } else {\x0d\n      msg += ' The resource was not found in the policy.';\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\x0d\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\x0d\n  'conditions: %s'\x2C\x0d\n  Error);\x0d\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\x0d\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\x0d\n  'Manifest resource %s has invalid property value for %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\x0d\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\x0d\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\x0d\n  'Manifest specified unknown error behavior "%s".'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\x0d\nE('ERR_MISSING_ARGS'\x2C\x0d\n  (...args) => {\x0d\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\x0d\n    let msg = 'The ';\x0d\n    const len = args.length;\x0d\n    const wrap = (a) => `"${a}"`;\x0d\n    args = ArrayPrototypeMap(\x0d\n      args\x2C\x0d\n      (a) => (ArrayIsArray(a) ?\x0d\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\x0d\n        wrap(a))\x2C\x0d\n    );\x0d\n    msg += `${formatList(args)} argument${len > 1 ? 's' : ''}`;\x0d\n    return `${msg} must be specified`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\x0d\nE('ERR_MODULE_NOT_FOUND'\x2C function(path\x2C base\x2C exactUrl) {\x0d\n  if (exactUrl) {\x0d\n    lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C `${exactUrl}`);\x0d\n  }\x0d\n  return `Cannot find ${\x0d\n    exactUrl ? 'module' : 'package'} '${path}' imported from ${base}`;\x0d\n}\x2C Error);\x0d\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\x0d\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\x0d\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\x0d\n  'byte_offset + byte_length should be less than or equal to the size in ' +\x0d\n    'bytes of the array passed in'\x2C\x0d\n  RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\x0d\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\x0d\n  'Invalid typed array length'\x2C RangeError);\x0d\nE('ERR_NETWORK_IMPORT_BAD_RESPONSE'\x2C\x0d\n  "import '%s' received a bad response: %s"\x2C Error);\x0d\nE('ERR_NETWORK_IMPORT_DISALLOWED'\x2C\x0d\n  "import of '%s' by %s is not supported: %s"\x2C Error);\x0d\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\x0d\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\x0d\nE('ERR_NOT_SUPPORTED_IN_SNAPSHOT'\x2C '%s is not supported in startup snapshot'\x2C Error);\x0d\nE('ERR_NO_CRYPTO'\x2C\x0d\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\x0d\nE('ERR_NO_ICU'\x2C\x0d\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\x0d\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\x0d\nE('ERR_OUT_OF_RANGE'\x2C\x0d\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\x0d\n    assert(range\x2C 'Missing "range" argument');\x0d\n    let msg = replaceDefaultBoolean ? str :\x0d\n      `The value of "${str}" is out of range.`;\x0d\n    let received;\x0d\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\x0d\n      received = addNumericalSeparator(String(input));\x0d\n    } else if (typeof input === 'bigint') {\x0d\n      received = String(input);\x0d\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\x0d\n        received = addNumericalSeparator(received);\x0d\n      }\x0d\n      received += 'n';\x0d\n    } else {\x0d\n      received = lazyInternalUtilInspect().inspect(input);\x0d\n    }\x0d\n    msg += ` It must be ${range}. Received ${received}`;\x0d\n    return msg;\x0d\n  }\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\x0d\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\x0d\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\x0d\n  if (subpath === '.')\x0d\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\x0d\n      ` imported from ${base}` : ''}`;\x0d\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\x0d\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\x0d\n  'command does not take positional arguments'\x2C TypeError);\x0d\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\x0d\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\x0d\n    "argument starting with a '-'\x2C place it at the end of the command after " +\x0d\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\x0d\n  return `Unknown option '${option}'${suggestDashDash}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\x0d\n  '%d is not a valid timestamp'\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_REQUIRE_ESM'\x2C\x0d\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\x0d\n    hideInternalStackFrames(this);\x0d\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\x0d\n      parentPath}` : ''} not supported.`;\x0d\n    if (!packageJsonPath) {\x0d\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\x0d\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\x0d\n            'import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    const path = require('path');\x0d\n    const basename = parentPath && path.basename(filename) ===\x0d\n      path.basename(parentPath) ? filename : path.basename(filename);\x0d\n    if (hasEsmSyntax) {\x0d\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\x0d\n        ' a dynamic import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\x0d\n      'file whose nearest parent package.json contains "type": "module" ' +\x0d\n      'which declares all .js files in that package scope as ES modules.' +\x0d\n      `\\nInstead either rename ${basename} to end in .cjs\x2C change the requiring ` +\x0d\n      'code to use dynamic import() which is available in all CommonJS ' +\x0d\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\x0d\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\x0d\n      'all ES modules instead).\\n';\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\x0d\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\x0d\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\x0d\n  'Listen method has been called more than once without closing.'\x2C Error);\x0d\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\x0d\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\x0d\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a positive integer'\x2C TypeError);\x0d\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\x0d\n  assert(typeof allowZero === 'boolean'\x2C\x0d\n         "The 'allowZero' argument must be of type boolean.");\x0d\n  const operator = allowZero ? '>=' : '>';\x0d\n  return `${name} should be ${operator} 0 and < 65536. Received ${determineSpecificType(port)}.`;\x0d\n}\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_SOCKET_BAD_TYPE'\x2C\x0d\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\x0d\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\x0d\n  'Could not get or set buffer size'\x2C\x0d\n  SystemError);\x0d\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\x0d\nE('ERR_SOCKET_CLOSED_BEFORE_CONNECTION'\x2C\x0d\n  'Socket closed before the connection was established'\x2C\x0d\n  Error);\x0d\nE('ERR_SOCKET_CONNECTION_TIMEOUT'\x2C\x0d\n  'Socket connection timeout'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\x0d\nE('ERR_SRI_PARSE'\x2C\x0d\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\x0d\n  'Cannot call %s after a stream was finished'\x2C\x0d\n  Error);\x0d\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\x0d\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\x0d\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\x0d\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\x0d\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\x0d\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\x0d\n  'stream.unshift() after end event'\x2C Error);\x0d\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\x0d\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\x0d\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\x0d\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError\x2C HideStackFramesError);\x0d\nE('ERR_TAP_LEXER_ERROR'\x2C function(errorMsg) {\x0d\n  hideInternalStackFrames(this);\x0d\n  return errorMsg;\x0d\n}\x2C Error);\x0d\nE('ERR_TAP_PARSER_ERROR'\x2C function(errorMsg\x2C details\x2C tokenCausedError\x2C source) {\x0d\n  hideInternalStackFrames(this);\x0d\n  this.cause = tokenCausedError;\x0d\n  const { column\x2C line\x2C start\x2C end } = tokenCausedError.location;\x0d\n  const errorDetails = `${details} at line ${line}\x2C column ${column} (start ${start}\x2C end ${end})`;\x0d\n  return errorMsg + errorDetails;\x0d\n}\x2C SyntaxError);\x0d\nE('ERR_TAP_VALIDATION_ERROR'\x2C function(errorMsg) {\x0d\n  hideInternalStackFrames(this);\x0d\n  return errorMsg;\x0d\n}\x2C Error);\x0d\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\x0d\n  hideInternalStackFrames(this);\x0d\n  assert(typeof failureType === 'string' || typeof failureType === 'symbol'\x2C\x0d\n         "The 'failureType' argument must be of type string or symbol.");\x0d\n\x0d\n  let msg = error?.message ?? error;\x0d\n\x0d\n  if (typeof msg !== 'string') {\x0d\n    msg = inspectWithNoCustomRetry(msg);\x0d\n  }\x0d\n\x0d\n  this.failureType = failureType;\x0d\n  this.cause = error;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_ALPN_CALLBACK_INVALID_RESULT'\x2C (value\x2C protocols) => {\x0d\n  return `ALPN callback returned a value (${\x0d\n    value\x0d\n  }) that did not match any of the client's offered protocols (${\x0d\n    protocols.join('\x2C ')\x0d\n  })`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS'\x2C\x0d\n  'The ALPNCallback and ALPNProtocols TLS options are mutually exclusive'\x2C\x0d\n  TypeError);\x0d\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\x0d\n  this.reason = reason;\x0d\n  this.host = host;\x0d\n  this.cert = cert;\x0d\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\x0d\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\x0d\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\x0d\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\x0d\n  Error);\x0d\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\x0d\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\x0d\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\x0d\n  'TLS session renegotiation disabled for this socket'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\x0d\n  '"servername" is required parameter for Server.addContext'\x2C Error);\x0d\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\x0d\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\x0d\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\x0d\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\x0d\n  'At least one category is required'\x2C TypeError);\x0d\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\x0d\n\x0d\n// This should probably be a `RangeError`.\x0d\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\x0d\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\x0d\n  'handler'\x2C Error);\x0d\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\x0d\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\x0d\n    'callback was already active'\x2C\x0d\n  Error);\x0d\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\x0d\nE('ERR_UNHANDLED_ERROR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (err = undefined) => {\x0d\n    const msg = 'Unhandled error.';\x0d\n    if (err === undefined) return msg;\x0d\n    return `${msg} (${err})`;\x0d\n  }\x2C Error);\x0d\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\x0d\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C 'Unknown file extension "%s" for %s'\x2C TypeError);\x0d\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\x0d\n  RangeError);\x0d\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C function(path\x2C base\x2C exactUrl) {\x0d\n  lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C exactUrl);\x0d\n  return `Directory import '${path}' is not supported ` +\x0d\n    `resolving ES modules imported from ${base}`;\x0d\n}\x2C Error);\x0d\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\x0d\n  let msg = `Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;\x0d\n  if (isWindows && url.protocol.length === 2) {\x0d\n    msg +=\x0d\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\x0d\n  }\x0d\n  msg += `. Received protocol '${url.protocol}'`;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_USE_AFTER_CLOSE'\x2C '%s was closed'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\x0d\n  'At least one valid performance entry type is required'\x2C Error);\x0d\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\x0d\n  'A dynamic import callback was not specified.'\x2C TypeError);\x0d\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG'\x2C\x0d\n  'A dynamic import callback was invoked without --experimental-vm-modules'\x2C\x0d\n  TypeError);\x0d\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\x0d\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\x0d\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\x0d\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\x0d\n  'Linked modules must use the same context'\x2C Error);\x0d\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\x0d\n  this.cause = cause;\x0d\n  return message;\x0d\n}\x2C Error);\x0d\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\x0d\n  'Provided module is not an instance of Module'\x2C Error);\x0d\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\x0d\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\x0d\nE('ERR_WEBASSEMBLY_RESPONSE'\x2C 'WebAssembly response %s'\x2C TypeError);\x0d\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\x0d\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\x0d\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\x0d\n  Error);\x0d\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\x0d\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\x0d\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\x0d\nE('ERR_WORKER_PATH'\x2C (filename) =>\x0d\n  'The worker script or module filename must be an absolute path or a ' +\x0d\n  'relative path starting with \\'./\\' or \\'../\\'.' +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\x0d\n    ' Wrap file:// URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\x0d\n    ' Wrap data: URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  ` Received "${filename}"`\x2C\x0d\n  TypeError);\x0d\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\x0d\n  'Serializing an uncaught exception failed'\x2C Error);\x0d\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\x0d\n  '%s is not supported in workers'\x2C TypeError);\x0d\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\x0d\n
code-source-info,0x7ff62c4c5e40,10,13933,14128,,,
tick,0x7ffe2c1bf25f,121172,0,0x0,0,0x7ff6abde0df0,0x121eb127322,0x121eb128bfb,0x121eb1285bf,0x121eb128415,0x121eb1282ab,0x121eb127c10,0x121eb124f03,0x121eb123640,0x121eb1231d1,0x121eb121c0e,0x121eb1219b3,0x121eb1183ae,0x33d09cbfb17,0x33d09cbdd94,0x33d09cbd82a
code-creation,JS,11,121206,0x7ff62c4c60c0,588,nextPart node:fs:2592:31,0x22671cad808,^
code-source-info,0x7ff62c4c60c0,55,70950,71201,,,
code-creation,JS,11,121750,0x7ff62c4cda80,6312,realpathSync node:fs:2614:22,0x22671cad860,^
code-source-info,0x7ff62c4cda80,55,71508,75384,,,
code-creation,JS,11,121790,0x7ff62c4c6340,536,handleErrorFromBinding node:internal/fs/utils:349:32,0x22671cb3168,^
code-source-info,0x7ff62c4c6340,60,8501,9016,,,
code-creation,JS,11,121810,0x7ff62c4c6580,296,isFileType node:fs:206:20,0x22671cab6e8,^
code-source-info,0x7ff62c4c6580,55,5291,5539,,,
code-creation,JS,10,121896,0x3c57026e1a4,72,encodeRealpathResult node:fs:2579:30,0x22671cad7b0,~
code-source-info,0x3c57026e1a4,55,70539,70805,C0O70562C4O70587C10O70607C17O70616C22O70633C24O70647C25O70668C30O70675C35O70675C41O70704C48O70713C53O70734C55O70750C56O70775C61O70792C66O70775C71O70802,,
code-creation,JS,10,122067,0x3c57026e464,245,Module.load node:internal/modules/cjs/loader:1194:33,0x22671cb74d0,~
code-source-info,0x3c57026e464,63,39214,40080,C0O39230C8O39276C16O39230C21O39286C26O39299C32O39286C36O39311C38O39325C42O39340C45O39360C52O39377C55O39382C60O39382C66O39360C71O39351C75O39425C78O39425C83O39504C91O39508C101O39561C106O39572C112O39589C124O39595C129O39589C130O39642C133O39649C140O39660C144O39671C150O39692C151O39704C155O39740C160O39740C164O39854C169O39891C174O39902C186O39943C191O39950C196O39950C203O39964C205O39962C210O40002C215O40011C220O40011C227O40044C232O40053C237O40053C244O40079,,
code-creation,JS,10,122210,0x3c57026e754,99,findLongestRegisteredExtension node:internal/modules/cjs/loader:502:40,0x22671cb6e88,~
code-source-info,0x3c57026e754,63,15109,15558,C0O15138C5O15143C10O15143C16O15170C18O15195C20O15222C22O15291C36O15244C44O15291C49O15306C51O15325C55O15335C56O15345C61O15354C63O15404C68O15423C74O15463C77O15474C84O15485C89O15507C91O15531C92O15228C96O15542C98O15555,,
code-creation,JS,10,122334,0x3c57026e964,413,basename node:path:753:11,0x22671c9ac38,~
code-source-info,0x3c57026e
code-creation,JS,10,122555,0x3c57026ef6c,492,Module._extensions..js node:internal/modules/cjs/loader:1389:37,0x22671cb76f8,~
code-source-info,0x3c57026ef6c,63,46336,48304,C0O46437C5O46451C10O46451C16O46471C18O46483C25O46493C34O46527C39O46540C40O46554C46O46584C51O46597C60O46597C67O46637C76O46641C83O46702C88O46720C93O46720C105O46842C112O46846C122O46853C127O47003C132O47021C137O47021C143O47060C146O47066C154O47109C159O47114C164O47126C174O47114C181O47172C186O47172C192O47232C211O47232C217O47406C220O47417C227O47423C232O47452C237O47492C243O47510C252O47510C262O47505C265O47627C269O47674C276O47709C279O47734C287O47741C291O47784C301O47741C308O47709C322O47674C329O47812C333O47871C344O47871C357O47839C364O47848C368O47935C374O47947C376O47983C383O47983C391O48029C394O48023C398O48062C410O48079C423O48088C436O48116C445O48147C450O48116C466O48171C471O48171C476O48240C478O48240C479O48273C484O48273C491O48303,,
code-creation,JS,10,122733,0x3c57026f3fc,472,readFileSync node:fs:446:22,0x22671cabbb0,~
code-source-info,0x3c57026f3fc
code-creation,JS,10,122944,0x3c57026f904,30,isEncoding node:buffer:561:40,0x22671c8ee98,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetBuffer\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeGetByteOffset\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  TypedArrayPrototypeSlice\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  isAscii: bindingIsAscii\x2C\x0d\n  isUtf8: bindingIsUtf8\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x2C\x0d\n  defineLazyProperties\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isTypedArray\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x2C\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = { __proto__: null };\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0 || sourceStart > source.length)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C `>= 0 && <= ${source.length}`\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates the Buffer as a copy of the underlying ArrayBuffer of the view\x0d\n * rather than the contents of the view.\x0d\n * @param {TypedArray} view\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @returns {Buffer}\x0d\n */\x0d\nBuffer.copyBytesFrom = function copyBytesFrom(view\x2C offset\x2C length) {\x0d\n  if (!isTypedArray(view)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('view'\x2C [ 'TypedArray' ]\x2C view);\x0d\n  }\x0d\n\x0d\n  const viewLength = TypedArrayPrototypeGetLength(view);\x0d\n  if (viewLength === 0) {\x0d\n    return Buffer.alloc(0);\x0d\n  }\x0d\n\x0d\n  if (offset !== undefined || length !== undefined) {\x0d\n    if (offset !== undefined) {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n      if (offset >= viewLength) return Buffer.alloc(0);\x0d\n    } else {\x0d\n      offset = 0;\x0d\n    }\x0d\n    let end;\x0d\n    if (length !== undefined) {\x0d\n      validateInteger(length\x2C 'length'\x2C 0);\x0d\n      end = offset + length;\x0d\n    } else {\x0d\n      end = viewLength;\x0d\n    }\x0d\n\x0d\n    view = TypedArrayPrototypeSlice(view\x2C offset\x2C end);\x0d\n  }\x0d\n\x0d\n  return fromArrayLike(new Uint8Array(\x0d\n    TypedArrayPrototypeGetBuffer(view)\x2C\x0d\n    TypedArrayPrototypeGetByteOffset(view)\x2C\x0d\n    TypedArrayPrototypeGetByteLength(view)));\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(size) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  if (len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (encoding) {\x0d\n    const ops = getEncodingOps(encoding);\x0d\n    if (ops) {\x0d\n      return ops.byteLength(string);\x0d\n    }\x0d\n  }\x0d\n  return byteLengthUtf8(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x2C\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n  const len = TypedArrayPrototypeGetByteLength(this);\x0d\n  if (len !== TypedArrayPrototypeGetByteLength(otherBuffer))\x0d\n    return false;\x0d\n\x0d\n  return len === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = { __proto__: null };\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x2C\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x2C\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\x0d\nconst kForgivingBase64AllowedChars = [\x0d\n  // ASCII whitespace\x0d\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\x0d\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\x0d\n\x0d\n  // Uppercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\x0d\n\x0d\n  // Lowercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\x0d\n\x0d\n  // Decimal digits\x0d\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\x0d\n\x0d\n  0x2B\x2C // +\x0d\n  0x2F\x2C // /\x0d\n  0x3D\x2C // =\x0d\n];\x0d\nconst kEqualSignIndex = ArrayPrototypeIndexOf(kForgivingBase64AllowedChars\x2C\x0d\n                                              0x3D);\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n\x0d\n  input = `${input}`;\x0d\n  let nonAsciiWhitespaceCharCount = 0;\x0d\n  let equalCharCount = 0;\x0d\n\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    const index = ArrayPrototypeIndexOf(\x0d\n      kForgivingBase64AllowedChars\x2C\x0d\n      StringPrototypeCharCodeAt(input\x2C n));\x0d\n\x0d\n    if (index > 4) {\x0d\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\x0d\n      // ASCII whitespace char codes.\x0d\n      nonAsciiWhitespaceCharCount++;\x0d\n\x0d\n      if (index === kEqualSignIndex) {\x0d\n        equalCharCount++;\x0d\n      } else if (equalCharCount) {\x0d\n        // The `=` char is only allowed at the end.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n\x0d\n      if (equalCharCount > 2) {\x0d\n        // Only one more `=` is permitted after the first equal sign.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n    } else if (index === -1) {\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let reminder = nonAsciiWhitespaceCharCount % 4;\x0d\n\x0d\n  // See #2\x2C #3\x2C #4 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (!reminder) {\x0d\n    // Remove all trailing `=` characters and get the new reminder.\x0d\n    reminder = (nonAsciiWhitespaceCharCount - equalCharCount) % 4;\x0d\n  } else if (equalCharCount) {\x0d\n    // `=` should not in the input if there's a reminder.\x0d\n    throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (reminder === 1) {\x0d\n    throw lazyDOMException(\x0d\n      'The string to be decoded is not correctly encoded.'\x2C\x0d\n      'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nfunction isUtf8(input) {\x0d\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\x0d\n    return bindingIsUtf8(input);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['TypedArray'\x2C 'Buffer']\x2C input);\x0d\n}\x0d\n\x0d\nfunction isAscii(input) {\x0d\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\x0d\n    return bindingIsAscii(input);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  isUtf8\x2C\x0d\n  isAscii\x2C\x0d\n\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) {\x0d\n      validateNumber(val\x2C 'INSPECT_MAX_BYTES'\x2C 0);\x0d\n      INSPECT_MAX_BYTES = val;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/blob'\x2C\x0d\n  ['Blob'\x2C 'resolveObjectURL']\x2C\x0d\n);\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/file'\x2C\x0d\n  ['File']\x2C\x0d\n);\x0d\n
code-source-info,0x3c57026f904,24,16292,16427,C0O16308C6O16356C12O16363C20O16382C23O16382C28O16410C29O16424,,
code-creation,JS,10,124776,0x3c57027260c,30,normalizeEncoding node:internal/util:213:27,0xfca8d3fbc0,~
code-source-info,0x3c57027260c,16,5905,6013,C0O5916C7O5939C14O5957C19O5970C21O5984C22O5988C25O5995C29O6010,,
code-creation,JS,10,124812,0x3c5702726f4,9,isInt32 node:internal/validators:43:17,0xfca8d3d548,~
code-source-info,0x3c5702726f4,15,1127,1172,C0O1140C2O1164C5O1153C8O1169,,
code-creation,JS,10,124963,0x3c5702727e4,42, node:internal/fs/utils:713:42,0x22671cb3ce0,~
code-source-info,0x3c5702727e4,60,20480,20642,C14O20536C19O20536C24O20571C29O20571C34O20604C37O20611C41O20639,,
code-creation,JS,10,125054,0x3c570272924,106,possiblyTransformPath node:internal/fs/utils:701:31,0x22671cb3c88,~
code-source-info,0x3c570272924,60,20144,20435,C0O20156C5O20171C10O20171C16O20191C22O20230C27O20237C31O20255C32O20268C39O20275C42O20275C47O20268C51O20301C56O20306C62O20328C67O20335C73O20358C80O20376C85O20388C88O20388C93O20376C98O20365C102O20411C103O20420C105O20432,,
code-creation,JS,10,125180,0x3c570272d64,515,stringToFlags node:internal/fs/utils:560:23,0x22671cb3a78,~
code-source-info,0x3c570272d
code-creation,JS,10,125757,0x3c570274a3c,441,Module._compile node:internal/modules/cjs/loader:1330:37,0x22671cb7660,~
code-source-info,0x3c570274a3c,63,44273,46143,C0O44302C2O44320C4O44351C9O44351C15O44359C23O44374C25O44395C30O44407C35O44458C40O44458C46O44504C51O44504C57O44575C69O44575C75O44638C77O44647C85O44651C94O44694C101O44716C107O44812C110O44824C117O44828C125O44861C128O44883C136O44908C143O44912C152O44883C157O44874C163O45109C170O45116C179O45129C184O45116C189O45109C195O45196C197O45209C199O45281C205O45302C211O45329C216O45356C220O45371C226O45386C232O45405C237O45433C242O45486C247O45491C252O45491C258O45529C263O45529C269O45574C271O45606C276O45636C277O45663C280O45672C286O45689C291O45698C296O45710C304O45708C310O45730C314O45759C335O45768C343O45907C348O45946C357O45985C366O45994C375O46003C384O46011C393O46021C403O45916C409O46040C413O46066C419O46077C423O46094C428O46103C432O46113C438O46126C440O46140,,
code-creation,JS,10,125918,0x3c5702750ac,364,wrapSafe node:internal/modules/cjs/loader:1257:18,0x22671cb75d8,~
code-source-info,0x3c5702750ac,63,41295,43936,C0O41295C14O41378C26O41392C31O41378C36O41668C44O41704C49O41711C54O41711C60O41746C89O41746C95O42291C101O42314C115O42384C126O42314C131O42413C145O42420C150O42464C151O42490C159O42582C196O42582C202O43316C206O43349C224O43390C229O43412C234O43413C240O43431C245O43439C253O43439C258O43562C264O43585C278O43655C289O43585C294O43698C298O43707C310O43732C315O43744C322O43755C327O43814C335O43814C340O43795C345O43866C356O43866C361O43918C363O43918,,
code-creation,JS,10,126026,0x3c5702753cc,118,internalCompileFunction node:internal/vm:73:33,0x22671c9b578,~
code-source-info,0x3c5702753cc,36,2241,3126,C0O2434C35O2434C41O2649C45O2686C50O2723C54O2714C58O2764C64O2790C69O2819C73O2810C77O2859C85O2907C90O2944C94O2935C98O2974C102O3024C105O3063C110O3024C115O3109C117O3123,,
code-creation,Eval,10,126093,0x3c57027574c,5, C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v21.2.0\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x3c5702755f8,~
script-source,83,C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v21.2.0\\node_modules\\0x\\lib\\preload\\no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x3c57027574c,83,0,119,C0O0C4O119,,
code-creation,JS,10,126126,0x3c57027583c,29, C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v21.2.0\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x3c5702756c0,~
code-source-info,0x3c57027583c,83,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,JS,10,126183,0x3c570275abc,52,registerImportModuleDynamically node:internal/vm:63:41,0x22671c9b520,~
code-source-info,0x3c570275abc,36,1872,2205,C0O1953C6O1953C11O1921C16O2014C22O2014C27O1995C32O2071C37O2142C45O2056C51O2204,,
code-creation,JS,10,126264,0x3c570275c8c,19,importModuleDynamicallyWrap node:internal/vm/module:428:37,0x22671cbb3e0,~
script-source,68,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafePromiseAllReturnVoid\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  getConstructorOf\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINK_FAILURE\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    let registry = { __proto__: null };\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n      registry = {\x0d\n        __proto__: null\x2C\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      };\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    // This will take precedence over the referrer as the object being\x0d\n    // passed into the callbacks.\x0d\n    registry.callbackReferrer = this;\x0d\n    const { registerModule } = require('internal/modules/esm/utils');\x0d\n    registerModule(this[kWrap]\x2C registry);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = kEmptyObject) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x2C\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = { __proto__: { constructor } };\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x2C\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = kEmptyObject) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      validateFunction(initializeImportMeta\x2C 'options.initializeImportMeta');\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C 'options.importModuleDynamically');\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined) {\x0d\n      validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C attributes) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { attributes\x2C assert: attributes });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await SafePromiseAllReturnVoid(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    this[kDependencySpecifiers] ??= ObjectFreeze(this[kWrap].getStaticDependencySpecifiers());\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n};\x0d\n
code-source-info,0x3c570275c8c,68,12079,12537,C0O12079C13O12149C18O12534,,
code-creation,JS,10,126804,0x3c570276c3c,63,registerModule node:internal/modules/esm/utils:145:24,0x22671cb8ef0,~
code-source-info,0x3c570276c3c,66,4548,5081,C0O4591C2O4600C4O4599C8O4632C10O4649C12O4645C19O4701C21O4697C26O4940C27O4947C28O4994C41O5020C45O5037C50O5054C55O5054C62O5080,,
code-creation,JS,10,126905,0x3c570277284,215,makeRequireFunction node:internal/modules/helpers:127:29,0x22671cb8320,~
code-source-info,0x3c570277284,64,3916,6504,C0O3916C22O3977C27O3977C30O3977C32O3994C37O4002C46O4037C64O4043C69O4037C70O4139C72O4151C92O4184C97O4188C108O4204C112O4184C114O4232C119O4232C122O4232C124O4265C130O4274C136O4303C145O5487C150O5989C152O6005C156O6267C158O6281C162O6295C177O6335C185O6295C190O6404C193O6432C197O6423C201O6450C204O6473C208O6464C212O6486C214O6501,,
code-creation,JS,10,126988,0x3c570277534,26,lazyModule node:internal/modules/helpers:110:20,0x22671cb82c8,~
code-source-info,0x3c570277534,64,3188,3285,C0O3196C12O3217C17O3255C21O3204C23O3267C25O3282,,
code-creation,JS,10,127045,0x3c5702778b4,14,require node:internal/modules/helpers:174:31,0x3c570277140,~
code-source-info,0x3c5702778b4,64,5513,5640,C0O5608C3O5619C8O5619C13O5633,,
code-creation,JS,10,127089,0x3c5702779fc,111,Module.require node:internal/modules/cjs/loader:1227:36,0x22671cb7548,~
code-source-info,0x3c5702779fc,63,40383,40686,C0O40393C8O40393C13O40422C15O40429C20O40444C36O40450C41O40444C42O40562C48O40574C53O40592C56O40606C69O40606C86O40663C90O40675C110O40685,,
code-creation,JS,10,127150,0x3c570277c14,63,loadBuiltinModule node:internal/modules/helpers:93:27,0x22671cb8270,~
code-source-info,0x3c570277c14,64,2705,3069,C0O2724C5O2743C10O2743C17O2776C18O2783C19O2874C22O2888C27O2892C32O2892C38O2904C46O2904C51O3026C56O3026C60O3055C62O3066,,
code-creation,JS,10,127187,0x3c570277d54,18,canBeRequiredByUsers node:internal/bootstrap/realm:284:30,0xfca8d340d0,~
code-source-info,0x3c570277d54,9,9343,9400,C0O9355C7O9387C12O9387C17O9395,,
code-creation,JS,10,127223,0x3c570277e3c,10, node:internal/modules/helpers:37:66,0x22671cb7ea8,~
code-source-info,0x3c570277e3c,64,1068,1095,C0O1081C2O1087C9O1094,,
code-creation,JS,10,127274,0x3c570277fd4,145,compileForPublicLoader node:internal/bootstrap/realm:322:25,0xfca8d342e0,~
code-source-info,0x3c570277fd4,9,10449,11155,C0O10459C5O10478C10O10504C15O10478C22O10634C32O10677C49O10640C54O10634C55O10716C60O10716C64O10759C70O10951C77O10982C85O10951C91O11007C96O11025C106O11041C109O11057C114O11041C118O11023C122O11084C127O11084C131O11110C136O11110C140O11142C144O11150,,
code-creation,Eval,10,127362,0x3c57027847c,5, node:cluster:1:1,0x3c570278328,~
script-source,84,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectPrototypeHasOwnProperty: ObjectHasOwn\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst childOrPrimary = ObjectHasOwn(process.env\x2C 'NODE_UNIQUE_ID') ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0x3c57027847c,84,0,1405,C0O0C4O1405,,
code-creation,JS,10,127433,0x3c57027852c,47, node:cluster:1:1,0x3c5702783f0,~
code-source-info,0x3c57027852c,84,0,1405,C0O1214C5O1293C13O1272C27O1340C32O1385C37O1357C41O1355C46O1404,,
code-creation,Eval,10,127810,0x3c570279b5c,5, node:internal/cluster/primary:1:1,0x3c5702797e8,~
script-source,85,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { getInspectPort\x2C isUsingInspector } = require('internal/util/inspector');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n\x0d\n  if (cluster.settings.inspectPort === null) {\x0d\n    throw new ERR_SOCKET_BAD_PORT('Port'\x2C null\x2C true);\x0d\n  }\x0d\n  if (isUsingInspector(cluster.settings.execArgv)) {\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${getInspectPort(cluster.settings.inspectPort)}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x2C\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x2C\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x2C\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n  const signal = signo || 'SIGTERM';\x0d\n\x0d\n  proc.kill(signal);\x0d\n};\x0d\n
code-source-info,0x3c570279b5c,85,0,10492,C0O0C4O10492,,
code-creation,JS,10,128338,0x3c57027a5c4,632, node:internal/cluster/primary:1:1,0x3c570279ad0,~
code-source-info,0x3c57027a5c
code-creation,Eval,10,129126,0x3c57027db1c,5, node:child_process:1:1,0x3c57027d568,~
script-source,86,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x2C\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x2C\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\nconst isZOS = process.platform === 'os390';\x0d\nlet addAbortListener;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string | URL;\x0d\n *   detached?: boolean;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object' && !ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  } else {\x0d\n    validateArray(args\x2C 'args');\x0d\n  }\x0d\n\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  options = { __proto__: null\x2C ...options\x2C shell: false };\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  validateArgumentNullCheck(options.execPath\x2C 'options.execPath');\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n  validateArgumentsNullCheck(execArgv\x2C 'options.execArgv');\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  validateString(command\x2C 'command');\x0d\n  validateArgumentNullCheck(command\x2C 'command');\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { __proto__: null\x2C ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x2C\x0d\n});\x0d\n\x0d\nfunction normalizeExecFileArgs(file\x2C args\x2C options\x2C callback) {\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args != null && typeof args === 'object') {\x0d\n    callback = options;\x0d\n    options = args;\x0d\n    args = null;\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = null;\x0d\n    args = null;\x0d\n  }\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n\x0d\n  if (callback != null) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n    validateArgumentNullCheck(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  return { file\x2C args\x2C options\x2C callback };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string | URL;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args\x2C options\x2C callback) {\x0d\n  ({ file\x2C args\x2C options\x2C callback } = normalizeExecFileArgs(file\x2C args\x2C options\x2C callback));\x0d\n\x0d\n  options = {\x0d\n    __proto__: null\x2C\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x2C\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args?.length)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x2C\x0d\n});\x0d\n\x0d\nfunction copyProcessEnvToEnv(env\x2C name\x2C optionEnv) {\x0d\n  if (process.env[name] &&\x0d\n      (!optionEnv ||\x0d\n       !ObjectPrototypeHasOwnProperty(optionEnv\x2C name))) {\x0d\n    env[name] = process.env[name];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n  validateArgumentNullCheck(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  validateArgumentsNullCheck(args\x2C 'args');\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = kEmptyObject;\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n    validateArgumentNullCheck(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    validateArgumentNullCheck(options.shell\x2C 'options.shell');\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  copyProcessEnvToEnv(env\x2C 'NODE_V8_COVERAGE'\x2C options.env);\x0d\n\x0d\n  if (isZOS) {\x0d\n    // The following environment variables must always propagate if set.\x0d\n    copyProcessEnvToEnv(env\x2C '_BPXK_AUTOCVT'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_CEE_RUNOPTS'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_ERR'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_IN'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_OUT'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C 'STEPLIB'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C 'LIBPATH'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_EDC_SIG_DFLT'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_EDC_SUSV3'\x2C options.env);\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      validateArgumentNullCheck(key\x2C `options.env['${key}']`);\x0d\n      validateArgumentNullCheck(value\x2C `options.env['${key}']`);\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    __proto__: null\x2C\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal\x2C reason) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError(undefined\x2C { cause: reason }));\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string | URL;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      addAbortListener ??= require('events').addAbortListener;\x0d\n      const disposable = addAbortListener(signal\x2C onAbortListener);\x0d\n      child.once('exit'\x2C disposable[SymbolDispose]);\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal\x2C options.signal.reason);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string | URL;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    __proto__: null\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x2C\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string | URL;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(file\x2C args\x2C options) {\x0d\n  ({ file\x2C args\x2C options } = normalizeExecFileArgs(file\x2C args\x2C options));\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(file\x2C args\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const errArgs = [options.argv0 || file];\x0d\n  ArrayPrototypePushApply(errArgs\x2C args);\x0d\n  const err = checkExecSyncError(ret\x2C errArgs);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string | URL;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C undefined\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateArgumentNullCheck(arg\x2C propName) {\x0d\n  if (typeof arg === 'string' && StringPrototypeIncludes(arg\x2C '\\u0000')) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(propName\x2C arg\x2C 'must be a string without null bytes');\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateArgumentsNullCheck(args\x2C propName) {\x0d\n  for (let i = 0; i < args.length; ++i) {\x0d\n    validateArgumentNullCheck(args[i]\x2C `${propName}[${i}]`);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x2C\x0d\n};\x0d\n
code-source-info,0x3c57027db1c,86,0,28219,C0O0C4O28219,,
code-creation,JS,10,130508,0x3c57027e7c4,881, node:child_process:1:1,0x3c57027da90,~
code-source-info,0x3c57027e7c
new,MemoryChunk,0x3ba13640000,262144
code-creation,Eval,10,131633,0x3ba136460e4,5, node:internal/child_process:1:1,0x3ba13645418,~
script-source,87,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolDispose\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ErrnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x2C\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst childProcessChannel = dc.channel('child_process');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x2C\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x2C\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x2C\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = new ErrnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n  if (childProcessChannel.hasSubscribers) {\x0d\n    childProcessChannel.publish({\x0d\n      process: this\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw new ErrnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw new ErrnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C new ErrnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\nChildProcess.prototype[SymbolDispose] = function() {\x0d\n  if (!this.killed) {\x0d\n    this.kill();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x2C\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x2C\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = new ErrnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x2C\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x2C\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x2C\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x2C\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x2C\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = new ErrnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x2C\x0d\n};\x0d\n
code-source-info,0x3ba136460e4,87,0,32940,C0O0C4O32940,,
code-creation,JS,10,133130,0x3ba136478ec,1312, node:internal/child_process:1:1,0x3ba13646058,~
code-source-info,0x3ba136478ec
code-creation,JS,10,133271,0x3ba136480b4,29,Control node:internal/child_process:536:36,0x3ba13646f80,~
code-source-info,0x3ba136480b4,87,14476,15479,C3O14492C12O14509C21O14535C28O15479,,
code-creation,Eval,10,134980,0x3ba13650314,5, node:net:1:1,0x3ba1364ed10,~
script-source,88,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Boolean\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  kReinitializeHandle\x2C\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x2C\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x2C\x0d\n  UV_ECANCELED\x2C\x0d\n  UV_ETIMEDOUT\x2C\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x2C\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x2C\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x2C\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CONNECTION_TIMEOUT\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_SOCKET_CLOSED_BEFORE_CONNECTION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  ErrnoException\x2C\x0d\n  ExceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  NodeAggregateError\x2C\x0d\n  UVExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { queueMicrotask } = require('internal/process/task_queues');\x0d\nconst { kEmptyObject\x2C guessHandleType\x2C promisify } = require('internal/util');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\nlet autoSelectFamilyDefault = getOptionValue('--network-family-autoselection');\x0d\nlet autoSelectFamilyAttemptTimeoutDefault = 250;\x0d\n\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst netClientSocketChannel = dc.channel('net.client.socket');\x0d\nconst netServerSocketChannel = dc.channel('net.server.socket');\x0d\n\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (netClientSocketChannel.hasSubscribers) {\x0d\n    netClientSocketChannel.publish({\x0d\n      socket\x2C\x0d\n    });\x0d\n  }\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\nfunction getDefaultAutoSelectFamily() {\x0d\n  return autoSelectFamilyDefault;\x0d\n}\x0d\n\x0d\nfunction setDefaultAutoSelectFamily(value) {\x0d\n  validateBoolean(value\x2C 'value');\x0d\n  autoSelectFamilyDefault = value;\x0d\n}\x0d\n\x0d\nfunction getDefaultAutoSelectFamilyAttemptTimeout() {\x0d\n  return autoSelectFamilyAttemptTimeoutDefault;\x0d\n}\x0d\n\x0d\nfunction setDefaultAutoSelectFamilyAttemptTimeout(value) {\x0d\n  validateInt32(value\x2C 'value'\x2C 1);\x0d\n\x0d\n  if (value < 10) {\x0d\n    value = 10;\x0d\n  }\x0d\n\x0d\n  autoSelectFamilyAttemptTimeoutDefault = value;\x0d\n}\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction closeSocketHandle(self\x2C isException\x2C isCleanupPending = false) {\x0d\n  if (self._handle) {\x0d\n    self._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      self.emit('close'\x2C isException);\x0d\n      if (isCleanupPending) {\x0d\n        self._handle.onread = noop;\x0d\n        self._handle = null;\x0d\n        self._sockname = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x2C\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x2C\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n  this._closeAfterHandlingError = false;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw new ErrnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw new ErrnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 0\x2C writable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    addClientAbortSignalOption(this\x2C options);\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.connecting) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(new ErrnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x2C\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!this._handle.setKeepAlive) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (enable !== this[kSetKeepAlive] ||\x0d\n      (\x0d\n        enable &&\x0d\n        this[kSetKeepAliveInitialDelay] !== initialDelay\x0d\n      )\x0d\n  ) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(new ErrnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug(\x0d\n    '_read - n'\x2C n\x2C\x0d\n    'isConnecting?'\x2C !!this.connecting\x2C\x0d\n    'hasHandle?'\x2C !!this._handle\x2C\x0d\n  );\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.resetAndDestroy = function() {\x0d\n  if (this._handle) {\x0d\n    if (!(this._handle instanceof TCP))\x0d\n      throw new ERR_INVALID_HANDLE_TYPE();\x0d\n    if (this.connecting) {\x0d\n      debug('reset wait for connection');\x0d\n      this.once('connect'\x2C () => this._reset());\x0d\n    } else {\x0d\n      this._reset();\x0d\n    }\x0d\n  } else {\x0d\n    this.destroy(new ERR_SOCKET_CLOSED());\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(new ErrnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    if (this.resetAndClosing) {\x0d\n      this.resetAndClosing = false;\x0d\n      const err = this._handle.reset(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n      if (err)\x0d\n        this.emit('error'\x2C new ErrnoException(err\x2C 'reset'));\x0d\n    } else if (this._closeAfterHandlingError) {\x0d\n      // Enqueue closing the socket as a microtask\x2C so that the socket can be\x0d\n      // accessible when an `error` event is handled in the `next tick queue`.\x0d\n      queueMicrotask(() => closeSocketHandle(this\x2C isException\x2C true));\x0d\n    } else {\x0d\n      closeSocketHandle(this\x2C isException);\x0d\n    }\x0d\n\x0d\n    if (!this._closeAfterHandlingError) {\x0d\n      this._handle.onread = noop;\x0d\n      this._handle = null;\x0d\n      this._sockname = null;\x0d\n    }\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._reset = function() {\x0d\n  debug('reset connection');\x0d\n  this.resetAndClosing = true;\x0d\n  return this.destroy();\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getpeername(out);\x0d\n    if (err) return out;\x0d\n    this._peername = out;\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\nprotoGetter('localFamily'\x2C function localFamily() {\x0d\n  return this._getsockname().family;\x0d\n});\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this.off('close'\x2C onClose);\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    function onClose() {\x0d\n      cb(new ERR_SOCKET_CLOSED_BEFORE_CONNECTION());\x0d\n    }\x0d\n    this.once('close'\x2C onClose);\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('connect: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  debug('connect: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\x0d\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnectMultiple(context\x2C canceled) {\x0d\n  clearTimeout(context[kTimeout]);\x0d\n  const self = context.socket;\x0d\n\x0d\n  // We were requested to abort. Stop all operations\x0d\n  if (self._aborted) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // All connections have been tried without success\x2C destroy with error\x0d\n  if (canceled || context.current === context.addresses.length) {\x0d\n    if (context.errors.length === 0) {\x0d\n      self.destroy(new ERR_SOCKET_CONNECTION_TIMEOUT());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    self.destroy(new NodeAggregateError(context.errors));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  const current = context.current++;\x0d\n\x0d\n  if (current > 0) {\x0d\n    self[kReinitializeHandle](new TCP(TCPConstants.SOCKET));\x0d\n  }\x0d\n\x0d\n  const { localPort\x2C port\x2C flags } = context;\x0d\n  const { address\x2C family: addressType } = context.addresses[current];\x0d\n  let localAddress;\x0d\n  let err;\x0d\n\x0d\n  if (localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n\x0d\n    debug('connect/multiple: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      ArrayPrototypePush(context.errors\x2C new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort));\x0d\n      internalConnectMultiple(context);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  debug('connect/multiple: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\x0d\n\x0d\n  const req = new TCPConnectWrap();\x0d\n  req.oncomplete = FunctionPrototypeBind(afterConnectMultiple\x2C undefined\x2C context\x2C current);\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  req.localAddress = localAddress;\x0d\n  req.localPort = localPort;\x0d\n\x0d\n  ArrayPrototypePush(self.autoSelectFamilyAttemptedAddresses\x2C `${address}:${port}`);\x0d\n\x0d\n  if (addressType === 4) {\x0d\n    err = self._handle.connect(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(context.errors\x2C new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details));\x0d\n    internalConnectMultiple(context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (current < context.addresses.length - 1) {\x0d\n    debug('connect/multiple: setting the attempt timeout to %d ms'\x2C context.timeout);\x0d\n\x0d\n    // If the attempt has not returned an error\x2C start the connection timer\x0d\n    context[kTimeout] = setTimeout(internalConnectMultipleTimeout\x2C context.timeout\x2C context\x2C req\x2C self._handle);\x0d\n  }\x0d\n}\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  // If the parent is already connecting\x2C do not attempt to connect again\x0d\n  if (this._parent && this._parent.connecting) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x2C\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype[kReinitializeHandle] = function reinitializeHandle(handle) {\x0d\n  this._handle?.close();\x0d\n\x0d\n  this._handle = handle;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  initSocketHandle(this);\x0d\n};\x0d\n\x0d\nfunction socketToDnsFamily(family) {\x0d\n  switch (family) {\x0d\n    case 'IPv4':\x0d\n      return 4;\x0d\n    case 'IPv6':\x0d\n      return 6;\x0d\n  }\x0d\n\x0d\n  return family;\x0d\n}\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port\x2C autoSelectFamilyAttemptTimeout\x2C autoSelectFamily } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n\x0d\n  if (autoSelectFamily != null) {\x0d\n    validateBoolean(autoSelectFamily\x2C 'options.autoSelectFamily');\x0d\n  } else {\x0d\n    autoSelectFamily = autoSelectFamilyDefault;\x0d\n  }\x0d\n\x0d\n  if (autoSelectFamilyAttemptTimeout != null) {\x0d\n    validateInt32(autoSelectFamilyAttemptTimeout\x2C 'options.autoSelectFamilyAttemptTimeout'\x2C 1);\x0d\n\x0d\n    if (autoSelectFamilyAttemptTimeout < 10) {\x0d\n      autoSelectFamilyAttemptTimeout = 10;\x0d\n    }\x0d\n  } else {\x0d\n    autoSelectFamilyAttemptTimeout = autoSelectFamilyAttemptTimeoutDefault;\x0d\n  }\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup != null)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: socketToDnsFamily(options.family)\x2C\x0d\n    hints: options.hints || 0\x2C\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n\x0d\n  if (dnsopts.family !== 4 && dnsopts.family !== 6 && !localAddress && autoSelectFamily) {\x0d\n    debug('connect: autodetecting');\x0d\n\x0d\n    dnsopts.all = true;\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n      lookupAndConnectMultiple(\x0d\n        self\x2C\x0d\n        async_id_symbol\x2C\x0d\n        lookup\x2C\x0d\n        host\x2C\x0d\n        options\x2C\x0d\n        dnsopts\x2C\x0d\n        port\x2C\x0d\n        localAddress\x2C\x0d\n        localPort\x2C\x0d\n        autoSelectFamilyAttemptTimeout\x2C\x0d\n      );\x0d\n    });\x0d\n\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction lookupAndConnectMultiple(\x0d\n  self\x2C async_id_symbol\x2C lookup\x2C host\x2C options\x2C dnsopts\x2C port\x2C localAddress\x2C localPort\x2C timeout\x2C\x0d\n) {\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function emitLookup() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C addresses) {\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) {\x0d\n        return;\x0d\n      } else if (err) {\x0d\n        self.emit('lookup'\x2C err\x2C undefined\x2C undefined\x2C host);\x0d\n\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Filter addresses by only keeping the one which are either IPv4 or IPV6.\x0d\n      // The first valid address determines which group has preference on the\x0d\n      // alternate family sorting which happens later.\x0d\n      const validAddresses = [[]\x2C []];\x0d\n      const validIps = [[]\x2C []];\x0d\n      let destinations;\x0d\n      for (let i = 0\x2C l = addresses.length; i < l; i++) {\x0d\n        const address = addresses[i];\x0d\n        const { address: ip\x2C family: addressType } = address;\x0d\n        self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n        if (isIP(ip) && (addressType === 4 || addressType === 6)) {\x0d\n          if (!destinations) {\x0d\n            destinations = addressType === 6 ? { 6: 0\x2C 4: 1 } : { 4: 0\x2C 6: 1 };\x0d\n          }\x0d\n\x0d\n          const destination = destinations[addressType];\x0d\n\x0d\n          // Only try an address once\x0d\n          if (!ArrayPrototypeIncludes(validIps[destination]\x2C ip)) {\x0d\n            ArrayPrototypePush(validAddresses[destination]\x2C address);\x0d\n            ArrayPrototypePush(validIps[destination]\x2C ip);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n\x0d\n      // When no AAAA or A records are available\x2C fail on the first one\x0d\n      if (!validAddresses[0].length && !validAddresses[1].length) {\x0d\n        const { address: firstIp\x2C family: firstAddressType } = addresses[0];\x0d\n\x0d\n        if (!isIP(firstIp)) {\x0d\n          err = new ERR_INVALID_IP_ADDRESS(firstIp);\x0d\n          process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        } else if (firstAddressType !== 4 && firstAddressType !== 6) {\x0d\n          err = new ERR_INVALID_ADDRESS_FAMILY(firstAddressType\x2C\x0d\n                                               options.host\x2C\x0d\n                                               options.port);\x0d\n          process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        }\x0d\n\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Sort addresses alternating families\x0d\n      const toAttempt = [];\x0d\n      for (let i = 0\x2C l = MathMax(validAddresses[0].length\x2C validAddresses[1].length); i < l; i++) {\x0d\n        if (i in validAddresses[0]) {\x0d\n          ArrayPrototypePush(toAttempt\x2C validAddresses[0][i]);\x0d\n        }\x0d\n        if (i in validAddresses[1]) {\x0d\n          ArrayPrototypePush(toAttempt\x2C validAddresses[1][i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (toAttempt.length === 1) {\x0d\n        debug('connect/multiple: only one address found\x2C switching back to single connection');\x0d\n        const { address: ip\x2C family: addressType } = toAttempt[0];\x0d\n\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C\x0d\n          ip\x2C\x0d\n          port\x2C\x0d\n          addressType\x2C\x0d\n          localAddress\x2C\x0d\n          localPort\x2C\x0d\n        );\x0d\n\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      self.autoSelectFamilyAttemptedAddresses = [];\x0d\n      debug('connect/multiple: will try the following addresses'\x2C toAttempt);\x0d\n\x0d\n      const context = {\x0d\n        socket: self\x2C\x0d\n        addresses: toAttempt\x2C\x0d\n        current: 0\x2C\x0d\n        port\x2C\x0d\n        localPort\x2C\x0d\n        timeout\x2C\x0d\n        [kTimeout]: null\x2C\x0d\n        errors: []\x2C\x0d\n      };\x0d\n\x0d\n      self._unrefTimer();\x0d\n      defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C internalConnectMultiple\x2C context);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\x0d\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\x0d\n    }\x0d\n  } else {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = new ExceptionWithHostPort(status\x2C\x0d\n                                         'connect'\x2C\x0d\n                                         req.address\x2C\x0d\n                                         req.port\x2C\x0d\n                                         details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addClientAbortSignalOption(self\x2C options) {\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  let disposable;\x0d\n\x0d\n  function onAbort() {\x0d\n    disposable?.[SymbolDispose]();\x0d\n    self._aborted = true;\x0d\n  }\x0d\n\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAbort);\x0d\n  } else {\x0d\n    process.nextTick(() => {\x0d\n      disposable = EventEmitter.addAbortListener(signal\x2C onAbort);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createConnectionError(req\x2C status) {\x0d\n  let details;\x0d\n\x0d\n  if (req.localAddress && req.localPort) {\x0d\n    details = req.localAddress + ':' + req.localPort;\x0d\n  }\x0d\n\x0d\n  const ex = new ExceptionWithHostPort(status\x2C\x0d\n                                       'connect'\x2C\x0d\n                                       req.address\x2C\x0d\n                                       req.port\x2C\x0d\n                                       details);\x0d\n  if (details) {\x0d\n    ex.localAddress = req.localAddress;\x0d\n    ex.localPort = req.localPort;\x0d\n  }\x0d\n\x0d\n  return ex;\x0d\n}\x0d\n\x0d\nfunction afterConnectMultiple(context\x2C current\x2C status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  debug('connect/multiple: connection attempt to %s:%s completed with status %s'\x2C req.address\x2C req.port\x2C status);\x0d\n\x0d\n  // Make sure another connection is not spawned\x0d\n  clearTimeout(context[kTimeout]);\x0d\n\x0d\n  // One of the connection has completed and correctly dispatched but after timeout\x2C ignore this one\x0d\n  if (status === 0 && current !== context.current - 1) {\x0d\n    debug('connect/multiple: ignoring successful but timedout connection to %s:%s'\x2C req.address\x2C req.port);\x0d\n    handle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const self = context.socket;\x0d\n\x0d\n  // Some error occurred\x2C add to the list of exceptions\x0d\n  if (status !== 0) {\x0d\n    ArrayPrototypePush(context.errors\x2C createConnectionError(req\x2C status));\x0d\n\x0d\n    // Try the next address\x0d\n    internalConnectMultiple(context\x2C status === UV_ECANCELED);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (hasObserver('net')) {\x0d\n    startPerf(\x0d\n      self\x2C\x0d\n      kPerfHooksNetConnectContext\x2C\x0d\n      { type: 'net'\x2C name: 'connect'\x2C detail: { host: req.address\x2C port: req.port } }\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  afterConnect(status\x2C self._handle\x2C req\x2C readable\x2C writable);\x0d\n}\x0d\n\x0d\nfunction internalConnectMultipleTimeout(context\x2C req\x2C handle) {\x0d\n  debug('connect/multiple: connection to %s:%s timed out'\x2C req.address\x2C req.port);\x0d\n  req.oncomplete = undefined;\x0d\n  ArrayPrototypePush(context.errors\x2C createConnectionError(req\x2C UV_ETIMEDOUT));\x0d\n  handle.close();\x0d\n  internalConnectMultiple(context);\x0d\n}\x0d\n\x0d\nfunction addServerAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    const disposable = EventEmitter.addAbortListener(signal\x2C onAborted);\x0d\n    self.once('close'\x2C disposable[SymbolDispose]);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = kEmptyObject;\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n  if (typeof options.highWaterMark !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.highWaterMark\x2C 'options.highWaterMark'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.highWaterMark < 0) {\x0d\n      options.highWaterMark = getDefaultHighWaterMark();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n  this.highWaterMark = options.highWaterMark ?? getDefaultHighWaterMark();\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = new UVExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = new UVExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addServerAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C\x0d\n                    pipeName\x2C\x0d\n                    -1\x2C\x0d\n                    -1\x2C\x0d\n                    backlog\x2C\x0d\n                    undefined\x2C\x0d\n                    options.exclusive\x2C\x0d\n                    undefined\x2C\x0d\n                    {\x0d\n                      readableAll: options.readableAll\x2C\x0d\n                      writableAll: options.writableAll\x2C\x0d\n                    });\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw new ErrnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw new ErrnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C new ErrnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections != null && self._connections >= self.maxConnections) {\x0d\n    if (clientHandle.getsockname || clientHandle.getpeername) {\x0d\n      const data = { __proto__: null };\x0d\n      if (clientHandle.getsockname) {\x0d\n        const localInfo = { __proto__: null };\x0d\n        clientHandle.getsockname(localInfo);\x0d\n        data.localAddress = localInfo.address;\x0d\n        data.localPort = localInfo.port;\x0d\n        data.localFamily = localInfo.family;\x0d\n      }\x0d\n      if (clientHandle.getpeername) {\x0d\n        const remoteInfo = { __proto__: null };\x0d\n        clientHandle.getpeername(remoteInfo);\x0d\n        data.remoteAddress = remoteInfo.address;\x0d\n        data.remotePort = remoteInfo.port;\x0d\n        data.remoteFamily = remoteInfo.family;\x0d\n      }\x0d\n      self.emit('drop'\x2C data);\x0d\n    } else {\x0d\n      self.emit('drop');\x0d\n    }\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x2C\x0d\n    readableHighWaterMark: self.highWaterMark\x2C\x0d\n    writableHighWaterMark: self.highWaterMark\x2C\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && clientHandle.setNoDelay) {\x0d\n    socket[kSetNoDelay] = true;\x0d\n    clientHandle.setNoDelay(true);\x0d\n  }\x0d\n  if (self.keepAlive && clientHandle.setKeepAlive) {\x0d\n    socket[kSetKeepAlive] = true;\x0d\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\x0d\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n  self.emit('connection'\x2C socket);\x0d\n  if (netServerSocketChannel.hasSubscribers) {\x0d\n    netServerSocketChannel.publish({\x0d\n      socket\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype[SymbolAsyncDispose] = async function() {\x0d\n  if (!this._handle) {\x0d\n    return;\x0d\n  }\x0d\n  return FunctionPrototypeCall(promisify(this.close)\x2C this);\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x2C\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n  getDefaultAutoSelectFamily\x2C\x0d\n  setDefaultAutoSelectFamily\x2C\x0d\n  getDefaultAutoSelectFamilyAttemptTimeout\x2C\x0d\n  setDefaultAutoSelectFamilyAttemptTimeout\x2C\x0d\n};\x0d\n
code-source-info,0x3ba13650314,88,0,68440,C0O0C4O68440,,
code-creation,JS,10,137811,0x3ba13653da4,3499, node:net:1:1,0x3ba13650288,~
code-source-info,0x3ba13653da
tick,0x7ff6acc2b41d,138259,0,0x0,3,0x7ff62c4c3ef2,0x7ff62c4c3cc7,0x3ba13647ae2,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3c57027ea7b,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3c57027a6a6,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3c570278551,0x7ff62c4c3fb7,0x3c570278010,0x3c570277c4c,0x121eb1236af,0x3c570277a41,0x3c5702778bc,0x3c57027583f,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x121eb1231d1,0x121eb121c0e,0x121eb1219b3,0x121eb1183ae,0x33d09cbfb17,0x33d09cbdd94,0x33d09cbd82a
code-creation,Eval,10,138787,0x3ba13656a74,5, node:stream:1:1,0x3ba13656860,~
script-source,89,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify: { custom: customPromisify }\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  streamReturningOperators\x2C\x0d\n  promiseReturningOperators\x2C\x0d\n} = require('internal/streams/operators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst compose = require('internal/streams/compose');\x0d\nconst { setDefaultHighWaterMark\x2C getDefaultHighWaterMark } = require('internal/streams/state');\x0d\nconst { pipeline } = require('internal/streams/pipeline');\x0d\nconst { destroyer } = require('internal/streams/destroy');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst internalBuffer = require('internal/buffer');\x0d\n\x0d\nconst promises = require('stream/promises');\x0d\nconst utils = require('internal/streams/utils');\x0d\n\x0d\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\x0d\n\x0d\nStream.isDestroyed = utils.isDestroyed;\x0d\nStream.isDisturbed = utils.isDisturbed;\x0d\nStream.isErrored = utils.isErrored;\x0d\nStream.isReadable = utils.isReadable;\x0d\nStream.isWritable = utils.isWritable;\x0d\n\x0d\nStream.Readable = require('internal/streams/readable');\x0d\nfor (const key of ObjectKeys(streamReturningOperators)) {\x0d\n  const op = streamReturningOperators[key];\x0d\n  function fn(...args) {\x0d\n    if (new.target) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n    return Stream.Readable.from(ReflectApply(op\x2C this\x2C args));\x0d\n  }\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\x0d\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\x0d\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\nfor (const key of ObjectKeys(promiseReturningOperators)) {\x0d\n  const op = promiseReturningOperators[key];\x0d\n  function fn(...args) {\x0d\n    if (new.target) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n    return ReflectApply(op\x2C this\x2C args);\x0d\n  }\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\x0d\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\x0d\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\nStream.Writable = require('internal/streams/writable');\x0d\nStream.Duplex = require('internal/streams/duplex');\x0d\nStream.Transform = require('internal/streams/transform');\x0d\nStream.PassThrough = require('internal/streams/passthrough');\x0d\nStream.pipeline = pipeline;\x0d\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\x0d\nStream.addAbortSignal = addAbortSignal;\x0d\nStream.finished = eos;\x0d\nStream.destroy = destroyer;\x0d\nStream.compose = compose;\x0d\nStream.setDefaultHighWaterMark = setDefaultHighWaterMark;\x0d\nStream.getDefaultHighWaterMark = getDefaultHighWaterMark;\x0d\n\x0d\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises.pipeline;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(eos\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises.finished;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Backwards-compat with node 0.4.x\x0d\nStream.Stream = Stream;\x0d\n\x0d\nStream._isUint8Array = require('internal/util/types').isUint8Array;\x0d\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\x0d\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\x0d\n                                       chunk.byteOffset\x2C\x0d\n                                       chunk.byteLength);\x0d\n};\x0d\n
code-source-info,0x3ba13656a74,89,0,4937,C0O0C4O4937,,
code-creation,JS,10,139055,0x3ba136571c4,1072, node:stream:1:1,0x3ba136569e8,~
code-source-info,0x3ba136571c
code-creation,Eval,10,139557,0x3ba13658ed4,5, node:internal/streams/operators:1:1,0x3ba13658b80,~
script-source,90,node:internal/streams/operators,'use strict';\x0d\n\x0d\nconst { AbortController\x2C AbortSignal } = require('internal/abort_controller');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { kWeakHandler\x2C kResistStopPropagation } = require('internal/event_target');\x0d\nconst { finished } = require('internal/streams/end-of-stream');\x0d\nconst staticCompose = require('internal/streams/compose');\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\nconst { isWritable\x2C isNodeStream } = require('internal/streams/utils');\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Boolean\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kEmpty = Symbol('kEmpty');\x0d\nconst kEof = Symbol('kEof');\x0d\n\x0d\nfunction compose(stream\x2C options) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  if (isNodeStream(stream) && !isWritable(stream)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stream'\x2C stream\x2C 'must be writable');\x0d\n  }\x0d\n\x0d\n  const composedStream = staticCompose(this\x2C stream);\x0d\n\x0d\n  if (options?.signal) {\x0d\n    // Not validating as we already validated before\x0d\n    addAbortSignalNoValidate(\x0d\n      options.signal\x2C\x0d\n      composedStream\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return composedStream;\x0d\n}\x0d\n\x0d\nfunction map(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  let concurrency = 1;\x0d\n  if (options?.concurrency != null) {\x0d\n    concurrency = MathFloor(options.concurrency);\x0d\n  }\x0d\n\x0d\n  let highWaterMark = concurrency - 1;\x0d\n  if (options?.highWaterMark != null) {\x0d\n    highWaterMark = MathFloor(options.highWaterMark);\x0d\n  }\x0d\n\x0d\n  validateInteger(concurrency\x2C 'options.concurrency'\x2C 1);\x0d\n  validateInteger(highWaterMark\x2C 'options.highWaterMark'\x2C 0);\x0d\n\x0d\n  highWaterMark += concurrency;\x0d\n\x0d\n  return async function* map() {\x0d\n    const signal = AbortSignal.any([options?.signal].filter(Boolean));\x0d\n    const stream = this;\x0d\n    const queue = [];\x0d\n    const signalOpt = { signal };\x0d\n\x0d\n    let next;\x0d\n    let resume;\x0d\n    let done = false;\x0d\n    let cnt = 0;\x0d\n\x0d\n    function onCatch() {\x0d\n      done = true;\x0d\n      afterItemProcessed();\x0d\n    }\x0d\n\x0d\n    function afterItemProcessed() {\x0d\n      cnt -= 1;\x0d\n      maybeResume();\x0d\n    }\x0d\n\x0d\n    function maybeResume() {\x0d\n      if (\x0d\n        resume &&\x0d\n        !done &&\x0d\n        cnt < concurrency &&\x0d\n        queue.length < highWaterMark\x0d\n      ) {\x0d\n        resume();\x0d\n        resume = null;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    async function pump() {\x0d\n      try {\x0d\n        for await (let val of stream) {\x0d\n          if (done) {\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (signal.aborted) {\x0d\n            throw new AbortError();\x0d\n          }\x0d\n\x0d\n          try {\x0d\n            val = fn(val\x2C signalOpt);\x0d\n\x0d\n            if (val === kEmpty) {\x0d\n              continue;\x0d\n            }\x0d\n\x0d\n            val = PromiseResolve(val);\x0d\n          } catch (err) {\x0d\n            val = PromiseReject(err);\x0d\n          }\x0d\n\x0d\n          cnt += 1;\x0d\n\x0d\n          PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\x0d\n\x0d\n          queue.push(val);\x0d\n          if (next) {\x0d\n            next();\x0d\n            next = null;\x0d\n          }\x0d\n\x0d\n          if (!done && (queue.length >= highWaterMark || cnt >= concurrency)) {\x0d\n            await new Promise((resolve) => {\x0d\n              resume = resolve;\x0d\n            });\x0d\n          }\x0d\n        }\x0d\n        queue.push(kEof);\x0d\n      } catch (err) {\x0d\n        const val = PromiseReject(err);\x0d\n        PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\x0d\n        queue.push(val);\x0d\n      } finally {\x0d\n        done = true;\x0d\n        if (next) {\x0d\n          next();\x0d\n          next = null;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    pump();\x0d\n\x0d\n    try {\x0d\n      while (true) {\x0d\n        while (queue.length > 0) {\x0d\n          const val = await queue[0];\x0d\n\x0d\n          if (val === kEof) {\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (signal.aborted) {\x0d\n            throw new AbortError();\x0d\n          }\x0d\n\x0d\n          if (val !== kEmpty) {\x0d\n            yield val;\x0d\n          }\x0d\n\x0d\n          queue.shift();\x0d\n          maybeResume();\x0d\n        }\x0d\n\x0d\n        await new Promise((resolve) => {\x0d\n          next = resolve;\x0d\n        });\x0d\n      }\x0d\n    } finally {\x0d\n      done = true;\x0d\n      if (resume) {\x0d\n        resume();\x0d\n        resume = null;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nasync function some(fn\x2C options = undefined) {\x0d\n  for await (const unused of filter.call(this\x2C fn\x2C options)) {\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nasync function every(fn\x2C options = undefined) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\x0d\n  return !(await some.call(this\x2C async (...args) => {\x0d\n    return !(await fn(...args));\x0d\n  }\x2C options));\x0d\n}\x0d\n\x0d\nasync function find(fn\x2C options) {\x0d\n  for await (const result of filter.call(this\x2C fn\x2C options)) {\x0d\n    return result;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nasync function forEach(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  async function forEachFn(value\x2C options) {\x0d\n    await fn(value\x2C options);\x0d\n    return kEmpty;\x0d\n  }\x0d\n  // eslint-disable-next-line no-unused-vars\x0d\n  for await (const unused of map.call(this\x2C forEachFn\x2C options));\x0d\n}\x0d\n\x0d\nfunction filter(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  async function filterFn(value\x2C options) {\x0d\n    if (await fn(value\x2C options)) {\x0d\n      return value;\x0d\n    }\x0d\n    return kEmpty;\x0d\n  }\x0d\n  return map.call(this\x2C filterFn\x2C options);\x0d\n}\x0d\n\x0d\n// Specific to provide better error to reduce since the argument is only\x0d\n// missing if the stream has no items in it - but the code is still appropriate\x0d\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\x0d\n  constructor() {\x0d\n    super('reduce');\x0d\n    this.message = 'Reduce of an empty stream requires an initial value';\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function reduce(reducer\x2C initialValue\x2C options) {\x0d\n  if (typeof reducer !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'reducer'\x2C ['Function'\x2C 'AsyncFunction']\x2C reducer);\x0d\n  }\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  let hasInitialValue = arguments.length > 1;\x0d\n  if (options?.signal?.aborted) {\x0d\n    const err = new AbortError(undefined\x2C { cause: options.signal.reason });\x0d\n    this.once('error'\x2C () => {}); // The error is already propagated\x0d\n    await finished(this.destroy(err));\x0d\n    throw err;\x0d\n  }\x0d\n  const ac = new AbortController();\x0d\n  const signal = ac.signal;\x0d\n  if (options?.signal) {\x0d\n    const opts = { once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true };\x0d\n    options.signal.addEventListener('abort'\x2C () => ac.abort()\x2C opts);\x0d\n  }\x0d\n  let gotAnyItemFromStream = false;\x0d\n  try {\x0d\n    for await (const value of this) {\x0d\n      gotAnyItemFromStream = true;\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (!hasInitialValue) {\x0d\n        initialValue = value;\x0d\n        hasInitialValue = true;\x0d\n      } else {\x0d\n        initialValue = await reducer(initialValue\x2C value\x2C { signal });\x0d\n      }\x0d\n    }\x0d\n    if (!gotAnyItemFromStream && !hasInitialValue) {\x0d\n      throw new ReduceAwareErrMissingArgs();\x0d\n    }\x0d\n  } finally {\x0d\n    ac.abort();\x0d\n  }\x0d\n  return initialValue;\x0d\n}\x0d\n\x0d\nasync function toArray(options) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  const result = [];\x0d\n  for await (const val of this) {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError(undefined\x2C { cause: options.signal.reason });\x0d\n    }\x0d\n    ArrayPrototypePush(result\x2C val);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction flatMap(fn\x2C options) {\x0d\n  const values = map.call(this\x2C fn\x2C options);\x0d\n  return async function* flatMap() {\x0d\n    for await (const val of values) {\x0d\n      yield* val;\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nfunction toIntegerOrInfinity(number) {\x0d\n  // We coerce here to align with the spec\x0d\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\x0d\n  number = Number(number);\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (number < 0) {\x0d\n    throw new ERR_OUT_OF_RANGE('number'\x2C '>= 0'\x2C number);\x0d\n  }\x0d\n  return number;\x0d\n}\x0d\n\x0d\nfunction drop(number\x2C options = undefined) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  number = toIntegerOrInfinity(number);\x0d\n  return async function* drop() {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError();\x0d\n    }\x0d\n    for await (const val of this) {\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (number-- <= 0) {\x0d\n        yield val;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nfunction take(number\x2C options = undefined) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  number = toIntegerOrInfinity(number);\x0d\n  return async function* take() {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError();\x0d\n    }\x0d\n    for await (const val of this) {\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (number-- > 0) {\x0d\n        yield val;\x0d\n      }\x0d\n\x0d\n      // Don't get another item from iterator in case we reached the end\x0d\n      if (number <= 0) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nmodule.exports.streamReturningOperators = {\x0d\n  drop\x2C\x0d\n  filter\x2C\x0d\n  flatMap\x2C\x0d\n  map\x2C\x0d\n  take\x2C\x0d\n  compose\x2C\x0d\n};\x0d\n\x0d\nmodule.exports.promiseReturningOperators = {\x0d\n  every\x2C\x0d\n  forEach\x2C\x0d\n  reduce\x2C\x0d\n  toArray\x2C\x0d\n  some\x2C\x0d\n  find\x2C\x0d\n};\x0d\n
code-source-info,0x3ba13658ed4,90,0,10576,C0O0C4O10576,,
code-creation,JS,10,140004,0x3ba136599a4,529, node:internal/streams/operators:1:1,0x3ba13658e48,~
code-source-info,0x3ba136599a
code-creation,Eval,10,140465,0x3ba1365b94c,5, node:internal/abort_controller:1:1,0x3ba1365b3e8,~
script-source,91,node:internal/abort_controller,'use strict';\x0d\n\x0d\n// Modeled very closely on the AbortController implementation\x0d\n// in https://github.com/mysticatea/abort-controller (MIT license)\x0d\n\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  WeakRef\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  defineEventHandler\x2C\x0d\n  EventTarget\x2C\x0d\n  Event\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kResistStopPropagation\x2C\x0d\n  kWeakHandler\x2C\x0d\n} = require('internal/event_target');\x0d\nconst {\x0d\n  createDeferredPromise\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateAbortSignalArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  DOMException\x2C\x0d\n} = internalBinding('messaging');\x0d\n\x0d\nconst {\x0d\n  clearTimeout\x2C\x0d\n  setTimeout\x2C\x0d\n} = require('timers');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  kDeserialize\x2C\x0d\n  kTransfer\x2C\x0d\n  kTransferList\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nlet _MessageChannel;\x0d\nlet markTransferMode;\x0d\n\x0d\n// Loading the MessageChannel and markTransferable have to be done lazily\x0d\n// because otherwise we'll end up with a require cycle that ends up with\x0d\n// an incomplete initialization of abort_controller.\x0d\n\x0d\nfunction lazyMessageChannel() {\x0d\n  _MessageChannel ??= require('internal/worker/io').MessageChannel;\x0d\n  return new _MessageChannel();\x0d\n}\x0d\n\x0d\nfunction lazyMarkTransferMode(obj\x2C cloneable\x2C transferable) {\x0d\n  markTransferMode ??=\x0d\n    require('internal/worker/js_transferable').markTransferMode;\x0d\n  markTransferMode(obj\x2C cloneable\x2C transferable);\x0d\n}\x0d\n\x0d\nconst clearTimeoutRegistry = new SafeFinalizationRegistry(clearTimeout);\x0d\nconst gcPersistentSignals = new SafeSet();\x0d\n\x0d\nconst kAborted = Symbol('kAborted');\x0d\nconst kReason = Symbol('kReason');\x0d\nconst kCloneData = Symbol('kCloneData');\x0d\nconst kTimeout = Symbol('kTimeout');\x0d\nconst kMakeTransferable = Symbol('kMakeTransferable');\x0d\nconst kComposite = Symbol('kComposite');\x0d\nconst kSourceSignals = Symbol('kSourceSignals');\x0d\nconst kDependantSignals = Symbol('kDependantSignals');\x0d\n\x0d\nfunction customInspect(self\x2C obj\x2C depth\x2C options) {\x0d\n  if (depth < 0)\x0d\n    return self;\x0d\n\x0d\n  const opts = ObjectAssign({}\x2C options\x2C {\x0d\n    depth: options.depth === null ? null : options.depth - 1\x2C\x0d\n  });\x0d\n\x0d\n  return `${self.constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n}\x0d\n\x0d\nfunction validateThisAbortSignal(obj) {\x0d\n  if (obj?.[kAborted] === undefined)\x0d\n    throw new ERR_INVALID_THIS('AbortSignal');\x0d\n}\x0d\n\x0d\n// Because the AbortSignal timeout cannot be canceled\x2C we don't want the\x0d\n// presence of the timer alone to keep the AbortSignal from being garbage\x0d\n// collected if it otherwise no longer accessible. We also don't want the\x0d\n// timer to keep the Node.js process open on it's own. Therefore\x2C we wrap\x0d\n// the AbortSignal in a WeakRef and have the setTimeout callback close\x0d\n// over the WeakRef rather than directly over the AbortSignal\x2C and we unref\x0d\n// the created timer object. Separately\x2C we add the signal to a\x0d\n// FinalizerRegistry that will clear the timeout when the signal is gc'd.\x0d\nfunction setWeakAbortSignalTimeout(weakRef\x2C delay) {\x0d\n  const timeout = setTimeout(() => {\x0d\n    const signal = weakRef.deref();\x0d\n    if (signal !== undefined) {\x0d\n      gcPersistentSignals.delete(signal);\x0d\n      abortSignal(\x0d\n        signal\x2C\x0d\n        new DOMException(\x0d\n          'The operation was aborted due to timeout'\x2C\x0d\n          'TimeoutError'));\x0d\n    }\x0d\n  }\x2C delay);\x0d\n  timeout.unref();\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nclass AbortSignal extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get aborted() {\x0d\n    validateThisAbortSignal(this);\x0d\n    return !!this[kAborted];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get reason() {\x0d\n    validateThisAbortSignal(this);\x0d\n    return this[kReason];\x0d\n  }\x0d\n\x0d\n  throwIfAborted() {\x0d\n    validateThisAbortSignal(this);\x0d\n    if (this[kAborted]) {\x0d\n      throw this[kReason];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    return customInspect(this\x2C {\x0d\n      aborted: this.aborted\x2C\x0d\n    }\x2C depth\x2C options);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {any} [reason]\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static abort(\x0d\n    reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\x0d\n    return createAbortSignal({ aborted: true\x2C reason });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} delay\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static timeout(delay) {\x0d\n    validateUint32(delay\x2C 'delay'\x2C false);\x0d\n    const signal = createAbortSignal();\x0d\n    signal[kTimeout] = true;\x0d\n    clearTimeoutRegistry.register(\x0d\n      signal\x2C\x0d\n      setWeakAbortSignalTimeout(new WeakRef(signal)\x2C delay));\x0d\n    return signal;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {AbortSignal[]} signals\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static any(signals) {\x0d\n    validateAbortSignalArray(signals\x2C 'signals');\x0d\n    const resultSignal = createAbortSignal({ composite: true });\x0d\n    if (!signals.length) {\x0d\n      return resultSignal;\x0d\n    }\x0d\n    const resultSignalWeakRef = new WeakRef(resultSignal);\x0d\n    resultSignal[kSourceSignals] = new SafeSet();\x0d\n    for (let i = 0; i < signals.length; i++) {\x0d\n      const signal = signals[i];\x0d\n      if (signal.aborted) {\x0d\n        abortSignal(resultSignal\x2C signal.reason);\x0d\n        return resultSignal;\x0d\n      }\x0d\n      signal[kDependantSignals] ??= new SafeSet();\x0d\n      if (!signal[kComposite]) {\x0d\n        resultSignal[kSourceSignals].add(new WeakRef(signal));\x0d\n        signal[kDependantSignals].add(resultSignalWeakRef);\x0d\n      } else if (!signal[kSourceSignals]) {\x0d\n        continue;\x0d\n      } else {\x0d\n        for (const sourceSignal of signal[kSourceSignals]) {\x0d\n          const sourceSignalRef = sourceSignal.deref();\x0d\n          if (!sourceSignalRef) {\x0d\n            continue;\x0d\n          }\x0d\n          assert(!sourceSignalRef.aborted);\x0d\n          assert(!sourceSignalRef[kComposite]);\x0d\n\x0d\n          if (resultSignal[kSourceSignals].has(sourceSignal)) {\x0d\n            continue;\x0d\n          }\x0d\n          resultSignal[kSourceSignals].add(sourceSignal);\x0d\n          sourceSignalRef[kDependantSignals].add(resultSignalWeakRef);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    return resultSignal;\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    super[kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\x0d\n    if (isTimeoutOrNonEmptyCompositeSignal &&\x0d\n        type === 'abort' &&\x0d\n        !this.aborted &&\x0d\n        !weak &&\x0d\n        size === 1) {\x0d\n      // If this is a timeout signal\x2C or a non-empty composite signal\x2C and we're adding a non-weak abort\x0d\n      // listener\x2C then we don't want it to be gc'd while the listener\x0d\n      // is attached and the timer still hasn't fired. So\x2C we retain a\x0d\n      // strong ref that is held for as long as the listener is registered.\x0d\n      gcPersistentSignals.add(this);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {\x0d\n    super[kRemoveListener](size\x2C type\x2C listener\x2C capture);\x0d\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\x0d\n    if (isTimeoutOrNonEmptyCompositeSignal && type === 'abort' && size === 0) {\x0d\n      gcPersistentSignals.delete(this);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    validateThisAbortSignal(this);\x0d\n    const aborted = this.aborted;\x0d\n    if (aborted) {\x0d\n      const reason = this.reason;\x0d\n      return {\x0d\n        data: { aborted\x2C reason }\x2C\x0d\n        deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const { port1\x2C port2 } = this[kCloneData];\x0d\n    this[kCloneData] = undefined;\x0d\n\x0d\n    this.addEventListener('abort'\x2C () => {\x0d\n      port1.postMessage(this.reason);\x0d\n      port1.close();\x0d\n    }\x2C { once: true });\x0d\n\x0d\n    return {\x0d\n      data: { port: port2 }\x2C\x0d\n      deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    if (!this.aborted) {\x0d\n      const { port1\x2C port2 } = lazyMessageChannel();\x0d\n      port1.unref();\x0d\n      port2.unref();\x0d\n      this[kCloneData] = {\x0d\n        port1\x2C\x0d\n        port2\x2C\x0d\n      };\x0d\n      return [port2];\x0d\n    }\x0d\n    return [];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ aborted\x2C reason\x2C port }) {\x0d\n    if (aborted) {\x0d\n      this[kAborted] = aborted;\x0d\n      this[kReason] = reason;\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    port.onmessage = ({ data }) => {\x0d\n      abortSignal(this\x2C data);\x0d\n      port.close();\x0d\n      port.onmessage = undefined;\x0d\n    };\x0d\n    // The receiving port\x2C by itself\x2C should never keep the event loop open.\x0d\n    // The unref() has to be called *after* setting the onmessage handler.\x0d\n    port.unref();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction ClonedAbortSignal() {\x0d\n  return createAbortSignal({ transferable: true });\x0d\n}\x0d\nClonedAbortSignal.prototype[kDeserialize] = () => {};\x0d\n\x0d\nObjectDefineProperties(AbortSignal.prototype\x2C {\x0d\n  aborted: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(AbortSignal.prototype\x2C SymbolToStringTag\x2C {\x0d\n  __proto__: null\x2C\x0d\n  writable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  value: 'AbortSignal'\x2C\x0d\n});\x0d\n\x0d\ndefineEventHandler(AbortSignal.prototype\x2C 'abort');\x0d\n\x0d\n/**\x0d\n * @param {{\x0d\n *   aborted? : boolean\x2C\x0d\n *   reason? : any\x2C\x0d\n *   transferable? : boolean\x2C\x0d\n *   composite? : boolean\x2C\x0d\n * }} [init]\x0d\n * @returns {AbortSignal}\x0d\n */\x0d\nfunction createAbortSignal(init = kEmptyObject) {\x0d\n  const {\x0d\n    aborted = false\x2C\x0d\n    reason = undefined\x2C\x0d\n    transferable = false\x2C\x0d\n    composite = false\x2C\x0d\n  } = init;\x0d\n  const signal = new EventTarget();\x0d\n  ObjectSetPrototypeOf(signal\x2C AbortSignal.prototype);\x0d\n  signal[kAborted] = aborted;\x0d\n  signal[kReason] = reason;\x0d\n  signal[kComposite] = composite;\x0d\n  if (transferable) {\x0d\n    lazyMarkTransferMode(signal\x2C false\x2C true);\x0d\n  }\x0d\n  return signal;\x0d\n}\x0d\n\x0d\nfunction abortSignal(signal\x2C reason) {\x0d\n  if (signal[kAborted]) return;\x0d\n  signal[kAborted] = true;\x0d\n  signal[kReason] = reason;\x0d\n  const event = new Event('abort'\x2C {\x0d\n    [kTrustEvent]: true\x2C\x0d\n  });\x0d\n  signal.dispatchEvent(event);\x0d\n  signal[kDependantSignals]?.forEach((s) => {\x0d\n    const signalRef = s.deref();\x0d\n    if (signalRef) abortSignal(signalRef\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass AbortController {\x0d\n  #signal;\x0d\n\x0d\n  /**\x0d\n   * @type {AbortSignal}\x0d\n   */\x0d\n  get signal() {\x0d\n    this.#signal ??= createAbortSignal();\x0d\n    return this.#signal;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {any} [reason]\x0d\n   */\x0d\n  abort(reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\x0d\n    abortSignal(this.#signal ??= createAbortSignal()\x2C reason);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    return customInspect(this\x2C {\x0d\n      signal: this.signal\x2C\x0d\n    }\x2C depth\x2C options);\x0d\n  }\x0d\n\x0d\n  static [kMakeTransferable]() {\x0d\n    const controller = new AbortController();\x0d\n    controller.#signal = createAbortSignal({ transferable: true });\x0d\n    return controller;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Enables the AbortSignal to be transferable using structuredClone/postMessage.\x0d\n * @param {AbortSignal} signal\x0d\n * @returns {AbortSignal}\x0d\n */\x0d\nfunction transferableAbortSignal(signal) {\x0d\n  if (signal?.[kAborted] === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  lazyMarkTransferMode(signal\x2C false\x2C true);\x0d\n  return signal;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates an AbortController with a transferable AbortSignal\x0d\n */\x0d\nfunction transferableAbortController() {\x0d\n  return AbortController[kMakeTransferable]();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {AbortSignal} signal\x0d\n * @param {any} resource\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nasync function aborted(signal\x2C resource) {\x0d\n  if (signal === undefined) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  validateObject(resource\x2C 'resource'\x2C kValidateObjectAllowArray | kValidateObjectAllowFunction);\x0d\n  if (signal.aborted)\x0d\n    return PromiseResolve();\x0d\n  const abortPromise = createDeferredPromise();\x0d\n  const opts = { __proto__: null\x2C [kWeakHandler]: resource\x2C once: true\x2C [kResistStopPropagation]: true };\x0d\n  signal.addEventListener('abort'\x2C abortPromise.resolve\x2C opts);\x0d\n  return abortPromise.promise;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(AbortController.prototype\x2C {\x0d\n  signal: kEnumerableProperty\x2C\x0d\n  abort: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(AbortController.prototype\x2C SymbolToStringTag\x2C {\x0d\n  __proto__: null\x2C\x0d\n  writable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  value: 'AbortController'\x2C\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  AbortController\x2C\x0d\n  AbortSignal\x2C\x0d\n  ClonedAbortSignal\x2C\x0d\n  aborted\x2C\x0d\n  transferableAbortSignal\x2C\x0d\n  transferableAbortController\x2C\x0d\n};\x0d\n
code-source-info,0x3ba1365b94c,91,0,12962,C0O0C4O12962,,
code-creation,JS,10,140986,0x3ba1365d39c,1088, node:internal/abort_controller:1:1,0x3ba1365b8c0,~
code-source-info,0x3ba1365d39c
code-creation,JS,10,141093,0x3ba1365d9f4,11,AbortController node:internal/abort_controller:381:23,0x3ba1365c470,~
code-source-info,0x3ba1365d9f4,91,10585,11248,C4O10590C10O11248,,
code-creation,JS,10,141253,0x3ba1365dee4,42,SafeFinalizationRegistry node:internal/per_context/primordials:441:16,0xfca8d32458,~
code-source-info,0x3ba1365dee4,6,13209,13254,C3O13229C27O13229C41O13253,,
code-creation,JS,10,141471,0x3ba1365e634,151,defineEventHandler node:internal/event_target:1112:28,0x22671ca68a0,~
script-source,47,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateInternalField\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\nconst webidl = require('internal/webidl');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('kHandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\nconst kResistStopPropagation = Symbol('kResistStopPropagation');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kRemoveWeakListenerHelper = Symbol('nodejs.internal.removeWeakListenerHelper');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst kType = Symbol('type');\x0d\nconst kDetail = Symbol('detail');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x2C\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nconst isTrustedDescriptor = {\x0d\n  __proto__: null\x2C\x0d\n  configurable: false\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: isTrusted\x2C\x0d\n};\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  #cancelable = false;\x0d\n  #bubbles = false;\x0d\n  #composed = false;\x0d\n  #defaultPrevented = false;\x0d\n  #timestamp = now();\x0d\n  #propagationStopped = false;\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options');\x0d\n    const { bubbles\x2C cancelable\x2C composed } = options;\x0d\n    this.#cancelable = !!cancelable;\x0d\n    this.#bubbles = !!bubbles;\x0d\n    this.#composed = !!composed;\x0d\n\x0d\n    this[kType] = `${type}`;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {boolean} [bubbles]\x0d\n   * @param {boolean} [cancelable]\x0d\n   */\x0d\n  initEvent(type\x2C bubbles = false\x2C cancelable = false) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n\x0d\n    if (this[kIsBeingDispatched]) {\x0d\n      return;\x0d\n    }\x0d\n    this[kType] = `${type}`;\x0d\n    this.#bubbles = !!bubbles;\x0d\n    this.#cancelable = !!cancelable;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x2C\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this.#defaultPrevented\x2C\x0d\n      cancelable: this.#cancelable\x2C\x0d\n      timeStamp: this.#timestamp\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#defaultPrevented = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable && this.#defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#timestamp;\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.#cancelable || !this.#defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#bubbles;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#composed;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#propagationStopped;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#propagationStopped = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    initEvent: kEnumerableProperty\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n    // Don't conform to the spec with isTrusted. The spec defines it as\x0d\n    // LegacyUnforgeable but defining it in the constructor has a big\x0d\n    // performance impact and the property doesn't seem to be useful outside of\x0d\n    // browsers.\x0d\n    isTrusted: isTrustedDescriptor\x2C\x0d\n  });\x0d\n\x0d\nconst staticProps = ['NONE'\x2C 'CAPTURING_PHASE'\x2C 'AT_TARGET'\x2C 'BUBBLING_PHASE'];\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event\x2C\x0d\n  ArrayPrototypeReduce(staticProps\x2C (result\x2C staticProp\x2C index = 0) => {\x0d\n    result[staticProp] = {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: index\x2C\x0d\n    };\x0d\n    return result;\x0d\n  }\x2C {})\x2C\x0d\n);\x0d\n\x0d\nfunction isCustomEvent(value) {\x0d\n  return isEvent(value) && (value?.[kDetail] !== undefined);\x0d\n}\x0d\n\x0d\nclass CustomEvent extends Event {\x0d\n  /**\x0d\n   * @constructor\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   *   detail?: any\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    super(type\x2C options);\x0d\n    this[kDetail] = options?.detail ?? null;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get detail() {\x0d\n    if (!isCustomEvent(this))\x0d\n      throw new ERR_INVALID_THIS('CustomEvent');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(CustomEvent.prototype\x2C {\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'CustomEvent'\x2C\x0d\n  }\x2C\x0d\n  detail: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    ({ eventTarget\x2C listener\x2C eventType }) => eventTarget.deref()?.[kRemoveWeakListenerHelper](eventType\x2C listener)\x2C\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\nconst kFlagOnce = 1 << 0;\x0d\nconst kFlagCapture = 1 << 1;\x0d\nconst kFlagPassive = 1 << 2;\x0d\nconst kFlagNodeStyle = 1 << 3;\x0d\nconst kFlagWeak = 1 << 4;\x0d\nconst kFlagRemoved = 1 << 5;\x0d\nconst kFlagResistStopPropagation = 1 << 6;\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(eventTarget\x2C eventType\x2C previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak\x2C resistStopPropagation) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n\x0d\n    let flags = 0b0;\x0d\n    if (once)\x0d\n      flags |= kFlagOnce;\x0d\n    if (capture)\x0d\n      flags |= kFlagCapture;\x0d\n    if (passive)\x0d\n      flags |= kFlagPassive;\x0d\n    if (isNodeStyleListener)\x0d\n      flags |= kFlagNodeStyle;\x0d\n    if (weak)\x0d\n      flags |= kFlagWeak;\x0d\n    if (resistStopPropagation)\x0d\n      flags |= kFlagResistStopPropagation;\x0d\n    this.flags = flags;\x0d\n\x0d\n    this.removed = false;\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C {\x0d\n        __proto__: null\x2C\x0d\n        // Weak ref so the listener won't hold the eventTarget alive\x0d\n        eventTarget: new SafeWeakRef(eventTarget)\x2C\x0d\n        listener: this\x2C\x0d\n        eventType\x2C\x0d\n      }\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = async (...args) => {\x0d\n        if (listener.handleEvent)\x0d\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\x0d\n      };\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get once() {\x0d\n    return Boolean(this.flags & kFlagOnce);\x0d\n  }\x0d\n  get capture() {\x0d\n    return Boolean(this.flags & kFlagCapture);\x0d\n  }\x0d\n  get passive() {\x0d\n    return Boolean(this.flags & kFlagPassive);\x0d\n  }\x0d\n  get isNodeStyleListener() {\x0d\n    return Boolean(this.flags & kFlagNodeStyle);\x0d\n  }\x0d\n  get weak() {\x0d\n    return Boolean(this.flags & kFlagWeak);\x0d\n  }\x0d\n  get resistStopPropagation() {\x0d\n    return Boolean(this.flags & kFlagResistStopPropagation);\x0d\n  }\x0d\n  get removed() {\x0d\n    return Boolean(this.flags & kFlagRemoved);\x0d\n  }\x0d\n  set removed(value) {\x0d\n    if (value)\x0d\n      this.flags |= kFlagRemoved;\x0d\n    else\x0d\n      this.flags &= ~kFlagRemoved;\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n  self[kHandlers] = new SafeMap();\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the validateListener check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n      resistStopPropagation\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n\x0d\n    if (!validateEventListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = webidl.converters.DOMString(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { __proto__: null\x2C once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined\x2C resistStopPropagation: Boolean(resistStopPropagation) };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(this\x2C type\x2C root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak\x2C resistStopPropagation);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(this\x2C type\x2C previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak\x2C resistStopPropagation);\x0d\n    root.size++;\x0d\n    root.resistStopPropagation ||= Boolean(resistStopPropagation);\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n    if (!validateEventListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = webidl.converters.DOMString(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kRemoveWeakListenerHelper](type\x2C listener) {\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    const capture = listener.capture === true;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler === listener) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        // Undefined is passed as the listener as the listener was GCed\x0d\n        this[kRemoveListener](root.size\x2C type\x2C undefined\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 1)\x0d\n      throw new ERR_MISSING_ARGS('event');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    const iterationCondition = () => {\x0d\n      if (handler === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return root.resistStopPropagation || handler.passive || event?.[kStop] !== true;\x0d\n    };\x0d\n    while (iterationCondition()) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed || (event?.[kStop] === true && !handler.resistStopPropagation)) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        // And the case of event.stopImmediatePropagation() being called\x0d\n        // For events not flagged as resistStopPropagation\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x2C\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction validateEventListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  if (typeof listener === 'object') {\x0d\n    // Require `handleEvent` lazily.\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return kEmptyObject;\x0d\n  validateObject(options\x2C 'options'\x2C kValidateObjectAllowArray | kValidateObjectAllowFunction);\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    resistStopPropagation: options[kResistStopPropagation] ?? false\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name\x2C event = name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  const propName = `on${name}`;\x0d\n  function get() {\x0d\n    validateInternalField(this\x2C kHandlers\x2C 'EventTarget');\x0d\n    return this[kHandlers]?.get(event)?.handler ?? null;\x0d\n  }\x0d\n  ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: `get ${propName}`\x2C\x0d\n  });\x0d\n\x0d\n  function set(value) {\x0d\n    validateInternalField(this\x2C kHandlers\x2C 'EventTarget');\x0d\n    let wrappedHandler = this[kHandlers]?.get(event);\x0d\n    if (wrappedHandler) {\x0d\n      if (typeof wrappedHandler.handler === 'function') {\x0d\n        this[kEvents].get(event).size--;\x0d\n        const size = this[kEvents].get(event).size;\x0d\n        this[kRemoveListener](size\x2C event\x2C wrappedHandler.handler\x2C false);\x0d\n      }\x0d\n      wrappedHandler.handler = value;\x0d\n      if (typeof wrappedHandler.handler === 'function') {\x0d\n        this[kEvents].get(event).size++;\x0d\n        const size = this[kEvents].get(event).size;\x0d\n        this[kNewListener](size\x2C event\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n      }\x0d\n    } else {\x0d\n      wrappedHandler = makeEventHandler(value);\x0d\n      this.addEventListener(event\x2C wrappedHandler);\x0d\n    }\x0d\n    this[kHandlers].set(event\x2C wrappedHandler);\x0d\n  }\x0d\n  ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: `set ${propName}`\x2C\x0d\n  });\x0d\n\x0d\n  ObjectDefineProperty(emitter\x2C propName\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get\x2C\x0d\n    set\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  CustomEvent\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  kResistStopPropagation\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x3ba1365e634,47,30469,31953,C0O30469C24O30493C36O30589C41O30594C46O30748C56O30769C66O30825C77O30748C82O31711C90O31732C100O31788C111O31711C116O31812C121O31842C128O31881C134O31891C144O31812C150O31952,,
code-creation,Eval,10,143020,0x3ba136623ec,5, node:internal/streams/end-of-stream:1:1,0x3ba13662088,~
script-source,92,node:internal/streams/end-of-stream,// Ported from https://github.com/mafintosh/end-of-stream with\x0d\n// permission from the author\x2C Mathias Buus (@mafintosh).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PREMATURE_CLOSE\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateBoolean\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  isClosed\x2C\x0d\n  isReadable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableFinished\x2C\x0d\n  isReadableErrored\x2C\x0d\n  isWritable\x2C\x0d\n  isWritableNodeStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isWritableFinished\x2C\x0d\n  isWritableErrored\x2C\x0d\n  isNodeStream\x2C\x0d\n  willEmitClose: _willEmitClose\x2C\x0d\n  kIsClosedPromise\x2C\x0d\n} = require('internal/streams/utils');\x0d\nlet addAbortListener;\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\nconst nop = () => {};\x0d\n\x0d\nfunction eos(stream\x2C options\x2C callback) {\x0d\n  if (arguments.length === 2) {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  } else if (options == null) {\x0d\n    options = kEmptyObject;\x0d\n  } else {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n\x0d\n  callback = once(callback);\x0d\n\x0d\n  if (isReadableStream(stream) || isWritableStream(stream)) {\x0d\n    return eosWeb(stream\x2C options\x2C callback);\x0d\n  }\x0d\n\x0d\n  if (!isNodeStream(stream)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\x0d\n  }\x0d\n\x0d\n  const readable = options.readable ?? isReadableNodeStream(stream);\x0d\n  const writable = options.writable ?? isWritableNodeStream(stream);\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n\x0d\n  const onlegacyfinish = () => {\x0d\n    if (!stream.writable) {\x0d\n      onfinish();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // TODO (ronag): Improve soft detection to include core modules and\x0d\n  // common ecosystem modules that do properly emit 'close' but fail\x0d\n  // this generic check.\x0d\n  let willEmitClose = (\x0d\n    _willEmitClose(stream) &&\x0d\n    isReadableNodeStream(stream) === readable &&\x0d\n    isWritableNodeStream(stream) === writable\x0d\n  );\x0d\n\x0d\n  let writableFinished = isWritableFinished(stream\x2C false);\x0d\n  const onfinish = () => {\x0d\n    writableFinished = true;\x0d\n    // Stream should not be destroyed here. If it is that\x0d\n    // means that user space is doing something differently and\x0d\n    // we cannot trust willEmitClose.\x0d\n    if (stream.destroyed) {\x0d\n      willEmitClose = false;\x0d\n    }\x0d\n\x0d\n    if (willEmitClose && (!stream.readable || readable)) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!readable || readableFinished) {\x0d\n      callback.call(stream);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  let readableFinished = isReadableFinished(stream\x2C false);\x0d\n  const onend = () => {\x0d\n    readableFinished = true;\x0d\n    // Stream should not be destroyed here. If it is that\x0d\n    // means that user space is doing something differently and\x0d\n    // we cannot trust willEmitClose.\x0d\n    if (stream.destroyed) {\x0d\n      willEmitClose = false;\x0d\n    }\x0d\n\x0d\n    if (willEmitClose && (!stream.writable || writable)) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!writable || writableFinished) {\x0d\n      callback.call(stream);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  const onerror = (err) => {\x0d\n    callback.call(stream\x2C err);\x0d\n  };\x0d\n\x0d\n  let closed = isClosed(stream);\x0d\n\x0d\n  const onclose = () => {\x0d\n    closed = true;\x0d\n\x0d\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\x0d\n\x0d\n    if (errored && typeof errored !== 'boolean') {\x0d\n      return callback.call(stream\x2C errored);\x0d\n    }\x0d\n\x0d\n    if (readable && !readableFinished && isReadableNodeStream(stream\x2C true)) {\x0d\n      if (!isReadableFinished(stream\x2C false))\x0d\n        return callback.call(stream\x2C\x0d\n                             new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n    if (writable && !writableFinished) {\x0d\n      if (!isWritableFinished(stream\x2C false))\x0d\n        return callback.call(stream\x2C\x0d\n                             new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n\x0d\n    callback.call(stream);\x0d\n  };\x0d\n\x0d\n  const onclosed = () => {\x0d\n    closed = true;\x0d\n\x0d\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\x0d\n\x0d\n    if (errored && typeof errored !== 'boolean') {\x0d\n      return callback.call(stream\x2C errored);\x0d\n    }\x0d\n\x0d\n    callback.call(stream);\x0d\n  };\x0d\n\x0d\n  const onrequest = () => {\x0d\n    stream.req.on('finish'\x2C onfinish);\x0d\n  };\x0d\n\x0d\n  if (isRequest(stream)) {\x0d\n    stream.on('complete'\x2C onfinish);\x0d\n    if (!willEmitClose) {\x0d\n      stream.on('abort'\x2C onclose);\x0d\n    }\x0d\n    if (stream.req) {\x0d\n      onrequest();\x0d\n    } else {\x0d\n      stream.on('request'\x2C onrequest);\x0d\n    }\x0d\n  } else if (writable && !wState) { // legacy streams\x0d\n    stream.on('end'\x2C onlegacyfinish);\x0d\n    stream.on('close'\x2C onlegacyfinish);\x0d\n  }\x0d\n\x0d\n  // Not all streams will emit 'close' after 'aborted'.\x0d\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\x0d\n    stream.on('aborted'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  stream.on('end'\x2C onend);\x0d\n  stream.on('finish'\x2C onfinish);\x0d\n  if (options.error !== false) {\x0d\n    stream.on('error'\x2C onerror);\x0d\n  }\x0d\n  stream.on('close'\x2C onclose);\x0d\n\x0d\n  if (closed) {\x0d\n    process.nextTick(onclose);\x0d\n  } else if (wState?.errorEmitted || rState?.errorEmitted) {\x0d\n    if (!willEmitClose) {\x0d\n      process.nextTick(onclosed);\x0d\n    }\x0d\n  } else if (\x0d\n    !readable &&\x0d\n    (!willEmitClose || isReadable(stream)) &&\x0d\n    (writableFinished || isWritable(stream) === false)\x0d\n  ) {\x0d\n    process.nextTick(onclosed);\x0d\n  } else if (\x0d\n    !writable &&\x0d\n    (!willEmitClose || isWritable(stream)) &&\x0d\n    (readableFinished || isReadable(stream) === false)\x0d\n  ) {\x0d\n    process.nextTick(onclosed);\x0d\n  } else if ((rState && stream.req && stream.aborted)) {\x0d\n    process.nextTick(onclosed);\x0d\n  }\x0d\n\x0d\n  const cleanup = () => {\x0d\n    callback = nop;\x0d\n    stream.removeListener('aborted'\x2C onclose);\x0d\n    stream.removeListener('complete'\x2C onfinish);\x0d\n    stream.removeListener('abort'\x2C onclose);\x0d\n    stream.removeListener('request'\x2C onrequest);\x0d\n    if (stream.req) stream.req.removeListener('finish'\x2C onfinish);\x0d\n    stream.removeListener('end'\x2C onlegacyfinish);\x0d\n    stream.removeListener('close'\x2C onlegacyfinish);\x0d\n    stream.removeListener('finish'\x2C onfinish);\x0d\n    stream.removeListener('end'\x2C onend);\x0d\n    stream.removeListener('error'\x2C onerror);\x0d\n    stream.removeListener('close'\x2C onclose);\x0d\n  };\x0d\n\x0d\n  if (options.signal && !closed) {\x0d\n    const abort = () => {\x0d\n      // Keep it because cleanup removes it.\x0d\n      const endCallback = callback;\x0d\n      cleanup();\x0d\n      endCallback.call(\x0d\n        stream\x2C\x0d\n        new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n    };\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(abort);\x0d\n    } else {\x0d\n      addAbortListener ??= require('events').addAbortListener;\x0d\n      const disposable = addAbortListener(options.signal\x2C abort);\x0d\n      const originalCallback = callback;\x0d\n      callback = once((...args) => {\x0d\n        disposable[SymbolDispose]();\x0d\n        originalCallback.apply(stream\x2C args);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return cleanup;\x0d\n}\x0d\n\x0d\nfunction eosWeb(stream\x2C options\x2C callback) {\x0d\n  let isAborted = false;\x0d\n  let abort = nop;\x0d\n  if (options.signal) {\x0d\n    abort = () => {\x0d\n      isAborted = true;\x0d\n      callback.call(stream\x2C new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n    };\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(abort);\x0d\n    } else {\x0d\n      addAbortListener ??= require('events').addAbortListener;\x0d\n      const disposable = addAbortListener(options.signal\x2C abort);\x0d\n      const originalCallback = callback;\x0d\n      callback = once((...args) => {\x0d\n        disposable[SymbolDispose]();\x0d\n        originalCallback.apply(stream\x2C args);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  const resolverFn = (...args) => {\x0d\n    if (!isAborted) {\x0d\n      process.nextTick(() => callback.apply(stream\x2C args));\x0d\n    }\x0d\n  };\x0d\n  PromisePrototypeThen(\x0d\n    stream[kIsClosedPromise].promise\x2C\x0d\n    resolverFn\x2C\x0d\n    resolverFn\x2C\x0d\n  );\x0d\n  return nop;\x0d\n}\x0d\n\x0d\nfunction finished(stream\x2C opts) {\x0d\n  let autoCleanup = false;\x0d\n  if (opts === null) {\x0d\n    opts = kEmptyObject;\x0d\n  }\x0d\n  if (opts?.cleanup) {\x0d\n    validateBoolean(opts.cleanup\x2C 'cleanup');\x0d\n    autoCleanup = opts.cleanup;\x0d\n  }\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const cleanup = eos(stream\x2C opts\x2C (err) => {\x0d\n      if (autoCleanup) {\x0d\n        cleanup();\x0d\n      }\x0d\n      if (err) {\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve();\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = eos;\x0d\nmodule.exports.finished = finished;\x0d\n
code-source-info,0x3ba136623ec,92,0,8687,C0O0C4O8687,,
code-creation,JS,10,143361,0x3ba13662754,353, node:internal/streams/end-of-stream:1:1,0x3ba13662360,~
code-source-info,0x3ba13662754,92,0,8687,C0O0C120O180C126O180C131O153C137O168C142O220C148O245C154O325C160O325C165O297C171O314C177O449C183O449C188O363C194O387C200O408C206O427C212O495C218O507C224O532C230O878C236O878C241O579C247O592C253O607C259O632C265O653C271O676C277O698C283O713C289O738C295O759C301O782C307O804C313O836C319O855C325O918C326O918C328O1052C332O1052C334O8627C336O8642C340O8657C347O8674C352O8686,,
code-creation,Eval,10,143654,0x3ba13663e5c,5, node:internal/streams/utils:1:1,0x3ba13663bc8,~
script-source,93,node:internal/streams/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolFor\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\n// We need to use SymbolFor to make these globally available\x0d\n// for interopt with readable-stream\x2C i.e. readable-stream\x0d\n// and node core needs to be able to read/write private state\x0d\n// from each other for proper interoperability.\x0d\nconst kIsDestroyed = SymbolFor('nodejs.stream.destroyed');\x0d\nconst kIsErrored = SymbolFor('nodejs.stream.errored');\x0d\nconst kIsReadable = SymbolFor('nodejs.stream.readable');\x0d\nconst kIsWritable = SymbolFor('nodejs.stream.writable');\x0d\nconst kIsDisturbed = SymbolFor('nodejs.stream.disturbed');\x0d\n\x0d\nconst kOnConstructed = Symbol('kOnConstructed');\x0d\n\x0d\nconst kIsClosedPromise = SymbolFor('nodejs.webstream.isClosedPromise');\x0d\nconst kControllerErrorFunction = SymbolFor('nodejs.webstream.controllerErrorFunction');\x0d\n\x0d\nconst kState = Symbol('kState');\x0d\nconst kObjectMode = 1 << 0;\x0d\nconst kErrorEmitted = 1 << 1;\x0d\nconst kAutoDestroy = 1 << 2;\x0d\nconst kEmitClose = 1 << 3;\x0d\nconst kDestroyed = 1 << 4;\x0d\nconst kClosed = 1 << 5;\x0d\nconst kCloseEmitted = 1 << 6;\x0d\nconst kErrored = 1 << 7;\x0d\nconst kConstructed = 1 << 8;\x0d\n\x0d\nfunction isReadableNodeStream(obj\x2C strict = false) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    typeof obj.pipe === 'function' &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    (\x0d\n      !strict ||\x0d\n      (typeof obj.pause === 'function' && typeof obj.resume === 'function')\x0d\n    ) &&\x0d\n    (!obj._writableState || obj._readableState?.readable !== false) && // Duplex\x0d\n    (!obj._writableState || obj._readableState) // Writable has .pipe.\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWritableNodeStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    typeof obj.write === 'function' &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    (!obj._readableState || obj._writableState?.writable !== false) // Duplex\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isDuplexNodeStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    (typeof obj.pipe === 'function' && obj._readableState) &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    typeof obj.write === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isNodeStream(obj) {\x0d\n  return (\x0d\n    obj &&\x0d\n    (\x0d\n      obj._readableState ||\x0d\n      obj._writableState ||\x0d\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\x0d\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function')\x0d\n    )\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isReadableStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.pipeThrough === 'function' &&\x0d\n    typeof obj.getReader === 'function' &&\x0d\n    typeof obj.cancel === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWritableStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.getWriter === 'function' &&\x0d\n    typeof obj.abort === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isTransformStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.readable === 'object' &&\x0d\n    typeof obj.writable === 'object'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWebStream(obj) {\x0d\n  return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj);\x0d\n}\x0d\n\x0d\nfunction isIterable(obj\x2C isAsync) {\x0d\n  if (obj == null) return false;\x0d\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function';\x0d\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function';\x0d\n  return typeof obj[SymbolAsyncIterator] === 'function' ||\x0d\n    typeof obj[SymbolIterator] === 'function';\x0d\n}\x0d\n\x0d\nfunction isDestroyed(stream) {\x0d\n  if (!isNodeStream(stream)) return null;\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n  const state = wState || rState;\x0d\n  return !!(stream.destroyed || stream[kIsDestroyed] || state?.destroyed);\x0d\n}\x0d\n\x0d\n// Have been end():d.\x0d\nfunction isWritableEnded(stream) {\x0d\n  if (!isWritableNodeStream(stream)) return null;\x0d\n  if (stream.writableEnded === true) return true;\x0d\n  const wState = stream._writableState;\x0d\n  if (wState?.errored) return false;\x0d\n  if (typeof wState?.ended !== 'boolean') return null;\x0d\n  return wState.ended;\x0d\n}\x0d\n\x0d\n// Have emitted 'finish'.\x0d\nfunction isWritableFinished(stream\x2C strict) {\x0d\n  if (!isWritableNodeStream(stream)) return null;\x0d\n  if (stream.writableFinished === true) return true;\x0d\n  const wState = stream._writableState;\x0d\n  if (wState?.errored) return false;\x0d\n  if (typeof wState?.finished !== 'boolean') return null;\x0d\n  return !!(\x0d\n    wState.finished ||\x0d\n    (strict === false && wState.ended === true && wState.length === 0)\x0d\n  );\x0d\n}\x0d\n\x0d\n// Have been push(null):d.\x0d\nfunction isReadableEnded(stream) {\x0d\n  if (!isReadableNodeStream(stream)) return null;\x0d\n  if (stream.readableEnded === true) return true;\x0d\n  const rState = stream._readableState;\x0d\n  if (!rState || rState.errored) return false;\x0d\n  if (typeof rState?.ended !== 'boolean') return null;\x0d\n  return rState.ended;\x0d\n}\x0d\n\x0d\n// Have emitted 'end'.\x0d\nfunction isReadableFinished(stream\x2C strict) {\x0d\n  if (!isReadableNodeStream(stream)) return null;\x0d\n  const rState = stream._readableState;\x0d\n  if (rState?.errored) return false;\x0d\n  if (typeof rState?.endEmitted !== 'boolean') return null;\x0d\n  return !!(\x0d\n    rState.endEmitted ||\x0d\n    (strict === false && rState.ended === true && rState.length === 0)\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isReadable(stream) {\x0d\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable];\x0d\n  if (typeof stream?.readable !== 'boolean') return null;\x0d\n  if (isDestroyed(stream)) return false;\x0d\n  return isReadableNodeStream(stream) &&\x0d\n    stream.readable &&\x0d\n    !isReadableFinished(stream);\x0d\n}\x0d\n\x0d\nfunction isWritable(stream) {\x0d\n  if (stream && stream[kIsWritable] != null) return stream[kIsWritable];\x0d\n  if (typeof stream?.writable !== 'boolean') return null;\x0d\n  if (isDestroyed(stream)) return false;\x0d\n  return isWritableNodeStream(stream) &&\x0d\n    stream.writable &&\x0d\n    !isWritableEnded(stream);\x0d\n}\x0d\n\x0d\nfunction isFinished(stream\x2C opts) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (isDestroyed(stream)) {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (opts?.readable !== false && isReadable(stream)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (opts?.writable !== false && isWritable(stream)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction isWritableErrored(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (stream.writableErrored) {\x0d\n    return stream.writableErrored;\x0d\n  }\x0d\n\x0d\n  return stream._writableState?.errored ?? null;\x0d\n}\x0d\n\x0d\nfunction isReadableErrored(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (stream.readableErrored) {\x0d\n    return stream.readableErrored;\x0d\n  }\x0d\n\x0d\n  return stream._readableState?.errored ?? null;\x0d\n}\x0d\n\x0d\nfunction isClosed(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (typeof stream.closed === 'boolean') {\x0d\n    return stream.closed;\x0d\n  }\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n\x0d\n  if (\x0d\n    typeof wState?.closed === 'boolean' ||\x0d\n    typeof rState?.closed === 'boolean'\x0d\n  ) {\x0d\n    return wState?.closed || rState?.closed;\x0d\n  }\x0d\n\x0d\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\x0d\n    return stream._closed;\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction isOutgoingMessage(stream) {\x0d\n  return (\x0d\n    typeof stream._closed === 'boolean' &&\x0d\n    typeof stream._defaultKeepAlive === 'boolean' &&\x0d\n    typeof stream._removedConnection === 'boolean' &&\x0d\n    typeof stream._removedContLen === 'boolean'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isServerResponse(stream) {\x0d\n  return (\x0d\n    typeof stream._sent100 === 'boolean' &&\x0d\n    isOutgoingMessage(stream)\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isServerRequest(stream) {\x0d\n  return (\x0d\n    typeof stream._consuming === 'boolean' &&\x0d\n    typeof stream._dumped === 'boolean' &&\x0d\n    stream.req?.upgradeOrConnect === undefined\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction willEmitClose(stream) {\x0d\n  if (!isNodeStream(stream)) return null;\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n  const state = wState || rState;\x0d\n\x0d\n  return (!state && isServerResponse(stream)) || !!(\x0d\n    state &&\x0d\n    state.autoDestroy &&\x0d\n    state.emitClose &&\x0d\n    state.closed === false\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isDisturbed(stream) {\x0d\n  return !!(stream && (\x0d\n    stream[kIsDisturbed] ??\x0d\n    (stream.readableDidRead || stream.readableAborted)\x0d\n  ));\x0d\n}\x0d\n\x0d\nfunction isErrored(stream) {\x0d\n  return !!(stream && (\x0d\n    stream[kIsErrored] ??\x0d\n    stream.readableErrored ??\x0d\n    stream.writableErrored ??\x0d\n    stream._readableState?.errorEmitted ??\x0d\n    stream._writableState?.errorEmitted ??\x0d\n    stream._readableState?.errored ??\x0d\n    stream._writableState?.errored\x0d\n  ));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  kOnConstructed\x2C\x0d\n  isDestroyed\x2C\x0d\n  kIsDestroyed\x2C\x0d\n  isDisturbed\x2C\x0d\n  kIsDisturbed\x2C\x0d\n  isErrored\x2C\x0d\n  kIsErrored\x2C\x0d\n  isReadable\x2C\x0d\n  kIsReadable\x2C\x0d\n  kIsClosedPromise\x2C\x0d\n  kControllerErrorFunction\x2C\x0d\n  kIsWritable\x2C\x0d\n  isClosed\x2C\x0d\n  isDuplexNodeStream\x2C\x0d\n  isFinished\x2C\x0d\n  isIterable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableEnded\x2C\x0d\n  isReadableFinished\x2C\x0d\n  isReadableErrored\x2C\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n  isWritable\x2C\x0d\n  isWritableNodeStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isWritableEnded\x2C\x0d\n  isWritableFinished\x2C\x0d\n  isWritableErrored\x2C\x0d\n  isServerRequest\x2C\x0d\n  isServerResponse\x2C\x0d\n  willEmitClose\x2C\x0d\n  isTransformStream\x2C\x0d\n  kState\x2C\x0d\n  // bitfields\x0d\n  kObjectMode\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kEmitClose\x2C\x0d\n  kDestroyed\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kErrored\x2C\x0d\n  kConstructed\x2C\x0d\n};\x0d\n
code-source-info,0x3ba13663e5c,93,0,9298,C0O0C4O9298,,
code-creation,JS,10,144050,0x3ba13664d24,592, node:internal/streams/utils:1:1,0x3ba13663dd0,~
code-source-info,0x3ba13664d24,93,0,9298,C0O0C181O28C187O52C193O71C198O85C203O369C207O369C211O369C213O427C217O427C221O427C223O484C227O484C231O484C233O542C237O542C241O542C243O601C247O601C251O601C253O665C257O665C262O719C266O719C271O800C275O800C280O873C284O873C289O912C292O943C295O973C298O1001C301O1029C304O1054C307O1085C310O1111C315O1141C320O8478C328O8500C334O8519C340O8535C346O8552C352O8568C358O8585C364O8599C370O8614C376O8629C382O8645C388O8666C394O8695C400O8711C406O8724C412O8747C418O8762C424O8777C430O8802C436O8823C442O8843C448O8866C454O8888C460O8905C466O8921C472O8936C478O8961C484O8982C490O9002C496O9025C502O9047C508O9067C514O9088C520O9106C526O9128C532O9155C538O9171C544O9189C550O9206C556O9221C562O9236C568O9248C574O9266C580O9279C586O8493C591O9297,,
code-creation,Eval,10,144425,0x3ba13666df4,5, node:internal/streams/compose:1:1,0x3ba13666bc0,~
script-source,94,node:internal/streams/compose,'use strict';\x0d\n\x0d\nconst { pipeline } = require('internal/streams/pipeline');\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst { destroyer } = require('internal/streams/destroy');\x0d\nconst {\x0d\n  isNodeStream\x2C\x0d\n  isReadable\x2C\x0d\n  isWritable\x2C\x0d\n  isWebStream\x2C\x0d\n  isTransformStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isReadableStream\x2C\x0d\n} = require('internal/streams/utils');\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\n\x0d\nmodule.exports = function compose(...streams) {\x0d\n  if (streams.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('streams');\x0d\n  }\x0d\n\x0d\n  if (streams.length === 1) {\x0d\n    return Duplex.from(streams[0]);\x0d\n  }\x0d\n\x0d\n  const orgStreams = [...streams];\x0d\n\x0d\n  if (typeof streams[0] === 'function') {\x0d\n    streams[0] = Duplex.from(streams[0]);\x0d\n  }\x0d\n\x0d\n  if (typeof streams[streams.length - 1] === 'function') {\x0d\n    const idx = streams.length - 1;\x0d\n    streams[idx] = Duplex.from(streams[idx]);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < streams.length; ++n) {\x0d\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\x0d\n      // TODO(ronag): Add checks for non streams.\x0d\n      continue;\x0d\n    }\x0d\n    if (\x0d\n      n < streams.length - 1 &&\x0d\n      !(\x0d\n        isReadable(streams[n]) ||\x0d\n        isReadableStream(streams[n]) ||\x0d\n        isTransformStream(streams[n])\x0d\n      )\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        `streams[${n}]`\x2C\x0d\n        orgStreams[n]\x2C\x0d\n        'must be readable'\x2C\x0d\n      );\x0d\n    }\x0d\n    if (\x0d\n      n > 0 &&\x0d\n      !(\x0d\n        isWritable(streams[n]) ||\x0d\n        isWritableStream(streams[n]) ||\x0d\n        isTransformStream(streams[n])\x0d\n      )\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        `streams[${n}]`\x2C\x0d\n        orgStreams[n]\x2C\x0d\n        'must be writable'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n  let onfinish;\x0d\n  let onreadable;\x0d\n  let onclose;\x0d\n  let d;\x0d\n\x0d\n  function onfinished(err) {\x0d\n    const cb = onclose;\x0d\n    onclose = null;\x0d\n\x0d\n    if (cb) {\x0d\n      cb(err);\x0d\n    } else if (err) {\x0d\n      d.destroy(err);\x0d\n    } else if (!readable && !writable) {\x0d\n      d.destroy();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const head = streams[0];\x0d\n  const tail = pipeline(streams\x2C onfinished);\x0d\n\x0d\n  const writable = !!(\x0d\n    isWritable(head) ||\x0d\n    isWritableStream(head) ||\x0d\n    isTransformStream(head)\x0d\n  );\x0d\n  const readable = !!(\x0d\n    isReadable(tail) ||\x0d\n    isReadableStream(tail) ||\x0d\n    isTransformStream(tail)\x0d\n  );\x0d\n\x0d\n  // TODO(ronag): Avoid double buffering.\x0d\n  // Implement Writable/Readable/Duplex traits.\x0d\n  // See\x2C https://github.com/nodejs/node/pull/33515.\x0d\n  d = new Duplex({\x0d\n    // TODO (ronag): highWaterMark?\x0d\n    writableObjectMode: !!head?.writableObjectMode\x2C\x0d\n    readableObjectMode: !!tail?.readableObjectMode\x2C\x0d\n    writable\x2C\x0d\n    readable\x2C\x0d\n  });\x0d\n\x0d\n  if (writable) {\x0d\n    if (isNodeStream(head)) {\x0d\n      d._write = function(chunk\x2C encoding\x2C callback) {\x0d\n        if (head.write(chunk\x2C encoding)) {\x0d\n          callback();\x0d\n        } else {\x0d\n          ondrain = callback;\x0d\n        }\x0d\n      };\x0d\n\x0d\n      d._final = function(callback) {\x0d\n        head.end();\x0d\n        onfinish = callback;\x0d\n      };\x0d\n\x0d\n      head.on('drain'\x2C function() {\x0d\n        if (ondrain) {\x0d\n          const cb = ondrain;\x0d\n          ondrain = null;\x0d\n          cb();\x0d\n        }\x0d\n      });\x0d\n    } else if (isWebStream(head)) {\x0d\n      const writable = isTransformStream(head) ? head.writable : head;\x0d\n      const writer = writable.getWriter();\x0d\n\x0d\n      d._write = async function(chunk\x2C encoding\x2C callback) {\x0d\n        try {\x0d\n          await writer.ready;\x0d\n          writer.write(chunk).catch(() => {});\x0d\n          callback();\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n        }\x0d\n      };\x0d\n\x0d\n      d._final = async function(callback) {\x0d\n        try {\x0d\n          await writer.ready;\x0d\n          writer.close().catch(() => {});\x0d\n          onfinish = callback;\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const toRead = isTransformStream(tail) ? tail.readable : tail;\x0d\n\x0d\n    eos(toRead\x2C () => {\x0d\n      if (onfinish) {\x0d\n        const cb = onfinish;\x0d\n        onfinish = null;\x0d\n        cb();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (readable) {\x0d\n    if (isNodeStream(tail)) {\x0d\n      tail.on('readable'\x2C function() {\x0d\n        if (onreadable) {\x0d\n          const cb = onreadable;\x0d\n          onreadable = null;\x0d\n          cb();\x0d\n        }\x0d\n      });\x0d\n\x0d\n      tail.on('end'\x2C function() {\x0d\n        d.push(null);\x0d\n      });\x0d\n\x0d\n      d._read = function() {\x0d\n        while (true) {\x0d\n          const buf = tail.read();\x0d\n          if (buf === null) {\x0d\n            onreadable = d._read;\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (!d.push(buf)) {\x0d\n            return;\x0d\n          }\x0d\n        }\x0d\n      };\x0d\n    } else if (isWebStream(tail)) {\x0d\n      const readable = isTransformStream(tail) ? tail.readable : tail;\x0d\n      const reader = readable.getReader();\x0d\n      d._read = async function() {\x0d\n        while (true) {\x0d\n          try {\x0d\n            const { value\x2C done } = await reader.read();\x0d\n\x0d\n            if (!d.push(value)) {\x0d\n              return;\x0d\n            }\x0d\n\x0d\n            if (done) {\x0d\n              d.push(null);\x0d\n              return;\x0d\n            }\x0d\n          } catch {\x0d\n            return;\x0d\n          }\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n  }\x0d\n\x0d\n  d._destroy = function(err\x2C callback) {\x0d\n    if (!err && onclose !== null) {\x0d\n      err = new AbortError();\x0d\n    }\x0d\n\x0d\n    onreadable = null;\x0d\n    ondrain = null;\x0d\n    onfinish = null;\x0d\n\x0d\n    if (onclose === null) {\x0d\n      callback(err);\x0d\n    } else {\x0d\n      onclose = callback;\x0d\n      if (isNodeStream(tail)) {\x0d\n        destroyer(tail\x2C err);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  return d;\x0d\n};\x0d\n
code-source-info,0x3ba13666df4,94,0,5703,C0O0C4O5703,,
code-creation,JS,10,144665,0x3ba13666ff4,184, node:internal/streams/compose:1:1,0x3ba13666d68,~
code-source-info,0x3ba13666ff4,94,0,5703,C0O0C47O38C50O38C55O25C61O92C64O92C68O92C70O151C73O151C78O137C84O329C87O329C92O200C98O217C104O232C110O247C116O263C122O285C128O306C134O462C137O462C142O376C148O398C153O405C159O433C165O503C168O503C172O503C174O549C178O564C183O5702,,
code-creation,Eval,10,145008,0x3ba1366883c,5, node:internal/streams/pipeline:1:1,0x3ba13668478,~
script-source,95,node:internal/streams/pipeline,// Ported from https://github.com/mafintosh/pump with\x0d\n// permission from the author\x2C Mathias Buus (@mafintosh).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Promise\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst { once } = require('internal/util');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_RETURN_VALUE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_STREAM_DESTROYED\x2C\x0d\n    ERR_STREAM_PREMATURE_CLOSE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateAbortSignal\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isIterable\x2C\x0d\n  isReadable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isNodeStream\x2C\x0d\n  isTransformStream\x2C\x0d\n  isWebStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableFinished\x2C\x0d\n} = require('internal/streams/utils');\x0d\nconst { AbortController } = require('internal/abort_controller');\x0d\n\x0d\nlet PassThrough;\x0d\nlet Readable;\x0d\nlet addAbortListener;\x0d\n\x0d\nfunction destroyer(stream\x2C reading\x2C writing) {\x0d\n  let finished = false;\x0d\n  stream.on('close'\x2C () => {\x0d\n    finished = true;\x0d\n  });\x0d\n\x0d\n  const cleanup = eos(stream\x2C { readable: reading\x2C writable: writing }\x2C (err) => {\x0d\n    finished = !err;\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    destroy: (err) => {\x0d\n      if (finished) return;\x0d\n      finished = true;\x0d\n      destroyImpl.destroyer(stream\x2C err || new ERR_STREAM_DESTROYED('pipe'));\x0d\n    }\x2C\x0d\n    cleanup\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction popCallback(streams) {\x0d\n  // Streams should never be an empty array. It should always contain at least\x0d\n  // a single stream. Therefore optimize for the average case instead of\x0d\n  // checking for length === 0 as well.\x0d\n  validateFunction(streams[streams.length - 1]\x2C 'streams[stream.length - 1]');\x0d\n  return streams.pop();\x0d\n}\x0d\n\x0d\nfunction makeAsyncIterable(val) {\x0d\n  if (isIterable(val)) {\x0d\n    return val;\x0d\n  } else if (isReadableNodeStream(val)) {\x0d\n    // Legacy streams are not Iterable.\x0d\n    return fromReadable(val);\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable']\x2C val);\x0d\n}\x0d\n\x0d\nasync function* fromReadable(val) {\x0d\n  if (!Readable) {\x0d\n    Readable = require('internal/streams/readable');\x0d\n  }\x0d\n\x0d\n  yield* Readable.prototype[SymbolAsyncIterator].call(val);\x0d\n}\x0d\n\x0d\nasync function pumpToNode(iterable\x2C writable\x2C finish\x2C { end }) {\x0d\n  let error;\x0d\n  let onresolve = null;\x0d\n\x0d\n  const resume = (err) => {\x0d\n    if (err) {\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    if (onresolve) {\x0d\n      const callback = onresolve;\x0d\n      onresolve = null;\x0d\n      callback();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  const wait = () => new Promise((resolve\x2C reject) => {\x0d\n    if (error) {\x0d\n      reject(error);\x0d\n    } else {\x0d\n      onresolve = () => {\x0d\n        if (error) {\x0d\n          reject(error);\x0d\n        } else {\x0d\n          resolve();\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n  });\x0d\n\x0d\n  writable.on('drain'\x2C resume);\x0d\n  const cleanup = eos(writable\x2C { readable: false }\x2C resume);\x0d\n\x0d\n  try {\x0d\n    if (writable.writableNeedDrain) {\x0d\n      await wait();\x0d\n    }\x0d\n\x0d\n    for await (const chunk of iterable) {\x0d\n      if (!writable.write(chunk)) {\x0d\n        await wait();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end) {\x0d\n      writable.end();\x0d\n      await wait();\x0d\n    }\x0d\n\x0d\n    finish();\x0d\n  } catch (err) {\x0d\n    finish(error !== err ? aggregateTwoErrors(error\x2C err) : err);\x0d\n  } finally {\x0d\n    cleanup();\x0d\n    writable.off('drain'\x2C resume);\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function pumpToWeb(readable\x2C writable\x2C finish\x2C { end }) {\x0d\n  if (isTransformStream(writable)) {\x0d\n    writable = writable.writable;\x0d\n  }\x0d\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\x0d\n  const writer = writable.getWriter();\x0d\n  try {\x0d\n    for await (const chunk of readable) {\x0d\n      await writer.ready;\x0d\n      writer.write(chunk).catch(() => {});\x0d\n    }\x0d\n\x0d\n    await writer.ready;\x0d\n\x0d\n    if (end) {\x0d\n      await writer.close();\x0d\n    }\x0d\n\x0d\n    finish();\x0d\n  } catch (err) {\x0d\n    try {\x0d\n      await writer.abort(err);\x0d\n      finish(err);\x0d\n    } catch (err) {\x0d\n      finish(err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeline(...streams) {\x0d\n  return pipelineImpl(streams\x2C once(popCallback(streams)));\x0d\n}\x0d\n\x0d\nfunction pipelineImpl(streams\x2C callback\x2C opts) {\x0d\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\x0d\n    streams = streams[0];\x0d\n  }\x0d\n\x0d\n  if (streams.length < 2) {\x0d\n    throw new ERR_MISSING_ARGS('streams');\x0d\n  }\x0d\n\x0d\n  const ac = new AbortController();\x0d\n  const signal = ac.signal;\x0d\n  const outerSignal = opts?.signal;\x0d\n\x0d\n  // Need to cleanup event listeners if last stream is readable\x0d\n  // https://github.com/nodejs/node/issues/35452\x0d\n  const lastStreamCleanup = [];\x0d\n\x0d\n  validateAbortSignal(outerSignal\x2C 'options.signal');\x0d\n\x0d\n  function abort() {\x0d\n    finishImpl(new AbortError());\x0d\n  }\x0d\n\x0d\n  addAbortListener ??= require('events').addAbortListener;\x0d\n  let disposable;\x0d\n  if (outerSignal) {\x0d\n    disposable = addAbortListener(outerSignal\x2C abort);\x0d\n  }\x0d\n\x0d\n  let error;\x0d\n  let value;\x0d\n  const destroys = [];\x0d\n\x0d\n  let finishCount = 0;\x0d\n\x0d\n  function finish(err) {\x0d\n    finishImpl(err\x2C --finishCount === 0);\x0d\n  }\x0d\n\x0d\n  function finishImpl(err\x2C final) {\x0d\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    if (!error && !final) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    while (destroys.length) {\x0d\n      destroys.shift()(error);\x0d\n    }\x0d\n\x0d\n    disposable?.[SymbolDispose]();\x0d\n    ac.abort();\x0d\n\x0d\n    if (final) {\x0d\n      if (!error) {\x0d\n        lastStreamCleanup.forEach((fn) => fn());\x0d\n      }\x0d\n      process.nextTick(callback\x2C error\x2C value);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  for (let i = 0; i < streams.length; i++) {\x0d\n    const stream = streams[i];\x0d\n    const reading = i < streams.length - 1;\x0d\n    const writing = i > 0;\x0d\n    const end = reading || opts?.end !== false;\x0d\n    const isLastStream = i === streams.length - 1;\x0d\n\x0d\n    if (isNodeStream(stream)) {\x0d\n      if (end) {\x0d\n        const { destroy\x2C cleanup } = destroyer(stream\x2C reading\x2C writing);\x0d\n        destroys.push(destroy);\x0d\n\x0d\n        if (isReadable(stream) && isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // Catch stream errors that occur after pipe/pump has completed.\x0d\n      function onError(err) {\x0d\n        if (\x0d\n          err &&\x0d\n          err.name !== 'AbortError' &&\x0d\n          err.code !== 'ERR_STREAM_PREMATURE_CLOSE'\x0d\n        ) {\x0d\n          finish(err);\x0d\n        }\x0d\n      }\x0d\n      stream.on('error'\x2C onError);\x0d\n      if (isReadable(stream) && isLastStream) {\x0d\n        lastStreamCleanup.push(() => {\x0d\n          stream.removeListener('error'\x2C onError);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (i === 0) {\x0d\n      if (typeof stream === 'function') {\x0d\n        ret = stream({ signal });\x0d\n        if (!isIterable(ret)) {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'Iterable\x2C AsyncIterable or Stream'\x2C 'source'\x2C ret);\x0d\n        }\x0d\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\x0d\n        ret = stream;\x0d\n      } else {\x0d\n        ret = Duplex.from(stream);\x0d\n      }\x0d\n    } else if (typeof stream === 'function') {\x0d\n      if (isTransformStream(ret)) {\x0d\n        ret = makeAsyncIterable(ret?.readable);\x0d\n      } else {\x0d\n        ret = makeAsyncIterable(ret);\x0d\n      }\x0d\n      ret = stream(ret\x2C { signal });\x0d\n\x0d\n      if (reading) {\x0d\n        if (!isIterable(ret\x2C true)) {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'AsyncIterable'\x2C `transform[${i - 1}]`\x2C ret);\x0d\n        }\x0d\n      } else {\x0d\n        if (!PassThrough) {\x0d\n          PassThrough = require('internal/streams/passthrough');\x0d\n        }\x0d\n\x0d\n        // If the last argument to pipeline is not a stream\x0d\n        // we must create a proxy stream so that pipeline(...)\x0d\n        // always returns a stream which can be further\x0d\n        // composed through `.pipe(stream)`.\x0d\n\x0d\n        const pt = new PassThrough({\x0d\n          objectMode: true\x2C\x0d\n        });\x0d\n\x0d\n        // Handle Promises/A+ spec\x2C `then` could be a getter that throws on\x0d\n        // second use.\x0d\n        const then = ret?.then;\x0d\n        if (typeof then === 'function') {\x0d\n          finishCount++;\x0d\n          then.call(ret\x2C\x0d\n                    (val) => {\x0d\n                      value = val;\x0d\n                      if (val != null) {\x0d\n                        pt.write(val);\x0d\n                      }\x0d\n                      if (end) {\x0d\n                        pt.end();\x0d\n                      }\x0d\n                      process.nextTick(finish);\x0d\n                    }\x2C (err) => {\x0d\n                      pt.destroy(err);\x0d\n                      process.nextTick(finish\x2C err);\x0d\n                    }\x2C\x0d\n          );\x0d\n        } else if (isIterable(ret\x2C true)) {\x0d\n          finishCount++;\x0d\n          pumpToNode(ret\x2C pt\x2C finish\x2C { end });\x0d\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\x0d\n          const toRead = ret.readable || ret;\x0d\n          finishCount++;\x0d\n          pumpToNode(toRead\x2C pt\x2C finish\x2C { end });\x0d\n        } else {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'AsyncIterable or Promise'\x2C 'destination'\x2C ret);\x0d\n        }\x0d\n\x0d\n        ret = pt;\x0d\n\x0d\n        const { destroy\x2C cleanup } = destroyer(ret\x2C false\x2C true);\x0d\n        destroys.push(destroy);\x0d\n        if (isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      }\x0d\n    } else if (isNodeStream(stream)) {\x0d\n      if (isReadableNodeStream(ret)) {\x0d\n        finishCount += 2;\x0d\n        const cleanup = pipe(ret\x2C stream\x2C finish\x2C { end });\x0d\n        if (isReadable(stream) && isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\x0d\n        const toRead = ret.readable || ret;\x0d\n        finishCount++;\x0d\n        pumpToNode(toRead\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isIterable(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToNode(ret\x2C stream\x2C finish\x2C { end });\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\x0d\n      }\x0d\n      ret = stream;\x0d\n    } else if (isWebStream(stream)) {\x0d\n      if (isReadableNodeStream(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(makeAsyncIterable(ret)\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isReadableStream(ret) || isIterable(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(ret\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isTransformStream(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(ret.readable\x2C stream\x2C finish\x2C { end });\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\x0d\n      }\x0d\n      ret = stream;\x0d\n    } else {\x0d\n      ret = Duplex.from(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (signal?.aborted || outerSignal?.aborted) {\x0d\n    process.nextTick(abort);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction pipe(src\x2C dst\x2C finish\x2C { end }) {\x0d\n  let ended = false;\x0d\n  dst.on('close'\x2C () => {\x0d\n    if (!ended) {\x0d\n      // Finish if the destination closes before the source has completed.\x0d\n      finish(new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n  });\x0d\n\x0d\n  src.pipe(dst\x2C { end: false }); // If end is true we already will have a listener to end dst.\x0d\n\x0d\n  if (end) {\x0d\n    // Compat. Before node v10.12.0 stdio used to throw an error so\x0d\n    // pipe() did/does not end() stdio destinations.\x0d\n    // Now they allow it but "secretly" don't close the underlying fd.\x0d\n\x0d\n    function endFn() {\x0d\n      ended = true;\x0d\n      dst.end();\x0d\n    }\x0d\n\x0d\n    if (isReadableFinished(src)) { // End the destination if the source has already ended.\x0d\n      process.nextTick(endFn);\x0d\n    } else {\x0d\n      src.once('end'\x2C endFn);\x0d\n    }\x0d\n  } else {\x0d\n    finish();\x0d\n  }\x0d\n\x0d\n  eos(src\x2C { readable: true\x2C writable: false }\x2C (err) => {\x0d\n    const rState = src._readableState;\x0d\n    if (\x0d\n      err &&\x0d\n      err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\x0d\n      (rState && rState.ended && !rState.errored && !rState.errorEmitted)\x0d\n    ) {\x0d\n      // Some readable streams will emit 'close' before 'end'. However\x2C since\x0d\n      // this is on the readable side 'end' should still be emitted if the\x0d\n      // stream has been ended and no error emitted. This should be allowed in\x0d\n      // favor of backwards compatibility. Since the stream is piped to a\x0d\n      // destination this should not result in any observable difference.\x0d\n      // We don't need to check if this is a writable premature close since\x0d\n      // eos will only fail with premature close on the reading side for\x0d\n      // duplex streams.\x0d\n      src\x0d\n        .once('end'\x2C finish)\x0d\n        .once('error'\x2C finish);\x0d\n    } else {\x0d\n      finish(err);\x0d\n    }\x0d\n  });\x0d\n  return eos(dst\x2C { readable: false\x2C writable: true }\x2C finish);\x0d\n}\x0d\n\x0d\nmodule.exports = { pipelineImpl\x2C pipeline };\x0d\n
code-source-info,0x3ba1366883c,95,0,12793,C0O0C4O12793,,
code-creation,JS,10,145484,0x3ba13668dfc,421, node:internal/streams/pipeline:1:1,0x3ba136687b0,~
code-source-info,0x3ba13668dfc,95,0,12793,C0O0C153O144C159O161C165O173C171O197C177O245C183O245C187O245C189O306C195O306C200O297C206O353C212O353C216O353C218O406C224O406C228O406C230O653C236O653C241O454C247O484C252O491C258O518C264O549C270O572C276O599C282O636C288O742C294O742C299O695C305O716C311O944C317O944C322O788C328O803C334O818C340O843C346O860C352O882C358O898C364O919C370O1008C376O1008C381O988C387O1053C388O1053C390O1071C391O1071C393O1086C394O1086C396O12747C403O12766C409O12780C415O12762C420O12792,,
code-creation,Eval,10,145776,0x3ba1366a364,5, node:internal/streams/destroy:1:1,0x3ba1366a030,~
script-source,96,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  kIsDestroyed\x2C\x0d\n  isDestroyed\x2C\x0d\n  isFinished\x2C\x0d\n  isServerRequest\x2C\x0d\n  kState\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kEmitClose\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kConstructed\x2C\x0d\n  kDestroyed\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kErrored\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] & kDestroyed) !== 0) ||\x0d\n    (r && (r[kState] & kDestroyed) !== 0)\x0d\n  ) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w[kState] |= kDestroyed;\x0d\n  }\x0d\n  if (r) {\x0d\n    r[kState] |= kDestroyed;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if ((s[kState] & kConstructed) === 0) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w[kState] |= kClosed;\x0d\n    }\x0d\n    if (r) {\x0d\n      r[kState] |= kClosed;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    self._destroy(err || null\x2C onDestroy);\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w[kState] |= kCloseEmitted;\x0d\n  }\x0d\n  if (r) {\x0d\n    r[kState] |= kCloseEmitted;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] & kEmitClose) !== 0) ||\x0d\n    (r && (r[kState] & kEmitClose) !== 0)\x0d\n  ) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] & kErrorEmitted) !== 0) ||\x0d\n    (r && (r[kState] & kErrorEmitted) !== 0)\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w[kState] |= kErrorEmitted;\x0d\n  }\x0d\n  if (r) {\x0d\n    r[kState] |= kErrorEmitted;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = r.readable === false;\x0d\n    r.endEmitted = r.readable === false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.ended = w.writable === false;\x0d\n    w.ending = w.writable === false;\x0d\n    w.finished = w.writable === false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] ? (w[kState] & kDestroyed) !== 0 : w.destroyed)) ||\x0d\n    (r && (r[kState] ? (r[kState] & kDestroyed) !== 0 : r.destroyed))\x0d\n  ) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    (r && (r[kState] & kAutoDestroy) !== 0) ||\x0d\n    (w && (w[kState] & kAutoDestroy) !== 0)\x0d\n  ) {\x0d\n    stream.destroy(err);\x0d\n  } else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && (w[kState] & kErrored) === 0) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && (r[kState] & kErrored) === 0) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r[kState] &= ~kConstructed;\x0d\n  }\x0d\n  if (w) {\x0d\n    w[kState] &= ~kConstructed;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r[kState] |= kConstructed;\x0d\n    }\x0d\n    if (w) {\x0d\n      w[kState] |= kConstructed;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    stream._construct((err) => {\x0d\n      process.nextTick(onConstruct\x2C err);\x0d\n    });\x0d\n  } catch (err) {\x0d\n    process.nextTick(onConstruct\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream?.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\nfunction emitCloseLegacy(stream) {\x0d\n  stream.emit('close');\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseLegacy(stream\x2C err) {\x0d\n  stream.emit('error'\x2C err);\x0d\n  process.nextTick(emitCloseLegacy\x2C stream);\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream || isDestroyed(stream)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (!err && !isFinished(stream)) {\x0d\n    err = new AbortError();\x0d\n  }\x0d\n\x0d\n  // TODO: Remove isRequest branches.\x0d\n  if (isServerRequest(stream)) {\x0d\n    stream.socket = null;\x0d\n    stream.destroy(err);\x0d\n  } else if (isRequest(stream)) {\x0d\n    stream.abort();\x0d\n  } else if (isRequest(stream.req)) {\x0d\n    stream.req.abort();\x0d\n  } else if (typeof stream.destroy === 'function') {\x0d\n    stream.destroy(err);\x0d\n  } else if (typeof stream.close === 'function') {\x0d\n    // TODO: Don't lose err?\x0d\n    stream.close();\x0d\n  } else if (err) {\x0d\n    process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\x0d\n  } else {\x0d\n    process.nextTick(emitCloseLegacy\x2C stream);\x0d\n  }\x0d\n\x0d\n  if (!stream.destroyed) {\x0d\n    stream[kIsDestroyed] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x2C\x0d\n};\x0d\n
code-source-info,0x3ba1366a364,96,0,7801,C0O0C4O7801,,
code-creation,JS,10,146236,0x3ba1366ab4c,332, node:internal/streams/destroy:1:1,0x3ba1366a2d8,~
code-source-info,0x3ba1366ab4c,96,0,7801,C0O0C149O114C152O114C157O28C163O58C168O65C174O97C180O154C185O398C188O398C193O192C199O209C205O225C211O240C217O260C223O271C229O289C235O304C241O316C247O334C253O351C259O366C265O383C271O453C274O453C278O453C280O493C283O493C287O493C289O7704C296O7726C302O7740C308O7754C314O7766C320O7780C326O7719C331O7800,,
code-creation,Eval,10,146512,0x3ba1366bcbc,5, node:internal/streams/duplex:1:1,0x3ba1366bab8,~
script-source,97,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst { kOnConstructed } = require('internal/streams/utils');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  const keys = ObjectKeys(Writable.prototype);\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const method = keys[i];\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  this._events ??= {\x0d\n    close: undefined\x2C\x0d\n    error: undefined\x2C\x0d\n    prefinish: undefined\x2C\x0d\n    finish: undefined\x2C\x0d\n    drain: undefined\x2C\x0d\n    data: undefined\x2C\x0d\n    end: undefined\x2C\x0d\n    readable: undefined\x2C\x0d\n    // Skip uncommon events...\x0d\n    // pause: undefined\x2C\x0d\n    // resume: undefined\x2C\x0d\n    // pipe: undefined\x2C\x0d\n    // unpipe: undefined\x2C\x0d\n    // [destroyImpl.kConstruct]: undefined\x2C\x0d\n    // [destroyImpl.kDestroy]: undefined\x2C\x0d\n  };\x0d\n\x0d\n  this._readableState = new Readable.ReadableState(options\x2C this\x2C true);\x0d\n  this._writableState = new Writable.WritableState(options\x2C this\x2C true);\x0d\n\x0d\n  if (options) {\x0d\n    this.allowHalfOpen = options.allowHalfOpen !== false;\x0d\n\x0d\n    if (options.readable === false) {\x0d\n      this._readableState.readable = false;\x0d\n      this._readableState.ended = true;\x0d\n      this._readableState.endEmitted = true;\x0d\n    }\x0d\n\x0d\n    if (options.writable === false) {\x0d\n      this._writableState.writable = false;\x0d\n      this._writableState.ending = true;\x0d\n      this._writableState.ended = true;\x0d\n      this._writableState.finished = true;\x0d\n    }\x0d\n\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  } else {\x0d\n    this.allowHalfOpen = true;\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  if (this._construct != null) {\x0d\n    destroyImpl.construct(this\x2C () => {\x0d\n      this._readableState[kOnConstructed](this);\x0d\n      this._writableState[kOnConstructed](this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\x0d\n  writableHighWaterMark:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\x0d\n  writableObjectMode:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\x0d\n  writableBuffer:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\x0d\n  writableLength:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\x0d\n  writableFinished:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\x0d\n  writableCorked:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\x0d\n  writableEnded:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\x0d\n  writableNeedDrain:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nDuplex.fromWeb = function(pair\x2C options) {\x0d\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\x0d\n    pair\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nDuplex.toWeb = function(duplex) {\x0d\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\x0d\n};\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x3ba1366bcbc,97,0,6692,C0O0C4O6692,,
code-creation,JS,10,146785,0x3ba1366c3a4,679, node:internal/streams/duplex:1:1,0x3ba1366bc30,~
code-source-info,0x3ba1366c3a
code-creation,Eval,10,146981,0x3ba1366cf54,5, node:internal/streams/legacy:1:1,0x3ba1366cdd0,~
script-source,98,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x3ba1366cf54,98,0,3048,C0O0C4O3048,,
code-creation,JS,10,147107,0x3ba1366d1f4,106, node:internal/streams/legacy:1:1,0x3ba1366cec8,~
code-source-info,0x3ba1366d1f4,98,0,3048,C0O0C22O28C28O45C33O99C36O99C40O99C42O201C50O215C55O173C60O228C63O228C68O272C77O287C81O3001C88O3020C94O3028C100O3016C105O3047,,
code-creation,Eval,10,148154,0x3ba136731c4,5, node:internal/streams/readable:1:1,0x3ba13671d38,~
script-source,99,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  kState\x2C\x0d\n  // bitfields\x0d\n  kObjectMode\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kEmitClose\x2C\x0d\n  kDestroyed\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kErrored\x2C\x0d\n  kConstructed\x2C\x0d\n  kOnConstructed\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst FastBuffer = Buffer[SymbolSpecies];\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nconst kErroredValue = Symbol('kErroredValue');\x0d\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\x0d\nconst kDecoderValue = Symbol('kDecoderValue');\x0d\nconst kEncodingValue = Symbol('kEncodingValue');\x0d\n\x0d\nconst kEnded = 1 << 9;\x0d\nconst kEndEmitted = 1 << 10;\x0d\nconst kReading = 1 << 11;\x0d\nconst kSync = 1 << 12;\x0d\nconst kNeedReadable = 1 << 13;\x0d\nconst kEmittedReadable = 1 << 14;\x0d\nconst kReadableListening = 1 << 15;\x0d\nconst kResumeScheduled = 1 << 16;\x0d\nconst kMultiAwaitDrain = 1 << 17;\x0d\nconst kReadingMore = 1 << 18;\x0d\nconst kDataEmitted = 1 << 19;\x0d\nconst kDefaultUTF8Encoding = 1 << 20;\x0d\nconst kDecoder = 1 << 21;\x0d\nconst kEncoding = 1 << 22;\x0d\nconst kHasFlowing = 1 << 23;\x0d\nconst kFlowing = 1 << 24;\x0d\nconst kHasPaused = 1 << 25;\x0d\nconst kPaused = 1 << 26;\x0d\nconst kDataListening = 1 << 27;\x0d\n\x0d\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\x0d\nfunction makeBitMapDescriptor(bit) {\x0d\n  return {\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & bit) !== 0; }\x2C\x0d\n    set(value) {\x0d\n      if (value) this[kState] |= bit;\x0d\n      else this[kState] &= ~bit;\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\x0d\n  ended: makeBitMapDescriptor(kEnded)\x2C\x0d\n  endEmitted: makeBitMapDescriptor(kEndEmitted)\x2C\x0d\n  reading: makeBitMapDescriptor(kReading)\x2C\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  sync: makeBitMapDescriptor(kSync)\x2C\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  needReadable: makeBitMapDescriptor(kNeedReadable)\x2C\x0d\n  emittedReadable: makeBitMapDescriptor(kEmittedReadable)\x2C\x0d\n  readableListening: makeBitMapDescriptor(kReadableListening)\x2C\x0d\n  resumeScheduled: makeBitMapDescriptor(kResumeScheduled)\x2C\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\x0d\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\x0d\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\x0d\n  // Has it been destroyed.\x0d\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  closed: makeBitMapDescriptor(kClosed)\x2C\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\x0d\n  multiAwaitDrain: makeBitMapDescriptor(kMultiAwaitDrain)\x2C\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  readingMore: makeBitMapDescriptor(kReadingMore)\x2C\x0d\n  dataEmitted: makeBitMapDescriptor(kDataEmitted)\x2C\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kErroredValue] = value;\x0d\n        this[kState] |= kErrored;\x0d\n      } else {\x0d\n        this[kState] &= ~kErrored;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  defaultEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\x0d\n    set(value) {\x0d\n      if (value === 'utf8' || value === 'utf-8') {\x0d\n        this[kState] |= kDefaultUTF8Encoding;\x0d\n      } else {\x0d\n        this[kState] &= ~kDefaultUTF8Encoding;\x0d\n        this[kDefaultEncodingValue] = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  decoder: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kDecoder) !== 0 ? this[kDecoderValue] : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kDecoderValue] = value;\x0d\n        this[kState] |= kDecoder;\x0d\n      } else {\x0d\n        this[kState] &= ~kDecoder;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  encoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kEncoding) !== 0 ? this[kEncodingValue] : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kEncodingValue] = value;\x0d\n        this[kState] |= kEncoding;\x0d\n      } else {\x0d\n        this[kState] &= ~kEncoding;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  flowing: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kHasFlowing) !== 0 ? (this[kState] & kFlowing) !== 0 : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value == null) {\x0d\n        this[kState] &= ~(kHasFlowing | kFlowing);\x0d\n      } else if (value) {\x0d\n        this[kState] |= (kHasFlowing | kFlowing);\x0d\n      } else {\x0d\n        this[kState] |= kHasFlowing;\x0d\n        this[kState] &= ~kFlowing;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Bit map field to store ReadableState more effciently with 1 bit per field\x0d\n  // instead of a V8 slot per field.\x0d\n  this[kState] = kEmitClose | kAutoDestroy | kConstructed | kSync;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  if (options && options.objectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  if (isDuplex && options && options.readableObjectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  this.buffer = [];\x0d\n  this.bufferIndex = 0;\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  const defaultEncoding = options?.defaultEncoding;\x0d\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\x0d\n    this[kState] |= kDefaultUTF8Encoding;\x0d\n  } else if (Buffer.isEncoding(defaultEncoding)) {\x0d\n    this.defaultEncoding = defaultEncoding;\x0d\n  } else {\x0d\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\x0d\n  }\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\nReadableState.prototype[kOnConstructed] = function onConstructed(stream) {\x0d\n  if ((this[kState] & kNeedReadable) !== 0) {\x0d\n    maybeReadMore(stream\x2C this);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  this._events ??= {\x0d\n    close: undefined\x2C\x0d\n    error: undefined\x2C\x0d\n    data: undefined\x2C\x0d\n    end: undefined\x2C\x0d\n    readable: undefined\x2C\x0d\n    // Skip uncommon events...\x0d\n    // pause: undefined\x2C\x0d\n    // resume: undefined\x2C\x0d\n    // pipe: undefined\x2C\x0d\n    // unpipe: undefined\x2C\x0d\n    // [destroyImpl.kConstruct]: undefined\x2C\x0d\n    // [destroyImpl.kDestroy]: undefined\x2C\x0d\n  };\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C false);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  if (this._construct != null) {\x0d\n    destroyImpl.construct(this\x2C () => {\x0d\n      this._readableState[kOnConstructed](this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncDispose] = function() {\x0d\n  let error;\x0d\n  if (!this.destroyed) {\x0d\n    error = this.readableEnded ? null : new AbortError();\x0d\n    this.destroy(error);\x0d\n  }\x0d\n  return new Promise((resolve\x2C reject) => eos(this\x2C (err) => (err && err !== error ? reject(err) : resolve(null))));\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  debug('push'\x2C chunk);\x0d\n\x0d\n  const state = this._readableState;\x0d\n  return (state[kState] & kObjectMode) === 0 ?\x0d\n    readableAddChunkPushByteMode(this\x2C state\x2C chunk\x2C encoding) :\x0d\n    readableAddChunkPushObjectMode(this\x2C state\x2C chunk\x2C encoding);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  debug('unshift'\x2C chunk);\x0d\n  const state = this._readableState;\x0d\n  return (state[kState] & kObjectMode) === 0 ?\x0d\n    readableAddChunkUnshiftByteMode(this\x2C state\x2C chunk\x2C encoding) :\x0d\n    readableAddChunkUnshiftObjectMode(this\x2C state\x2C chunk);\x0d\n};\x0d\n\x0d\n\x0d\nfunction readableAddChunkUnshiftByteMode(stream\x2C state\x2C chunk\x2C encoding) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (typeof chunk === 'string') {\x0d\n    encoding = encoding || state.defaultEncoding;\x0d\n    if (state.encoding !== encoding) {\x0d\n      if (state.encoding) {\x0d\n        // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n        // the string in the BufferList with the state encoding.\x0d\n        chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n      } else {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n      }\x0d\n    }\x0d\n  } else if (Stream._isUint8Array(chunk)) {\x0d\n    chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n  } else if (chunk !== undefined && !(chunk instanceof Buffer)) {\x0d\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\x0d\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk));\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (!(chunk && chunk.length > 0)) {\x0d\n    return canPushMore(state);\x0d\n  }\x0d\n\x0d\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkUnshiftObjectMode(stream\x2C state\x2C chunk) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkUnshiftValue(stream\x2C state\x2C chunk) {\x0d\n  if ((state[kState] & kEndEmitted) !== 0)\x0d\n    errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n  else if ((state[kState] & (kDestroyed | kErrored)) !== 0)\x0d\n    return false;\x0d\n  else\x0d\n    addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n\x0d\n  return canPushMore(state);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkPushByteMode(stream\x2C state\x2C chunk\x2C encoding) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (typeof chunk === 'string') {\x0d\n    encoding = encoding || state.defaultEncoding;\x0d\n    if (state.encoding !== encoding) {\x0d\n      chunk = Buffer.from(chunk\x2C encoding);\x0d\n      encoding = '';\x0d\n    }\x0d\n  } else if (chunk instanceof Buffer) {\x0d\n    encoding = '';\x0d\n  } else if (Stream._isUint8Array(chunk)) {\x0d\n    chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n    encoding = '';\x0d\n  } else if (chunk !== undefined) {\x0d\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\x0d\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk));\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (!chunk || chunk.length <= 0) {\x0d\n    state[kState] &= ~kReading;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n\x0d\n    return canPushMore(state);\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kEnded) !== 0) {\x0d\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  state[kState] &= ~kReading;\x0d\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\x0d\n    chunk = state[kDecoderValue].write(chunk);\x0d\n    if (chunk.length === 0) {\x0d\n      maybeReadMore(stream\x2C state);\x0d\n      return canPushMore(state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n  return canPushMore(state);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkPushObjectMode(stream\x2C state\x2C chunk\x2C encoding) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kEnded) !== 0) {\x0d\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  state[kState] &= ~kReading;\x0d\n\x0d\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\x0d\n    chunk = state[kDecoderValue].write(chunk);\x0d\n  }\x0d\n\x0d\n  addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n  return canPushMore(state);\x0d\n}\x0d\n\x0d\nfunction canPushMore(state) {\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return (state[kState] & kEnded) === 0 &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if ((state[kState] & (kFlowing | kSync | kDataListening)) === (kFlowing | kDataListening) && state.length === 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n\x0d\n    state[kState] |= kDataEmitted;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n    if (addToFront) {\x0d\n      if (state.bufferIndex > 0) {\x0d\n        state.buffer[--state.bufferIndex] = chunk;\x0d\n      } else {\x0d\n        state.buffer.unshift(chunk); // Slow path\x0d\n      }\x0d\n    } else {\x0d\n      state.buffer.push(chunk);\x0d\n    }\x0d\n\x0d\n    if ((state[kState] & kNeedReadable) !== 0)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return (state[kState] & kPaused) !== 0 || (state[kState] & (kHasFlowing | kFlowing)) === kHasFlowing;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const state = this._readableState;\x0d\n\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  state.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  state.encoding = state.decoder.encoding;\x0d\n\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of state.buffer.slice(state.bufferIndex)) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  state.buffer.length = 0;\x0d\n  state.bufferIndex = 0;\x0d\n\x0d\n  if (content !== '')\x0d\n    state.buffer.push(content);\x0d\n  state.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n > MAX_HWM) {\x0d\n    throw new ERR_OUT_OF_RANGE('size'\x2C '<= 1GiB'\x2C n);\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && (state[kState] & kEnded) !== 0))\x0d\n    return 0;\x0d\n  if ((state[kState] & kObjectMode) !== 0)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if ((state[kState] & kFlowing) !== 0 && state.length)\x0d\n      return state.buffer[state.bufferIndex].length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return (state[kState] & kEnded) !== 0 ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state[kState] &= ~kEmittedReadable;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      (state[kState] & kNeedReadable) !== 0 &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       (state[kState] & kEnded) !== 0)) {\x0d\n    debug('read: emitReadable');\x0d\n    if (state.length === 0 && (state[kState] & kEnded) !== 0)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && (state[kState] & kEnded) !== 0) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = (state[kState] & kNeedReadable) !== 0;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if ((state[kState] & (kReading | kEnded | kDestroyed | kErrored | kConstructed)) !== kConstructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state[kState] |= kReading | kSync;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state[kState] |= kNeedReadable;\x0d\n\x0d\n    // Call internal read method\x0d\n    try {\x0d\n      this._read(state.highWaterMark);\x0d\n    } catch (err) {\x0d\n      errorOrDestroy(this\x2C err);\x0d\n    }\x0d\n    state[kState] &= ~kSync;\x0d\n\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if ((state[kState] & kReading) === 0)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state[kState] |= state.length <= state.highWaterMark ? kNeedReadable : 0;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if ((state[kState] & kEnded) === 0)\x0d\n      state[kState] |= kNeedReadable;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && (state[kState] & kEnded) !== 0)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null && (state[kState] & (kErrorEmitted | kCloseEmitted)) === 0) {\x0d\n    state[kState] |= kDataEmitted;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if ((state[kState] & kEnded) !== 0) return;\x0d\n  const decoder = (state[kState] & kDecoder) !== 0 ? state[kDecoderValue] : null;\x0d\n  if (decoder) {\x0d\n    const chunk = decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state[kState] |= kEnded;\x0d\n\x0d\n  if ((state[kState] & kSync) !== 0) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state[kState] &= ~kNeedReadable;\x0d\n    state[kState] |= kEmittedReadable;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable');\x0d\n  state[kState] &= ~kNeedReadable;\x0d\n  if ((state[kState] & kEmittedReadable) === 0) {\x0d\n    debug('emitReadable'\x2C (state[kState] & kFlowing) !== 0);\x0d\n    state[kState] |= kEmittedReadable;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_');\x0d\n  if ((state[kState] & (kDestroyed | kErrored)) === 0 && (state.length || (state[kState] & kEnded) !== 0)) {\x0d\n    stream.emit('readable');\x0d\n    state[kState] &= ~kEmittedReadable;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state[kState] |=\x0d\n    (state[kState] & (kFlowing | kEnded)) === 0 &&\x0d\n    state.length <= state.highWaterMark ? kNeedReadable : 0;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if ((state[kState] & (kReadingMore | kConstructed)) === kConstructed) {\x0d\n    state[kState] |= kReadingMore;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while ((state[kState] & (kReading | kEnded)) === 0 &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          ((state[kState] & kFlowing) !== 0 && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state[kState] &= ~kReadingMore;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if ((state[kState] & kMultiAwaitDrain) === 0) {\x0d\n      state[kState] |= kMultiAwaitDrain;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if ((state[kState] & kEndEmitted) !== 0)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state[kState] &= ~kMultiAwaitDrain;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (dest.listenerCount('error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    pause();\x0d\n  } else if ((state[kState] & kFlowing) === 0) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if ((state[kState] & kMultiAwaitDrain) !== 0) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      (state[kState] & kDataListening) !== 0) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    state[kState] |= kDataListening;\x0d\n\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state[kState] |= this.listenerCount('readable') > 0 ? kReadableListening : 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\x0d\n      this.resume();\x0d\n    }\x0d\n  } else if (ev === 'readable') {\x0d\n    if ((state[kState] & (kEndEmitted | kReadableListening)) === 0) {\x0d\n      state[kState] |= kReadableListening | kNeedReadable | kHasFlowing;\x0d\n      state[kState] &= ~(kFlowing | kEmittedReadable);\x0d\n      debug('on readable');\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if ((state[kState] & kReading) === 0) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const state = this._readableState;\x0d\n\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  } else if (ev === 'data' && this.listenerCount('data') === 0) {\x0d\n    state[kState] &= ~kDataListening;\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n\x0d\n  if (self.listenerCount('readable') > 0) {\x0d\n    state[kState] |= kReadableListening;\x0d\n  } else {\x0d\n    state[kState] &= ~kReadableListening;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & (kHasPaused | kPaused | kResumeScheduled)) === (kHasPaused | kResumeScheduled)) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state[kState] |= kHasFlowing | kFlowing;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if ((state[kState] & kDataListening) !== 0) {\x0d\n    self.resume();\x0d\n  } else if ((state[kState] & kReadableListening) === 0) {\x0d\n    state[kState] &= ~(kHasFlowing | kFlowing);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if ((state[kState] & kFlowing) === 0) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state[kState] |= kHasFlowing;\x0d\n    if ((state[kState] & kReadableListening) === 0) {\x0d\n      state[kState] |= kFlowing;\x0d\n    } else {\x0d\n      state[kState] &= ~kFlowing;\x0d\n    }\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kState] |= kHasPaused;\x0d\n  state[kState] &= ~kPaused;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if ((state[kState] & kResumeScheduled) === 0) {\x0d\n    state[kState] |= kResumeScheduled;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C (state[kState] & kReading) !== 0);\x0d\n  if ((state[kState] & kReading) === 0) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state[kState] &= ~kResumeScheduled;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if ((state[kState] & (kFlowing | kReading)) === kFlowing)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  const state = this._readableState;\x0d\n  debug('call pause');\x0d\n  if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\x0d\n    debug('pause');\x0d\n    state[kState] |= kHasFlowing;\x0d\n    state[kState] &= ~kFlowing;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  state[kState] |= kHasPaused | kPaused;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow');\x0d\n  while ((state[kState] & kFlowing) !== 0 && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stream.on('readable'\x2C next);\x0d\n\x0d\n  let error;\x0d\n  const cleanup = eos(stream\x2C { writable: false }\x2C (err) => {\x0d\n    error = err ? aggregateTwoErrors(error\x2C err) : null;\x0d\n    callback();\x0d\n    callback = nop;\x0d\n  });\x0d\n\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (error) {\x0d\n        throw error;\x0d\n      } else if (error === null) {\x0d\n        return;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    error = aggregateTwoErrors(error\x2C err);\x0d\n    throw error;\x0d\n  } finally {\x0d\n    if (\x0d\n      (error || options?.destroyOnReturn !== false) &&\x0d\n      (error === undefined || stream._readableState.autoDestroy)\x0d\n    ) {\x0d\n      destroyImpl.destroyer(stream\x2C null);\x0d\n    } else {\x0d\n      stream.off('readable'\x2C next);\x0d\n      cleanup();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.errored : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  closed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.closed : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kPaused) !== 0;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kState] |= kHasPaused;\x0d\n      if (value) {\x0d\n        this[kState] |= kPaused;\x0d\n      } else {\x0d\n        this[kState] &= ~kPaused;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let idx = state.bufferIndex;\x0d\n  let ret;\x0d\n\x0d\n  const buf = state.buffer;\x0d\n  const len = buf.length;\x0d\n\x0d\n  if ((state[kState] & kObjectMode) !== 0) {\x0d\n    ret = buf[idx];\x0d\n    buf[idx++] = null;\x0d\n  } else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if ((state[kState] & kDecoder) !== 0) {\x0d\n      ret = '';\x0d\n      while (idx < len) {\x0d\n        ret += buf[idx];\x0d\n        buf[idx++] = null;\x0d\n      }\x0d\n    } else if (len - idx === 0) {\x0d\n      ret = Buffer.alloc(0);\x0d\n    } else if (len - idx === 1) {\x0d\n      ret = buf[idx];\x0d\n      buf[idx++] = null;\x0d\n    } else {\x0d\n      ret = Buffer.allocUnsafe(state.length);\x0d\n\x0d\n      let i = 0;\x0d\n      while (idx < len) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf[idx]\x2C i);\x0d\n        i += buf[idx].length;\x0d\n        buf[idx++] = null;\x0d\n      }\x0d\n    }\x0d\n  } else if (n < buf[idx].length) {\x0d\n    // `slice` is the same for buffers and strings.\x0d\n    ret = buf[idx].slice(0\x2C n);\x0d\n    buf[idx] = buf[idx].slice(n);\x0d\n  } else if (n === buf[idx].length) {\x0d\n    // First chunk is a perfect match.\x0d\n    ret = buf[idx];\x0d\n    buf[idx++] = null;\x0d\n  } else if ((state[kState] & kDecoder) !== 0) {\x0d\n    ret = '';\x0d\n    while (idx < len) {\x0d\n      const str = buf[idx];\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n        buf[idx++] = null;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          ret += str;\x0d\n          buf[idx++] = null;\x0d\n        } else {\x0d\n          ret += str.slice(0\x2C n);\x0d\n          buf[idx] = str.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    ret = Buffer.allocUnsafe(n);\x0d\n\x0d\n    const retLen = n;\x0d\n    while (idx < len) {\x0d\n      const data = buf[idx];\x0d\n      if (n > data.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\x0d\n        n -= data.length;\x0d\n        buf[idx++] = null;\x0d\n      } else {\x0d\n        if (n === data.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\x0d\n          buf[idx++] = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C new FastBuffer(data.buffer\x2C data.byteOffset\x2C n)\x2C retLen - n);\x0d\n          buf[idx] = new FastBuffer(data.buffer\x2C data.byteOffset + n\x2C data.length - n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (idx === len) {\x0d\n    state.buffer.length = 0;\x0d\n    state.bufferIndex = 0;\x0d\n  } else if (idx > 1024) {\x0d\n    state.buffer.splice(0\x2C idx);\x0d\n    state.bufferIndex = 0;\x0d\n  } else {\x0d\n    state.bufferIndex = idx;\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable');\x0d\n  if ((state[kState] & kEndEmitted) === 0) {\x0d\n    state[kState] |= kEnded;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT');\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if ((state[kState] & (kErrored | kCloseEmitted | kEndEmitted)) === 0 && state.length === 0) {\x0d\n    state[kState] |= kEndEmitted;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nReadable.fromWeb = function(readableStream\x2C options) {\x0d\n  return lazyWebStreams().newStreamReadableFromReadableStream(\x0d\n    readableStream\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nReadable.toWeb = function(streamReadable\x2C options) {\x0d\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\x0d\n    streamReadable\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x2C\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x3ba136731c4,99,0,53051,C0O0C4O53051,,
code-creation,JS,10,150257,0x3ba13676784,2570, node:internal/streams/readable:1:1,0x3ba13673138,~
code-source-info,0x3ba
tick,0x7ff64c29b523,150806,0,0x0,0,0x3ba1367695a,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3ba1366c402,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3ba13668edc,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3ba13667026,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3ba13659abf,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3ba13657201,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3ba13654049,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3ba13647ae2,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3c57027ea7b,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3c57027a6a6,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3c570278551,0x7ff62c4c3fb7,0x3c570278010,0x3c570277c4c,0x121eb1236af,0x3c570277a41,0x3c5702778bc,0x3c57027583f,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x121eb1231d1,0x121eb121c0e,0x121eb1219b3,0x121eb1183ae,0x33d09cbfb17,0x33d09cbdd94,0x33d09cbd82a
code-creation,Eval,10,151077,0x3ba136785dc,5, node:internal/streams/add-abort-signal:1:1,0x3ba136783d8,~
script-source,100,node:internal/streams/add-abort-signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n  kControllerErrorFunction\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst { ERR_INVALID_ARG_TYPE } = codes;\x0d\nlet addAbortListener;\x0d\n\x0d\n// This method is inlined here for readable-stream\x0d\n// It also does not allow for signal to not exist on the stream\x0d\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\x0d\nconst validateAbortSignal = (signal\x2C name) => {\x0d\n  if (typeof signal !== 'object' ||\x0d\n       !('aborted' in signal)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n};\x0d\n\x0d\nmodule.exports.addAbortSignal = function addAbortSignal(signal\x2C stream) {\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\x0d\n  }\x0d\n  return module.exports.addAbortSignalNoValidate(signal\x2C stream);\x0d\n};\x0d\n\x0d\nmodule.exports.addAbortSignalNoValidate = function(signal\x2C stream) {\x0d\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\x0d\n    return stream;\x0d\n  }\x0d\n  const onAbort = isNodeStream(stream) ?\x0d\n    () => {\x0d\n      stream.destroy(new AbortError(undefined\x2C { cause: signal.reason }));\x0d\n    } :\x0d\n    () => {\x0d\n      stream[kControllerErrorFunction](new AbortError(undefined\x2C { cause: signal.reason }));\x0d\n    };\x0d\n  if (signal.aborted) {\x0d\n    onAbort();\x0d\n  } else {\x0d\n    addAbortListener ??= require('events').addAbortListener;\x0d\n    const disposable = addAbortListener(signal\x2C onAbort);\x0d\n    eos(stream\x2C disposable[SymbolDispose]);\x0d\n  }\x0d\n  return stream;\x0d\n};\x0d\n
code-source-info,0x3ba136785dc,100,0,1763,C0O0C4O1763,,
code-creation,JS,10,151226,0x3ba13678864,158, node:internal/streams/add-abort-signal:1:1,0x3ba13678550,~
code-source-info,0x3ba13678864,100,0,1763,C0O0C40O28C46O102C52O102C57O75C63O90C68O208C74O208C79O144C85O161C91O177C97O258C103O258C107O258C109O310C115O347C116O347C118O581C122O581C124O750C127O757C136O780C140O1104C143O1111C152O1144C157O1762,,
code-creation,Eval,10,151534,0x3ba136790b4,5, node:internal/streams/state:1:1,0x3ba13678ee0,~
script-source,101,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\nconst { validateInteger } = require('internal/validators');\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nlet defaultHighWaterMarkBytes = 16 * 1024;\x0d\nlet defaultHighWaterMarkObjectMode = 16;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? defaultHighWaterMarkObjectMode : defaultHighWaterMarkBytes;\x0d\n}\x0d\n\x0d\nfunction setDefaultHighWaterMark(objectMode\x2C value) {\x0d\n  validateInteger(value\x2C 'value'\x2C 0);\x0d\n  if (objectMode) {\x0d\n    defaultHighWaterMarkObjectMode = value;\x0d\n  } else {\x0d\n    defaultHighWaterMarkBytes = value;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n  setDefaultHighWaterMark\x2C\x0d\n};\x0d\n
code-source-info,0x3ba136790b4,101,0,1382,C0O0C4O1382,,
code-creation,JS,10,151684,0x3ba1367935c,131, node:internal/streams/state:1:1,0x3ba13679028,~
code-source-info,0x3ba1367935c,101,0,1382,C0O0C45O28C51O42C57O106C60O106C65O86C71O175C74O175C79O201C84O149C90O244C94O244C96O293C98O293C100O1281C107O1303C113O1324C119O1352C125O1296C130O1381,,
code-creation,JS,10,151816,0x3ba13679664,5,get node:buffer:285:6,0x22671c8e368,~
code-source-info,0x3ba13679664,24,8526,8551,C0O8531C4O8549,,
code-creation,Eval,10,151975,0x3ba13679ffc,5, node:string_decoder:1:1,0x3ba13679d78,~
script-source,102,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  kIncompleteCharactersStart\x2C\x0d\n  kIncompleteCharactersEnd\x2C\x0d\n  kMissingBytes\x2C\x0d\n  kBufferedBytes\x2C\x0d\n  kEncodingField\x2C\x0d\n  kSize\x2C\x0d\n  decode\x2C\x0d\n  flush\x2C\x0d\n  encodings\x2C\x0d\n} = internalBinding('string_decoder');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst isEncoding = Buffer[internalUtil.kIsEncodingSymbol];\x0d\n\x0d\nconst kNativeDecoder = Symbol('kNativeDecoder');\x0d\n\x0d\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\x0d\n// modules monkey-patch it to support additional encodings\x0d\n/**\x0d\n * Normalize encoding notation\x0d\n * @param {string} enc\x0d\n * @returns {"utf8" | "utf16le" | "hex" | "ascii"\x0d\n *           | "base64" | "latin1" | "base64url"}\x0d\n * @throws {TypeError} Throws an error when encoding is invalid\x0d\n */\x0d\nfunction normalizeEncoding(enc) {\x0d\n  const nenc = internalUtil.normalizeEncoding(enc);\x0d\n  if (nenc === undefined) {\x0d\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\x0d\n      throw new ERR_UNKNOWN_ENCODING(enc);\x0d\n    return enc;\x0d\n  }\x0d\n  return nenc;\x0d\n}\x0d\n\x0d\nconst encodingsMap = {};\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\n/**\x0d\n * StringDecoder provides an interface for efficiently splitting a series of\x0d\n * buffers into a series of JS strings without breaking apart multi-byte\x0d\n * characters.\x0d\n * @param {string} [encoding=utf-8]\x0d\n */\x0d\nfunction StringDecoder(encoding) {\x0d\n  this.encoding = normalizeEncoding(encoding);\x0d\n  this[kNativeDecoder] = Buffer.alloc(kSize);\x0d\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\x0d\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @returns {string}\x0d\n * @throws {TypeError} Throws when buf is not in one of supported types\x0d\n */\x0d\nStringDecoder.prototype.write = function write(buf) {\x0d\n  if (typeof buf === 'string')\x0d\n    return buf;\x0d\n  if (!ArrayBufferIsView(buf))\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buf);\x0d\n  if (!this[kNativeDecoder]) {\x0d\n    throw new ERR_INVALID_THIS('StringDecoder');\x0d\n  }\x0d\n  return decode(this[kNativeDecoder]\x2C buf);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns any remaining input stored in the internal buffer as a string.\x0d\n * After end() is called\x2C the stringDecoder object can be reused for new\x0d\n * input.\x0d\n * @param {string | Buffer | TypedArray | DataView} [buf]\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.end = function end(buf) {\x0d\n  let ret = '';\x0d\n  if (buf !== undefined)\x0d\n    ret = this.write(buf);\x0d\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\x0d\n    ret += flush(this[kNativeDecoder]);\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n/* Everything below this line is undocumented legacy stuff. */\x0d\n/**\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @param {number} offset\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.text = function text(buf\x2C offset) {\x0d\n  this[kNativeDecoder][kMissingBytes] = 0;\x0d\n  this[kNativeDecoder][kBufferedBytes] = 0;\x0d\n  return this.write(buf.slice(offset));\x0d\n};\x0d\n\x0d\nObjectDefineProperties(StringDecoder.prototype\x2C {\x0d\n  lastChar: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\x0d\n                                         kIncompleteCharactersStart\x2C\x0d\n                                         kIncompleteCharactersEnd);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  lastNeed: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kMissingBytes];\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  lastTotal: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kBufferedBytes] +\x0d\n             this[kNativeDecoder][kMissingBytes];\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nexports.StringDecoder = StringDecoder;\x0d\n
code-source-info,0x3ba13679ffc,102,0,5380,C0O0C4O5380,,
code-creation,JS,10,152173,0x3ba1367a5cc,388, node:string_decoder:1:1,0x3ba13679f70,~
code-source-info,0x3ba1367a5cc
code-creation,Eval,10,152419,0x3ba1367bc0c,5, node:internal/streams/from:1:1,0x3ba1367ba48,~
script-source,103,node:internal/streams/from,'use strict';\x0d\n\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nfunction from(Readable\x2C iterable\x2C opts) {\x0d\n  let iterator;\x0d\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\x0d\n    return new Readable({\x0d\n      objectMode: true\x2C\x0d\n      ...opts\x2C\x0d\n      read() {\x0d\n        this.push(iterable);\x0d\n        this.push(null);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  let isAsync;\x0d\n  if (iterable && iterable[SymbolAsyncIterator]) {\x0d\n    isAsync = true;\x0d\n    iterator = iterable[SymbolAsyncIterator]();\x0d\n  } else if (iterable && iterable[SymbolIterator]) {\x0d\n    isAsync = false;\x0d\n    iterator = iterable[SymbolIterator]();\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('iterable'\x2C ['Iterable']\x2C iterable);\x0d\n  }\x0d\n\x0d\n\x0d\n  const readable = new Readable({\x0d\n    objectMode: true\x2C\x0d\n    highWaterMark: 1\x2C\x0d\n    // TODO(ronag): What options should be allowed?\x0d\n    ...opts\x2C\x0d\n  });\x0d\n\x0d\n  // Flag to protect against _read\x0d\n  // being called before last iteration completion.\x0d\n  let reading = false;\x0d\n  let isAsyncValues = false;\x0d\n\x0d\n  readable._read = function() {\x0d\n    if (!reading) {\x0d\n      reading = true;\x0d\n\x0d\n      if (isAsync) {\x0d\n        nextAsync();\x0d\n      } else if (isAsyncValues) {\x0d\n        nextSyncWithAsyncValues();\x0d\n      } else {\x0d\n        nextSyncWithSyncValues();\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  readable._destroy = function(error\x2C cb) {\x0d\n    PromisePrototypeThen(\x0d\n      close(error)\x2C\x0d\n      () => process.nextTick(cb\x2C error)\x2C // nextTick is here in case cb throws\x0d\n      (e) => process.nextTick(cb\x2C e || error)\x2C\x0d\n    );\x0d\n  };\x0d\n\x0d\n  async function close(error) {\x0d\n    const hadError = (error !== undefined) && (error !== null);\x0d\n    const hasThrow = typeof iterator.throw === 'function';\x0d\n    if (hadError && hasThrow) {\x0d\n      const { value\x2C done } = await iterator.throw(error);\x0d\n      await value;\x0d\n      if (done) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n    if (typeof iterator.return === 'function') {\x0d\n      const { value } = await iterator.return();\x0d\n      await value;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // There are a lot of duplication here\x2C it's done on purpose for performance\x0d\n  // reasons - avoid await when not needed.\x0d\n\x0d\n  function nextSyncWithSyncValues() {\x0d\n    for (;;) {\x0d\n      try {\x0d\n        const { value\x2C done } = iterator.next();\x0d\n\x0d\n        if (done) {\x0d\n          readable.push(null);\x0d\n          return;\x0d\n        }\x0d\n\x0d\n        if (value &&\x0d\n          typeof value.then === 'function') {\x0d\n          return changeToAsyncValues(value);\x0d\n        }\x0d\n\x0d\n        if (value === null) {\x0d\n          reading = false;\x0d\n          throw new ERR_STREAM_NULL_VALUES();\x0d\n        }\x0d\n\x0d\n        if (readable.push(value)) {\x0d\n          continue;\x0d\n        }\x0d\n\x0d\n        reading = false;\x0d\n      } catch (err) {\x0d\n        readable.destroy(err);\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async function changeToAsyncValues(value) {\x0d\n    isAsyncValues = true;\x0d\n\x0d\n    try {\x0d\n      const res = await value;\x0d\n\x0d\n      if (res === null) {\x0d\n        reading = false;\x0d\n        throw new ERR_STREAM_NULL_VALUES();\x0d\n      }\x0d\n\x0d\n      if (readable.push(res)) {\x0d\n        nextSyncWithAsyncValues();\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      reading = false;\x0d\n    } catch (err) {\x0d\n      readable.destroy(err);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async function nextSyncWithAsyncValues() {\x0d\n    for (;;) {\x0d\n      try {\x0d\n        const { value\x2C done } = iterator.next();\x0d\n\x0d\n        if (done) {\x0d\n          readable.push(null);\x0d\n          return;\x0d\n        }\x0d\n\x0d\n        const res = (value &&\x0d\n          typeof value.then === 'function') ?\x0d\n          await value :\x0d\n          value;\x0d\n\x0d\n        if (res === null) {\x0d\n          reading = false;\x0d\n          throw new ERR_STREAM_NULL_VALUES();\x0d\n        }\x0d\n\x0d\n        if (readable.push(res)) {\x0d\n          continue;\x0d\n        }\x0d\n\x0d\n        reading = false;\x0d\n      } catch (err) {\x0d\n        readable.destroy(err);\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async function nextAsync() {\x0d\n    for (;;) {\x0d\n      try {\x0d\n        const { value\x2C done } = await iterator.next();\x0d\n\x0d\n        if (done) {\x0d\n          readable.push(null);\x0d\n          return;\x0d\n        }\x0d\n\x0d\n        if (value === null) {\x0d\n          reading = false;\x0d\n          throw new ERR_STREAM_NULL_VALUES();\x0d\n        }\x0d\n\x0d\n        if (readable.push(value)) {\x0d\n          continue;\x0d\n        }\x0d\n\x0d\n        reading = false;\x0d\n      } catch (err) {\x0d\n        readable.destroy(err);\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n  return readable;\x0d\n}\x0d\n\x0d\nmodule.exports = from;\x0d\n
code-source-info,0x3ba1367bc0c,103,0,4549,C0O0C4O4549,,
code-creation,JS,10,152601,0x3ba1367bd94,97, node:internal/streams/from:1:1,0x3ba1367bb80,~
code-source-info,0x3ba1367bd94,103,0,4549,C0O0C32O28C38O53C44O77C50O131C53O131C58O120C64O218C67O218C72O244C77O164C83O189C89O4525C91O4540C96O4548,,
new,MemoryChunk,0x15e3f440000,262144
code-creation,JS,10,152848,0x3ba1367c974,33,makeBitMapDescriptor node:internal/streams/readable:127:30,0x3ba136731f8,~
code-source-info,0x3ba1367c974,99,3888,4090,C0O3888C9O3899C14O3937C22O3988C32O4087,,
code-creation,Eval,10,153717,0x15e3f449604,5, node:internal/streams/writable:1:1,0x15e3f4489e8,~
script-source,104,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  kState\x2C\x0d\n  // bitfields\x0d\n  kObjectMode\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kEmitClose\x2C\x0d\n  kDestroyed\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kErrored\x2C\x0d\n  kConstructed\x2C\x0d\n  kOnConstructed\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinishedValue = Symbol('kOnFinishedValue');\x0d\nconst kErroredValue = Symbol('kErroredValue');\x0d\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\x0d\nconst kWriteCbValue = Symbol('kWriteCbValue');\x0d\nconst kAfterWriteTickInfoValue = Symbol('kAfterWriteTickInfoValue');\x0d\nconst kBufferedValue = Symbol('kBufferedValue');\x0d\n\x0d\nconst kSync = 1 << 9;\x0d\nconst kFinalCalled = 1 << 10;\x0d\nconst kNeedDrain = 1 << 11;\x0d\nconst kEnding = 1 << 12;\x0d\nconst kFinished = 1 << 13;\x0d\nconst kDecodeStrings = 1 << 14;\x0d\nconst kWriting = 1 << 15;\x0d\nconst kBufferProcessing = 1 << 16;\x0d\nconst kPrefinished = 1 << 17;\x0d\nconst kAllBuffers = 1 << 18;\x0d\nconst kAllNoop = 1 << 19;\x0d\nconst kOnFinished = 1 << 20;\x0d\nconst kHasWritable = 1 << 21;\x0d\nconst kWritable = 1 << 22;\x0d\nconst kCorked = 1 << 23;\x0d\nconst kDefaultUTF8Encoding = 1 << 24;\x0d\nconst kWriteCb = 1 << 25;\x0d\nconst kExpectWriteCb = 1 << 26;\x0d\nconst kAfterWriteTickInfo = 1 << 27;\x0d\nconst kAfterWritePending = 1 << 28;\x0d\nconst kBuffered = 1 << 29;\x0d\nconst kEnded = 1 << 30;\x0d\n\x0d\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\x0d\nfunction makeBitMapDescriptor(bit) {\x0d\n  return {\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & bit) !== 0; }\x2C\x0d\n    set(value) {\x0d\n      if (value) this[kState] |= bit;\x0d\n      else this[kState] &= ~bit;\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\nObjectDefineProperties(WritableState.prototype\x2C {\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\x0d\n\x0d\n  // if _final has been called.\x0d\n  finalCalled: makeBitMapDescriptor(kFinalCalled)\x2C\x0d\n\x0d\n  // drain event flag.\x0d\n  needDrain: makeBitMapDescriptor(kNeedDrain)\x2C\x0d\n\x0d\n  // At the start of calling end()\x0d\n  ending: makeBitMapDescriptor(kEnding)\x2C\x0d\n\x0d\n  // When end() has been called\x2C and returned.\x0d\n  ended: makeBitMapDescriptor(kEnded)\x2C\x0d\n\x0d\n  // When 'finish' is emitted.\x0d\n  finished: makeBitMapDescriptor(kFinished)\x2C\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  decodeStrings: makeBitMapDescriptor(kDecodeStrings)\x2C\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  writing: makeBitMapDescriptor(kWriting)\x2C\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  sync: makeBitMapDescriptor(kSync)\x2C\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  bufferProcessing: makeBitMapDescriptor(kBufferProcessing)\x2C\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  prefinished: makeBitMapDescriptor(kPrefinished)\x2C\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  closed: makeBitMapDescriptor(kClosed)\x2C\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\x0d\n\x0d\n  allBuffers: makeBitMapDescriptor(kAllBuffers)\x2C\x0d\n  allNoop: makeBitMapDescriptor(kAllNoop)\x2C\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  // This is/should be a cold path.\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null; }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kErroredValue] = value;\x0d\n        this[kState] |= kErrored;\x0d\n      } else {\x0d\n        this[kState] &= ~kErrored;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kHasWritable) !== 0 ? (this[kState] & kWritable) !== 0 : undefined; }\x2C\x0d\n    set(value) {\x0d\n      if (value == null) {\x0d\n        this[kState] &= ~(kHasWritable | kWritable);\x0d\n      } else if (value) {\x0d\n        this[kState] |= (kHasWritable | kWritable);\x0d\n      } else {\x0d\n        this[kState] |= kHasWritable;\x0d\n        this[kState] &= ~kWritable;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  defaultEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\x0d\n    set(value) {\x0d\n      if (value === 'utf8' || value === 'utf-8') {\x0d\n        this[kState] |= kDefaultUTF8Encoding;\x0d\n      } else {\x0d\n        this[kState] &= ~kDefaultUTF8Encoding;\x0d\n        this[kDefaultEncodingValue] = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  writecb: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kWriteCb) !== 0 ? this[kWriteCbValue] : nop; }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kWriteCbValue] = value;\x0d\n        this[kState] |= kWriteCb;\x0d\n      } else {\x0d\n        this[kState] &= ~kWriteCb;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  afterWriteTickInfo: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kAfterWriteTickInfo) !== 0 ? this[kAfterWriteTickInfoValue] : null; }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kAfterWriteTickInfoValue] = value;\x0d\n        this[kState] |= kAfterWriteTickInfo;\x0d\n      } else {\x0d\n        this[kState] &= ~kAfterWriteTickInfo;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  buffered: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kBuffered) !== 0 ? this[kBufferedValue] : []; }\x2C\x0d\n    set(value) {\x0d\n      this[kBufferedValue] = value;\x0d\n      if (value) {\x0d\n        this[kState] |= kBuffered;\x0d\n      } else {\x0d\n        this[kState] &= ~kBuffered;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Bit map field to store WritableState more effciently with 1 bit per field\x0d\n  // instead of a V8 slot per field.\x0d\n  this[kState] = kSync | kConstructed | kEmitClose | kAutoDestroy;\x0d\n\x0d\n  if (options && options.objectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  if (isDuplex && options && options.writableObjectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  if (!options || options.decodeStrings !== false) this[kState] |= kDecodeStrings;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  const defaultEncoding = options ? options.defaultEncoding : null;\x0d\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\x0d\n    this[kState] |= kDefaultUTF8Encoding;\x0d\n  } else if (Buffer.isEncoding(defaultEncoding)) {\x0d\n    this[kState] &= ~kDefaultUTF8Encoding;\x0d\n    this[kDefaultEncodingValue] = defaultEncoding;\x0d\n  } else {\x0d\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\x0d\n  }\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state[kBufferedValue] = null;\x0d\n  state.bufferedIndex = 0;\x0d\n  state[kState] |= kAllBuffers | kAllNoop;\x0d\n  state[kState] &= ~kBuffered;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return (this[kState] & kBuffered) === 0 ? [] : ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return (this[kState] & kBuffered) === 0 ? 0 : this[kBufferedValue].length - this.bufferedIndex;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nWritableState.prototype[kOnConstructed] = function onConstructed(stream) {\x0d\n  if ((this[kState] & kWriting) === 0) {\x0d\n    clearBuffer(stream\x2C this);\x0d\n  }\x0d\n\x0d\n  if ((this[kState] & kEnding) !== 0) {\x0d\n    finishMaybe(stream\x2C this);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction Writable(options) {\x0d\n  if (!(this instanceof Writable))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._events ??= {\x0d\n    close: undefined\x2C\x0d\n    error: undefined\x2C\x0d\n    prefinish: undefined\x2C\x0d\n    finish: undefined\x2C\x0d\n    drain: undefined\x2C\x0d\n    // Skip uncommon events...\x0d\n    // [destroyImpl.kConstruct]: undefined\x2C\x0d\n    // [destroyImpl.kDestroy]: undefined\x2C\x0d\n  };\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C false);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  if (this._construct != null) {\x0d\n    destroyImpl.construct(this\x2C () => {\x0d\n      this._writableState[kOnConstructed](this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (cb == null || typeof cb !== 'function') {\x0d\n    cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kObjectMode) === 0) {\x0d\n    if (!encoding) {\x0d\n      encoding = (state[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : state.defaultEncoding;\x0d\n    } else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) {\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (typeof chunk === 'string') {\x0d\n      if ((state[kState] & kDecodeStrings) !== 0) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if ((state[kState] & kEnding) !== 0) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if ((state[kState] & kDestroyed) !== 0) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (encoding != null && typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  state[kState] |= kCorked;\x0d\n  state.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.corked) {\x0d\n      state[kState] &= ~kCorked;\x0d\n    }\x0d\n\x0d\n    if ((state[kState] & kWriting) === 0)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  if ((state[kState] & (kWriting | kErrored | kCorked | kConstructed)) !== kConstructed) {\x0d\n    if ((state[kState] & kBuffered) === 0) {\x0d\n      state[kState] |= kBuffered;\x0d\n      state[kBufferedValue] = [];\x0d\n    }\x0d\n\x0d\n    state[kBufferedValue].push({ chunk\x2C encoding\x2C callback });\x0d\n    if ((state[kState] & kAllBuffers) !== 0 && encoding !== 'buffer') {\x0d\n      state[kState] &= ~kAllBuffers;\x0d\n    }\x0d\n    if ((state[kState] & kAllNoop) !== 0 && callback !== nop) {\x0d\n      state[kState] &= ~kAllNoop;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    if (callback !== nop) {\x0d\n      state.writecb = callback;\x0d\n    }\x0d\n    state[kState] |= kWriting | kSync | kExpectWriteCb;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state[kState] &= ~kSync;\x0d\n  }\x0d\n\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n\x0d\n  if (!ret) {\x0d\n    state[kState] |= kNeedDrain;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && (state[kState] & (kDestroyed | kErrored)) === 0;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  if (cb !== nop) {\x0d\n    state.writecb = cb;\x0d\n  }\x0d\n  state[kState] |= kWriting | kSync | kExpectWriteCb;\x0d\n  if ((state[kState] & kDestroyed) !== 0)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state[kState] &= ~kSync;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if ((state[kState] & kExpectWriteCb) === 0) {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const sync = (state[kState] & kSync) !== 0;\x0d\n  const cb = (state[kState] & kWriteCb) !== 0 ? state[kWriteCbValue] : nop;\x0d\n\x0d\n  state[kState] &= ~(kWriting | kExpectWriteCb | kWriteCb);\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if ((state[kState] & kErrored) === 0) {\x0d\n      state[kErroredValue] = er;\x0d\n      state[kState] |= kErrored;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if ((state[kState] & kBuffered) !== 0) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      const needDrain = (state[kState] & kNeedDrain) !== 0 && state.length === 0;\x0d\n      const needTick = needDrain || (state[kState] & kDestroyed !== 0) || cb !== nop;\x0d\n\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (cb === nop) {\x0d\n        if ((state[kState] & kAfterWritePending) === 0 && needTick) {\x0d\n          process.nextTick(afterWrite\x2C stream\x2C state\x2C 1\x2C cb);\x0d\n          state[kState] |= kAfterWritePending;\x0d\n        } else {\x0d\n          state.pendingcb--;\x0d\n          if ((state[kState] & kEnding) !== 0) {\x0d\n            finishMaybe(stream\x2C state\x2C true);\x0d\n          }\x0d\n        }\x0d\n      } else if ((state[kState] & kAfterWriteTickInfo) !== 0 &&\x0d\n                 state[kAfterWriteTickInfoValue].cb === cb) {\x0d\n        state[kAfterWriteTickInfoValue].count++;\x0d\n      } else if (needTick) {\x0d\n        state[kAfterWriteTickInfoValue] = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state[kAfterWriteTickInfoValue]);\x0d\n        state[kState] |= (kAfterWritePending | kAfterWriteTickInfo);\x0d\n      } else {\x0d\n        state.pendingcb--;\x0d\n        if ((state[kState] & kEnding) !== 0) {\x0d\n          finishMaybe(stream\x2C state\x2C true);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state[kState] &= ~kAfterWriteTickInfo;\x0d\n  state[kAfterWriteTickInfoValue] = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  state[kState] &= ~kAfterWritePending;\x0d\n\x0d\n  const needDrain = (state[kState] & (kEnding | kNeedDrain | kDestroyed)) === kNeedDrain && state.length === 0;\x0d\n  if (needDrain) {\x0d\n    state[kState] &= ~kNeedDrain;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb(null);\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kDestroyed) !== 0) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kEnding) !== 0) {\x0d\n    finishMaybe(stream\x2C state\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if ((state[kState] & kWriting) !== 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kBuffered) !== 0) {\x0d\n    for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n      const { chunk\x2C callback } = state[kBufferedValue][n];\x0d\n      const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n      state.length -= len;\x0d\n      callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  callFinishedCallbacks(state\x2C state.errored ?? new ERR_STREAM_DESTROYED('end'));\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if ((state[kState] & (kDestroyed | kBufferProcessing | kCorked | kBuffered)) !== kBuffered) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const objectMode = (state[kState] & kObjectMode) !== 0;\x0d\n  const { [kBufferedValue]: buffered\x2C bufferedIndex } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state[kState] |= kBufferProcessing;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = (state[kState] & kAllNoop) !== 0 ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = (state[kState] & kAllNoop) !== 0 && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = (state[kState] & kAllBuffers) !== 0;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && (state[kState] & kWriting) === 0);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state[kState] &= ~kBufferProcessing;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk != null) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if ((state[kState] & kCorked) !== 0) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if ((state[kState] & (kEnding | kErrored)) === 0) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state[kState] |= kEnding;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state[kState] |= kEnded;\x0d\n  } else if ((state[kState] & kFinished) !== 0) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if ((state[kState] & kDestroyed) !== 0) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else if ((state[kState] & kErrored) !== 0) {\x0d\n      process.nextTick(cb\x2C state[kErroredValue]);\x0d\n    } else if ((state[kState] & kFinished) !== 0) {\x0d\n      process.nextTick(cb\x2C null);\x0d\n    } else {\x0d\n      state[kState] |= kOnFinished;\x0d\n      state[kOnFinishedValue] ??= [];\x0d\n      state[kOnFinishedValue].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (\x0d\n    // State is ended && constructed but not destroyed\x2C finished\x2C writing\x2C errorEmitted or closedEmitted\x0d\n    (state[kState] & (\x0d\n      kEnding |\x0d\n          kDestroyed |\x0d\n          kConstructed |\x0d\n          kFinished |\x0d\n          kWriting |\x0d\n          kErrorEmitted |\x0d\n          kCloseEmitted |\x0d\n          kErrored |\x0d\n          kBuffered\x0d\n    )) === (kEnding | kConstructed) && state.length === 0);\x0d\n}\x0d\n\x0d\nfunction onFinish(stream\x2C state\x2C err) {\x0d\n  if ((state[kState] & kPrefinished) !== 0) {\x0d\n    errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n  state.pendingcb--;\x0d\n  if (err) {\x0d\n    callFinishedCallbacks(state\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C (state[kState] & kSync) !== 0);\x0d\n  } else if (needFinish(state)) {\x0d\n    state[kState] |= kPrefinished;\x0d\n    stream.emit('prefinish');\x0d\n    // Backwards compat. Don't check state.sync here.\x0d\n    // Some streams assume 'finish' will be emitted\x0d\n    // asynchronously relative to _final callback.\x0d\n    state.pendingcb++;\x0d\n    process.nextTick(finish\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if ((state[kState] & (kPrefinished | kFinalCalled)) !== 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (typeof stream._final === 'function' && (state[kState] & kDestroyed) === 0) {\x0d\n    state[kState] |= kFinalCalled | kSync;\x0d\n    state.pendingcb++;\x0d\n\x0d\n    try {\x0d\n      stream._final((err) => onFinish(stream\x2C state\x2C err));\x0d\n    } catch (err) {\x0d\n      onFinish(stream\x2C state\x2C err);\x0d\n    }\x0d\n\x0d\n    state[kState] &= ~kSync;\x0d\n  } else {\x0d\n    state[kState] |= kFinalCalled | kPrefinished;\x0d\n    stream.emit('prefinish');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0) {\x0d\n      if (sync) {\x0d\n        state.pendingcb++;\x0d\n        process.nextTick((stream\x2C state) => {\x0d\n          if (needFinish(state)) {\x0d\n            finish(stream\x2C state);\x0d\n          } else {\x0d\n            state.pendingcb--;\x0d\n          }\x0d\n        }\x2C stream\x2C state);\x0d\n      } else if (needFinish(state)) {\x0d\n        state.pendingcb++;\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state[kState] |= kFinished;\x0d\n\x0d\n  callFinishedCallbacks(state\x2C null);\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if ((state[kState] & kAutoDestroy) !== 0) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction callFinishedCallbacks(state\x2C err) {\x0d\n  if ((state[kState] & kOnFinished) === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinishedValue];\x0d\n  state[kOnFinishedValue] = null;\x0d\n  state[kState] &= ~kOnFinished;\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](err);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n  closed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? (this._writableState[kState] & kClosed) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? (this._writableState[kState] & kDestroyed) !== 0 : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (!this._writableState) return;\x0d\n\x0d\n      if (value) this._writableState[kState] |= kDestroyed;\x0d\n      else this._writableState[kState] &= ~kDestroyed;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.errored &&\x0d\n        (w[kState] & (kEnding | kEnded | kDestroyed)) === 0;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & kFinished) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & kObjectMode) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state && state.getBuffer();\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & kEnding) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & (kDestroyed | kEnding | kNeedDrain)) === kNeedDrain : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state && state.highWaterMark;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? state.corked : 0;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state && state.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? state.errored : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    get: function() {\x0d\n      const state = this._writableState;\x0d\n      return (\x0d\n        (state[kState] & (kHasWritable | kWritable)) !== kHasWritable &&\x0d\n        (state[kState] & (kDestroyed | kErrored)) !== 0 &&\x0d\n        (state[kState] & kFinished) === 0\x0d\n      );\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if ((state[kState] & (kBuffered | kOnFinished)) !== 0 && (state[kState] & kDestroyed) === 0) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nWritable.fromWeb = function(writableStream\x2C options) {\x0d\n  return lazyWebStreams().newStreamWritableFromWritableStream(\x0d\n    writableStream\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nWritable.toWeb = function(streamWritable) {\x0d\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\x0d\n};\x0d\n
code-source-info,0x15e3f449604,104,0,34191,C0O0C4O34191,,
code-creation,JS,10,155178,0x15e3f44bcc4,2109, node:internal/streams/writable:1:1,0x15e3f449578,~
code-source-info,0x15e3f44bcc
code-creation,JS,10,155709,0x15e3f44dde4,33,makeBitMapDescriptor node:internal/streams/writable:120:30,0x15e3f449690,~
code-source-info,0x15e3f44dde4,104,3832,4034,C0O3832C9O3843C14O3881C22O3932C32O4031,,
code-creation,Eval,10,156059,0x15e3f45225c,5, node:stream/promises:1:1,0x15e3f4520a8,~
script-source,105,node:stream/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePop\x2C\x0d\n  Promise\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  isIterable\x2C\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst { pipelineImpl: pl } = require('internal/streams/pipeline');\x0d\nconst { finished } = require('internal/streams/end-of-stream');\x0d\n\x0d\nrequire('stream');\x0d\n\x0d\nfunction pipeline(...streams) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    let signal;\x0d\n    let end;\x0d\n    const lastArg = streams[streams.length - 1];\x0d\n    if (lastArg && typeof lastArg === 'object' &&\x0d\n        !isNodeStream(lastArg) && !isIterable(lastArg) && !isWebStream(lastArg)) {\x0d\n      const options = ArrayPrototypePop(streams);\x0d\n      signal = options.signal;\x0d\n      end = options.end;\x0d\n    }\x0d\n\x0d\n    pl(streams\x2C (err\x2C value) => {\x0d\n      if (err) {\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve(value);\x0d\n      }\x0d\n    }\x2C { signal\x2C end });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  finished\x2C\x0d\n  pipeline\x2C\x0d\n};\x0d\n
code-source-info,0x15e3f45225c,105,0,961,C0O0C4O961,,
code-creation,JS,10,156118,0x15e3f4523e4,125, node:stream/promises:1:1,0x15e3f4521d0,~
code-source-info,0x15e3f4523e4,105,0,961,C0O0C28O28C34O50C40O141C43O141C48O91C54O106C60O123C66O208C69O208C74O201C80O268C83O268C88O255C93O314C96O314C100O911C107O933C113O946C119O926C124O960,,
code-creation,Eval,10,156366,0x15e3f45334c,5, node:internal/streams/transform:1:1,0x15e3f453178,~
script-source,106,node:internal/streams/transform,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a transform stream is a readable/writable stream where you do\x0d\n// something with the data.  Sometimes it's called a "filter"\x2C\x0d\n// but that's not a great name for it\x2C since that implies a thing where\x0d\n// some bits pass through\x2C and others are simply ignored.  (That would\x0d\n// be a valid example of a transform\x2C of course.)\x0d\n//\x0d\n// While the output is causally related to the input\x2C it's not a\x0d\n// necessarily symmetric or synchronous transformation.  For example\x2C\x0d\n// a zlib stream might take multiple plain-text writes()\x2C and then\x0d\n// emit a single compressed chunk some time in the future.\x0d\n//\x0d\n// Here's how this works:\x0d\n//\x0d\n// The Transform stream has all the aspects of the readable and writable\x0d\n// stream classes.  When you write(chunk)\x2C that calls _write(chunk\x2Ccb)\x0d\n// internally\x2C and returns false if there's a lot of pending writes\x0d\n// buffered up.  When you call read()\x2C that calls _read(n) until\x0d\n// there's enough pending readable data buffered up.\x0d\n//\x0d\n// In a transform stream\x2C the written data is placed in a buffer.  When\x0d\n// _read(n) is called\x2C it transforms the queued up data\x2C calling the\x0d\n// buffered _write cb's as it consumes chunks.  If consuming a single\x0d\n// written chunk would result in multiple output chunks\x2C then the first\x0d\n// outputted bit calls the readcb\x2C and subsequent chunks just go into\x0d\n// the read buffer\x2C and will cause it to emit 'readable' if necessary.\x0d\n//\x0d\n// This way\x2C back-pressure is actually determined by the reading side\x2C\x0d\n// since _read has to be called to start processing a new chunk.  However\x2C\x0d\n// a pathological inflate type of transform can cause excessive buffering\x0d\n// here.  For example\x2C imagine a stream where every byte of input is\x0d\n// interpreted as an integer from 0-255\x2C and then results in that many\x0d\n// bytes of output.  Writing the 4 bytes {ff\x2Cff\x2Cff\x2Cff} would result in\x0d\n// 1kb of data being output.  In this case\x2C you could write a very small\x0d\n// amount of input\x2C and end up with a very large amount of output.  In\x0d\n// such a pathological inflating mechanism\x2C there'd be no way to tell\x0d\n// the system to stop doing the transform.  A single 4MB write could\x0d\n// cause the system to run out of memory.\x0d\n//\x0d\n// However\x2C even in such a pathological case\x2C only a single written chunk\x0d\n// would be consumed\x2C and then the rest would wait (un-transformed) until\x0d\n// the results of the previous transformed chunk were consumed.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Transform;\x0d\nconst {\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst { getHighWaterMark } = require('internal/streams/state');\x0d\nObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\x0d\nObjectSetPrototypeOf(Transform\x2C Duplex);\x0d\n\x0d\nconst kCallback = Symbol('kCallback');\x0d\n\x0d\nfunction Transform(options) {\x0d\n  if (!(this instanceof Transform))\x0d\n    return new Transform(options);\x0d\n\x0d\n  // TODO (ronag): This should preferably always be\x0d\n  // applied but would be semver-major. Or even better;\x0d\n  // make Transform a Readable with the Writable interface.\x0d\n  const readableHighWaterMark = options ? getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C true) : null;\x0d\n  if (readableHighWaterMark === 0) {\x0d\n    // A Duplex will buffer both on the writable and readable side while\x0d\n    // a Transform just wants to buffer hwm number of elements. To avoid\x0d\n    // buffering twice we disable buffering on the writable side.\x0d\n    options = {\x0d\n      ...options\x2C\x0d\n      highWaterMark: null\x2C\x0d\n      readableHighWaterMark\x2C\x0d\n      writableHighWaterMark: options.writableHighWaterMark || 0\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  Duplex.call(this\x2C options);\x0d\n\x0d\n  // We have implemented the _read method\x2C and done the other things\x0d\n  // that Readable wants before the first _read call\x2C so unset the\x0d\n  // sync guard flag.\x0d\n  this._readableState.sync = false;\x0d\n\x0d\n  this[kCallback] = null;\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.transform === 'function')\x0d\n      this._transform = options.transform;\x0d\n\x0d\n    if (typeof options.flush === 'function')\x0d\n      this._flush = options.flush;\x0d\n  }\x0d\n\x0d\n  // When the writable side finishes\x2C then flush out anything remaining.\x0d\n  // Backwards compat. Some Transform streams incorrectly implement _final\x0d\n  // instead of or in addition to _flush. By using 'prefinish' instead of\x0d\n  // implementing _final we continue supporting this unfortunate use case.\x0d\n  this.on('prefinish'\x2C prefinish);\x0d\n}\x0d\n\x0d\nfunction final(cb) {\x0d\n  if (typeof this._flush === 'function' && !this.destroyed) {\x0d\n    this._flush((er\x2C data) => {\x0d\n      if (er) {\x0d\n        if (cb) {\x0d\n          cb(er);\x0d\n        } else {\x0d\n          this.destroy(er);\x0d\n        }\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (data != null) {\x0d\n        this.push(data);\x0d\n      }\x0d\n      this.push(null);\x0d\n      if (cb) {\x0d\n        cb();\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    this.push(null);\x0d\n    if (cb) {\x0d\n      cb();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction prefinish() {\x0d\n  if (this._final !== final) {\x0d\n    final.call(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nTransform.prototype._final = final;\x0d\n\x0d\nTransform.prototype._transform = function(chunk\x2C encoding\x2C callback) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()');\x0d\n};\x0d\n\x0d\nTransform.prototype._write = function(chunk\x2C encoding\x2C callback) {\x0d\n  const rState = this._readableState;\x0d\n  const wState = this._writableState;\x0d\n  const length = rState.length;\x0d\n\x0d\n  this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (val != null) {\x0d\n      this.push(val);\x0d\n    }\x0d\n\x0d\n    if (rState.ended) {\x0d\n      // If user has called this.push(null) we have to\x0d\n      // delay the callback to properly progate the new\x0d\n      // state.\x0d\n      process.nextTick(callback);\x0d\n    } else if (\x0d\n      wState.ended || // Backwards compat.\x0d\n      length === rState.length || // Backwards compat.\x0d\n      rState.length < rState.highWaterMark\x0d\n    ) {\x0d\n      callback();\x0d\n    } else {\x0d\n      this[kCallback] = callback;\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\nTransform.prototype._read = function() {\x0d\n  if (this[kCallback]) {\x0d\n    const callback = this[kCallback];\x0d\n    this[kCallback] = null;\x0d\n    callback();\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x15e3f45334c,106,0,7325,C0O0C4O7325,,
code-creation,JS,10,156675,0x15e3f453734,202, node:internal/streams/transform:1:1,0x15e3f4532c0,~
code-source-info,0x15e3f453734,106,0,7325,C0O0C39O3574C44O3599C49O3628C51O3643C55O3701C58O3701C63O3727C68O3668C74O3751C77O3751C81O3751C83O3817C86O3817C91O3796C97O3853C100O3884C108O3902C113O3853C118O3915C124O3915C129O3977C132O3977C136O3977C138O6190C141O6200C148O6217C152O6229C155O6239C164O6260C168O6364C171O6374C180O6391C184O7163C187O7173C196O7189C201O7324,,
code-creation,Eval,10,156807,0x15e3f453fbc,5, node:internal/streams/passthrough:1:1,0x15e3f453e48,~
script-source,107,node:internal/streams/passthrough,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a passthrough stream.\x0d\n// basically just the most minimal sort of Transform stream.\x0d\n// Every written chunk gets output as-is.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = PassThrough;\x0d\n\x0d\nconst Transform = require('internal/streams/transform');\x0d\nObjectSetPrototypeOf(PassThrough.prototype\x2C Transform.prototype);\x0d\nObjectSetPrototypeOf(PassThrough\x2C Transform);\x0d\n\x0d\nfunction PassThrough(options) {\x0d\n  if (!(this instanceof PassThrough))\x0d\n    return new PassThrough(options);\x0d\n\x0d\n  Transform.call(this\x2C options);\x0d\n}\x0d\n\x0d\nPassThrough.prototype._transform = function(chunk\x2C encoding\x2C cb) {\x0d\n  cb(null\x2C chunk);\x0d\n};\x0d\n
code-source-info,0x15e3f453fbc,107,0,1809,C0O0C4O1809,,
code-creation,JS,10,156887,0x15e3f454164,84, node:internal/streams/passthrough:1:1,0x15e3f453f30,~
code-source-info,0x15e3f454164,107,0,1809,C0O0C14O1316C19O1359C21O1374C25O1410C28O1410C32O1410C34O1450C37O1483C45O1504C50O1450C55O1517C61O1517C66O1717C69O1729C78O1750C83O1808,,
code-creation,Eval,10,157350,0x15e3f459744,5, node:internal/stream_base_commons:1:1,0x15e3f459400,~
script-source,108,node:internal/stream_base_commons,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { FastBuffer } = require('internal/buffer');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kBytesWritten\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x2C\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { UV_EOF } = internalBinding('uv');\x0d\nconst {\x0d\n  ErrnoException\x2C\x0d\n} = require('internal/errors');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  kTimeout\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x2C\x0d\n} = require('internal/timers');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { validateFunction } = require('internal/validators');\x0d\n\x0d\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\x0d\nconst kUpdateTimer = Symbol('kUpdateTimer');\x0d\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kSession = Symbol('kSession');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kBufferGen = Symbol('kBufferGen');\x0d\nconst kBufferCb = Symbol('kBufferCb');\x0d\n\x0d\nfunction handleWriteReq(req\x2C data\x2C encoding) {\x0d\n  const { handle } = req;\x0d\n\x0d\n  switch (encoding) {\x0d\n    case 'buffer':\x0d\n    {\x0d\n      const ret = handle.writeBuffer(req\x2C data);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = data;\x0d\n      return ret;\x0d\n    }\x0d\n    case 'latin1':\x0d\n    case 'binary':\x0d\n      return handle.writeLatin1String(req\x2C data);\x0d\n    case 'utf8':\x0d\n    case 'utf-8':\x0d\n      return handle.writeUtf8String(req\x2C data);\x0d\n    case 'ascii':\x0d\n      return handle.writeAsciiString(req\x2C data);\x0d\n    case 'ucs2':\x0d\n    case 'ucs-2':\x0d\n    case 'utf16le':\x0d\n    case 'utf-16le':\x0d\n      return handle.writeUcs2String(req\x2C data);\x0d\n    default:\x0d\n    {\x0d\n      const buffer = Buffer.from(data\x2C encoding);\x0d\n      const ret = handle.writeBuffer(req\x2C buffer);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = buffer;\x0d\n      return ret;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onWriteComplete(status) {\x0d\n  debug('onWriteComplete'\x2C status\x2C this.error);\x0d\n\x0d\n  const stream = this.handle[owner_symbol];\x0d\n\x0d\n  if (stream.destroyed) {\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(null);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // TODO (ronag): This should be moved before if(stream.destroyed)\x0d\n  // in order to avoid swallowing error.\x0d\n  if (status < 0) {\x0d\n    const ex = new ErrnoException(status\x2C 'write'\x2C this.error);\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(ex);\x0d\n    else\x0d\n      stream.destroy(ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n  stream[kAfterAsyncWrite](this);\x0d\n\x0d\n  if (typeof this.callback === 'function')\x0d\n    this.callback(null);\x0d\n}\x0d\n\x0d\nfunction createWriteWrap(handle\x2C callback) {\x0d\n  const req = new WriteWrap();\x0d\n\x0d\n  req.handle = handle;\x0d\n  req.oncomplete = onWriteComplete;\x0d\n  req.async = false;\x0d\n  req.bytes = 0;\x0d\n  req.buffer = null;\x0d\n  req.callback = callback;\x0d\n\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writevGeneric(self\x2C data\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const allBuffers = data.allBuffers;\x0d\n  let chunks;\x0d\n  if (allBuffers) {\x0d\n    chunks = data;\x0d\n    for (let i = 0; i < data.length; i++)\x0d\n      data[i] = data[i].chunk;\x0d\n  } else {\x0d\n    chunks = new Array(data.length << 1);\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const entry = data[i];\x0d\n      chunks[i * 2] = entry.chunk;\x0d\n      chunks[i * 2 + 1] = entry.encoding;\x0d\n    }\x0d\n  }\x0d\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\x0d\n\x0d\n  // Retain chunks\x0d\n  if (err === 0) req._chunks = chunks;\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const err = handleWriteReq(req\x2C data\x2C encoding);\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\x0d\n  req.bytes = streamBaseState[kBytesWritten];\x0d\n  req.async = !!streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n  if (err !== 0)\x0d\n    return cb(new ErrnoException(err\x2C 'write'\x2C req.error));\x0d\n\x0d\n  if (!req.async && typeof req.callback === 'function') {\x0d\n    req.callback();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onStreamRead(arrayBuffer) {\x0d\n  const nread = streamBaseState[kReadBytesOrError];\x0d\n\x0d\n  const handle = this;\x0d\n  const stream = this[owner_symbol];\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n\x0d\n  if (nread > 0 && !stream.destroyed) {\x0d\n    let ret;\x0d\n    let result;\x0d\n    const userBuf = stream[kBuffer];\x0d\n    if (userBuf) {\x0d\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\x0d\n      const bufGen = stream[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        const nextBuf = bufGen();\x0d\n        if (isUint8Array(nextBuf))\x0d\n          stream[kBuffer] = ret = nextBuf;\x0d\n      }\x0d\n    } else {\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\x0d\n      result = stream.push(buf);\x0d\n    }\x0d\n    if (!result) {\x0d\n      handle.reading = false;\x0d\n      if (!stream.destroyed) {\x0d\n        const err = handle.readStop();\x0d\n        if (err)\x0d\n          stream.destroy(new ErrnoException(err\x2C 'read'));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  if (nread === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\x0d\n  // and will not deliver any more read events after this point.\x0d\n  // (equivalently\x2C it should have called readStop on itself already).\x0d\n  // Some streams may be reset and explicitly started again with a call\x0d\n  // to readStart\x2C such as TTY.\x0d\n\x0d\n  if (nread !== UV_EOF) {\x0d\n    // CallJSOnreadMethod expects the return value to be a buffer.\x0d\n    // Ref: https://github.com/nodejs/node/pull/34375\x0d\n    stream.destroy(new ErrnoException(nread\x2C 'read'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Defer this until we actually emit end\x0d\n  if (stream._readableState.endEmitted) {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream[kMaybeDestroy]();\x0d\n  } else {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream.on('end'\x2C stream[kMaybeDestroy]);\x0d\n\x0d\n    // Push a null to signal the end of data.\x0d\n    // Do it before `maybeDestroy` for correct order of events:\x0d\n    // `end` -> `close`\x0d\n    stream.push(null);\x0d\n    stream.read(0);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setStreamTimeout(msecs\x2C callback) {\x0d\n  if (this.destroyed)\x0d\n    return this;\x0d\n\x0d\n  this.timeout = msecs;\x0d\n\x0d\n  // Type checking identical to timers.enroll()\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // Attempt to clear an existing timer in both cases -\x0d\n  //  even if it will be rescheduled we don't want to leak an existing timer.\x0d\n  clearTimeout(this[kTimeout]);\x0d\n\x0d\n  if (msecs === 0) {\x0d\n    if (callback !== undefined) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n      this.removeListener('timeout'\x2C callback);\x0d\n    }\x0d\n  } else {\x0d\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\x0d\n    if (this[kSession]) this[kSession][kUpdateTimer]();\x0d\n\x0d\n    if (callback !== undefined) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n      this.once('timeout'\x2C callback);\x0d\n    }\x0d\n  }\x0d\n  return this;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kMaybeDestroy\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  kHandle\x2C\x0d\n  kSession\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x2C\x0d\n};\x0d\n
code-source-info,0x15e3f459744,108,0,7337,C0O0C4O7337,,
code-creation,JS,10,157670,0x15e3f459d74,514, node:internal/stream_base_commons:1:1,0x15e3f4596b8,~
code-source-info,0x15e3f459d
code-creation,Eval,10,158098,0x15e3f45be54,5, node:diagnostics_channel:1:1,0x15e3f45ba20,~
script-source,109,node:diagnostics_channel,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeAt\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { triggerUncaughtException } = internalBinding('errors');\x0d\n\x0d\nconst { WeakReference } = require('internal/util');\x0d\n\x0d\n// Can't delete when weakref count reaches 0 as it could increment again.\x0d\n// Only GC can be used as a valid time to clean up the channels map.\x0d\nclass WeakRefMap extends SafeMap {\x0d\n  #finalizers = new SafeFinalizationRegistry((key) => {\x0d\n    this.delete(key);\x0d\n  });\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    this.#finalizers.register(value\x2C key);\x0d\n    return super.set(key\x2C new WeakReference(value));\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return super.get(key)?.get();\x0d\n  }\x0d\n\x0d\n  incRef(key) {\x0d\n    return super.get(key)?.incRef();\x0d\n  }\x0d\n\x0d\n  decRef(key) {\x0d\n    return super.get(key)?.decRef();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markActive(channel) {\x0d\n  // eslint-disable-next-line no-use-before-define\x0d\n  ObjectSetPrototypeOf(channel\x2C ActiveChannel.prototype);\x0d\n  channel._subscribers = [];\x0d\n  channel._stores = new SafeMap();\x0d\n}\x0d\n\x0d\nfunction maybeMarkInactive(channel) {\x0d\n  // When there are no more active subscribers or bound\x2C restore to fast prototype.\x0d\n  if (!channel._subscribers.length && !channel._stores.size) {\x0d\n    // eslint-disable-next-line no-use-before-define\x0d\n    ObjectSetPrototypeOf(channel\x2C Channel.prototype);\x0d\n    channel._subscribers = undefined;\x0d\n    channel._stores = undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultTransform(data) {\x0d\n  return data;\x0d\n}\x0d\n\x0d\nfunction wrapStoreRun(store\x2C data\x2C next\x2C transform = defaultTransform) {\x0d\n  return () => {\x0d\n    let context;\x0d\n    try {\x0d\n      context = transform(data);\x0d\n    } catch (err) {\x0d\n      process.nextTick(() => {\x0d\n        triggerUncaughtException(err\x2C false);\x0d\n      });\x0d\n      return next();\x0d\n    }\x0d\n\x0d\n    return store.run(context\x2C next);\x0d\n  };\x0d\n}\x0d\n\x0d\n// TODO(qard): should there be a C++ channel interface?\x0d\nclass ActiveChannel {\x0d\n  subscribe(subscription) {\x0d\n    validateFunction(subscription\x2C 'subscription');\x0d\n    ArrayPrototypePush(this._subscribers\x2C subscription);\x0d\n    channels.incRef(this.name);\x0d\n  }\x0d\n\x0d\n  unsubscribe(subscription) {\x0d\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\x0d\n    if (index === -1) return false;\x0d\n\x0d\n    ArrayPrototypeSplice(this._subscribers\x2C index\x2C 1);\x0d\n\x0d\n    channels.decRef(this.name);\x0d\n    maybeMarkInactive(this);\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  bindStore(store\x2C transform) {\x0d\n    const replacing = this._stores.has(store);\x0d\n    if (!replacing) channels.incRef(this.name);\x0d\n    this._stores.set(store\x2C transform);\x0d\n  }\x0d\n\x0d\n  unbindStore(store) {\x0d\n    if (!this._stores.has(store)) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    this._stores.delete(store);\x0d\n\x0d\n    channels.decRef(this.name);\x0d\n    maybeMarkInactive(this);\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  get hasSubscribers() {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  publish(data) {\x0d\n    for (let i = 0; i < (this._subscribers?.length || 0); i++) {\x0d\n      try {\x0d\n        const onMessage = this._subscribers[i];\x0d\n        onMessage(data\x2C this.name);\x0d\n      } catch (err) {\x0d\n        process.nextTick(() => {\x0d\n          triggerUncaughtException(err\x2C false);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\x0d\n    let run = () => {\x0d\n      this.publish(data);\x0d\n      return ReflectApply(fn\x2C thisArg\x2C args);\x0d\n    };\x0d\n\x0d\n    for (const entry of this._stores.entries()) {\x0d\n      const store = entry[0];\x0d\n      const transform = entry[1];\x0d\n      run = wrapStoreRun(store\x2C data\x2C run\x2C transform);\x0d\n    }\x0d\n\x0d\n    return run();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Channel {\x0d\n  constructor(name) {\x0d\n    this._subscribers = undefined;\x0d\n    this._stores = undefined;\x0d\n    this.name = name;\x0d\n\x0d\n    channels.set(name\x2C this);\x0d\n  }\x0d\n\x0d\n  static [SymbolHasInstance](instance) {\x0d\n    const prototype = ObjectGetPrototypeOf(instance);\x0d\n    return prototype === Channel.prototype ||\x0d\n           prototype === ActiveChannel.prototype;\x0d\n  }\x0d\n\x0d\n  subscribe(subscription) {\x0d\n    markActive(this);\x0d\n    this.subscribe(subscription);\x0d\n  }\x0d\n\x0d\n  unsubscribe() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  bindStore(store\x2C transform) {\x0d\n    markActive(this);\x0d\n    this.bindStore(store\x2C transform);\x0d\n  }\x0d\n\x0d\n  unbindStore() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  get hasSubscribers() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  publish() {}\x0d\n\x0d\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C args);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channels = new WeakRefMap();\x0d\n\x0d\nfunction channel(name) {\x0d\n  const channel = channels.get(name);\x0d\n  if (channel) return channel;\x0d\n\x0d\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\x0d\n  }\x0d\n\x0d\n  return new Channel(name);\x0d\n}\x0d\n\x0d\nfunction subscribe(name\x2C subscription) {\x0d\n  return channel(name).subscribe(subscription);\x0d\n}\x0d\n\x0d\nfunction unsubscribe(name\x2C subscription) {\x0d\n  return channel(name).unsubscribe(subscription);\x0d\n}\x0d\n\x0d\nfunction hasSubscribers(name) {\x0d\n  const channel = channels.get(name);\x0d\n  if (!channel) return false;\x0d\n\x0d\n  return channel.hasSubscribers;\x0d\n}\x0d\n\x0d\nconst traceEvents = [\x0d\n  'start'\x2C\x0d\n  'end'\x2C\x0d\n  'asyncStart'\x2C\x0d\n  'asyncEnd'\x2C\x0d\n  'error'\x2C\x0d\n];\x0d\n\x0d\nfunction assertChannel(value\x2C name) {\x0d\n  if (!(value instanceof Channel)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['Channel']\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass TracingChannel {\x0d\n  constructor(nameOrChannels) {\x0d\n    if (typeof nameOrChannels === 'string') {\x0d\n      this.start = channel(`tracing:${nameOrChannels}:start`);\x0d\n      this.end = channel(`tracing:${nameOrChannels}:end`);\x0d\n      this.asyncStart = channel(`tracing:${nameOrChannels}:asyncStart`);\x0d\n      this.asyncEnd = channel(`tracing:${nameOrChannels}:asyncEnd`);\x0d\n      this.error = channel(`tracing:${nameOrChannels}:error`);\x0d\n    } else if (typeof nameOrChannels === 'object') {\x0d\n      const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = nameOrChannels;\x0d\n\x0d\n      assertChannel(start\x2C 'nameOrChannels.start');\x0d\n      assertChannel(end\x2C 'nameOrChannels.end');\x0d\n      assertChannel(asyncStart\x2C 'nameOrChannels.asyncStart');\x0d\n      assertChannel(asyncEnd\x2C 'nameOrChannels.asyncEnd');\x0d\n      assertChannel(error\x2C 'nameOrChannels.error');\x0d\n\x0d\n      this.start = start;\x0d\n      this.end = end;\x0d\n      this.asyncStart = asyncStart;\x0d\n      this.asyncEnd = asyncEnd;\x0d\n      this.error = error;\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE('nameOrChannels'\x2C\x0d\n                                     ['string'\x2C 'object'\x2C 'Channel']\x2C\x0d\n                                     nameOrChannels);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  subscribe(handlers) {\x0d\n    for (const name of traceEvents) {\x0d\n      if (!handlers[name]) continue;\x0d\n\x0d\n      this[name]?.subscribe(handlers[name]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unsubscribe(handlers) {\x0d\n    let done = true;\x0d\n\x0d\n    for (const name of traceEvents) {\x0d\n      if (!handlers[name]) continue;\x0d\n\x0d\n      if (!this[name]?.unsubscribe(handlers[name])) {\x0d\n        done = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return done;\x0d\n  }\x0d\n\x0d\n  traceSync(fn\x2C context = {}\x2C thisArg\x2C ...args) {\x0d\n    const { start\x2C end\x2C error } = this;\x0d\n\x0d\n    return start.runStores(context\x2C () => {\x0d\n      try {\x0d\n        const result = ReflectApply(fn\x2C thisArg\x2C args);\x0d\n        context.result = result;\x0d\n        return result;\x0d\n      } catch (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n        throw err;\x0d\n      } finally {\x0d\n        end.publish(context);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  tracePromise(fn\x2C context = {}\x2C thisArg\x2C ...args) {\x0d\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\x0d\n\x0d\n    function reject(err) {\x0d\n      context.error = err;\x0d\n      error.publish(context);\x0d\n      asyncStart.publish(context);\x0d\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\x0d\n      asyncEnd.publish(context);\x0d\n      return PromiseReject(err);\x0d\n    }\x0d\n\x0d\n    function resolve(result) {\x0d\n      context.result = result;\x0d\n      asyncStart.publish(context);\x0d\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\x0d\n      asyncEnd.publish(context);\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    return start.runStores(context\x2C () => {\x0d\n      try {\x0d\n        let promise = ReflectApply(fn\x2C thisArg\x2C args);\x0d\n        // Convert thenables to native promises\x0d\n        if (!(promise instanceof Promise)) {\x0d\n          promise = PromiseResolve(promise);\x0d\n        }\x0d\n        return PromisePrototypeThen(promise\x2C resolve\x2C reject);\x0d\n      } catch (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n        throw err;\x0d\n      } finally {\x0d\n        end.publish(context);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  traceCallback(fn\x2C position = -1\x2C context = {}\x2C thisArg\x2C ...args) {\x0d\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\x0d\n\x0d\n    function wrappedCallback(err\x2C res) {\x0d\n      if (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n      } else {\x0d\n        context.result = res;\x0d\n      }\x0d\n\x0d\n      // Using runStores here enables manual context failure recovery\x0d\n      asyncStart.runStores(context\x2C () => {\x0d\n        try {\x0d\n          if (callback) {\x0d\n            return ReflectApply(callback\x2C this\x2C arguments);\x0d\n          }\x0d\n        } finally {\x0d\n          asyncEnd.publish(context);\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n\x0d\n    const callback = ArrayPrototypeAt(args\x2C position);\x0d\n    if (typeof callback !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('callback'\x2C ['function']\x2C callback);\x0d\n    }\x0d\n    ArrayPrototypeSplice(args\x2C position\x2C 1\x2C wrappedCallback);\x0d\n\x0d\n    return start.runStores(context\x2C () => {\x0d\n      try {\x0d\n        return ReflectApply(fn\x2C thisArg\x2C args);\x0d\n      } catch (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n        throw err;\x0d\n      } finally {\x0d\n        end.publish(context);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction tracingChannel(nameOrChannels) {\x0d\n  return new TracingChannel(nameOrChannels);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  channel\x2C\x0d\n  hasSubscribers\x2C\x0d\n  subscribe\x2C\x0d\n  tracingChannel\x2C\x0d\n  unsubscribe\x2C\x0d\n  Channel\x2C\x0d\n};\x0d\n
code-source-info,0x15e3f45be54,109,0,10205,C0O0C4O10205,,
code-creation,JS,10,158524,0x15e3f45d91c,616, node:diagnostics_channel:1:1,0x15e3f45bdc8,~
code-source-info,0x15e3f45d91c,109,0,10205,C0O0C131O28C137O49C143O75C149O98C155O123C161O152C167O177C173O202C179O214C185O239C191O258C197O276C203O293C209O305C214O403C217O403C222O363C227O370C233O466C236O466C241O443C247O538C250O538C255O509C261O594C264O594C269O576C297O793C354O768C409O2255C427O4063C503O3883C505O4726C507O4726C512O4726C514O5386C518O5386C565O5611C567O10089C574O10111C580O10123C586O10142C592O10156C598O10175C604O10191C610O10104C615O10204,,
code-creation,JS,10,158567,0x15e3f45dd04,40,WeakRefMap node:diagnostics_channel:35:34,0x15e3f45c3b0,~
code-source-info,0x15e3f45dd04,109,801,1198,C0O801C14O820C28O820C39O1198,,
code-creation,JS,10,158749,0x15e3f45e624,52,WeakRefMap node:diagnostics_channel:35:1,0x15e3f45c1f8,~
code-source-info,0x15e3f45e624,109,768,768,C0O768C5O768C29O768C51O768,,
code-creation,JS,10,158822,0x15e3f45f944,70,channel node:diagnostics_channel:213:17,0x15e3f45bfe8,~
code-source-info,0x15e3f45f944,109,4763,5022,C0O4791C5O4800C10O4800C16O4814C18O4827C20O4842C21O4848C33O4913C51O4919C56O4913C57O4994C64O5001C69O5019,,
code-creation,JS,10,158859,0x15e3f45fa74,34,get node:diagnostics_channel:45:6,0x15e3f45c2a8,~
code-source-info,0x15e3f45fa74,109,1024,1071,C0O1037C2O1050C13O1050C21O1058C26O1060C33O1066,,
code-creation,JS,10,158891,0x15e3f45fbc4,36,Channel node:diagnostics_channel:168:14,0x15e3f45c6d8,~
code-source-info,0x15e3f45fbc4,109,3913,4049,C0O3927C1O3945C5O3963C6O3976C10O3994C12O4004C16O4019C23O4028C28O4028C35O4048,,
code-creation,JS,10,158929,0x15e3f45fe3c,51,set node:diagnostics_channel:40:6,0x15e3f45c250,~
code-source-info,0x15e3f45fe3c,109,898,1015,C0O918C2O923C6O935C11O935C17O962C19O975C28O988C33O984C45O975C50O1010,,
code-creation,JS,10,158988,0x15e3f45ff9c,37,WeakReference node:internal/util:848:14,0x22671c82bd0,~
code-source-info,0x15e3f45ff9c,16,24324,24382,C0O24324C14O24340C21O24357C26O24353C31O24351C36O24381,,
code-creation,JS,10,159023,0x15e3f4601ec,42,SafeWeakRef node:internal/per_context/primordials:448:16,0xfca8d324b0,~
code-source-info,0x15e3f4601ec,6,13425,13452,C3O13436C27O13436C41O13451,,
code-creation,Eval,10,159505,0x15e3f4628f4,5, node:internal/perf/observe:1:1,0x15e3f462278,~
script-source,110,node:internal/perf/observe,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_GC\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP2\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_NET\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_DNS\x2C\x0d\n  }\x2C\x0d\n  installGarbageCollectionTracking\x2C\x0d\n  observerCounts\x2C\x0d\n  removeGarbageCollectionTracking\x2C\x0d\n  setupObservers\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nconst {\x0d\n  isPerformanceEntry\x2C\x0d\n  createPerformanceNodeEntry\x2C\x0d\n} = require('internal/perf/performance_entry');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateInternalField\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  deprecate\x2C\x0d\n  lazyDOMException\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  setImmediate\x2C\x0d\n} = require('timers');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kDispatch = Symbol('kDispatch');\x0d\nconst kMaybeBuffer = Symbol('kMaybeBuffer');\x0d\nconst kDeprecatedFields = Symbol('kDeprecatedFields');\x0d\n\x0d\nconst kDeprecationMessage =\x0d\n  'Custom PerformanceEntry accessors are deprecated. ' +\x0d\n  'Please use the detail property.';\x0d\n\x0d\nconst kTypeSingle = 0;\x0d\nconst kTypeMultiple = 1;\x0d\n\x0d\nlet gcTrackingInstalled = false;\x0d\n\x0d\nconst kSupportedEntryTypes = ObjectFreeze([\x0d\n  'dns'\x2C\x0d\n  'function'\x2C\x0d\n  'gc'\x2C\x0d\n  'http'\x2C\x0d\n  'http2'\x2C\x0d\n  'mark'\x2C\x0d\n  'measure'\x2C\x0d\n  'net'\x2C\x0d\n  'resource'\x2C\x0d\n]);\x0d\n\x0d\n// Performance timeline entry Buffers\x0d\nlet markEntryBuffer = [];\x0d\nlet measureEntryBuffer = [];\x0d\nlet resourceTimingBuffer = [];\x0d\nlet resourceTimingSecondaryBuffer = [];\x0d\nconst kPerformanceEntryBufferWarnSize = 1e6;\x0d\n// https://www.w3.org/TR/timing-entrytypes-registry/#registry\x0d\n// Default buffer limit for resource timing entries.\x0d\nlet resourceTimingBufferSizeLimit = 250;\x0d\nlet dispatchBufferFull;\x0d\nlet resourceTimingBufferFullPending = false;\x0d\n\x0d\nconst kClearPerformanceEntryBuffers = ObjectFreeze({\x0d\n  'mark': 'performance.clearMarks'\x2C\x0d\n  'measure': 'performance.clearMeasures'\x2C\x0d\n});\x0d\nconst kWarnedEntryTypes = new SafeMap();\x0d\n\x0d\nconst kObservers = new SafeSet();\x0d\nconst kPending = new SafeSet();\x0d\nlet isPending = false;\x0d\n\x0d\nfunction queuePending() {\x0d\n  if (isPending) return;\x0d\n  isPending = true;\x0d\n  setImmediate(() => {\x0d\n    isPending = false;\x0d\n    const pendings = ArrayFrom(kPending.values());\x0d\n    kPending.clear();\x0d\n    for (const pending of pendings)\x0d\n      pending[kDispatch]();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction getObserverType(type) {\x0d\n  switch (type) {\x0d\n    case 'gc': return NODE_PERFORMANCE_ENTRY_TYPE_GC;\x0d\n    case 'http2': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP2;\x0d\n    case 'http': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP;\x0d\n    case 'net': return NODE_PERFORMANCE_ENTRY_TYPE_NET;\x0d\n    case 'dns': return NODE_PERFORMANCE_ENTRY_TYPE_DNS;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeDecrementObserverCounts(entryTypes) {\x0d\n  for (const type of entryTypes) {\x0d\n    const observerType = getObserverType(type);\x0d\n\x0d\n    if (observerType !== undefined) {\x0d\n      observerCounts[observerType]--;\x0d\n\x0d\n      if (observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC &&\x0d\n          observerCounts[observerType] === 0) {\x0d\n        removeGarbageCollectionTracking();\x0d\n        gcTrackingInstalled = false;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeIncrementObserverCount(type) {\x0d\n  const observerType = getObserverType(type);\x0d\n\x0d\n  if (observerType !== undefined) {\x0d\n    observerCounts[observerType]++;\x0d\n    if (!gcTrackingInstalled &&\x0d\n        observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC) {\x0d\n      installGarbageCollectionTracking();\x0d\n      gcTrackingInstalled = true;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kSkipThrow = Symbol('kSkipThrow');\x0d\nconst performanceObserverSorter = (first\x2C second) => {\x0d\n  return first.startTime - second.startTime;\x0d\n};\x0d\n\x0d\nclass PerformanceObserverEntryList {\x0d\n  constructor(skipThrowSymbol = undefined\x2C entries = []) {\x0d\n    if (skipThrowSymbol !== kSkipThrow) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n\x0d\n    this[kBuffer] = ArrayPrototypeSort(entries\x2C performanceObserverSorter);\x0d\n  }\x0d\n\x0d\n  getEntries() {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    return ArrayPrototypeSlice(this[kBuffer]);\x0d\n  }\x0d\n\x0d\n  getEntriesByType(type) {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    }\x0d\n    type = `${type}`;\x0d\n    return ArrayPrototypeFilter(\x0d\n      this[kBuffer]\x2C\x0d\n      (entry) => entry.entryType === type);\x0d\n  }\x0d\n\x0d\n  getEntriesByName(name\x2C type = undefined) {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n    name = `${name}`;\x0d\n    if (type != null /** not nullish */) {\x0d\n      return ArrayPrototypeFilter(\x0d\n        this[kBuffer]\x2C\x0d\n        (entry) => entry.name === name && entry.entryType === type);\x0d\n    }\x0d\n    return ArrayPrototypeFilter(\x0d\n      this[kBuffer]\x2C\x0d\n      (entry) => entry.name === name);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `PerformanceObserverEntryList ${inspect(this[kBuffer]\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceObserverEntryList.prototype\x2C {\x0d\n  getEntries: kEnumerableProperty\x2C\x0d\n  getEntriesByType: kEnumerableProperty\x2C\x0d\n  getEntriesByName: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceObserverEntryList'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nclass PerformanceObserver {\x0d\n  #buffer = [];\x0d\n  #entryTypes = new SafeSet();\x0d\n  #type;\x0d\n  #callback;\x0d\n\x0d\n  constructor(callback) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n    this.#callback = callback;\x0d\n  }\x0d\n\x0d\n  observe(options = kEmptyObject) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    const {\x0d\n      entryTypes\x2C\x0d\n      type\x2C\x0d\n      buffered\x2C\x0d\n    } = { ...options };\x0d\n    if (entryTypes === undefined && type === undefined)\x0d\n      throw new ERR_MISSING_ARGS('options.entryTypes'\x2C 'options.type');\x0d\n    if (entryTypes != null && type != null)\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.entryTypes'\x2C\x0d\n                                      entryTypes\x2C\x0d\n                                      'options.entryTypes can not set with ' +\x0d\n                                      'options.type together');\x0d\n\x0d\n    switch (this.#type) {\x0d\n      case undefined:\x0d\n        if (entryTypes !== undefined) this.#type = kTypeMultiple;\x0d\n        if (type !== undefined) this.#type = kTypeSingle;\x0d\n        break;\x0d\n      case kTypeSingle:\x0d\n        if (entryTypes !== undefined)\x0d\n          throw lazyDOMException(\x0d\n            'PerformanceObserver can not change to multiple observations'\x2C\x0d\n            'InvalidModificationError');\x0d\n        break;\x0d\n      case kTypeMultiple:\x0d\n        if (type !== undefined)\x0d\n          throw lazyDOMException(\x0d\n            'PerformanceObserver can not change to single observation'\x2C\x0d\n            'InvalidModificationError');\x0d\n        break;\x0d\n    }\x0d\n\x0d\n    if (this.#type === kTypeMultiple) {\x0d\n      if (!ArrayIsArray(entryTypes)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'options.entryTypes'\x2C\x0d\n          'string[]'\x2C\x0d\n          entryTypes);\x0d\n      }\x0d\n      maybeDecrementObserverCounts(this.#entryTypes);\x0d\n      this.#entryTypes.clear();\x0d\n      for (let n = 0; n < entryTypes.length; n++) {\x0d\n        if (ArrayPrototypeIncludes(kSupportedEntryTypes\x2C entryTypes[n])) {\x0d\n          this.#entryTypes.add(entryTypes[n]);\x0d\n          maybeIncrementObserverCount(entryTypes[n]);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      if (!ArrayPrototypeIncludes(kSupportedEntryTypes\x2C type))\x0d\n        return;\x0d\n      this.#entryTypes.add(type);\x0d\n      maybeIncrementObserverCount(type);\x0d\n      if (buffered) {\x0d\n        const entries = filterBufferMapByNameAndType(undefined\x2C type);\x0d\n        ArrayPrototypePushApply(this.#buffer\x2C entries);\x0d\n        kPending.add(this);\x0d\n        if (kPending.size)\x0d\n          queuePending();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this.#entryTypes.size)\x0d\n      kObservers.add(this);\x0d\n    else\x0d\n      this.disconnect();\x0d\n  }\x0d\n\x0d\n  disconnect() {\x0d\n    maybeDecrementObserverCounts(this.#entryTypes);\x0d\n    kObservers.delete(this);\x0d\n    kPending.delete(this);\x0d\n    this.#buffer = [];\x0d\n    this.#entryTypes.clear();\x0d\n    this.#type = undefined;\x0d\n  }\x0d\n\x0d\n  takeRecords() {\x0d\n    const list = this.#buffer;\x0d\n    this.#buffer = [];\x0d\n    return list;\x0d\n  }\x0d\n\x0d\n  static get supportedEntryTypes() {\x0d\n    return kSupportedEntryTypes;\x0d\n  }\x0d\n\x0d\n  [kMaybeBuffer](entry) {\x0d\n    if (!this.#entryTypes.has(entry.entryType))\x0d\n      return;\x0d\n    ArrayPrototypePush(this.#buffer\x2C entry);\x0d\n    kPending.add(this);\x0d\n    if (kPending.size)\x0d\n      queuePending();\x0d\n  }\x0d\n\x0d\n  [kDispatch]() {\x0d\n    const entryList = new PerformanceObserverEntryList(kSkipThrow\x2C this.takeRecords());\x0d\n\x0d\n    this.#callback(entryList\x2C this);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `PerformanceObserver ${inspect({\x0d\n      connected: kObservers.has(this)\x2C\x0d\n      pending: kPending.has(this)\x2C\x0d\n      entryTypes: ArrayFrom(this.#entryTypes)\x2C\x0d\n      buffer: this.#buffer\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceObserver.prototype\x2C {\x0d\n  observe: kEnumerableProperty\x2C\x0d\n  disconnect: kEnumerableProperty\x2C\x0d\n  takeRecords: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceObserver'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * https://www.w3.org/TR/performance-timeline/#dfn-queue-a-performanceentry\x0d\n *\x0d\n * Add the performance entry to the interested performance observer's queue.\x0d\n */\x0d\nfunction enqueue(entry) {\x0d\n  if (!isPerformanceEntry(entry))\x0d\n    throw new ERR_INVALID_ARG_TYPE('entry'\x2C 'PerformanceEntry'\x2C entry);\x0d\n\x0d\n  for (const obs of kObservers) {\x0d\n    obs[kMaybeBuffer](entry);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add the user timing entry to the global buffer.\x0d\n */\x0d\nfunction bufferUserTiming(entry) {\x0d\n  const entryType = entry.entryType;\x0d\n  let buffer;\x0d\n  if (entryType === 'mark') {\x0d\n    buffer = markEntryBuffer;\x0d\n  } else if (entryType === 'measure') {\x0d\n    buffer = measureEntryBuffer;\x0d\n  } else {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ArrayPrototypePush(buffer\x2C entry);\x0d\n  const count = buffer.length;\x0d\n\x0d\n  if (count > kPerformanceEntryBufferWarnSize &&\x0d\n    !kWarnedEntryTypes.has(entryType)) {\x0d\n    kWarnedEntryTypes.set(entryType\x2C true);\x0d\n    // No error code for this since it is a Warning\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const w = new Error('Possible perf_hooks memory leak detected. ' +\x0d\n                        `${count} ${entryType} entries added to the global ` +\x0d\n                        'performance entry buffer. Use ' +\x0d\n                        `${kClearPerformanceEntryBuffers[entryType]} to ` +\x0d\n                        'clear the buffer.');\x0d\n    w.name = 'MaxPerformanceEntryBufferExceededWarning';\x0d\n    w.entryType = entryType;\x0d\n    w.count = count;\x0d\n    process.emitWarning(w);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add the resource timing entry to the global buffer if the buffer size is not\x0d\n * exceeding the buffer limit\x2C or dispatch a buffer full event on the global\x0d\n * performance object.\x0d\n *\x0d\n * See also https://www.w3.org/TR/resource-timing-2/#dfn-add-a-performanceresourcetiming-entry\x0d\n */\x0d\nfunction bufferResourceTiming(entry) {\x0d\n  if (resourceTimingBuffer.length < resourceTimingBufferSizeLimit && !resourceTimingBufferFullPending) {\x0d\n    ArrayPrototypePush(resourceTimingBuffer\x2C entry);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (!resourceTimingBufferFullPending) {\x0d\n    resourceTimingBufferFullPending = true;\x0d\n    setImmediate(() => {\x0d\n      while (resourceTimingSecondaryBuffer.length > 0) {\x0d\n        const excessNumberBefore = resourceTimingSecondaryBuffer.length;\x0d\n        dispatchBufferFull('resourcetimingbufferfull');\x0d\n\x0d\n        // Calculate the number of items to be pushed to the global buffer.\x0d\n        const numbersToPreserve = MathMax(\x0d\n          MathMin(resourceTimingBufferSizeLimit - resourceTimingBuffer.length\x2C resourceTimingSecondaryBuffer.length)\x2C\x0d\n          0\x2C\x0d\n        );\x0d\n        const excessNumberAfter = resourceTimingSecondaryBuffer.length - numbersToPreserve;\x0d\n        for (let idx = 0; idx < numbersToPreserve; idx++) {\x0d\n          ArrayPrototypePush(resourceTimingBuffer\x2C resourceTimingSecondaryBuffer[idx]);\x0d\n        }\x0d\n\x0d\n        if (excessNumberBefore <= excessNumberAfter) {\x0d\n          resourceTimingSecondaryBuffer = [];\x0d\n        }\x0d\n      }\x0d\n      resourceTimingBufferFullPending = false;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ArrayPrototypePush(resourceTimingSecondaryBuffer\x2C entry);\x0d\n}\x0d\n\x0d\n// https://w3c.github.io/resource-timing/#dom-performance-setresourcetimingbuffersize\x0d\nfunction setResourceTimingBufferSize(maxSize) {\x0d\n  // If the maxSize parameter is less than resource timing buffer current\x0d\n  // size\x2C no PerformanceResourceTiming objects are to be removed from the\x0d\n  // performance entry buffer.\x0d\n  resourceTimingBufferSizeLimit = maxSize;\x0d\n}\x0d\n\x0d\nfunction setDispatchBufferFull(fn) {\x0d\n  dispatchBufferFull = fn;\x0d\n}\x0d\n\x0d\nfunction clearEntriesFromBuffer(type\x2C name) {\x0d\n  if (type !== 'mark' && type !== 'measure' && type !== 'resource') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (type === 'mark') {\x0d\n    markEntryBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(markEntryBuffer\x2C (entry) => entry.name !== name);\x0d\n  } else if (type === 'measure') {\x0d\n    measureEntryBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(measureEntryBuffer\x2C (entry) => entry.name !== name);\x0d\n  } else {\x0d\n    resourceTimingBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(resourceTimingBuffer\x2C (entry) => entry.name !== name);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction filterBufferMapByNameAndType(name\x2C type) {\x0d\n  let bufferList;\x0d\n  if (type === 'mark') {\x0d\n    bufferList = markEntryBuffer;\x0d\n  } else if (type === 'measure') {\x0d\n    bufferList = measureEntryBuffer;\x0d\n  } else if (type === 'resource') {\x0d\n    bufferList = resourceTimingBuffer;\x0d\n  } else if (type !== undefined) {\x0d\n    // Unrecognized type;\x0d\n    return [];\x0d\n  } else {\x0d\n    bufferList = [];\x0d\n    ArrayPrototypePushApply(bufferList\x2C markEntryBuffer);\x0d\n    ArrayPrototypePushApply(bufferList\x2C measureEntryBuffer);\x0d\n    ArrayPrototypePushApply(bufferList\x2C resourceTimingBuffer);\x0d\n  }\x0d\n  if (name !== undefined) {\x0d\n    bufferList = ArrayPrototypeFilter(bufferList\x2C (buffer) => buffer.name === name);\x0d\n  } else if (type !== undefined) {\x0d\n    bufferList = ArrayPrototypeSlice(bufferList);\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSort(bufferList\x2C performanceObserverSorter);\x0d\n}\x0d\n\x0d\nfunction observerCallback(name\x2C type\x2C startTime\x2C duration\x2C details) {\x0d\n  const entry =\x0d\n    createPerformanceNodeEntry(\x0d\n      name\x2C\x0d\n      type\x2C\x0d\n      startTime\x2C\x0d\n      duration\x2C\x0d\n      details);\x0d\n\x0d\n  if (details !== undefined) {\x0d\n    // GC\x2C HTTP2\x2C and HTTP PerformanceEntry used additional\x0d\n    // properties directly off the entry. Those have been\x0d\n    // moved into the details property. The existing accessors\x0d\n    // are still included but are deprecated.\x0d\n    entry[kDeprecatedFields] = new SafeMap();\x0d\n\x0d\n    const detailKeys = ObjectKeys(details);\x0d\n    const props = {};\x0d\n    for (let n = 0; n < detailKeys.length; n++) {\x0d\n      const key = detailKeys[n];\x0d\n      entry[kDeprecatedFields].set(key\x2C details[key]);\x0d\n      props[key] = {\x0d\n        configurable: true\x2C\x0d\n        enumerable: true\x2C\x0d\n        get: deprecate(() => {\x0d\n          return entry[kDeprecatedFields].get(key);\x0d\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\x0d\n        set: deprecate((value) => {\x0d\n          entry[kDeprecatedFields].set(key\x2C value);\x0d\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\x0d\n      };\x0d\n    }\x0d\n    ObjectDefineProperties(entry\x2C props);\x0d\n  }\x0d\n\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nsetupObservers(observerCallback);\x0d\n\x0d\nfunction hasObserver(type) {\x0d\n  const observerType = getObserverType(type);\x0d\n  return observerCounts[observerType] > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction startPerf(target\x2C key\x2C context = {}) {\x0d\n  target[key] = {\x0d\n    ...context\x2C\x0d\n    startTime: now()\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction stopPerf(target\x2C key\x2C context = {}) {\x0d\n  const ctx = target[key];\x0d\n  if (!ctx) {\x0d\n    return;\x0d\n  }\x0d\n  const startTime = ctx.startTime;\x0d\n  const entry = createPerformanceNodeEntry(\x0d\n    ctx.name\x2C\x0d\n    ctx.type\x2C\x0d\n    startTime\x2C\x0d\n    now() - startTime\x2C\x0d\n    { ...ctx.detail\x2C ...context.detail }\x2C\x0d\n  );\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  PerformanceObserver\x2C\x0d\n  PerformanceObserverEntryList\x2C\x0d\n  enqueue\x2C\x0d\n  hasObserver\x2C\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n\x0d\n  bufferUserTiming\x2C\x0d\n  bufferResourceTiming\x2C\x0d\n  setResourceTimingBufferSize\x2C\x0d\n  setDispatchBufferFull\x2C\x0d\n};\x0d\n
code-source-info,0x15e3f4628f4,110,0,17335,C0O0C4O17335,,
code-creation,JS,10,160275,0x15e3f4640f4,1215, node:internal/perf/observe:1:1,0x15e3f462868,~
code-source-info,0x15e3f4640f4,110,0,17335,C0O0C279O28C285O42C291O59C297O84C303O111C309O134C315O162C321O186C327O209C333O219C339O231C345O243C351O270C356O287C362O302C368O314C374O326C379O337C384O715C388O715C394O399C400O406C406O443C412O483C418O522C424O560C430O602C436O639C442O658C448O694C453O817C457O817C463O761C469O784C475O1003C479O1003C485O882C491O889C497O919C503O947C509O974C515O1113C519O1113C525O1045C531O1066C537O1085C543O1271C547O1271C553O1180C558O1193C564O1207C570O1228C576O1245C581O1330C585O1330C591O1311C597O1372C601O1372C607O1360C613O1408C617O1408C623O1400C629O1459C633O1459C637O1459C639O1497C643O1497C647O1497C649O1540C653O1540C657O1540C659O1591C663O1591C667O1591C669O1654C675O1707C678O1654C680O1770C681O1770C683O1796C685O1796C687O1828C688O1828C690O1867C696O1867C700O1867C702O2058C704O2058C706O2088C708O2088C710O2120C712O2120C714O2161C716O2161C718O2206C724O2206C726O2365C730O2365C732O2375C733O2375C735O2434C736O2434C738O2482C744O2482C748O2482C750O2609C754O2609C759O2609C761O2646C765O2646C770O2646C772O2679C776O2679C781O2679C783O2711C784O2711C786O4163C790O4163C794O4163C796O4220C800O4220C831O5555C854O4294C856O5816C864O5868C878O5896C884O5938C890O5980C896O6005C899O6025C908O5816C1014O9135C1027O9351C1038O9506C1072O9906C1076O9949C1090O9974C1096O10010C1102O10047C1108O10072C1111O10092C1120O9906C1125O16416C1129O17033C1137O17055C1143O17079C1149O17112C1155O17124C1161O17140C1167O17167C1173O17200C1179O17214C1185O17229C1191O17250C1197O17275C1203O17307C1209O17048C1214O17334,,
code-creation,JS,10,160392,0x15e3f464834,50,PerformanceObserver node:internal/perf/observe:243:27,0x15e3f463348,~
code-source-info,0x15e3f464834,110,6204,9904,C3O6219C13O6240C20O6240C34O6258C43O6268C49O9904,,
code-creation,Eval,10,160662,0x15e3f4655fc,5, node:internal/perf/performance_entry:1:1,0x15e3f4653f8,~
script-source,111,node:internal/perf/performance_entry,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { validateInternalField } = require('internal/validators');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kName = Symbol('PerformanceEntry.Name');\x0d\nconst kEntryType = Symbol('PerformanceEntry.EntryType');\x0d\nconst kStartTime = Symbol('PerformanceEntry.StartTime');\x0d\nconst kDuration = Symbol('PerformanceEntry.Duration');\x0d\nconst kDetail = Symbol('NodePerformanceEntry.Detail');\x0d\nconst kSkipThrow = Symbol('kSkipThrow');\x0d\n\x0d\nfunction isPerformanceEntry(obj) {\x0d\n  return obj?.[kName] !== undefined;\x0d\n}\x0d\n\x0d\nclass PerformanceEntry {\x0d\n  constructor(\x0d\n    skipThrowSymbol = undefined\x2C\x0d\n    name = undefined\x2C\x0d\n    type = undefined\x2C\x0d\n    start = undefined\x2C\x0d\n    duration = undefined\x2C\x0d\n  ) {\x0d\n    if (skipThrowSymbol !== kSkipThrow) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n\x0d\n    this[kName] = name;\x0d\n    this[kEntryType] = type;\x0d\n    this[kStartTime] = start;\x0d\n    this[kDuration] = duration;\x0d\n  }\x0d\n\x0d\n  get name() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return this[kName];\x0d\n  }\x0d\n\x0d\n  get entryType() {\x0d\n    validateInternalField(this\x2C kEntryType\x2C 'PerformanceEntry');\x0d\n    return this[kEntryType];\x0d\n  }\x0d\n\x0d\n  get startTime() {\x0d\n    validateInternalField(this\x2C kStartTime\x2C 'PerformanceEntry');\x0d\n    return this[kStartTime];\x0d\n  }\x0d\n\x0d\n  get duration() {\x0d\n    validateInternalField(this\x2C kDuration\x2C 'PerformanceEntry');\x0d\n    return this[kDuration];\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `${this.constructor.name} ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return {\x0d\n      name: this[kName]\x2C\x0d\n      entryType: this[kEntryType]\x2C\x0d\n      startTime: this[kStartTime]\x2C\x0d\n      duration: this[kDuration]\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceEntry.prototype\x2C {\x0d\n  name: kEnumerableProperty\x2C\x0d\n  entryType: kEnumerableProperty\x2C\x0d\n  startTime: kEnumerableProperty\x2C\x0d\n  duration: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction createPerformanceEntry(name\x2C type\x2C start\x2C duration) {\x0d\n  return new PerformanceEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Node.js specific extension to PerformanceEntry.\x0d\n */\x0d\nclass PerformanceNodeEntry extends PerformanceEntry {\x0d\n  get detail() {\x0d\n    validateInternalField(this\x2C kDetail\x2C 'NodePerformanceEntry');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return {\x0d\n      name: this[kName]\x2C\x0d\n      entryType: this[kEntryType]\x2C\x0d\n      startTime: this[kStartTime]\x2C\x0d\n      duration: this[kDuration]\x2C\x0d\n      detail: this[kDetail]\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createPerformanceNodeEntry(name\x2C type\x2C start\x2C duration\x2C detail) {\x0d\n  const entry = new PerformanceNodeEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\x0d\n\x0d\n  entry[kDetail] = detail;\x0d\n\x0d\n  return entry;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  createPerformanceEntry\x2C\x0d\n  PerformanceEntry\x2C\x0d\n  isPerformanceEntry\x2C\x0d\n  PerformanceNodeEntry\x2C\x0d\n  createPerformanceNodeEntry\x2C\x0d\n  kSkipThrow\x2C\x0d\n};\x0d\n
code-source-info,0x15e3f4655fc,111,0,3412,C0O0C4O3412,,
code-creation,JS,10,160807,0x15e3f466334,371, node:internal/perf/performance_entry:1:1,0x15e3f465570,~
code-source-info,0x15e3f466334,111,0,3412,C0O0C53O28C58O55C63O145C66O145C71O102C76O109C82O247C85O247C90O208C95O221C100O308C103O308C108O282C114O363C117O363C122O351C128O397C131O397C135O397C137O450C140O450C144O450C146O508C149O508C153O508C155O565C158O565C162O565C164O619C167O619C171O619C173O678C176O678C180O678C211O1665C239O782C241O2158C244O2198C256O2220C262O2255C268O2290C274O2324C280O2356C284O2158C292O2624C320O2589C322O3246C329O3268C335O3295C341O3316C347O3339C353O3364C359O3395C365O3261C370O3411,,
code-creation,JS,10,161145,0x15e3f467dc4,34,protoGetter node:net:866:21,0x3ba13650978,~
code-source-info,0x15e3f467dc4,88,23562,23731,C0O23584C8O23612C13O23623C20O23712C27O23584C33O23730,,
code-creation,Eval,10,161789,0x15e3f470b5c,5, node:dgram:1:1,0x15e3f4705a8,~
script-source,112,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x2C\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate\x2C guessHandleType\x2C promisify } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x2C\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst udpSocketChannel = dc.channel('udp.socket');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst {\x0d\n  ErrnoException\x2C\x0d\n  ExceptionWithHostPort\x2C\x0d\n} = errors;\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x2C\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      if (this[kStateSymbol].handle) this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      const disposable = EventEmitter.addAbortListener(signal\x2C onAborted);\x0d\n      this.once('close'\x2C disposable[SymbolDispose]);\x0d\n    }\x0d\n  }\x0d\n  if (udpSocketChannel.hasSubscribers) {\x0d\n    udpSocketChannel.publish({\x0d\n      socket: this\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  state.handle.onerror = onError;\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n  // Sync the old handle state to new handle\x0d\n  if (!oldHandle.hasRef() && typeof newHandle.unref === 'function') {\x0d\n    newHandle.unref();\x0d\n  }\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x2C\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = new ErrnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw new ErrnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x2C\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x2C\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw new ErrnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address != null) {\x0d\n    validateString(address\x2C 'address');\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x2C\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = new ExceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = new ExceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype[SymbolAsyncDispose] = async function() {\x0d\n  if (!this[kStateSymbol].handle) {\x0d\n    return;\x0d\n  }\x0d\n  return FunctionPrototypeCall(promisify(this.close)\x2C this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw new ErrnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw new ErrnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw new ErrnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw new ErrnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw new ErrnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw new ErrnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw new ErrnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw new ErrnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw new ErrnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw new ErrnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw new ErrnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C new ErrnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onError(nread\x2C handle\x2C error) {\x0d\n  const self = handle[owner_symbol];\x0d\n  return self.emit('error'\x2C error);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\nSocket.prototype.getSendQueueSize = function() {\x0d\n  return this[kStateSymbol].handle.getSendQueueSize();\x0d\n};\x0d\n\x0d\nSocket.prototype.getSendQueueCount = function() {\x0d\n  return this[kStateSymbol].handle.getSendQueueCount();\x0d\n};\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x2C\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x2C\x0d\n};\x0d\n
code-source-info,0x15e3f470b5c,112,0,29371,C0O0C4O29371,,
code-creation,JS,10,162831,0x15e3f472eb4,1627, node:dgram:1:1,0x15e3f470ad0,~
code-source-info,0x15e3f472eb
code-creation,Eval,10,163208,0x15e3f47464c,5, node:internal/dgram:1:1,0x15e3f474438,~
script-source,113,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = require('internal/util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n};\x0d\n
code-source-info,0x15e3f47464c,113,0,1943,C0O0C4O1943,,
code-creation,JS,10,163298,0x15e3f474934,199, node:internal/dgram:1:1,0x15e3f4745c0,~
code-source-info,0x15e3f474934,113,0,1943,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C103O204C108O184C114O277C120O277C125O242C131O254C137O332C140O332C145O318C151O367C157O422C160O422C165O451C166O451C168O1864C175O1886C181O1903C187O1927C193O1879C198O1942,,
code-creation,JS,11,163505,0x7ff62c4c6700,968,getDeprecationWarningEmitter node:internal/util:112:38,0xfca8d3f3b8,^
code-source-info,0x7ff62c4c6700,16,2896,3529,,,
code-creation,JS,11,163556,0x7ff62c4cf380,3032,dirname node:path:657:10,0x22671c9abe0,^
code-source-info,0x7ff62c4cf380,34,21383,24011,,,
code-creation,JS,11,163573,0x7ff62c4c6b00,284,makeBitMapDescriptor node:internal/streams/readable:127:30,0x3ba136731f8,^
code-source-info,0x7ff62c4c6b00,99,3888,4090,,,
code-creation,JS,11,163589,0x7ff62c4c6c40,284,makeBitMapDescriptor node:internal/streams/writable:120:30,0x15e3f449690,^
code-source-info,0x7ff62c4c6c40,104,3832,4034,,,
code-creation,JS,11,163636,0x7ff62c4c6d80,264,protoGetter node:net:866:21,0x3ba13650978,^
code-source-info,0x7ff62c4c6d80,88,23562,23731,,,
code-creation,Eval,10,163899,0x15e3f47a3ec,5, node:internal/socket_list:1:1,0x15e3f47a288,~
script-source,114,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x2C\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x2C\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x2C\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x2C\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x15e3f47a3ec,114,0,2817,C0O0C4O2817,,
code-creation,JS,10,164027,0x15e3f47aa5c,124, node:internal/socket_list:1:1,0x15e3f47a360,~
code-source-info,0x15e3f47aa5c,114,0,2817,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C72O1585C99O2760C106O2779C112O2795C118O2775C123O2816,,
code-creation,JS,10,164228,0x15e3f47bb44,14,customPromiseExecFunction node:child_process:239:35,0x3c57027e2e0,~
code-source-info,0x15e3f47bb44,86,7170,7550,C0O7170C9O7185C13O7547,,
code-creation,Eval,10,164386,0x15e3f47e6dc,5, node:internal/cluster/round_robin_handle:1:1,0x15e3f47e4c8,~
script-source,115,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog\x2C readableAll\x2C writableAll }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = init({ __proto__: null });\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd\x2C backlog });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n      backlog\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen({\x0d\n      path: address\x2C\x0d\n      backlog\x2C\x0d\n      readableAll\x2C\x0d\n      writableAll\x2C\x0d\n    });  // UNIX socket path.\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  while (!isEmpty(this.handles)) {\x0d\n    const handle = peek(this.handles);\x0d\n    handle.close();\x0d\n    remove(handle);\x0d\n  }\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  // If `accept` fails just skip it (handle is undefined)\x0d\n  if (err) {\x0d\n    return;\x0d\n  }\x0d\n  append(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = peek(this.handles);\x0d\n\x0d\n  if (handle === null) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  remove(handle);\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x15e3f47e6dc,115,0,3592,C0O0C4O3592,,
code-creation,JS,10,164535,0x15e3f47eac4,208, node:internal/cluster/round_robin_handle:1:1,0x15e3f47e650,~
code-source-info,0x15e3f47eac4,115,0,3592,C0O0C46O28C52O45C58O57C64O102C67O102C71O102C73O143C76O143C80O143C82O183C85O183C90O168C96O267C99O267C104O227C110O235C116O241C122O250C128O256C134O322C137O322C142O308C148O354C150O369C154O1385C163O1399C167O2077C176O2094C180O2497C189O2518C193O2976C202O2994C207O3591,,
code-creation,Eval,10,164686,0x15e3f47f17c,5, node:internal/cluster/utils:1:1,0x15e3f47eff8,~
script-source,116,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x2C\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x15e3f47f17c,116,0,1105,C0O0C4O1105,,
code-creation,JS,10,164745,0x15e3f47f34c,72, node:internal/cluster/utils:1:1,0x15e3f47f0f0,~
code-source-info,0x15e3f47f34c,116,0,1105,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O147C60O147C65O147C67O173C68O173C71O1104,,
code-creation,Eval,10,164858,0x15e3f47fa2c,5, node:internal/cluster/shared_handle:1:1,0x15e3f47f898,~
script-source,117,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x15e3f47fa2c,117,0,1147,C0O0C4O1147,,
code-creation,JS,10,165002,0x15e3f47fc7c,89, node:internal/cluster/shared_handle:1:1,0x15e3f47f9a0,~
code-source-info,0x15e3f47fc7c,117,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,165131,0x3ba1367cdd4,5, node:internal/cluster/worker:1:1,0x3ba1367cc40,~
script-source,118,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = kEmptyObject;\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x2C\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x3ba1367cdd4,118,0,1436,C0O0C4O1436,,
code-creation,JS,10,165200,0x3ba1367d174,158, node:internal/cluster/worker:1:1,0x3ba1367cd48,~
code-source-info,0x3ba1367d174,118,0,1436,C0O0C20O28C25O53C31O109C34O109C38O109C40O156C43O156C48O139C54O185C56O200C60O915C63O943C71O967C76O915C81O980C87O980C92O1027C95O1034C104O1049C108O1119C111O1126C120O1141C124O1231C127O1238C136O1255C140O1353C143O1360C152O1382C157O1435,,
code-creation,JS,10,165396,0x3ba1367e03c,170,getESMFacade node:internal/bootstrap/realm:340:15,0xfca8d34338,~
code-source-info,0x3ba1367e03c,9,11173,11942,C0O11173C8O11192C14O11212C18O11219C19O11248C29O11248C34O11233C39O11368C46O11400C53O11368C58O11435C61O11448C70O11475C72O11475C74O11506C81O11531C86O11506C91O11549C101O11549C106O11598C108O11651C121O11612C126O11610C130O11853C135O11860C140O11860C144O11885C149O11892C159O11892C165O11930C169O11937,,
code-creation,JS,10,165509,0x3ba1367e574,38, node:internal/bootstrap/realm:351:15,0x3ba1367df20,~
code-source-info,0x3ba1367e574,9,11679,11777,C0O11693C5O11701C10O11701C14O11730C25O11759C30O11730C37O11776,,
code-creation,JS,10,165572,0x3ba1367e6e4,90,syncExports node:internal/bootstrap/realm:365:14,0xfca8d343b8,~
code-source-info,0x3ba1367e6e4,9,12255,12598,C0O12284C5O12310C11O12340C13O12353C17O12345C22O12396C24O12401C28O12415C30O12430C35O12445C37O12469C42O12476C51O12529C54O12541C59O12567C67O12529C73O12476C79O12362C84O12327C89O12597,,
code-creation,JS,10,165665,0x3ba1367e87c,35,getOwn node:internal/bootstrap/realm:202:16,0xfca8d33d88,~
code-source-info,0x3ba1367e87c,9,6578,6736,C0O6615C5O6622C14O6677C26O6677C34O6733,,
code-creation,JS,10,165758,0x3ba1367eb9c,16, node:internal/modules/cjs/loader:122:3,0x22671cb6598,~
code-source-info,0x3ba1367eb9c,63,3818,3872,C0O3862C6O3824C11O3862C15O3872,,
code-creation,Eval,10,165925,0x3ba1367f0dc,5, node:internal/process/esm_loader:1:1,0x3ba1367ef08,~
script-source,119,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst { createModuleLoader } = require('internal/modules/esm/loader');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { kEmptyObject\x2C getCWDURL } = require('internal/util');\x0d\n\x0d\nlet esmLoader;\x0d\n\x0d\nmodule.exports = {\x0d\n  get esmLoader() {\x0d\n    return esmLoader ??= createModuleLoader(true);\x0d\n  }\x2C\x0d\n  async loadESM(callback) {\x0d\n    esmLoader ??= createModuleLoader(true);\x0d\n    try {\x0d\n      const userImports = getOptionValue('--import');\x0d\n      if (userImports.length > 0) {\x0d\n        const parentURL = getCWDURL().href;\x0d\n        for (let i = 0; i < userImports.length; i++) {\x0d\n          await esmLoader.import(userImports[i]\x2C parentURL\x2C kEmptyObject);\x0d\n        }\x0d\n      } else {\x0d\n        esmLoader.forceLoadHooks();\x0d\n      }\x0d\n      await callback(esmLoader);\x0d\n    } catch (err) {\x0d\n      if (hasUncaughtExceptionCaptureCallback()) {\x0d\n        process._fatalException(err);\x0d\n        return;\x0d\n      }\x0d\n      internalBinding('errors').triggerUncaughtException(\x0d\n        err\x2C\x0d\n        true\x2C /* fromPromise */\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x3ba1367f0dc,119,0,1153,C0O0C4O1153,,
code-creation,JS,10,165996,0x3ba1367f2dc,137, node:internal/process/esm_loader:1:1,0x3ba1367f050,~
code-source-info,0x3ba1367f2dc,119,0,1153,C0O0C31O48C34O48C39O25C45O116C48O116C53O97C59O199C62O199C67O157C73O275C76O275C81O247C87O261C93O308C94O308C96O322C101O423C131O337C136O1152,,
new,MemoryChunk,0x3e8c8700000,262144
code-creation,Eval,10,166417,0x3e8c87031ec,5, node:internal/modules/esm/loader:1:1,0x3e8c8702d80,~
script-source,120,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  encodeURIComponent\x2C\x0d\n  hardenRegExp\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_REQUIRE_ESM\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { pathToFileURL\x2C isURL } = require('internal/url');\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  getDefaultConditions\x2C\x0d\n} = require('internal/modules/esm/utils');\x0d\nlet defaultResolve\x2C defaultLoad\x2C defaultLoadSync\x2C importMetaInitializer;\x0d\n\x0d\n/**\x0d\n * Lazy loads the module_map module and returns a new instance of ResolveCache.\x0d\n * @returns {import('./module_map.js').ResolveCache')}\x0d\n */\x0d\nfunction newResolveCache() {\x0d\n  const { ResolveCache } = require('internal/modules/esm/module_map');\x0d\n  return new ResolveCache();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Generate a load cache (to store the final result of a load-chain for a particular module).\x0d\n * @returns {import('./module_map.js').LoadCache')}\x0d\n */\x0d\nfunction newLoadCache() {\x0d\n  const { LoadCache } = require('internal/modules/esm/module_map');\x0d\n  return new LoadCache();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Lazy-load translators to avoid potentially unnecessary work at startup (ex if ESM is not used).\x0d\n * @returns {import('./translators.js').Translators}\x0d\n */\x0d\nfunction getTranslators() {\x0d\n  const { translators } = require('internal/modules/esm/translators');\x0d\n  return translators;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @type {HooksProxy}\x0d\n * Multiple loader instances exist for various\x2C specific reasons (see code comments at site).\x0d\n * In order to maintain consistency\x2C we use a single worker (sandbox)\x2C which must sit apart of an\x0d\n * individual loader instance.\x0d\n */\x0d\nlet hooksProxy;\x0d\n\x0d\n/**\x0d\n * @typedef {Record<string\x2C any>} ModuleExports\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\x0d\n */\x0d\n\x0d\n/**\x0d\n * This class covers the base machinery of module loading. To add custom\x0d\n * behavior you can pass a customizations object and this object will be\x0d\n * used to do the loading/resolving/registration process.\x0d\n */\x0d\nclass ModuleLoader {\x0d\n  /**\x0d\n   * The conditions for resolving packages if `--conditions` is not used.\x0d\n   */\x0d\n  #defaultConditions = getDefaultConditions();\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of resolved specifiers\x0d\n   */\x0d\n  #resolveCache = newResolveCache();\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  loadCache = newLoadCache();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = getTranslators();\x0d\n\x0d\n  /**\x0d\n   * Truthy to allow the use of `import.meta.resolve`. This is needed\x0d\n   * currently because the `Hooks` class does not have `resolveSync`\x0d\n   * implemented and `import.meta.resolve` requires it.\x0d\n   */\x0d\n  allowImportMetaResolve;\x0d\n\x0d\n  /**\x0d\n   * Customizations to pass requests to.\x0d\n   *\x0d\n   * Note that this value _MUST_ be set with `setCustomizations`\x0d\n   * because it needs to copy `customizations.allowImportMetaResolve`\x0d\n   *  to this property and failure to do so will cause undefined\x0d\n   * behavior when invoking `import.meta.resolve`.\x0d\n   * @see {ModuleLoader.setCustomizations}\x0d\n   */\x0d\n  #customizations;\x0d\n\x0d\n  constructor(customizations) {\x0d\n    if (getOptionValue('--experimental-network-imports')) {\x0d\n      emitExperimentalWarning('Network Imports');\x0d\n    }\x0d\n    this.setCustomizations(customizations);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Change the currently activate customizations for this module\x0d\n   * loader to be the provided `customizations`.\x0d\n   *\x0d\n   * If present\x2C this class customizes its core functionality to the\x0d\n   * `customizations` object\x2C including registration\x2C loading\x2C and resolving.\x0d\n   * There are some responsibilities that this class _always_ takes\x0d\n   * care of\x2C like validating outputs\x2C so that the customizations object\x0d\n   * does not have to do so.\x0d\n   *\x0d\n   * The customizations object has the shape:\x0d\n   *\x0d\n   * ```ts\x0d\n   * interface LoadResult {\x0d\n   *   format: ModuleFormat;\x0d\n   *   source: ModuleSource;\x0d\n   * }\x0d\n   *\x0d\n   * interface ResolveResult {\x0d\n   *   format: string;\x0d\n   *   url: URL['href'];\x0d\n   * }\x0d\n   *\x0d\n   * interface Customizations {\x0d\n   *   allowImportMetaResolve: boolean;\x0d\n   *   load(url: string\x2C context: object): Promise<LoadResult>\x0d\n   *   resolve(\x0d\n   *     originalSpecifier:\x0d\n   *     string\x2C parentURL: string\x2C\x0d\n   *     importAttributes: Record<string\x2C string>\x0d\n   *   ): Promise<ResolveResult>\x0d\n   *   resolveSync(\x0d\n   *     originalSpecifier:\x0d\n   *     string\x2C parentURL: string\x2C\x0d\n   *     importAttributes: Record<string\x2C string>\x0d\n   *   ) ResolveResult;\x0d\n   *   register(specifier: string\x2C parentURL: string): any;\x0d\n   *   forceLoadHooks(): void;\x0d\n   * }\x0d\n   * ```\x0d\n   *\x0d\n   * Note that this class _also_ implements the `Customizations`\x0d\n   * interface\x2C as does `CustomizedModuleLoader` and `Hooks`.\x0d\n   *\x0d\n   * Calling this function alters how modules are loaded and should be\x0d\n   * invoked with care.\x0d\n   * @param {object} customizations\x0d\n   */\x0d\n  setCustomizations(customizations) {\x0d\n    this.#customizations = customizations;\x0d\n    if (customizations) {\x0d\n      this.allowImportMetaResolve = customizations.allowImportMetaResolve;\x0d\n    } else {\x0d\n      this.allowImportMetaResolve = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x2C\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap } = internalBinding('module_wrap');\x0d\n      const { registerModule } = require('internal/modules/esm/utils');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      registerModule(module\x2C {\x0d\n        __proto__: null\x2C\x0d\n        initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAttributes) => {\x0d\n          return this.import(specifier\x2C url\x2C importAttributes);\x0d\n        }\x2C\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.loadCache.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      __proto__: null\x2C\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const resolveResult = await this.resolve(specifier\x2C parentURL\x2C importAttributes);\x0d\n    return this.getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  getModuleJobSync(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const resolveResult = this.resolveSync(specifier\x2C parentURL\x2C importAttributes);\x0d\n    return this.getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C true);\x0d\n  }\x0d\n\x0d\n  getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C sync) {\x0d\n    const { url\x2C format } = resolveResult;\x0d\n    const resolvedImportAttributes = resolveResult.importAttributes ?? importAttributes;\x0d\n    let job = this.loadCache.get(url\x2C resolvedImportAttributes.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.loadCache.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C resolvedImportAttributes\x2C parentURL\x2C format\x2C sync);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAttributes\x2C parentURL\x2C format\x2C sync) {\x0d\n    const callTranslator = ({ format: finalFormat\x2C responseURL\x2C source }\x2C isMain) => {\x0d\n      const translator = getTranslators().get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\x0d\n    };\x0d\n    const context = { format\x2C importAttributes };\x0d\n\x0d\n    const moduleProvider = sync ?\x0d\n      (url\x2C isMain) => callTranslator(this.loadSync(url\x2C context)\x2C isMain) :\x0d\n      async (url\x2C isMain) => callTranslator(await this.load(url\x2C context)\x2C isMain);\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\x0d\n      process.send({ 'watch:import': [url] });\x0d\n    }\x0d\n\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAttributes\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x2C\x0d\n      sync\x2C\x0d\n    );\x0d\n\x0d\n    this.loadCache.set(url\x2C importAttributes.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Use directly with caution.\x0d\n   * @param {string} specifier The first parameter of an `import()` expression.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleExports>}\x0d\n   */\x0d\n  async import(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const moduleJob = await this.getModuleJob(specifier\x2C parentURL\x2C importAttributes);\x0d\n    const { module } = await moduleJob.run();\x0d\n    return module.getNamespace();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @see {@link CustomizedModuleLoader.register}\x0d\n   */\x0d\n  register(specifier\x2C parentURL\x2C data\x2C transferList) {\x0d\n    if (!this.#customizations) {\x0d\n      // `CustomizedModuleLoader` is defined at the bottom of this file and\x0d\n      // available well before this line is ever invoked. This is here in\x0d\n      // order to preserve the git diff instead of moving the class.\x0d\n      // eslint-disable-next-line no-use-before-define\x0d\n      this.setCustomizations(new CustomizedModuleLoader());\x0d\n    }\x0d\n    return this.#customizations.register(`${specifier}`\x2C `${parentURL}`\x2C data\x2C transferList);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAttributes} importAttributes Attributes from the import\x0d\n   *                                            statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  resolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.resolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    }\x0d\n    const requestKey = this.#resolveCache.serializeKey(originalSpecifier\x2C importAttributes);\x0d\n    const cachedResult = this.#resolveCache.get(requestKey\x2C parentURL);\x0d\n    if (cachedResult != null) {\x0d\n      return cachedResult;\x0d\n    }\x0d\n    const result = this.defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    this.#resolveCache.set(requestKey\x2C parentURL\x2C result);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Just like `resolve` except synchronous. This is here specifically to support\x0d\n   * `import.meta.resolve` which must happen synchronously.\x0d\n   */\x0d\n  resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    }\x0d\n    return this.defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Our `defaultResolve` is synchronous and can be used in both\x0d\n   * `resolve` and `resolveSync`. This function is here just to avoid\x0d\n   * repeating the same code block twice in those functions.\x0d\n   */\x0d\n  defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    defaultResolve ??= require('internal/modules/esm/resolve').defaultResolve;\x0d\n\x0d\n    const context = {\x0d\n      __proto__: null\x2C\x0d\n      conditions: this.#defaultConditions\x2C\x0d\n      importAttributes\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n\x0d\n    return defaultResolve(originalSpecifier\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} [context] Metadata about the module\x0d\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\x0d\n   */\x0d\n  async load(url\x2C context) {\x0d\n    defaultLoad ??= require('internal/modules/esm/load').defaultLoad;\x0d\n    const result = this.#customizations ?\x0d\n      await this.#customizations.load(url\x2C context) :\x0d\n      await defaultLoad(url\x2C context);\x0d\n    this.validateLoadResult(url\x2C result?.format);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  loadSync(url\x2C context) {\x0d\n    defaultLoadSync ??= require('internal/modules/esm/load').defaultLoadSync;\x0d\n\x0d\n    let result = this.#customizations ?\x0d\n      this.#customizations.loadSync(url\x2C context) :\x0d\n      defaultLoadSync(url\x2C context);\x0d\n    let format = result?.format;\x0d\n    if (format === 'module') {\x0d\n      throw new ERR_REQUIRE_ESM(url\x2C true);\x0d\n    }\x0d\n    if (format === 'commonjs') {\x0d\n      format = 'require-commonjs';\x0d\n      result = { __proto__: result\x2C format };\x0d\n    }\x0d\n    this.validateLoadResult(url\x2C format);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  validateLoadResult(url\x2C format) {\x0d\n    if (format == null) {\x0d\n      require('internal/modules/esm/load').throwUnknownModuleFormat(url\x2C format);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.importMetaInitialize(meta\x2C context\x2C this);\x0d\n    }\x0d\n    importMetaInitializer ??= require('internal/modules/esm/initialize_import_meta').initializeImportMeta;\x0d\n    meta = importMetaInitializer(meta\x2C context\x2C this);\x0d\n    return meta;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * No-op when no hooks have been supplied.\x0d\n   */\x0d\n  forceLoadHooks() {\x0d\n    this.#customizations?.forceLoadHooks();\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleLoader.prototype\x2C null);\x0d\n\x0d\nclass CustomizedModuleLoader {\x0d\n\x0d\n  allowImportMetaResolve = true;\x0d\n\x0d\n  /**\x0d\n   * Instantiate a module loader that uses user-provided custom loader hooks.\x0d\n   */\x0d\n  constructor() {\x0d\n    getHooksProxy();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Register some loader specifier.\x0d\n   * @param {string} originalSpecifier The specified URL path of the loader to\x0d\n   *                                   be registered.\x0d\n   * @param {string} parentURL The parent URL from where the loader will be\x0d\n   *                           registered if using it package name as specifier\x0d\n   * @param {any} [data] Arbitrary data to be passed from the custom loader\x0d\n   * (user-land) to the worker.\x0d\n   * @param {any[]} [transferList] Objects in `data` that are changing ownership\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  register(originalSpecifier\x2C parentURL\x2C data\x2C transferList) {\x0d\n    return hooksProxy.makeSyncRequest('register'\x2C transferList\x2C originalSpecifier\x2C parentURL\x2C data);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAttributes} importAttributes Attributes from the import\x0d\n   *                                            statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  resolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    return hooksProxy.makeAsyncRequest('resolve'\x2C undefined\x2C originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    // This happens only as a result of `import.meta.resolve` calls\x2C which must be sync per spec.\x0d\n    return hooksProxy.makeSyncRequest('resolve'\x2C undefined\x2C originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} [context] Metadata about the module\x0d\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\x0d\n   */\x0d\n  load(url\x2C context) {\x0d\n    return hooksProxy.makeAsyncRequest('load'\x2C undefined\x2C url\x2C context);\x0d\n  }\x0d\n  loadSync(url\x2C context) {\x0d\n    return hooksProxy.makeSyncRequest('load'\x2C undefined\x2C url\x2C context);\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context\x2C loader) {\x0d\n    hooksProxy.importMetaInitialize(meta\x2C context\x2C loader);\x0d\n  }\x0d\n\x0d\n  forceLoadHooks() {\x0d\n    hooksProxy.waitForWorker();\x0d\n  }\x0d\n}\x0d\n\x0d\nlet emittedLoaderFlagWarning = false;\x0d\n/**\x0d\n * A loader instance is used as the main entry point for loading ES modules. Currently\x2C this is a singleton; there is\x0d\n * only one used for loading the main module and everything in its dependency graph\x2C though separate instances of this\x0d\n * class might be instantiated as part of bootstrap for other purposes.\x0d\n * @param {boolean} useCustomLoadersIfPresent If the user has provided loaders via the --loader flag\x2C use them.\x0d\n * @returns {ModuleLoader}\x0d\n */\x0d\nfunction createModuleLoader(useCustomLoadersIfPresent = true) {\x0d\n  let customizations = null;\x0d\n  if (useCustomLoadersIfPresent &&\x0d\n      // Don't spawn a new worker if we're already in a worker thread created by instantiating CustomizedModuleLoader;\x0d\n      // doing so would cause an infinite loop.\x0d\n      !require('internal/modules/esm/utils').isLoaderWorker()) {\x0d\n    const userLoaderPaths = getOptionValue('--experimental-loader');\x0d\n    if (userLoaderPaths.length > 0) {\x0d\n      if (!emittedLoaderFlagWarning) {\x0d\n        const readableURIEncode = (string) => ArrayPrototypeReduce(\x0d\n          [\x0d\n            [/'/g\x2C '%27']\x2C // We need to URL-encode the single quote as it's the delimiter for the --import flag.\x0d\n            [/%22/g\x2C '"']\x2C // We can decode the double quotes to improve readability.\x0d\n            [/%2F/ig\x2C '/']\x2C // We can decode the slashes to improve readability.\x0d\n          ]\x2C\x0d\n          (str\x2C { 0: regex\x2C 1: replacement }) => RegExpPrototypeSymbolReplace(hardenRegExp(regex)\x2C str\x2C replacement)\x2C\x0d\n          encodeURIComponent(string));\x0d\n        process.emitWarning(\x0d\n          '`--experimental-loader` may be removed in the future; instead use `register()`:\\n' +\x0d\n          `--import 'data:text/javascript\x2Cimport { register } from "node:module"; import { pathToFileURL } from "node:url"; ${ArrayPrototypeJoin(\x0d\n            ArrayPrototypeMap(userLoaderPaths\x2C (loader) => `register(${readableURIEncode(JSONStringify(loader))}\x2C pathToFileURL("./"))`)\x2C\x0d\n            '; '\x2C\x0d\n          )};'`\x2C\x0d\n          'ExperimentalWarning'\x2C\x0d\n        );\x0d\n        emittedLoaderFlagWarning = true;\x0d\n      }\x0d\n      customizations = new CustomizedModuleLoader();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new ModuleLoader(customizations);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Get the HooksProxy instance. If it is not defined\x2C then create a new one.\x0d\n * @returns {HooksProxy}\x0d\n */\x0d\nfunction getHooksProxy() {\x0d\n  if (!hooksProxy) {\x0d\n    const { HooksProxy } = require('internal/modules/esm/hooks');\x0d\n    hooksProxy = new HooksProxy();\x0d\n  }\x0d\n\x0d\n  return hooksProxy;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Register a single loader programmatically.\x0d\n * @param {string|import('url').URL} specifier\x0d\n * @param {string|import('url').URL} [parentURL] Base to use when resolving `specifier`; optional if\x0d\n * `specifier` is absolute. Same as `options.parentUrl`\x2C just inline\x0d\n * @param {object} [options] Additional options to apply\x2C described below.\x0d\n * @param {string|import('url').URL} [options.parentURL] Base to use when resolving `specifier`\x0d\n * @param {any} [options.data] Arbitrary data passed to the loader's `initialize` hook\x0d\n * @param {any[]} [options.transferList] Objects in `data` that are changing ownership\x0d\n * @returns {void} We want to reserve the return value for potential future extension of the API.\x0d\n * @example\x0d\n * ```js\x0d\n * register('./myLoader.js');\x0d\n * register('ts-node/esm'\x2C { parentURL: import.meta.url });\x0d\n * register('./myLoader.js'\x2C { parentURL: import.meta.url });\x0d\n * register('ts-node/esm'\x2C import.meta.url);\x0d\n * register('./myLoader.js'\x2C import.meta.url);\x0d\n * register(new URL('./myLoader.js'\x2C import.meta.url));\x0d\n * register('./myLoader.js'\x2C {\x0d\n *   parentURL: import.meta.url\x2C\x0d\n *   data: { banana: 'tasty' }\x2C\x0d\n * });\x0d\n * register('./myLoader.js'\x2C {\x0d\n *   parentURL: import.meta.url\x2C\x0d\n *   data: someArrayBuffer\x2C\x0d\n *   transferList: [someArrayBuffer]\x2C\x0d\n * });\x0d\n * ```\x0d\n */\x0d\nfunction register(specifier\x2C parentURL = undefined\x2C options) {\x0d\n  const moduleLoader = require('internal/process/esm_loader').esmLoader;\x0d\n  if (parentURL != null && typeof parentURL === 'object' && !isURL(parentURL)) {\x0d\n    options = parentURL;\x0d\n    parentURL = options.parentURL;\x0d\n  }\x0d\n  moduleLoader.register(\x0d\n    specifier\x2C\x0d\n    parentURL ?? 'data:'\x2C\x0d\n    options?.data\x2C\x0d\n    options?.transferList\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  createModuleLoader\x2C\x0d\n  getHooksProxy\x2C\x0d\n  register\x2C\x0d\n};\x0d\n
code-source-info,0x3e8c87031ec,120,0,22653,C0O0C4O22653,,
tick,0x7ffe2c22d0e4,167556,0,0x0,3,0x7ff62c4c3ef2,0x7ff62c4c3cc7,0x3ba1367f2fe,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x3ba1367eba2,0x121eb1229d1,0x3c57026e504,0x121eb123735,0x121eb1231d1,0x121eb121c0e,0x121eb1219b3,0x121eb1183ae,0x33d09cbfb17,0x33d09cbdd94,0x33d09cbd82a
code-creation,JS,10,167596,0x3e8c8704494,597, node:internal/modules/esm/loader:1:1,0x3e8c8703160,~
code-source-info,0x3e8c8704494,120,0,22653,C0O0C123O82C129O82C133O136C139O159C145O181C151O206C157O232C163O250C168O275C174O308C180O324C186O347C192O445C198O445C203O471C208O393C214O413C220O507C226O507C231O488C237O570C243O570C248O545C254O560C260O632C266O632C271O604C277O697C283O697C288O670C294O741C295O741C297O757C298O757C300O770C301O770C303O787C304O787C306O1939C307O1939C481O2386C483O15693C486O15727C493O15693C561O15748C563O18357C564O18357C566O22575C573O22597C579O22620C585O22638C591O22590C596O22652,,
code-creation,JS,10,167671,0x3e8c8704814,7,CustomizedModuleLoader node:internal/modules/esm/loader:456:30,0x3e8c8703d08,~
code-source-info,0x3e8c8704814,120,15777,18322,C0O15809C6O18322,,
code-creation,JS,10,167688,0x3e8c87048d4,95,ModuleLoader node:internal/modules/esm/loader:83:20,0x3e8c8703a08,~
code-source-info,0x3e8c87048d4,120,2405,15691,C3O2520C10O2520C18O2621C25O2621C34O2744C42O2820C47O2820C55O2928C60O2928C67O3055C72O3055C80O3290C88O3680C94O15691,,
code-creation,JS,10,167953,0x3e8c8705314,22,get esmLoader node:internal/process/esm_loader:13:16,0x3ba1367f188,~
code-source-info,0x3e8c8705314,119,357,418,C0O367C10O388C15O388C19O384C21O413,,
code-creation,JS,10,168130,0x3e8c870585c,184,createModuleLoader node:internal/modules/esm/loader:530:28,0x3e8c8703328,~
code-source-info,0x3e8c870585c,120,18855,20542,C10O18916C12O18925C22O19135C27O19172C32O19173C38O19222C46O19222C51O19288C57O19295C62O19309C75O19377C79O19377C81O19890C86O19898C101O20135C108O20168C111O20186C116O20168C125O20135C140O20006C147O19898C153O20386C154O20411C160O20435C165O20452C171O20499C178O20506C183O20539,,
code-creation,JS,10,168185,0x3e8c8706e2c,5,isLoaderWorker node:internal/modules/esm/utils:215:24,0x22671cb9050,~
code-source-info,0x3e8c8706e2c,66,7605,7639,C0O7613C4O7636,,
code-creation,JS,10,168244,0x3e8c8706f64,66,ModuleLoader node:internal/modules/esm/loader:132:14,0x3e8c8703488,~
code-source-info,0x3e8c8706f64,120,3713,3900,C5O3713C24O3737C34O3741C40O3800C50O3800C54O3861C59O3861C65O3899,,
code-creation,JS,10,168292,0x3e8c870716c,19,getDefaultConditions node:internal/modules/esm/utils:41:30,0x22671cb8ba8,~
code-source-info,0x3e8c870716c,66,995,1075,C0O1003C7O1010C10O1028C12O1003C16O1047C18O1072,,
code-creation,JS,10,168340,0x3e8c870742c,22,newResolveCache node:internal/modules/esm/loader:35:25,0x3e8c8703220,~
code-source-info,0x3e8c870742c,120,984,1093,C0O1017C6O1017C11O1000C16O1071C21O1090,,
code-creation,Eval,10,168505,0x3e8c8707d7c,5, node:internal/modules/esm/module_map:1:1,0x3e8c8707ab8,~
script-source,121,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n/**\x0d\n * Cache the results of the `resolve` step of the module resolution and loading process.\x0d\n * Future resolutions of the same input (specifier\x2C parent URL and import attributes)\x0d\n * must return the same result if the first attempt was successful\x2C per\x0d\n * https://tc39.es/ecma262/#sec-HostLoadImportedModule.\x0d\n * This cache is *not* used when custom loaders are registered.\x0d\n */\x0d\nclass ResolveCache extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n\x0d\n  /**\x0d\n   * Generates the internal serialized cache key and returns it along the actual cache object.\x0d\n   *\x0d\n   * It is exposed to allow more efficient read and overwrite a cache entry.\x0d\n   * @param {string} specifier\x0d\n   * @param {Record<string\x2Cstring>} importAttributes\x0d\n   * @returns {string}\x0d\n   */\x0d\n  serializeKey(specifier\x2C importAttributes) {\x0d\n    // To serialize the ModuleRequest (specifier + list of import attributes)\x2C\x0d\n    // we need to sort the attributes by key\x2C then stringifying\x2C\x0d\n    // so that different import statements with the same attributes are always treated\x0d\n    // as identical.\x0d\n    const keys = ObjectKeys(importAttributes);\x0d\n\x0d\n    if (keys.length === 0) {\x0d\n      return specifier + '::';\x0d\n    }\x0d\n\x0d\n    return specifier + '::' + ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(\x0d\n        ArrayPrototypeSort(keys)\x2C\x0d\n        (key) => JSONStringify(key) + JSONStringify(importAttributes[key]))\x2C\x0d\n      '\x2C');\x0d\n  }\x0d\n\x0d\n  #getModuleCachedImports(parentURL) {\x0d\n    let internalCache = super.get(parentURL);\x0d\n    if (internalCache == null) {\x0d\n      super.set(parentURL\x2C internalCache = { __proto__: null });\x0d\n    }\x0d\n    return internalCache;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} serializedKey\x0d\n   * @param {string} parentURL\x0d\n   * @returns {import('./loader').ModuleExports | Promise<import('./loader').ModuleExports>}\x0d\n   */\x0d\n  get(serializedKey\x2C parentURL) {\x0d\n    return this.#getModuleCachedImports(parentURL)[serializedKey];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} serializedKey\x0d\n   * @param {string} parentURL\x0d\n   * @param {{ format: string\x2C url: URL['href'] }} result\x0d\n   */\x0d\n  set(serializedKey\x2C parentURL\x2C result) {\x0d\n    this.#getModuleCachedImports(parentURL)[serializedKey] = result;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  has(serializedKey\x2C parentURL) {\x0d\n    return serializedKey in this.#getModuleCachedImports(parentURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Cache the results of the `load` step of the module resolution and loading process.\x0d\n */\x0d\nclass LoadCache extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleLoadMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? { __proto__: null };\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  LoadCache\x2C\x0d\n  ResolveCache\x2C\x0d\n};\x0d\n
code-source-info,0x3e8c8707d7c,121,0,3999,C0O0C4O3999,,
code-creation,JS,10,168780,0x3e8c870862c,299, node:internal/modules/esm/module_map:1:1,0x3e8c8707cf0,~
code-source-info,0x3e8c870862c,121,0,3999,C0O0C36O28C42O51C48O73C54O96C60O114C66O129C71O189C77O189C82O165C88O242C94O242C99O275C112O276C118O242C120O356C126O356C131O382C136O331C142O418C148O418C153O399C179O862C227O835C231O2920C274O3944C281O3966C287O3980C293O3959C298O3998,,
code-creation,Eval,10,169007,0x3e8c87090d4,5, node:internal/modules/esm/assert:1:1,0x3e8c8708ed0,~
script-source,122,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE\x2C\x0d\n  ERR_IMPORT_ATTRIBUTE_MISSING\x2C\x0d\n  ERR_IMPORT_ATTRIBUTE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import attributes types (the value of\x0d\n * `type` in `with { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an attribute type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' with { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import attributes.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAttributes(url\x2C format\x2C\x0d\n                            importAttributes = { __proto__: null }) {\x0d\n  const keys = ObjectKeys(importAttributes);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    if (keys[i] !== 'type') {\x0d\n      throw new ERR_IMPORT_ATTRIBUTE_UNSUPPORTED(keys[i]\x2C importAttributes[keys[i]]);\x0d\n    }\x0d\n  }\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore attributes for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import attributes object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAttributes\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAttributes.type);\x0d\n\x0d\n    case importAttributes.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAttributes.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAttributes\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ATTRIBUTE_MISSING(url\x2C 'type'\x2C validType);\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAttributes.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ATTRIBUTE_UNSUPPORTED('type'\x2C type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAttributes\x2C\x0d\n};\x0d\n
code-source-info,0x3e8c87090d4,122,0,3964,C0O0C4O3964,,
code-creation,JS,10,169185,0x3e8c87093c4,201, node:internal/modules/esm/assert:1:1,0x3e8c8709048,~
code-source-info,0x3e8c87093c4,122,0,3964,C0O0C46O28C51O53C57O80C63O95C68O112C74O189C77O189C82O170C88O350C91O350C96O376C101O235C107O278C113O311C119O480C121O480C123O677C130O715C136O751C142O804C148O836C154O677C156O1271C159O1296C169O1271C174O1271C176O3893C183O3915C189O3939C195O3908C200O3963,,
code-creation,JS,10,169281,0x3e8c870964c,9, node:internal/modules/esm/assert:43:3,0x3e8c87091b8,~
code-source-info,0x3e8c870964c,122,1328,1366,C0O1343C2O1347C4O1343C8O1366,,
code-creation,JS,10,169352,0x3e8c870a00c,52,ResolveCache node:internal/modules/esm/module_map:26:14,0x3e8c8707e60,~
code-source-info,0x3e8c870a00c,121,886,903,C3O892C27O892C51O902,,
code-creation,JS,10,169391,0x3e8c870a624,22,newLoadCache node:internal/modules/esm/loader:44:22,0x3e8c8703278,~
code-source-info,0x3e8c870a624,120,1276,1379,C0O1306C6O1306C11O1292C16O1360C21O1376,,
code-creation,JS,10,169434,0x3e8c870a6fc,42,LoadCache node:internal/modules/esm/module_map:90:14,0x3e8c8708018,~
code-source-info,0x3e8c870a6fc,121,2944,2961,C3O2950C27O2950C41O2960,,
code-creation,JS,10,169462,0x3e8c870a8dc,17,getTranslators node:internal/modules/esm/loader:53:24,0x3e8c87032d0,~
code-source-info,0x3e8c870a8dc,120,1570,1672,C0O1602C6O1602C11O1586C16O1669,,
code-creation,Eval,10,169836,0x3e8c870c55c,5, node:internal/modules/esm/translators:1:1,0x3e8c870c078,~
script-source,123,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\n/** @type {import('internal/util/types')} */\x0d\nlet _TYPES = null;\x0d\n/**\x0d\n * Lazily loads and returns the internal/util/types module.\x0d\n */\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) { return _TYPES; }\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst assert = require('internal/assert');\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { dirname\x2C extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  loadBuiltinModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x2C\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning\x2C kEmptyObject\x2C setOwnProperty } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { internalCompileFunction } = require('internal/vm');\x0d\n\x0d\n/** @type {import('deps/cjs-module-lexer/lexer.js').parse} */\x0d\nlet cjsParse;\x0d\n/**\x0d\n * Initializes the CommonJS module lexer parser.\x0d\n * If WebAssembly is available\x2C it uses the optimized version from the dist folder.\x0d\n * Otherwise\x2C it falls back to the JavaScript version from the lexer folder.\x0d\n */\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    try {\x0d\n      await init();\x0d\n      cjsParse = parse;\x0d\n    } catch {\x0d\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\n/**\x0d\n * Asserts that the given body is a buffer source (either a string\x2C array buffer\x2C or typed array).\x0d\n * Throws an error if the body is not a buffer source.\x0d\n * @param {string | ArrayBufferView | ArrayBuffer} body - The body to check.\x0d\n * @param {boolean} allowString - Whether or not to allow a string as a valid buffer source.\x0d\n * @param {string} hookName - The name of the hook being called.\x0d\n * @throws {ERR_INVALID_RETURN_PROPERTY_VALUE} If the body is not a buffer source.\x0d\n */\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Converts a buffer or buffer-like object to a string.\x0d\n * @param {string | ArrayBuffer | ArrayBufferView} body - The buffer or buffer-like object to convert to a string.\x0d\n * @returns {string} The resulting string.\x0d\n */\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') { return body; }\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  const { TextDecoder } = require('internal/encoding');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Converts a URL to a file path if the URL protocol is 'file:'.\x0d\n * @param {string} url - The URL to convert.\x0d\n */\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Dynamically imports a module using the ESM loader.\x0d\n * @param {string} specifier - The module specifier to import.\x0d\n * @param {object} options - An object containing options for the import.\x0d\n * @param {string} options.url - The URL of the module requesting the import.\x0d\n * @param {Record<string\x2C string>} [attributes] - An object containing attributes for the import.\x0d\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} The imported module.\x0d\n */\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C attributes) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C attributes);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  const { registerModule } = require('internal/modules/esm/utils');\x0d\n  registerModule(module\x2C {\x0d\n    __proto__: null\x2C\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * Provide a more informative error for CommonJS imports.\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] The filename of the erroring module.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      containsModuleSyntax(content\x2C filename)) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Loads a CommonJS module via the ESM Loader sync CommonJS translator.\x0d\n * This translator creates its own version of the `require` function passed into CommonJS modules.\x0d\n * Any monkey patches applied to the CommonJS Loader will not affect this module.\x0d\n * Any `require` calls in this module will load all children in the same way.\x0d\n * @param {import('internal/modules/cjs/loader').Module} module - The module to load.\x0d\n * @param {string} source - The source code of the module.\x0d\n * @param {string} url - The URL of the module.\x0d\n * @param {string} filename - The filename of the module.\x0d\n */\x0d\nfunction loadCJSModule(module\x2C source\x2C url\x2C filename) {\x0d\n  let compiledWrapper;\x0d\n  async function importModuleDynamically(specifier\x2C _\x2C importAttributes) {\x0d\n    return asyncESM.esmLoader.import(specifier\x2C url\x2C importAttributes);\x0d\n  }\x0d\n  try {\x0d\n    compiledWrapper = internalCompileFunction(\x0d\n      source\x2C                         // code\x2C\x0d\n      filename\x2C                       // filename\x0d\n      0\x2C                              // lineOffset\x0d\n      0\x2C                              // columnOffset\x2C\x0d\n      undefined\x2C                      // cachedData\x0d\n      false\x2C                          // produceCachedData\x0d\n      undefined\x2C                      // parsingContext\x0d\n      undefined\x2C                      // contextExtensions\x0d\n      [                               // params\x0d\n        'exports'\x2C\x0d\n        'require'\x2C\x0d\n        'module'\x2C\x0d\n        '__filename'\x2C\x0d\n        '__dirname'\x2C\x0d\n      ]\x2C\x0d\n      Symbol(`cjs:${filename}`)\x2C      // hostDefinedOptionsId\x0d\n      importModuleDynamically\x2C        // importModuleDynamically\x0d\n    ).function;\x0d\n  } catch (err) {\x0d\n    enrichCJSError(err\x2C source\x2C filename);\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const __dirname = dirname(filename);\x0d\n  // eslint-disable-next-line func-name-matching\x2Cfunc-style\x0d\n  const requireFn = function require(specifier) {\x0d\n    let importAttributes = kEmptyObject;\x0d\n    if (!StringPrototypeStartsWith(specifier\x2C 'node:')) {\x0d\n      // TODO: do not depend on the monkey-patchable CJS loader here.\x0d\n      const path = CJSModule._resolveFilename(specifier\x2C module);\x0d\n      if (specifier !== path) {\x0d\n        switch (extname(path)) {\x0d\n          case '.json':\x0d\n            importAttributes = { __proto__: null\x2C type: 'json' };\x0d\n            break;\x0d\n          case '.node':\x0d\n            return CJSModule._load(specifier\x2C module);\x0d\n          default:\x0d\n            // fall through\x0d\n        }\x0d\n        specifier = `${pathToFileURL(path)}`;\x0d\n      }\x0d\n    }\x0d\n    const job = asyncESM.esmLoader.getModuleJobSync(specifier\x2C url\x2C importAttributes);\x0d\n    job.runSync();\x0d\n    return cjsCache.get(job.url).exports;\x0d\n  };\x0d\n  setOwnProperty(requireFn\x2C 'resolve'\x2C function resolve(specifier) {\x0d\n    if (!StringPrototypeStartsWith(specifier\x2C 'node:')) {\x0d\n      const path = CJSModule._resolveFilename(specifier\x2C module);\x0d\n      if (specifier !== path) {\x0d\n        specifier = `${pathToFileURL(path)}`;\x0d\n      }\x0d\n    }\x0d\n    const { url: resolvedURL } = asyncESM.esmLoader.resolveSync(specifier\x2C url\x2C kEmptyObject);\x0d\n    return StringPrototypeStartsWith(resolvedURL\x2C 'file://') ? fileURLToPath(resolvedURL) : resolvedURL;\x0d\n  });\x0d\n  setOwnProperty(requireFn\x2C 'main'\x2C process.mainModule);\x0d\n\x0d\n  ReflectApply(compiledWrapper\x2C module.exports\x2C\x0d\n               [module.exports\x2C requireFn\x2C module\x2C filename\x2C __dirname]);\x0d\n  setOwnProperty(module\x2C 'loaded'\x2C true);\x0d\n}\x0d\n\x0d\n// TODO: can we use a weak map instead?\x0d\nconst cjsCache = new SafeMap();\x0d\n/**\x0d\n * Creates a ModuleWrap object for a CommonJS module.\x0d\n * @param {string} url - The URL of the module.\x0d\n * @param {string} source - The source code of the module.\x0d\n * @param {boolean} isMain - Whether the module is the main module.\x0d\n * @param {typeof loadCJSModule} [loadCJS=loadCJSModule] - The function to load the CommonJS module.\x0d\n * @returns {ModuleWrap} The ModuleWrap object for the CommonJS module.\x0d\n */\x0d\nfunction createCJSModuleWrap(url\x2C source\x2C isMain\x2C loadCJS = loadCJSModule) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  const filename = StringPrototypeStartsWith(url\x2C 'file://') ? fileURLToPath(url) : url;\x0d\n  source = stringify(source);\x0d\n\x0d\n  const { exportNames\x2C module } = cjsPreparseModuleExports(filename\x2C source);\x0d\n  cjsCache.set(url\x2C module);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  if (isMain) {\x0d\n    setOwnProperty(process\x2C 'mainModule'\x2C module);\x0d\n  }\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    if (!module.loaded) {\x0d\n      loadCJS(module\x2C source\x2C url\x2C filename);\x0d\n    }\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      ({ exports } = module);\x0d\n    }\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default') {\x0d\n        continue;\x0d\n      }\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n\x0d\n}\x0d\n\x0d\n// Handle CommonJS modules referenced by `require` calls.\x0d\n// This translator function must be sync\x2C as `require` is sync.\x0d\ntranslators.set('require-commonjs'\x2C (url\x2C source\x2C isMain) => {\x0d\n  assert(cjsParse);\x0d\n\x0d\n  return createCJSModuleWrap(url\x2C source);\x0d\n});\x0d\n\x0d\n// Handle CommonJS modules referenced by `import` statements or expressions\x2C\x0d\n// or as the initial entry point when the ESM loader handles a CommonJS entry.\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  if (!cjsParse) {\x0d\n    await initCJSParse();\x0d\n  }\x0d\n\x0d\n  // For backward-compatibility\x2C it's possible to return a nullish value for\x0d\n  // CJS source associated with a file: URL. In this case\x2C the source is\x0d\n  // obtained by calling the monkey-patchable CJS loader.\x0d\n  const cjsLoader = source == null ? (module\x2C source\x2C url\x2C filename) => {\x0d\n    try {\x0d\n      assert(module === CJSModule._cache[filename]);\x0d\n      CJSModule._load(filename);\x0d\n    } catch (err) {\x0d\n      enrichCJSError(err\x2C source\x2C filename);\x0d\n      throw err;\x0d\n    }\x0d\n  } : loadCJSModule;\x0d\n\x0d\n  try {\x0d\n    // We still need to read the FS to detect the exports.\x0d\n    source ??= readFileSync(new URL(url)\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return createCJSModuleWrap(url\x2C source\x2C isMain\x2C cjsLoader);\x0d\n\x0d\n});\x0d\n\x0d\n/**\x0d\n * Pre-parses a CommonJS module's exports and re-exports.\x0d\n * @param {string} filename - The filename of the module.\x0d\n * @param {string} [source] - The source code of the module.\x0d\n */\x0d\nfunction cjsPreparseModuleExports(filename\x2C source) {\x0d\n  // TODO: Do we want to keep hitting the user mutable CJS loader here?\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached) {\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n    }\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    for (let i = 0; i < reexports.length; i++) {\x0d\n      const reexport = reexports[i];\x0d\n      let resolved;\x0d\n      try {\x0d\n        // TODO: this should be calling the `resolve` hook chain instead.\x0d\n        // Doing so would mean dropping support for CJS in the loader thread\x2C as\x0d\n        // this call needs to be sync from the perspective of the main thread\x2C\x0d\n        // which we can do via HooksProxy and Atomics\x2C but we can't do within\x0d\n        // the loaders thread. Until this is done\x2C the lexer will use the\x0d\n        // monkey-patchable CJS loader to get the path to the module file to\x0d\n        // load (which may or may not be aligned with the URL that the `resolve`\x0d\n        // hook have returned).\x0d\n        resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n      } catch {\x0d\n        continue;\x0d\n      }\x0d\n      // TODO: this should be calling the `load` hook chain and check if it returns\x0d\n      // `format: 'commonjs'` instead of relying on file extensions.\x0d\n      const ext = extname(resolved);\x0d\n      if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n      isAbsolute(resolved)) {\x0d\n        // TODO: this should be calling the `load` hook chain to get the source\x0d\n        // (and fallback to reading the FS only if the source is nullish).\x0d\n        const source = readFileSync(resolved\x2C 'utf-8');\x0d\n        const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved\x2C source);\x0d\n        for (const name of reexportNames) {\x0d\n          exportNames.add(name);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadBuiltinModule(id\x2C url);\x0d\n  cjsCache.set(url\x2C module);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\nconst isWindows = process.platform === 'win32';\x0d\ntranslators.set('json'\x2C function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  const shouldCheckAndPopulateCJSModuleCache =\x0d\n    // We want to involve the CJS loader cache only for `file:` URL with no search query and no hash.\x0d\n    pathname && !StringPrototypeIncludes(url\x2C '?') && !StringPrototypeIncludes(url\x2C '#');\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplaceAll(pathname\x2C '/'\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    // TODO: remove CJS loader from here as well.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x2C\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  cjsCache.set(url\x2C module);\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  const createDynamicModule = require(\x0d\n    'internal/modules/esm/create_dynamic_module');\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports)) {\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n    }\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x3e8c870c55c,123,0,19863,C0O0C4O19863,,
code-creation,JS,10,170527,0x3e8c870cefc,796, node:internal/modules/esm/translators:1:1,0x3e8c870c4d0,~
code-source-info,0x3e8c870cefc
code-creation,JS,10,170738,0x3e8c870d804,30,setCustomizations node:internal/modules/esm/loader:187:20,0x3e8c87034e0,~
code-source-info,0x3e8c870d804,120,5507,5741,C0O5531C5O5552C9O5575C13O5649C17O5632C23O5694C24O5722C29O5740,,
code-creation,RegExp,3,171088,0x7ff62c4cff80,1560,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Eval,10,171491,0x3e8c870de1c,5, C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v21.2.0\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x3e8c870dc68,~
script-source,124,C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v21.2.0\\node_modules\\0x\\lib\\preload\\redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x3e8c870de1c,124,0,494,C0O0C4O494,,
code-creation,JS,10,171536,0x3e8c870e0cc,157, C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v21.2.0\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x3e8c870dd90,~
code-source-info,0x3e8c870e0cc,124,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,JS,10,171698,0x3e8c870e60c,28,get BlockList node:net:2373:16,0x3ba13653038,~
code-source-info,0x3e8c870e60c,88,67889,67981,C0O67899C14O67913C19O67942C23O67909C25O67959C27O67976,,
code-creation,Eval,10,171884,0x3e8c870f034,5, node:internal/blocklist:1:1,0x3e8c870ee30,~
script-source,125,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  markTransferMode\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList {\x0d\n  constructor() {\x0d\n    markTransferMode(this\x2C true\x2C false);\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList {\x0d\n  constructor(handle) {\x0d\n    markTransferMode(this\x2C true\x2C false);\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x3e8c870f034,125,0,4058,C0O0C4O4058,,
code-creation,JS,10,172058,0x3e8c870fa94,360, node:internal/blocklist:1:1,0x3e8c870efa8,~
code-source-info,0x3e8c870fa94,125,0,4058,C0O0C38O28C44O40C49O65C54O138C57O138C62O116C68O219C71O219C76O204C81O313C84O313C89O259C95O286C101O413C104O413C109O362C115O383C120O394C125O480C128O480C133O468C139O533C142O533C146O533C148O578C151O578C156O561C162O648C165O648C170O674C175O620C181O727C184O727C189O693C195O708C210O937C246O3369C257O3538C283O762C302O3865C307O3899C312O3909C316O3887C320O3962C325O3983C330O3923C335O3998C342O4020C348O4034C354O4013C359O4057,,
code-creation,Eval,10,172348,0x3e8c8711684,5, node:internal/socketaddress:1:1,0x3e8c8711460,~
script-source,126,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  markTransferMode\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = kEmptyObject) {\x0d\n    markTransferMode(this\x2C true\x2C false);\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress {\x0d\n  constructor(handle) {\x0d\n    markTransferMode(this\x2C true\x2C false);\x0d\n\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = this[kHandle]?.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x3e8c8711684,126,0,3567,C0O0C4O3567,,
code-creation,JS,10,172515,0x3e8c8712214,377, node:internal/socketaddress:1:1,0x3e8c87115f8,~
code-source-info,0x3e8c8712214,126,0,3567,C0O0C44O28C49O53C54O154C57O154C62O108C68O127C74O139C80O275C83O275C88O199C94O218C100O237C106O254C112O369C115O369C120O328C125O335C131O464C134O464C139O432C144O445C150O513C153O513C158O501C164O612C167O612C172O561C178O582C183O593C188O675C191O675C195O675C197O711C200O711C204O711C240O2207C251O2462C262O2639C294O733C313O3339C318O3380C323O3390C327O3361C331O3447C336O3472C341O3404C346O3487C353O3509C359O3527C365O3553C371O3502C376O3566,,
code-creation,JS,10,172675,0x3e8c8712cd4,28,get SocketAddress node:net:2377:20,0x3ba136530b8,~
code-source-info,0x3e8c8712cd4,88,68003,68111,C0O68013C14O68031C19O68064C23O68027C25O68085C27O68106,,
code-creation,Eval,10,172768,0x3e8c8713224,5, node:worker_threads:1:1,0x3e8c87130d0,~
script-source,127,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n  isMarkedAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  isMarkedAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x3e8c8713224,127,0,786,C0O0C4O786,,
code-creation,JS,10,172818,0x3e8c871344c,191, node:worker_threads:1:1,0x3e8c8713198,~
code-source-info,0x3e8c871344c,127,0,786,C0O150C3O150C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O304C46O304C51O192C56O208C61O227C66O256C71O281C76O405C79O405C84O349C89O374C94O436C101O458C107O475C113O491C119O510C125O535C131O564C137O593C143O618C149O637C155O650C161O664C167O717C173O738C179O761C185O451C190O785,,
code-creation,Eval,10,173311,0x3e8c8715c94,5, node:internal/worker:1:1,0x3e8c8715078,~
script-source,128,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  AtomicsAdd\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  internalEventLoopUtilization\x2C\x0d\n} = require('internal/perf/event_loop_utilization');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x2C\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURL\x2C pathToFileURL } = require('internal/url');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst { validateArray\x2C validateString } = require('internal/validators');\x0d\nconst {\x0d\n  throwIfBuildingSnapshot\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x2C\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsInternal = Symbol('kIsInternal');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst workerThreadsChannel = dc.channel('worker_threads');\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\n// SharedArrayBuffers can be disabled with --enable-sharedarraybuffer-per-context.\x0d\nif (isMainThread && SharedArrayBuffer !== undefined) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    AtomicsAdd(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = kEmptyObject) {\x0d\n    throwIfBuildingSnapshot('Creating workers');\x0d\n    super();\x0d\n    const isInternal = arguments[2] === kIsInternal;\x0d\n    debug(\x0d\n      `[${threadId}] create new worker`\x2C\x0d\n      filename\x2C\x0d\n      options\x2C\x0d\n      `isInternal: ${isInternal}`\x2C\x0d\n    );\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (isInternal) {\x0d\n      doEval = 'internal';\x0d\n      url = `node:${filename}`;\x0d\n    } else if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x2C\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURL(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURL(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x2C\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeExec(/^\\.\\.?[\\\\/]/\x2C filename) !== null) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = { __proto__: null };\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x2C\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    let name = '';\x0d\n    if (options.name) {\x0d\n      validateString(options.name\x2C 'options.name');\x0d\n      name = StringPrototypeTrim(options.name);\x0d\n    }\x0d\n\x0d\n    debug('instantiating Worker.'\x2C `url: ${url}`\x2C `doEval: ${doEval}`);\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true)\x2C\x0d\n                                   isInternal\x2C\x0d\n                                   name);\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      isInternal\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x2C\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n    if (workerThreadsChannel.hasSubscribers) {\x0d\n      workerThreadsChannel.publish({\x0d\n        worker: this\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot(options) {\x0d\n    const {\x0d\n      HeapSnapshotStream\x2C\x0d\n      getHeapSnapshotOptions\x2C\x0d\n    } = require('internal/heap_utils');\x0d\n    const optionsArray = getHeapSnapshotOptions(options);\x0d\n    const heapSnapshotTaker = this[kHandle]?.takeHeapSnapshot(optionsArray);\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * A worker which has an internal module for entry point (e.g. internal/module/esm/worker).\x0d\n * Internal workers bypass the permission model.\x0d\n */\x0d\nclass InternalWorker extends Worker {\x0d\n  constructor(filename\x2C options) {\x0d\n    super(filename\x2C options\x2C kIsInternal);\x0d\n  }\x0d\n\x0d\n  receiveMessageSync() {\x0d\n    return receiveMessageOnPort(this[kPublicPort]);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  return internalEventLoopUtilization(\x0d\n    this[kLoopStartTime]\x2C\x0d\n    this[kHandle].loopIdleTime()\x2C\x0d\n    util1\x2C\x0d\n    util2\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  kIsOnline\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  InternalWorker\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x3e8c8715c94,128,0,16878,C0O0C4O16878,,
code-creation,JS,10,173974,0x3e8c8717344,1344, node:internal/worker:1:1,0x3e8c8715c08,~
code-source-info,0x3e8c8717344,128,0,16878,C0O0C262O28C268O54C274O76C280O99C286O114C291O131C297O157C303O175C309O187C315O205C321O217C327O236C333O253C339O277C345O299C350O311C356O322C362O346C367O357C372O371C378O399C383O427C389O429C394O492C402O492C407O527C415O527C419O527C421O569C429O569C433O569C435O633C443O633C449O598C455O704C463O704C469O730C473O704C475O919C479O750C485O777C491O797C497O833C503O866C509O891C515O959C523O959C529O940C535O1008C543O1008C547O1008C549O1293C553O1051C559O1072C565O1097C571O1116C577O1133C583O1143C589O1166C595O1186C601O1218C607O1243C613O1267C619O1333C627O1333C633O1312C639O1416C647O1416C653O1376C659O1391C665O1398C671O1467C679O1467C685O1450C691O1536C699O1536C705O1502C711O1517C717O1610C725O1610C731O1580C737O1902C741O1902C747O1663C752O1684C757O1717C762O1739C768O1760C774O1775C780O1805C786O1833C792O1854C798O1871C803O1948C807O1948C811O1948C813O1988C817O1988C821O1988C823O2029C827O2029C831O2029C833O2066C837O2066C841O2066C843O2105C847O2105C851O2105C853O2160C857O2160C861O2160C863O2220C867O2220C871O2220C873O2273C877O2273C881O2273C883O2325C887O2325C891O2325C893O2372C897O2372C901O2372C903O2414C907O2414C911O2414C913O2456C917O2456C921O2456C923O2515C931O2515C937O2548C953O2549C959O2515C961O2612C969O2612C974O2677C984O2677C989O2674C991O2711C992O2711C994O2750C996O2750C1001O2750C1003O2852C1011O2890C1018O2910C1024O2939C1033O2923C1038O2921C1042O2991C1048O2999C1052O2991C1054O3009C1064O3023C1070O3528C1080O9459C1091O10113C1102O10217C1113O10396C1124O11321C1209O14235C1239O14785C1241O14785C1246O14785C1248O16589C1256O16611C1262O16632C1268O16646C1274O16663C1283O16699C1289O16714C1302O16761C1308O16784C1314O16807C1320O16833C1326O16846C1332O16865C1338O16604C1343O16877,,
code-creation,Eval,10,174292,0x3e8c8718394,5, node:internal/perf/event_loop_utilization:1:1,0x3e8c87181f0,~
script-source,129,node:internal/perf/event_loop_utilization,'use strict';\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    NODE_PERFORMANCE_MILESTONE_LOOP_START\x2C\x0d\n  }\x2C\x0d\n  loopIdleTime\x2C\x0d\n  milestones\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // Get the original milestone timestamps that calculated from the beginning\x0d\n  // of the process.\x0d\n  return internalEventLoopUtilization(\x0d\n    milestones[NODE_PERFORMANCE_MILESTONE_LOOP_START] / 1e6\x2C\x0d\n    loopIdleTime()\x2C\x0d\n    util1\x2C\x0d\n    util2\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction internalEventLoopUtilization(loopStart\x2C loopIdleTime\x2C util1\x2C util2) {\x0d\n  if (loopStart <= 0) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  // Using process.hrtime() to get the time from the beginning of the process\x2C\x0d\n  // and offset it by the loopStart time (which is also calculated from the\x0d\n  // beginning of the process).\x0d\n  const now = process.hrtime();\x0d\n  const active = now[0] * 1e3 + now[1] / 1e6 - loopStart - loopIdleTime;\x0d\n\x0d\n  if (!util1) {\x0d\n    return {\x0d\n      idle: loopIdleTime\x2C\x0d\n      active\x2C\x0d\n      utilization: active / (loopIdleTime + active)\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const idleDelta = loopIdleTime - util1.idle;\x0d\n  const activeDelta = active - util1.active;\x0d\n  const utilization = activeDelta / (idleDelta + activeDelta);\x0d\n  return {\x0d\n    idle: idleDelta\x2C\x0d\n    active: activeDelta\x2C\x0d\n    utilization\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  internalEventLoopUtilization\x2C\x0d\n  eventLoopUtilization\x2C\x0d\n};\x0d\n
code-source-info,0x3e8c8718394,129,0,1587,C0O0C4O1587,,
code-creation,JS,10,174375,0x3e8c8718554,85, node:internal/perf/event_loop_utilization:1:1,0x3e8c8718308,~
code-source-info,0x3e8c8718554,129,0,1587,C0O0C29O128C32O128C37O39C42O46C48O94C54O111C60O1505C67O1527C73O1560C79O1520C84O1586,,
code-creation,Eval,10,174850,0x3e8c871a494,5, node:internal/worker/io:1:1,0x3e8c871a000,~
script-source,130,node:internal/worker/io,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  setOwnProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  handle_onclose: handleOnCloseSymbol\x2C\x0d\n  oninit: onInitSymbol\x2C\x0d\n  no_message_symbol: noMessageSymbol\x2C\x0d\n} = internalBinding('symbols');\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  broadcastChannel\x2C\x0d\n  drainMessagePort\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort: receiveMessageOnPort_\x2C\x0d\n  stopMessagePort\x2C\x0d\n  checkMessagePort\x2C\x0d\n  DOMException\x2C\x0d\n} = internalBinding('messaging');\x0d\nconst {\x0d\n  getEnvMessagePort\x2C\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst { Readable\x2C Writable } = require('stream');\x0d\nconst {\x0d\n  Event\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kRemoveListener\x2C\x0d\n} = require('internal/event_target');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst kData = Symbol('kData');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kIncrementsPortRef = Symbol('kIncrementsPortRef');\x0d\nconst kLastEventId = Symbol('kLastEventId');\x0d\nconst kName = Symbol('kName');\x0d\nconst kOrigin = Symbol('kOrigin');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnMessageError = Symbol('kOnMessageError');\x0d\nconst kPort = Symbol('kPort');\x0d\nconst kPorts = Symbol('kPorts');\x0d\nconst kWaitingStreams = Symbol('kWaitingStreams');\x0d\nconst kWritableCallbacks = Symbol('kWritableCallbacks');\x0d\nconst kSource = Symbol('kSource');\x0d\nconst kStartedReading = Symbol('kStartedReading');\x0d\nconst kStdioWantsMoreDataCallback = Symbol('kStdioWantsMoreDataCallback');\x0d\nconst kCurrentlyReceivingPorts =\x0d\n  SymbolFor('nodejs.internal.kCurrentlyReceivingPorts');\x0d\nconst kType = Symbol('kType');\x0d\n\x0d\nconst messageTypes = {\x0d\n  UP_AND_RUNNING: 'upAndRunning'\x2C\x0d\n  COULD_NOT_SERIALIZE_ERROR: 'couldNotSerializeError'\x2C\x0d\n  ERROR_MESSAGE: 'errorMessage'\x2C\x0d\n  STDIO_PAYLOAD: 'stdioPayload'\x2C\x0d\n  STDIO_WANTS_MORE_DATA: 'stdioWantsMoreData'\x2C\x0d\n  LOAD_SCRIPT: 'loadScript'\x2C\x0d\n};\x0d\n\x0d\n// We have to mess with the MessagePort prototype a bit\x2C so that a) we can make\x0d\n// it inherit from NodeEventTarget\x2C even though it is a C++ class\x2C and b) we do\x0d\n// not provide methods that are not present in the Browser and not documented\x0d\n// on our side (e.g. stopMessagePort).\x0d\nconst messagePortPrototypePropertyDescriptors = ObjectGetOwnPropertyDescriptors(MessagePort.prototype);\x0d\nconst propertiesValues = ObjectValues(messagePortPrototypePropertyDescriptors);\x0d\nfor (let i = 0; i < propertiesValues.length; i++) {\x0d\n  // We want to use null-prototype objects to not rely on globally mutable\x0d\n  // %Object.prototype%.\x0d\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n}\x0d\n// Save a copy of the original set of methods as a shallow clone.\x0d\nconst MessagePortPrototype = ObjectCreate(\x0d\n  ObjectGetPrototypeOf(MessagePort.prototype)\x2C\x0d\n  messagePortPrototypePropertyDescriptors);\x0d\n// Set up the new inheritance chain.\x0d\nObjectSetPrototypeOf(MessagePort\x2C NodeEventTarget);\x0d\nObjectSetPrototypeOf(MessagePort.prototype\x2C NodeEventTarget.prototype);\x0d\n// Copy methods that are inherited from HandleWrap\x2C because\x0d\n// changing the prototype of MessagePort.prototype implicitly removed them.\x0d\nMessagePort.prototype.ref = MessagePortPrototype.ref;\x0d\nMessagePort.prototype.unref = MessagePortPrototype.unref;\x0d\nMessagePort.prototype.hasRef = function() {\x0d\n  return !!FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\x0d\n};\x0d\n\x0d\nfunction validateMessagePort(port\x2C name) {\x0d\n  if (!checkMessagePort(port))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'MessagePort'\x2C port);\x0d\n}\x0d\n\x0d\nfunction isMessageEvent(value) {\x0d\n  return value != null && kData in value;\x0d\n}\x0d\n\x0d\nclass MessageEvent extends Event {\x0d\n  constructor(type\x2C {\x0d\n    data = null\x2C\x0d\n    origin = ''\x2C\x0d\n    lastEventId = ''\x2C\x0d\n    source = null\x2C\x0d\n    ports = []\x2C\x0d\n  } = kEmptyObject) {\x0d\n    super(type);\x0d\n    this[kData] = data;\x0d\n    this[kOrigin] = `${origin}`;\x0d\n    this[kLastEventId] = `${lastEventId}`;\x0d\n    this[kSource] = source;\x0d\n    this[kPorts] = [...ports];\x0d\n\x0d\n    if (this[kSource] !== null)\x0d\n      validateMessagePort(this[kSource]\x2C 'init.source');\x0d\n    for (let i = 0; i < this[kPorts].length; i++)\x0d\n      validateMessagePort(this[kPorts][i]\x2C `init.ports[${i}]`);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(MessageEvent.prototype\x2C {\x0d\n  data: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kData];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  origin: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kOrigin];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  lastEventId: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kLastEventId];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  source: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kSource];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  ports: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kPorts];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst originalCreateEvent = EventTarget.prototype[kCreateEvent];\x0d\nObjectDefineProperty(\x0d\n  MessagePort.prototype\x2C\x0d\n  kCreateEvent\x2C\x0d\n  {\x0d\n    __proto__: null\x2C\x0d\n    value: function(data\x2C type) {\x0d\n      if (type !== 'message' && type !== 'messageerror') {\x0d\n        return ReflectApply(originalCreateEvent\x2C this\x2C arguments);\x0d\n      }\x0d\n      const ports = this[kCurrentlyReceivingPorts];\x0d\n      this[kCurrentlyReceivingPorts] = undefined;\x0d\n      return new MessageEvent(type\x2C { data\x2C ports });\x0d\n    }\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n  });\x0d\n\x0d\n// This is called from inside the `MessagePort` constructor.\x0d\nfunction oninit() {\x0d\n  initNodeEventTarget(this);\x0d\n  setupPortReferencing(this\x2C this\x2C 'message');\x0d\n  this[kCurrentlyReceivingPorts] = undefined;\x0d\n}\x0d\n\x0d\ndefineEventHandler(MessagePort.prototype\x2C 'message');\x0d\ndefineEventHandler(MessagePort.prototype\x2C 'messageerror');\x0d\n\x0d\nObjectDefineProperty(MessagePort.prototype\x2C onInitSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  value: oninit\x2C\x0d\n});\x0d\n\x0d\nclass MessagePortCloseEvent extends Event {\x0d\n  constructor() {\x0d\n    super('close');\x0d\n  }\x0d\n}\x0d\n\x0d\n// This is called after the underlying `uv_async_t` has been closed.\x0d\nfunction onclose() {\x0d\n  this.dispatchEvent(new MessagePortCloseEvent());\x0d\n}\x0d\n\x0d\nObjectDefineProperty(MessagePort.prototype\x2C handleOnCloseSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  writable: false\x2C\x0d\n  value: onclose\x2C\x0d\n});\x0d\n\x0d\nMessagePort.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function')\x0d\n    this.once('close'\x2C cb);\x0d\n  FunctionPrototypeCall(MessagePortPrototype.close\x2C this);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(MessagePort.prototype\x2C inspect.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  writable: false\x2C\x0d\n  value: function inspect() {  // eslint-disable-line func-name-matching\x0d\n    let ref;\x0d\n    try {\x0d\n      // This may throw when `this` does not refer to a native object\x2C\x0d\n      // e.g. when accessing the prototype directly.\x0d\n      ref = FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\x0d\n    } catch { return this; }\x0d\n    return ObjectAssign({ __proto__: MessagePort.prototype }\x2C\x0d\n                        ref === undefined ? {\x0d\n                          active: false\x2C\x0d\n                        } : {\x0d\n                          active: true\x2C\x0d\n                          refed: ref\x2C\x0d\n                        }\x2C\x0d\n                        this);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction setupPortReferencing(port\x2C eventEmitter\x2C eventName) {\x0d\n  // Keep track of whether there are any workerMessage listeners:\x0d\n  // If there are some\x2C ref() the channel so it keeps the event loop alive.\x0d\n  // If there are none or all are removed\x2C unref() the channel so the worker\x0d\n  // can shutdown gracefully.\x0d\n  port.unref();\x0d\n  eventEmitter.on('newListener'\x2C function(name) {\x0d\n    if (name === eventName) newListener(eventEmitter.listenerCount(name));\x0d\n  });\x0d\n  eventEmitter.on('removeListener'\x2C function(name) {\x0d\n    if (name === eventName) removeListener(eventEmitter.listenerCount(name));\x0d\n  });\x0d\n  const origNewListener = eventEmitter[kNewListener];\x0d\n  setOwnProperty(eventEmitter\x2C kNewListener\x2C function(size\x2C type\x2C ...args) {\x0d\n    if (type === eventName) newListener(size - 1);\x0d\n    return ReflectApply(origNewListener\x2C this\x2C arguments);\x0d\n  });\x0d\n  const origRemoveListener = eventEmitter[kRemoveListener];\x0d\n  setOwnProperty(eventEmitter\x2C kRemoveListener\x2C function(size\x2C type\x2C ...args) {\x0d\n    if (type === eventName) removeListener(size);\x0d\n    return ReflectApply(origRemoveListener\x2C this\x2C arguments);\x0d\n  });\x0d\n\x0d\n  function newListener(size) {\x0d\n    if (size === 0) {\x0d\n      port.ref();\x0d\n      FunctionPrototypeCall(MessagePortPrototype.start\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function removeListener(size) {\x0d\n    if (size === 0) {\x0d\n      stopMessagePort(port);\x0d\n      port.unref();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nclass ReadableWorkerStdio extends Readable {\x0d\n  constructor(port\x2C name) {\x0d\n    super();\x0d\n    this[kPort] = port;\x0d\n    this[kName] = name;\x0d\n    this[kIncrementsPortRef] = true;\x0d\n    this[kStartedReading] = false;\x0d\n    this.on('end'\x2C () => {\x0d\n      if (this[kStartedReading] && this[kIncrementsPortRef]) {\x0d\n        if (--this[kPort][kWaitingStreams] === 0)\x0d\n          this[kPort].unref();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  _read() {\x0d\n    if (!this[kStartedReading] && this[kIncrementsPortRef]) {\x0d\n      this[kStartedReading] = true;\x0d\n      if (this[kPort][kWaitingStreams]++ === 0)\x0d\n        this[kPort].ref();\x0d\n    }\x0d\n\x0d\n    this[kPort].postMessage({\x0d\n      type: messageTypes.STDIO_WANTS_MORE_DATA\x2C\x0d\n      stream: this[kName]\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass WritableWorkerStdio extends Writable {\x0d\n  constructor(port\x2C name) {\x0d\n    super({ decodeStrings: false });\x0d\n    this[kPort] = port;\x0d\n    this[kName] = name;\x0d\n    this[kWritableCallbacks] = [];\x0d\n  }\x0d\n\x0d\n  _writev(chunks\x2C cb) {\x0d\n    this[kPort].postMessage({\x0d\n      type: messageTypes.STDIO_PAYLOAD\x2C\x0d\n      stream: this[kName]\x2C\x0d\n      chunks: ArrayPrototypeMap(chunks\x2C\x0d\n                                ({ chunk\x2C encoding }) => ({ chunk\x2C encoding }))\x2C\x0d\n    });\x0d\n    ArrayPrototypePush(this[kWritableCallbacks]\x2C cb);\x0d\n    if (this[kPort][kWaitingStreams]++ === 0)\x0d\n      this[kPort].ref();\x0d\n  }\x0d\n\x0d\n  _final(cb) {\x0d\n    this[kPort].postMessage({\x0d\n      type: messageTypes.STDIO_PAYLOAD\x2C\x0d\n      stream: this[kName]\x2C\x0d\n      chunks: [ { chunk: null\x2C encoding: '' } ]\x2C\x0d\n    });\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  [kStdioWantsMoreDataCallback]() {\x0d\n    const cbs = this[kWritableCallbacks];\x0d\n    this[kWritableCallbacks] = [];\x0d\n    ArrayPrototypeForEach(cbs\x2C (cb) => cb());\x0d\n    if ((this[kPort][kWaitingStreams] -= cbs.length) === 0)\x0d\n      this[kPort].unref();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createWorkerStdio() {\x0d\n  const port = getEnvMessagePort();\x0d\n  port[kWaitingStreams] = 0;\x0d\n  return {\x0d\n    stdin: new ReadableWorkerStdio(port\x2C 'stdin')\x2C\x0d\n    stdout: new WritableWorkerStdio(port\x2C 'stdout')\x2C\x0d\n    stderr: new WritableWorkerStdio(port\x2C 'stderr')\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction receiveMessageOnPort(port) {\x0d\n  const message = receiveMessageOnPort_(port?.[kHandle] ?? port);\x0d\n  if (message === noMessageSymbol) return undefined;\x0d\n  return { message };\x0d\n}\x0d\n\x0d\nfunction onMessageEvent(type\x2C data) {\x0d\n  this.dispatchEvent(new MessageEvent(type\x2C { data }));\x0d\n}\x0d\n\x0d\nfunction isBroadcastChannel(value) {\x0d\n  return value?.[kType] === 'BroadcastChannel';\x0d\n}\x0d\n\x0d\nclass BroadcastChannel extends EventTarget {\x0d\n  /**\x0d\n   * @param {string} name\x0d\n   */\x0d\n  constructor(name) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    super();\x0d\n    this[kType] = 'BroadcastChannel';\x0d\n    this[kName] = `${name}`;\x0d\n    this[kHandle] = broadcastChannel(this[kName]);\x0d\n    this[kOnMessage] = FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'message');\x0d\n    this[kOnMessageError] =\x0d\n      FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'messageerror');\x0d\n    this[kHandle].on('message'\x2C this[kOnMessage]);\x0d\n    this[kHandle].on('messageerror'\x2C this[kOnMessageError]);\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C options) {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (depth < 0)\x0d\n      return 'BroadcastChannel';\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `BroadcastChannel ${inspect({\x0d\n      name: this[kName]\x2C\x0d\n      active: this[kHandle] !== undefined\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get name() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    return this[kName];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {void}\x0d\n   */\x0d\n  close() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (this[kHandle] === undefined)\x0d\n      return;\x0d\n    this[kHandle].off('message'\x2C this[kOnMessage]);\x0d\n    this[kHandle].off('messageerror'\x2C this[kOnMessageError]);\x0d\n    this[kOnMessage] = undefined;\x0d\n    this[kOnMessageError] = undefined;\x0d\n    this[kHandle].close();\x0d\n    this[kHandle] = undefined;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   *\x0d\n   * @param {any} message\x0d\n   * @returns {void}\x0d\n   */\x0d\n  postMessage(message) {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n    if (this[kHandle] === undefined)\x0d\n      throw new DOMException('BroadcastChannel is closed.');\x0d\n    if (this[kHandle].postMessage(message) === undefined)\x0d\n      throw new DOMException('Message could not be posted.');\x0d\n  }\x0d\n\x0d\n  // The ref() method is Node.js specific and not part of the standard\x0d\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\x0d\n  // Platform APIs with Node.js specific methods but ref and unref\x0d\n  // are a bit special.\x0d\n  /**\x0d\n   * @returns {BroadcastChannel}\x0d\n   */\x0d\n  ref() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (this[kHandle])\x0d\n      this[kHandle].ref();\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // The unref() method is Node.js specific and not part of the standard\x0d\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\x0d\n  // Platform APIs with Node.js specific methods but ref and unref\x0d\n  // are a bit special.\x0d\n  /**\x0d\n   * @returns {BroadcastChannel}\x0d\n   */\x0d\n  unref() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (this[kHandle])\x0d\n      this[kHandle].unref();\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(BroadcastChannel.prototype\x2C {\x0d\n  name: kEnumerableProperty\x2C\x0d\n  close: kEnumerableProperty\x2C\x0d\n  postMessage: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\ndefineEventHandler(BroadcastChannel.prototype\x2C 'message');\x0d\ndefineEventHandler(BroadcastChannel.prototype\x2C 'messageerror');\x0d\n\x0d\nmodule.exports = {\x0d\n  drainMessagePort\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  MessageEvent\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x2C\x0d\n  createWorkerStdio\x2C\x0d\n  BroadcastChannel\x2C\x0d\n};\x0d\n
code-source-info,0x3e8c871a494,130,0,16035,C0O0C4O16035,,
code-creation,JS,10,175493,0x3e8c871c544,1711, node:internal/worker/io:1:1,0x3e8c871a408,~
code-source-info,0x3e8c871c
code-creation,Eval,10,176175,0x3e8c871f98c,5, node:internal/error_serdes:1:1,0x3e8c871f5e8,~
script-source,131,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  StringFromCharCode\x2C\x0d\n  StringPrototypeSubstring\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypeError\x2C\x0d\n  TypedArrayPrototypeGetBuffer\x2C\x0d\n  TypedArrayPrototypeGetByteOffset\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\nconst { inspect: { custom: customInspectSymbol } } = require('util');\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\nconst kInspectedSymbol = 3;\x0d\nconst kCustomInspectedObject = 4;\x0d\n\x0d\nconst kSymbolStringLength = 'Symbol('.length;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x2C\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = { __proto__: null };\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      // TODO: create a null-prototype descriptor with needed properties only\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n        delete descriptor.get;\x0d\n        delete descriptor.set;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if (key === 'cause') {\x0d\n      descriptor.value = serializeError(descriptor.value);\x0d\n      all[key] = descriptor;\x0d\n    } else if ('value' in descriptor &&\x0d\n            typeof descriptor.value !== 'function' && typeof descriptor.value !== 'symbol') {\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: desc.value\x2C enumerable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  if (typeof error === 'symbol') {\x0d\n    return Buffer.from(StringFromCharCode(kInspectedSymbol) + inspect(error)\x2C 'utf8');\x0d\n  }\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x2C\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    if (error != null && customInspectSymbol in error) {\x0d\n      return Buffer.from(StringFromCharCode(kCustomInspectedObject) + inspect(error)\x2C 'utf8');\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.from(StringFromCharCode(kInspectedError) + inspect(error)\x2C 'utf8');\x0d\n}\x0d\n\x0d\nfunction fromBuffer(error) {\x0d\n  return Buffer.from(TypedArrayPrototypeGetBuffer(error)\x2C\x0d\n                     TypedArrayPrototypeGetByteOffset(error) + 1\x2C\x0d\n                     TypedArrayPrototypeGetByteLength(error) - 1);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: { __proto__: null\x2C value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x2C\x0d\n      });\x0d\n      if ('cause' in properties && 'value' in properties.cause) {\x0d\n        properties.cause.value = deserializeError(properties.cause.value);\x0d\n      }\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError:\x0d\n      return fromBuffer(error).toString('utf8');\x0d\n    case kInspectedSymbol: {\x0d\n      const buf = fromBuffer(error);\x0d\n      return SymbolFor(StringPrototypeSubstring(buf.toString('utf8')\x2C kSymbolStringLength\x2C buf.length - 1));\x0d\n    }\x0d\n    case kCustomInspectedObject:\x0d\n      return {\x0d\n        __proto__: null\x2C\x0d\n        [customInspectSymbol]: () => fromBuffer(error).toString('utf8')\x2C\x0d\n      };\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x3e8c871f98c,131,0,5914,C0O0C4O5914,,
code-creation,JS,10,176554,0x3e8c871fe94,448, node:internal/error_serdes:1:1,0x3e8c871f900,~
code-source-info,0x3e8c871fe94,131,0,5914,C0O0C138O32C144O32C149O49C153O32C155O70C161O96C166O106C171O120C177O146C183O163C189O180C195O205C201O240C207O270C213O295C218O310C224O338C229O353C234O372C239O384C245O407C251O436C257O458C262O474C268O488C273O502C279O535C285O572C291O609C296O691C302O691C307O655C312O665C318O736C319O736C321O766C323O766C325O794C327O794C329O823C331O823C333O858C335O858C337O892C340O902C344O892C346O928C353O933C359O940C365O951C371O963C377O973C383O986C389O1002C395O928C397O1048C400O1060C407O1048C412O1048C414O2818C415O2818C417O3023C418O3023C420O4604C421O4604C423O5858C430O5877C436O5893C442O5873C447O5913,,
code-creation,JS,10,177030,0x3e8c8721bbc,926,Socket node:net:353:16,0x3ba136507c0,~
code-source-info,0x3e8c8721bbc
code-creation,JS,10,177325,0x3e8c872250c,504,Duplex node:internal/streams/duplex:62:16,0x3ba1366bcf0,~
code-source-info,0x3e8c872250c
code-creation,JS,10,177460,0x3e8c87230f4,254,Readable node:internal/streams/readable:318:18,0x3ba136732d0,~
code-source-info,0x3e8c87230f4,99,10417,11476,C0O10417C9O10432C16O10443C21O10470C28O10477C33O10499C34O10505C51O10536C56O10559C61O10581C66O10602C71O10628C77O10518C81O10875C99O10897C104O10895C108O10943C112O10982C120O11010C123O11031C127O11021C131O11063C139O11094C142O11118C146O11108C150O11153C158O11186C161O11212C165O11202C169O11242C175O11257C182O11280C190O11257C195O11305C202O11312C210O11312C216O11338C219O11347C226O11374C233O11386C246O11386C253O11475,,
code-creation,JS,10,177526,0x3e8c872337c,18,Stream node:internal/streams/legacy:10:16,0x3ba1366cf88,~
code-source-info,0x3e8c872337c,98,136,171,C0O148C5O151C10O151C17O170,,
code-creation,JS,10,177709,0x3e8c87242ac,365,ReadableState node:internal/streams/readable:260:23,0x3ba13673278,~
code-source-info,0x3e8c87242ac,99,8205,10228,C0O8356C2O8361C7O8371C12O8384C14O8382C20O8399C22O8397C28O8414C30O8412C33O8369C37O8550C41O8573C47O8590C50O8595C56O8606C61O8603C65O8624C71O8640C73O8659C79O8684C82O8689C88O8700C93O8697C97O8862C102O8883C106O8898C121O8898C130O8972C135O8972C139O8881C143O9009C145O9021C149O9030C150O9047C154O9055C155O9067C159O9075C161O9086C165O9157C169O9180C179O9201C182O9206C188O9217C193O9214C197O9309C201O9332C211O9355C214O9360C220O9371C225O9368C229O9613C236O9620C244O9642C249O9689C256O9719C261O9739C264O9744C270O9755C275O9752C281O9787C286O9798C291O9798C298O9834C300O9855C306O9891C313O9897C318O9891C319O10054C320O10077C324O10090C328O10113C334O10130C336O10149C339O10171C346O10145C351O10143C355O10211C359O10201C364O10227,,
code-creation,JS,10,177825,0x3e8c87246f4,98,getHighWaterMark node:internal/streams/state:32:26,0x3ba136791f0,~
code-source-info,0x3e8c87246f4,101,857,1277,C0O912C12O912C18O964C21O988C26O993C33O1021C38O1048C47O1070C56O1116C69O1122C74O1116C75O1172C80O1179C84O1194C85O1225C88O1262C93O1232C97O1274,,
code-creation,JS,10,177867,0x3e8c87249fc,26,highWaterMarkFrom node:internal/streams/state:14:27,0x3ba136790e8,~
code-source-info,0x3e8c87249fc,101,326,470,C0O377C7O409C15O430C19O448C25O467,,
code-creation,JS,10,177898,0x3e8c8724aec,22,get node:internal/streams/readable:130:8,0x3ba1367c808,~
code-source-info,0x3e8c8724aec,99,3940,3981,C0O3945C4O3958C6O3957C12O3966C17O3973C21O3979,,
code-creation,JS,10,177927,0x3e8c8724be4,15,getDefaultHighWaterMark node:internal/streams/state:19:33,0x3ba13679140,~
code-source-info,0x3e8c8724be4,101,506,606,C0O524C6O544C12O577C14O603,,
code-creation,JS,10,178039,0x3e8c872503c,400,WritableState node:internal/streams/writable:296:23,0x15e3f449710,~
code-source-info,0x3e8c872503c,104,9515,11852,C0O9666C2O9671C7O9681C12O9689C14O9687C20O9704C22O9702C28O9717C30O9715C33O9679C37O9736C41O9759C47O9776C50O9781C56O9792C61O9789C65O9810C71O9826C73O9845C79O9870C82O9875C88O9886C93O9883C97O10092C102O10113C106O10128C121O10128C130O10202C135O10202C139O10111C143O10239C147O10263C157O10288C160O10293C166O10304C171O10301C175O10385C179O10408C189O10429C192O10434C198O10445C203O10442C207O10537C211O10560C221O10583C224O10588C230O10599C235O10596C239O10841C243O10859C251O10886C256O10933C263O10963C268O10983C271O10988C277O10999C282O10996C288O11031C293O11042C298O11042C305O11078C308O11083C314O11095C316O11094C321O11091C325O11122C327O11127C332O11150C338O11186C345O11192C350O11186C351O11395C352O11407C356O11483C357O11495C361O11560C364O11583C371O11583C377O11573C381O11675C382O11689C386O11699C389O11699C393O11830C394O11845C399O11851,,
code-creation,JS,10,178142,0x3e8c872546c,22,get node:internal/streams/writable:123:8,0x15e3f44dc78,~
code-source-info,0x3e8c872546c,104,3884,3925,C0O3889C4O3902C6O3901C12O3910C17O3917C21O3923,,
code-creation,JS,10,178209,0x3e8c8725744,65,resetBuffer node:internal/streams/writable:356:21,0x15e3f449768,~
code-source-info,0x3e8c8725744,104,11876,12025,C0O11889C2O11895C6O11911C10O11922C11O11942C15O11950C17O11956C26O11967C31O11981C33O11979C39O11964C43O11994C46O12000C52O12012C54O12011C59O12008C64O12024,,
code-creation,JS,10,178266,0x3e8c8725a2c,50,set node:internal/streams/readable:131:8,0x3ba1367c860,~
code-source-info,0x3e8c8725a2c,99,3991,4080,C0O4008C4O4019C8O4024C17O4035C20O4032C26O4052C30O4057C39O4068C44O4065C49O4079,,
code-creation,JS,10,178329,0x3e8c8725c64,131,createHandle node:net:165:22,0x3ba136503a0,~
code-source-info,0x3e8c8725c64,88,4730,5108,C0O4751C13O4751C18O4795C23O4795C28O4819C30O4828C35O4847C42O4871C46O4883C49O4897C57O4906C60O4920C67O4854C72O4935C73O4946C75O4955C80O4973C87O4996C91O5008C94O5021C102O5030C105O5043C112O4980C117O5058C118O5069C125O5075C130O5069,,
code-creation,JS,10,178383,0x3e8c8725dfc,21,guessHandleType node:internal/util:839:25,0x22671c82b78,~
code-source-info,0x3e8c8725dfc,16,24154,24230,C0O24177C5O24177C10O24202C17O24220C20O24227,,
code-creation,JS,10,178429,0x3e8c8725eec,14,set node:net:2301:6,0x3ba13652d58,~
code-source-info,0x3e8c8725eec,88,66020,66053,C0O66026C2O66038C7O66047C13O66051,,
code-creation,JS,10,178459,0x3e8c8725fd4,8,get node:net:2300:6,0x3ba13652d00,~
code-source-info,0x3e8c8725fd4,88,65984,66012,C0O65989C2O66001C4O66000C7O66010,,
code-creation,JS,10,178567,0x3e8c8726254,315,Readable.on node:internal/streams/readable:1125:33,0x3ba13674808,~
code-source-info,0x3e8c
code-creation,JS,10,178700,0x3e8c87265cc,133,initSocketHandle node:net:309:26,0x3ba13650710,~
code-source-info,0x3e8c87265cc,88,8198,8798,C0O8215C5O8215C9O8232C10O8247C14O8336C20O8357C27O8365C32O8379C36O8397C43O8414C45O8412C49O8433C51O8438C57O8476C62O8457C66O8455C70O8507C72O8512C74O8511C78O8527C80O8564C82O8569C84O8568C88O8589C90O8631C94O8650C99O8655C105O8689C106O8696C107O8706C112O8720C116O8752C121O8760C126O8760C132O8797,,
code-creation,JS,10,178807,0x3e8c8726804,155,undestroy node:internal/streams/destroy:172:19,0x3ba1366a5f8,~
code-source-info,0x3e8c8726804,96,3362,4063,C0O3385C5O3419C10O3440C14O3454C15O3468C19O3481C20O3490C24O3504C25O3519C29O3533C30O3545C34O3559C35O3569C39O3582C40O3597C44O3611C45O3621C49O3647C57O3643C61O3689C69O3685C73O3719C77O3733C78O3747C82O3760C83O3772C87O3786C88O3795C92O3809C93O3824C97O3838C98O3848C102O3861C103O3876C107O3890C108O3904C112O3918C113O3932C117O3958C125O3954C129O3996C137O3992C141O4036C149O4032C154O4062,,
code-creation,JS,10,178880,0x3e8c872756c,61,set node:internal/streams/readable:184:8,0x3ba13673dd0,~
code-source-info,0x3e8c872756c,99,6409,6579,C0O6426C4O6448C6O6453C11O6468C15O6486C17O6491C26O6502C31O6499C37O6537C39O6542C48O6554C50O6553C55O6550C60O6578,,
code-creation,JS,10,178933,0x3e8c8727734,50,set node:internal/streams/writable:124:8,0x15e3f44dcd0,~
code-source-info,0x3e8c8727734,104,3935,4024,C0O3952C4O3963C8O3968C17O3979C20O3976C26O3996C30O4001C39O4012C44O4009C49O4023,,
code-creation,JS,10,178970,0x3e8c8727854,61,set node:internal/streams/writable:209:8,0x15e3f449df0,~
code-source-info,0x3e8c8727854,104,7165,7335,C0O7182C4O7204C6O7209C11O7224C15O7242C17O7247C26O7258C31O7255C37O7293C39O7298C48O7310C50O7309C55O7306C60O7334,,
code-creation,JS,10,179011,0x3e8c872799c,45,get node:internal/streams/writable:222:8,0x15e3f449e48,~
code-source-info,0x3e8c872799c,104,7414,7511,C0O7419C2O7432C4O7431C10O7442C12O7440C17O7456C24O7469C30O7480C32O7478C37O7491C44O7509,,
code-creation,JS,10,179071,0x3e8c8727db4,32,getNewAsyncId node:net:184:23,0x3ba136503f8,~
code-source-info,0x3e8c8727db4,88,5136,5255,C0O5150C4O5183C14O5217C17O5217C22O5239C27O5239C31O5252,,
code-creation,JS,10,179118,0x3e8c8728064,5,get node:internal/bootstrap/node:371:8,0xfca8d3a678,~
code-source-info,0x3e8c8728064,12,13145,13180,C0O13157C4O13173,,
code-creation,JS,10,179154,0x3e8c8728214,5,get C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v21.2.0\\node_modules\\0x\\lib\\preload\\redir-stdout.js:19:10,0x3e8c870de50,~
code-source-info,0x3e8c8728214,124,392,404,C0O398C4O404,,
code-creation,JS,11,179870,0x7ff62c4c6ec0,412,reportModuleToWatchMode node:internal/modules/cjs/loader:228:33,0x22671cb67a8,^
code-source-info,0x7ff62c4c6ec0,63,6737,6865,,,
code-creation,JS,11,179914,0x7ff62c4c7080,988,deprecate node:internal/util:157:19,0xfca8d3f880,^
code-source-info,0x7ff62c4c7080,16,4320,5334,,,
code-creation,JS,11,179935,0x7ff62c4c7480,272,getOwn node:internal/bootstrap/realm:202:16,0xfca8d33d88,^
code-source-info,0x7ff62c4c7480,9,6578,6736,,,
code-creation,JS,11,179958,0x7ff62c4c75c0,696,syncExports node:internal/bootstrap/realm:365:14,0xfca8d343b8,^
code-source-info,0x7ff62c4c75c0,9,12255,12598,,,
code-creation,JS,11,179979,0x7ff62c4c78c0,268,SafeWeakMap node:internal/per_context/primordials:420:16,0xfca8d320e0,^
code-source-info,0x7ff62c4c78c0,6,12579,12596,,,
code-creation,JS,11,179998,0x7ff62c4c7a00,420, node:internal/util:807:18,0x22671c82a90,^
code-source-info,0x7ff62c4c7a00,16,23100,23226,,,
code-creation,JS,11,180015,0x7ff62c4c7c00,44,noop node:internal/util/debuglog:46:14,0x22671c89368,^
code-source-info,0x7ff62c4c7c00,22,1449,1457,,,
code-creation,JS,11,180032,0x7ff62c4c7c80,156,canBeRequiredWithoutScheme node:internal/bootstrap/realm:288:36,0xfca8d34128,^
code-source-info,0x7ff62c4c7c80,9,9439,9509,,,
code-creation,JS,11,180052,0x7ff62c4c7d40,332,set node:internal/streams/readable:131:8,0x3ba1367c860,^
code-source-info,0x7ff62c4c7d40,99,3991,4080,,,
code-creation,JS,11,180072,0x7ff62c4c7ec0,332,set node:internal/streams/writable:124:8,0x15e3f44dcd0,^
code-source-info,0x7ff62c4c7ec0,104,3935,4024,,,
code-creation,JS,11,180092,0x7ff62c4c8040,576,normalizeRequirableId node:internal/bootstrap/realm:292:31,0xfca8d34180,^
code-source-info,0x7ff62c4c8040,9,9543,9878,,,
code-creation,JS,11,180109,0x7ff62c4c82c0,188,readPackage node:internal/modules/package_json_reader:123:21,0x22671cb88c0,^
code-source-info,0x7ff62c4c82c0,65,3336,3408,,,
code-creation,JS,13,180154,0x7ff62c4c83c0,196,isPathSeparator node:path:52:25,0x22671c9a5c8,*
code-source-info,0x7ff62c4c83c0,34,1794,1876,C0O1794C39O1818C71O1873C141O1794,,
code-creation,JS,11,180421,0x7ff62c4c84c0,1324,readPackageScope node:internal/modules/package_json_reader:132:26,0x22671cb8918,^
code-source-info,0x7ff62c4c84c0,65,3657,4476,,,
new,MemoryChunk,0x7ff62c500000,262144
code-creation,JS,11,180523,0x7ff62c503040,2688,basename node:path:753:11,0x22671c9ac38,^
code-source-info,0x7ff62c503040,34,24122,26969,,,
code-creation,JS,11,180548,0x7ff62c4c8a40,300,isEnabled node:internal/process/permission:16:12,0x22671ca4040,^
code-source-info,0x7ff62c4c8a40,46,339,580,,,
code-creation,Eval,10,180665,0x3e8c8728cec,5, C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v21.2.0\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x3e8c8728b98,~
script-source,132,C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v21.2.0\\node_modules\\0x\\lib\\preload\\soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x3e8c8728cec,132,0,85,C0O0C4O85,,
code-creation,JS,10,180707,0x3e8c8728d8c,56, C:\\Users\\Denis\\AppData\\Roaming\\nvm\\v21.2.0\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x3e8c8728c60,~
code-source-info,0x3e8c8728d8c,132,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
code-creation,JS,10,180864,0x3e8c87297ac,50,initializeFrozenIntrinsics node:internal/process/pre_execution:728:36,0x22671cba418,~
code-source-info,0x3e8c87297ac,67,23399,23627,C0O23407C8O23411C14O23457C17O23465C28O23465C34O23579C40O23579C45O23616C49O23626,,
code-creation,JS,10,180904,0x3e8c87298cc,22,markBootstrapComplete node:internal/process/pre_execution:749:31,0x22671cba4c8,~
code-source-info,0x3e8c87298cc,67,24024,24090,C0O24032C6O24032C11O24062C16O24063C21O24089,,
code-creation,JS,10,181005,0x3e8c8729a14,94,executeUserEntryPoint node:internal/modules/run_main:127:31,0x22671cbbcb8,~
script-source,70,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\n\x0d\n/**\x0d\n * Get the absolute path to the main entry point.\x0d\n * @param {string} main - Entry point path\x0d\n */\x0d\nfunction resolveMainPath(main) {\x0d\n  const defaultType = getOptionValue('--experimental-default-type');\x0d\n  /** @type {string} */\x0d\n  let mainPath;\x0d\n  if (defaultType === 'module') {\x0d\n    if (getOptionValue('--preserve-symlinks-main')) { return; }\x0d\n    mainPath = path.resolve(main);\x0d\n  } else {\x0d\n    // Extension searching for the main entry point is supported only in legacy mode.\x0d\n    // Module._findPath is monkey-patchable here.\x0d\n    const { Module } = require('internal/modules/cjs/loader');\x0d\n    mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  }\x0d\n  if (!mainPath) { return; }\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain) {\x0d\n    const { toRealPath } = require('internal/modules/helpers');\x0d\n    try {\x0d\n      mainPath = toRealPath(mainPath);\x0d\n    } catch (err) {\x0d\n      if (defaultType === 'module' && err?.code === 'ENOENT') {\x0d\n        const { decorateErrorWithCommonJSHints } = require('internal/modules/esm/resolve');\x0d\n        const { getCWDURL } = require('internal/util');\x0d\n        decorateErrorWithCommonJSHints(err\x2C mainPath\x2C getCWDURL());\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determine whether the main entry point should be loaded through the ESM Loader.\x0d\n * @param {string} mainPath - Absolute path to the main entry point\x0d\n */\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  if (getOptionValue('--experimental-default-type') === 'module') { return true; }\x0d\n\x0d\n  /**\x0d\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userLoaders = getOptionValue('--experimental-loader');\x0d\n  /**\x0d\n   * @type {string[]} userImports A list of preloaded modules registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userImports = getOptionValue('--import');\x0d\n  if (userLoaders.length > 0 || userImports.length > 0) { return true; }\x0d\n\x0d\n  // Determine the module format of the entry point.\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs')) { return true; }\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs')) { return false; }\x0d\n\x0d\n  const { readPackageScope } = require('internal/modules/package_json_reader');\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  // No need to guard `pkg` as it can only be an object or `false`.\x0d\n  switch (pkg.data?.type) {\x0d\n    case 'module':\x0d\n      return true;\x0d\n    case 'commonjs':\x0d\n      return false;\x0d\n    default: { // No package.json or no `type` field.\x0d\n      if (getOptionValue('--experimental-detect-module')) {\x0d\n        // If the first argument of `containsModuleSyntax` is undefined\x2C it will read `mainPath` from the file system.\x0d\n        return containsModuleSyntax(undefined\x2C mainPath);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Run the main entry point through the ESM Loader.\x0d\n * @param {string} mainPath - Absolute path for the main entry point\x0d\n */\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n  const main = pathToFileURL(mainPath).href;\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    return esmLoader.import(main\x2C undefined\x2C { __proto__: null });\x0d\n  }));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Handle process exit events around the main entry point promise.\x0d\n * @param {Promise} promise - Main entry point promise\x0d\n */\x0d\nasync function handleMainPromise(promise) {\x0d\n  const {\x0d\n    handleProcessExit\x2C\x0d\n  } = require('internal/modules/esm/handle_process_exit');\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Parse the CLI main entry point string and run it.\x0d\n * For backwards compatibility\x2C we have to run a bunch of monkey-patchable code that belongs to the CJS loader (exposed\x0d\n * by `require('module')`) even when the entry point is ESM.\x0d\n * This monkey-patchable code is bypassed under `--experimental-default-type=module`.\x0d\n * Because of backwards compatibility\x2C this function is exposed publicly via `import { runMain } from 'node:module'`.\x0d\n * @param {string} main - First positional CLI argument\x2C such as `'entry.js'` from `node entry.js`\x0d\n */\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    const { Module } = require('internal/modules/cjs/loader');\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x3e8c8729a14,70,4646,5024,C7O4662C14O4666C22O4697C25O4697C30O4744C33O4744C38O4781C40O4806C45O4817C50O4806C56O4940C62O4940C67O4929C72O4992C87O4992C93O5023,,
code-creation,JS,10,181345,0x3e8c872a164,244,resolveMainPath node:internal/modules/run_main:15:25,0x22671cbba70,~
code-source-info,0x3e8c872a164,70,358,1524,C0O390C8O390C13O469C15O482C17O498C22O519C28O523C34O569C35O576C36O584C41O600C46O600C54O789C60O789C65O778C70O852C77O862C80O867C85O867C98O852C104O903C108O920C109O927C110O964C116O964C121O1011C123O1068C129O1068C134O1053C142O1134C150O1132C160O1184C162O1200C172O1219C182O1226C187O1294C195O1294C200O1259C205O1366C213O1366C218O1352C223O1401C226O1447C233O1401C238O1477C240O1477C241O1505C243O1521,,
code-creation,RegExp,3,181594,0x7ff62c4d05c0,1564,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
tick,0x7ffe2c22da84,181895,0,0x0,0,0x7ff62c4ce0ab,0x121eb1285bf,0x121eb127be3,0x3e8c872a1c6,0x3e8c8729a2d,0x33d09cbd875
code-creation,JS,10,182502,0x3e8c872a904,193,shouldUseESMLoader node:internal/modules/run_main:52:28,0x22671cbbbb0,~
code-source-info,0x3e8c872a904,70,1718,3179,C0O1734C8O1738C15O1784C20O1800C21O1812C22O1994C28O1994C33O2215C39O2215C44O2262C50O2269C55O2288C61O2295C66O2302C67O2314C68O2376C74O2392C80O2392C87O2437C88O2449C89O2455C95O2472C101O2472C108O2517C109O2530C110O2567C116O2567C121O2546C126O2631C131O2743C138O2747C162O2784C163O2796C164O2826C165O2839C166O2902C172O2906C178O3085C185O3092C190O3134C191O3151C192O3164,,
code-creation,Eval,10,183126,0x3e8c872b594,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js:1:1,0x3e8c872b400,~
script-source,133,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js,var express = require('express');\x0d\nvar app = express();\x0d\napp.get('/'\x2C async (req\x2C res\x2C next) => {\x0d\n    const k = 1000000;\x0d\n    const r2 = findPrimesOptimized(k);\x0d\n    console.log(r2);\x0d\n    res.json(r2);\x0d\n});\x0d\napp.listen(3000\x2C () => {\x0d\n    console.log('Server running on port 3000');\x0d\n});\x0d\nfunction f1() {\x0d\n    function f2() {\x0d\n        function f3() {\x0d\n            function f4() {\x0d\n                function f5() {\x0d\n                    function f6() {\x0d\n                        function f7() {\x0d\n                            function f8() {\x0d\n                                function f9() {\x0d\n                                    function f10() {\x0d\n                                        keepCpuBusy();\x0d\n                                    }\x0d\n                                    f10();\x0d\n                                }\x0d\n                                f9();\x0d\n                            }\x0d\n                            f8();\x0d\n                        }\x0d\n                        f7();\x0d\n                   }\x0d\n                   f6();\x0d\n                }\x0d\n                f5();\x0d\n             }\x0d\n             f4();\x0d\n         }\x0d\n         f3();\x0d\n     }\x0d\n     f2();\x0d\n}\x0d\nfunction keepCpuBusy() {\x0d\n    for (let i = 0; i < 1000000; i++) {\x0d\n        console.log('i----------->'\x2C i);\x0d\n    }\x0d\n}\x0d\n\x0d\nfunction findPrimes(k) {\x0d\n    let primes = [2];\x0d\n    for(let i = 3; i < k; i += 2) {\x0d\n        if(isPrime(i)) {\x0d\n            primes.push(i);\x0d\n        }\x0d\n    }\x0d\n    return primes;\x0d\n}\x0d\n\x0d\nfunction findPrimesOptimized(k) {\x0d\n    let primes = [];\x0d\n    for(let i = 2; i < k; i++) {\x0d\n        if(isPrimeOptimized(i)) {\x0d\n            primes.push(i);\x0d\n        }\x0d\n    }\x0d\n    return primes;\x0d\n}\x0d\n\x0d\nfunction isPrime(num) {\x0d\n    for(let i = 2; i < num; i++) {\x0d\n        if(num % i == 0) {\x0d\n            return false;\x0d\n        }\x0d\n    }\x0d\n    return true;\x0d\n}\x0d\n\x0d\nfunction isPrimeOptimized(num) {\x0d\n    for(let i = 2; i < Math.floor(Math.sqrt(num)) + 1; i++) {\x0d\n        if(num % i == 0) {\x0d\n            return false;\x0d\n        }\x0d\n    }\x0d\n    return true;\x0d\n}
code-source-info,0x3e8c872b594,133,0,2003,C0O0C4O2003,,
code-creation,JS,10,183255,0x3e8c872b874,83, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js:1:1,0x3e8c872b508,~
code-source-info,0x3e8c872b874,133,0,2003,C0O0C29O14C32O14C37O45C41O61C54O61C60O213C75O213C82O2002,,
code-creation,JS,10,183564,0x3e8c872bec4,212,resolveExports node:internal/modules/cjs/loader:581:24,0x22671cb6f90,~
code-source-info,0x3e8c872bec4,63,17548,18363,C0O17689C7O17709C10O17689C19O17738C25O17656C32O17665C40O17755C44O17768C45O17775C46O17797C51O17802C56O17802C63O17840C68O17840C73O17874C79O17888C89O17959C95O17959C100O17933C105O18007C110O18068C115O18090C119O18068C129O18114C137O18147C140O18147C147O18036C158O18014C163O18183C175O18210C178O18216C185O18221C190O18260C197O18304C201O18266C206O18260C207O18340C209O18340C211O18362,,
code-creation,JS,13,184287,0x7ff62c503b00,1988,normalizeString node:path:66:25,0x22671c9a8c8,*
code-source-info,0x7ff62c503bx22671c9a5c8
code-creation,JS,10,184828,0x3e8c872e79c,317,tryPackage node:internal/modules/cjs/loader:429:20,0x22671cb6d80,~
code-source-info,0x3e8c872e79c,63,12523,13818,C0O12582C5O12582C10O12607C15O12619C17O12636C22O12657C25O12662C33O12662C46O12643C51O12707C52O12735C57O12740C62O12740C69O12783C72O12783C91O12817C104O12882C112O12882C125O12863C131O12928C136O12957C142O12985C150O12985C163O12966C169O13036C171O13126C181O13169C194O13183C200O13126C206O13275C208O13284C212O13313C215O13329C223O13329C229O13322C233O13374C235O13390C239O13469C241O13469C242O13518C245O13523C253O13523C260O13568C263O13576C273O13626C286O13643C299O13652C309O13576C314O13801C316O13815,,
code-creation,Eval,10,185715,0x3e8c872ee8c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\index.js:1:1,0x3e8c872ed38,~
script-source,134,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\index.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n
code-source-info,0x3e8c872ee8c,134,0,224,C0O0C4O224,,
code-creation,JS,10,185791,0x3e8c872ef14,13, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\index.js:1:1,0x3e8c872ee00,~
code-source-info,0x3e8c872ef14,134,0,224,C0O181C3O198C7O196C12O223,,
code-creation,JS,10,186111,0x3e8c872f1cc,607,normalize node:path:308:12,0x22671c9aa28,~
code-source-info,0x3e8c872f1cc
code-creation,RegExp,3,186426,0x7ff62c4d0c00,1856,^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$
code-creation,Eval,10,187287,0x3e8c873005c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\express.js:1:1,0x3e8c872fea8,~
script-source,135,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\express.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req\x2C res\x2C next) {\n    app.handle(req\x2C res\x2C next);\n  };\n\n  mixin(app\x2C EventEmitter.prototype\x2C false);\n  mixin(app\x2C proto\x2C false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req\x2C {\n    app: { configurable: true\x2C enumerable: true\x2C writable: true\x2C value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res\x2C {\n    app: { configurable: true\x2C enumerable: true\x2C writable: true\x2C value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.raw = bodyParser.raw\nexports.static = require('serve-static');\nexports.text = bodyParser.text\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser'\x2C\n  'compress'\x2C\n  'cookieSession'\x2C\n  'session'\x2C\n  'logger'\x2C\n  'cookieParser'\x2C\n  'favicon'\x2C\n  'responseTime'\x2C\n  'errorHandler'\x2C\n  'timeout'\x2C\n  'methodOverride'\x2C\n  'vhost'\x2C\n  'csrf'\x2C\n  'directory'\x2C\n  'limit'\x2C\n  'multipart'\x2C\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports\x2C name\x2C {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    }\x2C\n    configurable: true\n  });\n});\n
code-source-info,0x3e8c873005c,135,0,2409,C0O0C4O2409,,
code-creation,JS,10,187545,0x3e8c8730364,237, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\express.js:1:1,0x3e8c872ffd0,~
code-source-info,0x3e8c8730364,135,0,2409,C0O0C14O231C17O231C22O273C25O273C30O290C34O273C36O317C39O317C43O317C45O359C48O359C52O359C54O397C57O397C62O437C65O437C70O468C73O468C77O468C79O500C82O500C86O500C88O566C90O591C96O574C98O1300C103O1320C107O1329C112O1345C116O1352C121O1369C125O1410C130O1424C134O1433C139O1448C143O1489C146O1515C150O1502C154O1520C160O1536C164O1534C168O1567C171O1592C175O1579C179O1596C185O1613C189O1611C193O1638C196O1664C200O1651C204O1669C207O1701C211O1688C215O1812C220O2088C230O2088C236O2408,,
code-creation,JS,11,187830,0x7ff62c504380,3356,read node:internal/modules/package_json_reader:47:14,0x22671cb86d0,^
code-source-info,0x7ff62c504380,65,1145,3242,,,
code-creation,JS,11,187879,0x7ff62c4c8bc0,220,setOwnProperty node:internal/util:736:24,0x22671c826f8,^
code-source-info,0x7ff62c4c8bc0,16,20752,20927,,,
code-creation,JS,11,187910,0x7ff62c4c8cc0,368,assertEncoding node:internal/fs/utils:158:24,0x22671cb2b70,^
code-source-info,0x7ff62c4c8cc0,60,3812,3994,,,
code-creation,JS,11,187950,0x7ff62c4c8e80,956,getOptions node:internal/fs/utils:323:20,0x22671cb3110,^
code-source-info,0x7ff62c4c8e80,60,7779,8407,,,
code-creation,JS,11,187982,0x7ff62c4c9280,368,isURL node:internal/url:761:15,0x22671c9eef0,^
code-source-info,0x7ff62c4c9280,39,22165,22278,,,
code-creation,JS,11,188012,0x7ff62c4c9440,152,isUint8Array node:internal/util/types:13:22,0x22671c837f0,^
code-source-info,0x7ff62c4c9440,18,269,356,,,
code-creation,JS,11,188048,0x7ff62c4c9500,544,stat node:internal/modules/cjs/loader:185:14,0x22671cb6648,^
code-source-info,0x7ff62c4c9500,63,5451,5864,,,
code-creation,JS,11,188089,0x7ff62c4c9740,1092, node:internal/fs/utils:673:38,0x22671cb3c30,^
code-source-info,0x7ff62c4c9740,60,19003,19735,,,
code-creation,JS,11,188127,0x7ff62c4c9bc0,164,assert node:internal/assert:11:16,0xfca8d39d50,^
code-source-info,0x7ff62c4c9bc0,11,182,322,,,
code-creation,Eval,10,189301,0x3e8c87326e4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\index.js:1:1,0x3e8c8732550,~
script-source,136,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\index.js,/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser\x2C\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports\x2C 'json'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports\x2C 'raw'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports\x2C 'text'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports\x2C 'urlencoded'\x2C {\n  configurable: true\x2C\n  enumerable: true\x2C\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  // use default type for parsers\n  var opts = Object.create(options || null\x2C {\n    type: {\n      configurable: true\x2C\n      enumerable: true\x2C\n      value: undefined\x2C\n      writable: true\n    }\n  })\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req\x2C res\x2C next) {\n    _json(req\x2C res\x2C function (err) {\n      if (err) return next(err)\n      _urlencoded(req\x2C res\x2C next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n
code-source-info,0x3e8c87326e4,136,0,2681,C0O0C4O2681,,
code-creation,JS,10,189431,0x3e8c8732aa4,235, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\index.js:1:1,0x3e8c8732658,~
code-source-info,0x3e8c8732aa4,136,0,2681,C0O0C29O168C35O168C43O183C48O263C52O270C59O270C64O263C66O538C74O546C81O526C87O509C89O656C93O663C104O678C112O746C120O663C125O812C129O819C140O834C148O901C156O819C161O967C165O974C176O989C184O1057C192O974C197O1131C201O1138C212O1153C220O1227C228O1138C234O2680,,
code-creation,JS,11,189649,0x7ff62c5050c0,5820,Module._findPath node:internal/modules/cjs/loader:610:28,0x22671cb6fe8,^
code-source-info,0x7ff62c5050c0,63,18673,22882,,,
code-creation,JS,11,189689,0x7ff62c4c9cc0,424,tryExtensions node:internal/modules/cjs/loader:487:23,0x22671cb6e30,^
code-source-info,0x7ff62c4c9cc0,63,14673,14880,,,
code-creation,JS,11,189708,0x7ff62c4c9ec0,152,toPathIfFileURL node:internal/url:1487:25,0x22671ca0480,^
code-source-info,0x7ff62c4c9ec0,39,44395,44512,,,
code-creation,JS,11,189784,0x7ff62c4c9f80,712,isAbsolute node:path:406:13,0x22671c9aa80,^
code-source-info,0x7ff62c4c9f80,34,13207,13626,,,
code-creation,Eval,10,190678,0x3e8c8735d64,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:1:1,0x3e8c8735ad0,~
script-source,137,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js,/*!\n * depd\n * Copyright(c) 2014-2018 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str\x2C namespace) {\n  var vals = str.split(/[ \x2C]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj\x2C prop\x2C message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj\x2C prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj\x2C prop\x2C descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += '\x2C arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + stack[i].toString()\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate\x2C message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if event emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction eehaslisteners (emitter\x2C type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str\x2C namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str\x2C namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message\x2C site) {\n  var haslisteners = eehaslisteners(process\x2C 'deprecation')\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace\x2C msg\x2C stack.slice(i))\n    process.emit('deprecation'\x2C err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this\x2C msg\x2C caller\x2C stack.slice(i))\n  process.stderr.write(output + '\\n'\x2C 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + '\x2C ' + file\n  }\n\n  var site = [file\x2C line\x2C colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg\x2C caller\x2C stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + stack[i].toString()\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg\x2C caller\x2C stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + stack[i].toString() + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath\x2C callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10\x2C limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj\x2C stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn\x2C message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n  // eslint-disable-next-line no-new-func\n  var deprecatedfn = new Function('fn'\x2C 'log'\x2C 'deprecate'\x2C 'message'\x2C 'site'\x2C\n    '"use strict"\\n' +\n    'return function (' + args + ') {' +\n    'log.call(deprecate\x2C message\x2C site)\\n' +\n    'return fn.apply(this\x2C arguments)\\n' +\n    '}')(fn\x2C log\x2C this\x2C message\x2C site)\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj\x2C prop\x2C message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj\x2C prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj\x2C prop\x2C message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate\x2C message\x2C site)\n      return get.apply(this\x2C arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate\x2C message\x2C site)\n      return set.apply(this\x2C arguments)\n    }\n  }\n\n  Object.defineProperty(obj\x2C prop\x2C descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace\x2C message\x2C stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error\x2C 'constructor'\x2C {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error\x2C 'message'\x2C {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: message\x2C\n    writable: true\n  })\n\n  Object.defineProperty(error\x2C 'name'\x2C {\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'DeprecationError'\x2C\n    writable: true\n  })\n\n  Object.defineProperty(error\x2C 'namespace'\x2C {\n    configurable: true\x2C\n    enumerable: false\x2C\n    value: namespace\x2C\n    writable: true\n  })\n\n  Object.defineProperty(error\x2C 'stack'\x2C {\n    configurable: true\x2C\n    enumerable: false\x2C\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this\x2C stack))\n    }\x2C\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n
code-source-info,0x3e8c8735d64,137,0,10932,C0O0C4O10932,,
code-creation,JS,10,191123,0x3e8c87365e4,155, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:1:1,0x3e8c8735cd8,~
code-source-info,0x3e8c87365e4,137,0,10932,C0O0C118O134C121O134C126O149C130O134C132O188C134O203C138O269C142O277C147O277C151O269C154O10931,,
code-creation,JS,10,191309,0x3e8c8736eac,158,depd C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:103:15,0x3e8c8735f28,~
code-source-info,0x3e8c8736eac,137,1744,2308,C0O1744C11O1760C15O1782C24O1788C29O1782C30O1855C35O1855C39O1879C46O1901C50O1879C55O1919C56O1923C60O2028C65O2044C69O2053C77O2074C81O2072C85O2097C90O2118C94O2132C102O2152C106O2150C110O2174C113O2194C117O2201C124O2201C129O2192C133O2217C140O2236C144O2253C151O2272C155O2290C157O2306,,
code-creation,JS,10,191390,0x3e8c87370d4,112,getStack C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:381:19,0x3e8c87362c0,~
code-source-info,0x3e8c87370d4,137,7502,7903,C0O7521C4O7527C9O7555C11O7571C15O7577C20O7598C26O7622C30O7650C34O7674C38O7679C46O7679C52O7672C56O7720C60O7726C65O7726C70O7805C75O7811C83O7811C89O7823C95O7847C99O7856C105O7878C109O7889C111O7901,,
code-creation,JS,10,191518,0x3e8c87374ac,186,prepareStackTrace node:internal/errors:90:27,0xfca8d34e60,~
code-source-info,0x3e8c87374ac,10,2179,3068,C0O2324C5O2347C10O2347C17O2376C20O2395C25O2395C31O2412C34O2431C39O2437C44O2458C49O2474C50O2513C64O2513C70O2574C72O2597C74O2593C79O2610C81O2632C82O2747C84O2763C91O2780C96O2820C108O2835C123O2851C134O2879C139O2893C144O2942C150O2949C155O2963C157O2982C158O2991C170O3024C176O3024C185O3065,,
code-creation,JS,10,191580,0x3e8c87376a4,68,maybeOverridePrepareStackTrace node:internal/errors:120:40,0xfca8d359d0,~
code-source-info,0x3e8c87376a4,10,3112,3835,C0O3345C7O3350C18O3411C23O3417C28O3417C34O3449C35O3677C40O3705C48O3746C51O3770C56O3770C62O3802C63O3813C67O3832,,
code-creation,JS,10,191614,0x3e8c87377bc,3,prepareObjectStackTrace C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:405:34,0x3e8c8736318,~
code-source-info,0x3e8c87377bc,137,7983,8014,C0O8000C2O8012,,
code-creation,JS,10,191671,0x3e8c8737924,123,callSiteLocation C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:267:27,0x3e8c8736108,~
code-source-info,0x3e8c8737924,137,5193,5537,C0O5228C5O5228C14O5281C19O5281C24O5319C29O5319C34O5353C39O5353C45O5385C50O5385C57O5401C63O5408C67O5433C76O5434C85O5440C94O5446C101O5455C103O5469C107O5503C112O5503C116O5492C120O5524C122O5535,,
code-creation,JS,10,191780,0x3e8c8737c3c,39,isignored C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:153:20,0x3e8c8736000,~
code-source-info,0x3e8c8737c3c,137,2884,3095,C0O2900C4O2912C10O2965C11O2976C12O2994C16O3002C21O3006C30O3053C33O3060C38O3093,,
code-creation,JS,10,191852,0x3e8c8737dac,92,containsNamespace C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:29:28,0x3e8c8735d98,~
code-source-info,0x3e8c8737dac,137,374,666,C0O410C11O410C17O436C21O436C26O453C31O454C36O484C38O496C42O489C47O525C49O529C53O565C57O581C62O596C67O596C74O610C79O627C80O638C81O505C86O471C90O652C91O664,,
code-creation,JS,10,191953,0x3e8c873807c,39,istraced C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:169:19,0x3e8c8736058,~
code-source-info,0x3e8c873807c,137,3161,3380,C0O3177C4O3189C10O3248C11O3259C12O3277C16O3285C21O3289C30O3338C33O3345C38O3378,,
code-creation,RegExp,3,192010,0x7ff62c4d1380,940,[ \x2C]+
code-creation,JS,10,192063,0x3e8c87384b4,151,wrapfunction C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:413:23,0x3e8c8736370,~
code-source-info,0x3e8c87384b4,137,8102,8686,C0O8120C6O8156C15O8162C20O8156C21O8228C24O8253C29O8228C34O8275C37O8275C41O8299C46O8321C50O8299C55O8344C59O8339C63O8413C87O8492C93O8518C99O8525C105O8533C111O8578C117O8621C123O8413C144O8631C150O8684,,
code-creation,JS,10,192125,0x3e8c873868c,50,createArgumentsString C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:71:32,0x3e8c8735e78,~
code-source-info,0x3e8c873868c,137,1255,1369,C0O1277C3O1296C5O1301C7O1301C12O1321C17O1336C27O1311C32O1283C36O1358C44O1358C49O1367,,
code-creation,Eval,10,192224,0x3e8c87389b4,6, :1:1,0x3e8c8738810,~
script-source,138,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function (arg0) {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0x3e8c87389b4,138,0,163,C0O0C5O163,,
code-creation,JS,10,192256,0x3e8c8738a94,30, :1:20,0x3e8c8738928,~
code-source-info,0x3e8c8738a94,138,19,162,C0O19C25O67C29O160,,
code-creation,JS,10,192293,0x3e8c8738c6c,14,createParserGetter C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\index.js:120:29,0x3e8c87327c0,~
code-source-info,0x3e8c8738c6c,136,1978,2047,C0O1978C9O1989C13O2045,,
code-creation,JS,10,192457,0x3e8c8739234,16,get node:events:237:6,0x22671c8a9b8,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  identicalSequenceRange\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\nlet FixedQueue;\x0d\nlet kFirstEventParam;\x0d\nlet kResistStopPropagation;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_UNHANDLED_ERROR\x2C\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kShapeMode = Symbol('shapeMode');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\nconst kWatermarkData = SymbolFor('nodejs.watermarkData');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x2C\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.addAbortListener = addAbortListener;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\nmodule.exports.getMaxListeners = getMaxListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    validateNumber(arg\x2C 'defaultMaxListeners'\x2C 0);\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    validateNumber(n\x2C 'setMaxListeners'\x2C 0);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = { __proto__: null };\x0d\n    this._eventsCount = 0;\x0d\n    this[kShapeMode] = false;\x0d\n  } else {\x0d\n    this[kShapeMode] = true;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  validateNumber(n\x2C 'setMaxListeners'\x2C 0);\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = { __proto__: null };\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        this._eventsCount -= 1;\x0d\n\x0d\n        if (this[kShapeMode]) {\x0d\n          events[type] = undefined;\x0d\n        } else if (this._eventsCount === 0) {\x0d\n          this._events = { __proto__: null };\x0d\n        } else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = { __proto__: null };\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = { __proto__: null };\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        this[kShapeMode] = false;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = { __proto__: null };\x0d\n        this._eventsCount = 0;\x0d\n        this[kShapeMode] = false;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type\x2C listener) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      if (listener != null) {\x0d\n        return listener === evlistener || listener === evlistener.listener ? 1 : 0;\x0d\n      }\x0d\n\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      if (listener != null) {\x0d\n        let matching = 0;\x0d\n\x0d\n        for (let i = 0\x2C l = evlistener.length; i < l; i++) {\x0d\n          if (evlistener[i] === listener || evlistener[i].listener === listener) {\x0d\n            matching++;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        return matching;\x0d\n      }\x0d\n\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the max listeners set.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @returns {number}\x0d\n */\x0d\nfunction getMaxListeners(emitterOrTarget) {\x0d\n  if (typeof emitterOrTarget?.getMaxListeners === 'function') {\x0d\n    return _getMaxListeners(emitterOrTarget);\x0d\n  } else if (emitterOrTarget?.[kMaxEventTargetListeners]) {\x0d\n    return emitterOrTarget[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n\x0d\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n    const opts = { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C opts);\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      // EventTarget does not have `error` event semantics like Node\x0d\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    emitter.addEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{\x0d\n *    signal: AbortSignal;\x0d\n *    close?: string[];\x0d\n *    highWatermark?: number\x2C\x0d\n *    lowWatermark?: number\x0d\n *   }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options = kEmptyObject) {\x0d\n  // Parameters validation\x0d\n  validateObject(options\x2C 'options');\x0d\n  const signal = options.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  const highWatermark = options.highWatermark ?? NumberMAX_SAFE_INTEGER;\x0d\n  validateInteger(highWatermark\x2C 'options.highWatermark'\x2C 1);\x0d\n  const lowWatermark = options.lowWatermark ?? 1;\x0d\n  validateInteger(lowWatermark\x2C 'options.lowWatermark'\x2C 1);\x0d\n\x0d\n  // Preparing controlling queues and variables\x0d\n  FixedQueue ??= require('internal/fixed_queue');\x0d\n  const unconsumedEvents = new FixedQueue();\x0d\n  const unconsumedPromises = new FixedQueue();\x0d\n  let paused = false;\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n  let size = 0;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      if (size) {\x0d\n        const value = unconsumedEvents.shift();\x0d\n        size--;\x0d\n        if (paused && size < lowWatermark) {\x0d\n          emitter.resume();\x0d\n          paused = false;\x0d\n        }\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) return closeHandler();\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      return closeHandler();\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      errorHandler(err);\x0d\n    }\x2C\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x2C\x0d\n    [kWatermarkData]: {\x0d\n      /**\x0d\n       * The current queue size\x0d\n       */\x0d\n      get size() {\x0d\n        return size;\x0d\n      }\x2C\x0d\n      /**\x0d\n       * The low watermark. The emitter is resumed every time size is lower than it\x0d\n       */\x0d\n      get low() {\x0d\n        return lowWatermark;\x0d\n      }\x2C\x0d\n      /**\x0d\n       * The high watermark. The emitter is paused every time size is higher than it\x0d\n       */\x0d\n      get high() {\x0d\n        return highWatermark;\x0d\n      }\x2C\x0d\n      /**\x0d\n       * It checks whether the emitter is paused by the watermark controller or not\x0d\n       */\x0d\n      get isPaused() {\x0d\n        return paused;\x0d\n      }\x2C\x0d\n    }\x2C\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  // Adding event handlers\x0d\n  const { addEventListener\x2C removeAll } = listenersController();\x0d\n  kFirstEventParam ??= require('internal/events/symbols').kFirstEventParam;\x0d\n  addEventListener(emitter\x2C event\x2C options[kFirstEventParam] ? eventHandler : function(...args) {\x0d\n    return eventHandler(args);\x0d\n  });\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    addEventListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n  }\x0d\n  const closeEvents = options?.close;\x0d\n  if (closeEvents?.length) {\x0d\n    for (let i = 0; i < closeEvents.length; i++) {\x0d\n      addEventListener(emitter\x2C closeEvents[i]\x2C closeHandler);\x0d\n    }\x0d\n  }\x0d\n  if (signal) {\x0d\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  }\x0d\n\x0d\n  function eventHandler(value) {\x0d\n    if (unconsumedPromises.isEmpty()) {\x0d\n      size++;\x0d\n      if (!paused && size > highWatermark) {\x0d\n        paused = true;\x0d\n        emitter.pause();\x0d\n      }\x0d\n      unconsumedEvents.push(value);\x0d\n    } else unconsumedPromises.shift().resolve(createIterResult(value\x2C false));\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    if (unconsumedPromises.isEmpty()) error = err;\x0d\n    else unconsumedPromises.shift().reject(err);\x0d\n\x0d\n    closeHandler();\x0d\n  }\x0d\n\x0d\n  function closeHandler() {\x0d\n    removeAll();\x0d\n    finished = true;\x0d\n    const doneResult = createIterResult(undefined\x2C true);\x0d\n    while (!unconsumedPromises.isEmpty()) {\x0d\n      unconsumedPromises.shift().resolve(doneResult);\x0d\n    }\x0d\n\x0d\n    return PromiseResolve(doneResult);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction listenersController() {\x0d\n  const listeners = [];\x0d\n\x0d\n  return {\x0d\n    addEventListener(emitter\x2C event\x2C handler\x2C flags) {\x0d\n      eventTargetAgnosticAddListener(emitter\x2C event\x2C handler\x2C flags);\x0d\n      ArrayPrototypePush(listeners\x2C [emitter\x2C event\x2C handler\x2C flags]);\x0d\n    }\x2C\x0d\n    removeAll() {\x0d\n      while (listeners.length > 0) {\x0d\n        ReflectApply(eventTargetAgnosticRemoveListener\x2C undefined\x2C ArrayPrototypePop(listeners));\x0d\n      }\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nlet queueMicrotask;\x0d\n\x0d\nfunction addAbortListener(signal\x2C listener) {\x0d\n  if (signal === undefined) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  let removeEventListener;\x0d\n  if (signal.aborted) {\x0d\n    queueMicrotask ??= require('internal/process/task_queues').queueMicrotask;\x0d\n    queueMicrotask(() => listener());\x0d\n  } else {\x0d\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n    // TODO(atlowChemi) add { subscription: true } and return directly\x0d\n    signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n    removeEventListener = () => {\x0d\n      signal.removeEventListener('abort'\x2C listener);\x0d\n    };\x0d\n  }\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    [SymbolDispose]() {\x0d\n      removeEventListener?.();\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x3e8c8739234,23,7316,7371,C0O7326C3O7346C10O7356C12O7355C15O7366,,
code-creation,JS,10,194239,0x3e8c873c334,167,lazyEventEmitterAsyncResource node:events:103:39,0x22671c89cf0,~
code-source-info,0x3e8c873c334,23,3218,6601,C0O3226C6O3256C19O3317C27O3317C32O3293C37O3370C47O3370C51O3370C53O3423C61O3423C65O3423C67O3505C93O3454C95O4120C107O4195C158O4146C164O6565C166O6598,,
code-creation,JS,10,194302,0x3e8c873c8ac,5,get node:events:282:16,0x22671c8ab98,~
code-source-info,0x3e8c873c8ac,23,8518,8560,C0O8528C4O8555,,
code-creation,JS,11,195092,0x7ff62c4ca280,804,findLongestRegisteredExtension node:internal/modules/cjs/loader:502:40,0x22671cb6e88,^
code-source-info,0x7ff62c4ca280,63,15109,15558,,,
code-creation,JS,11,195139,0x7ff62c4ca600,536,tryFile node:internal/modules/cjs/loader:472:17,0x22671cb6dd8,^
code-source-info,0x7ff62c4ca600,63,14151,14378,,,
code-creation,JS,11,195159,0x7ff62c4ca840,396,toRealPath node:internal/modules/helpers:54:20,0x22671cb8168,^
code-source-info,0x7ff62c4ca840,64,1598,1715,,,
code-creation,JS,11,195185,0x7ff62c4caa00,348,updateChildren node:internal/modules/cjs/loader:217:24,0x22671cb6750,^
code-source-info,0x7ff62c4caa00,63,6398,6582,,,
code-creation,JS,11,195211,0x7ff62c4cab80,1388,Module node:internal/modules/cjs/loader:252:16,0x22671cb6858,^
code-source-info,0x7ff62c4cab80,63,7494,8256,,,
code-creation,JS,11,195227,0x7ff62c4cb140,92,get node:internal/bootstrap/node:371:8,0xfca8d3a678,^
code-source-info,0x7ff62c4cb140,12,13145,13180,,,
code-creation,JS,11,195253,0x7ff62c4cb1c0,156,canBeRequiredByUsers node:internal/bootstrap/realm:284:30,0xfca8d340d0,^
code-source-info,0x7ff62c4cb1c0,9,9343,9400,,,
code-creation,JS,11,195273,0x7ff62c4cb280,404,getInternalGlobal node:internal/util:747:27,0x22671c82750,^
code-source-info,0x7ff62c4cb280,16,20978,21234,,,
code-creation,JS,11,195290,0x7ff62c4cb440,276,SideEffectFreeRegExpPrototypeExec node:internal/util:756:43,0x22671c827a8,^
code-source-info,0x7ff62c4cb440,16,21280,21454,,,
code-creation,JS,11,195307,0x7ff62c4cb580,216,splitRoot node:fs:2566:33,0x22671cad720,^
code-source-info,0x7ff62c4cb580,55,70179,70259,,,
code-creation,Eval,10,195522,0x3e8c873dfdc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\merge-descriptors\\index.js:1:1,0x3e8c873de78,~
script-source,139,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\merge-descriptors\\index.js,/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest\x2C src\x2C redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest\x2C name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src\x2C name)\n    Object.defineProperty(dest\x2C name\x2C descriptor)\n  })\n\n  return dest\n}\n
code-source-info,0x3e8c873dfdc,139,0,1215,C0O0C4O1215,,
code-creation,JS,10,195611,0x3e8c873e104,33, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\merge-descriptors\\index.js:1:1,0x3e8c873df50,~
code-source-info,0x3e8c873e104,139,0,1215,C0O0C10O181C12O196C16O268C20O275C25O285C29O268C32O1214,,
code-creation,JS,11,195745,0x7ff62c5067c0,1768,makeRequireFunction node:internal/modules/helpers:127:29,0x22671cb8320,^
code-source-info,0x7ff62c5067c0,64,3916,6504,,,
code-creation,JS,11,195777,0x7ff62c506f00,308,isEncoding node:buffer:561:40,0x22671c8ee98,^
code-source-info,0x7ff62c506f00,24,16292,16427,,,
code-creation,JS,11,195802,0x7ff62c507080,64,isInt32 node:internal/validators:43:17,0xfca8d3d548,^
code-source-info,0x7ff62c507080,15,1127,1172,,,
code-creation,JS,11,195832,0x7ff62c507100,972,possiblyTransformPath node:internal/fs/utils:701:31,0x22671cb3c88,^
code-source-info,0x7ff62c507100,60,20144,20435,,,
code-creation,JS,11,195860,0x7ff62c507500,312, node:internal/fs/utils:713:42,0x22671cb3ce0,^
code-source-info,0x7ff62c507500,60,20480,20642,,,
code-creation,JS,11,195880,0x7ff62c507680,232,importModuleDynamicallyWrap node:internal/vm/module:428:37,0x22671cbb3e0,^
code-source-info,0x7ff62c507680,68,12079,12537,,,
code-creation,JS,11,195900,0x7ff62c5077c0,516,registerModule node:internal/modules/esm/utils:145:24,0x22671cb8ef0,^
code-source-info,0x7ff62c5077c0,66,4548,5081,,,
code-creation,JS,11,195928,0x7ff62c507a00,332,registerImportModuleDynamically node:internal/vm:63:41,0x22671c9b520,^
code-source-info,0x7ff62c507a00,36,1872,2205,,,
code-creation,JS,11,195948,0x7ff62c507b80,704,internalCompileFunction node:internal/vm:73:33,0x22671c9b578,^
code-source-info,0x7ff62c507b80,36,2241,3126,,,
code-creation,JS,11,195965,0x7ff62c507e80,268,lazyModule node:internal/modules/helpers:110:20,0x22671cb82c8,^
code-source-info,0x7ff62c507e80,64,3188,3285,,,
code-creation,JS,11,196043,0x7ff62c50e7c0,4824,Module._load node:internal/modules/cjs/loader:950:24,0x22671cb7310,^
code-source-info,0x7ff62c50e7c0,63,30562,33804,,,
code-creation,JS,11,196470,0x7ff62c50fac0,6000,Module._resolveFilename node:internal/modules/cjs/loader:1058:35,0x22671cb7388,^
code-source-info,0x7ff62c50fac0,63,34285,37503,,,
new,MemoryChunk,0x2ce89f00000,262144
code-creation,Eval,10,197067,0x2ce89f02d1c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:1:1,0x2ce89f02a78,~
script-source,140,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar finalhandler = require('finalhandler');\nvar Router = require('./router');\nvar methods = require('methods');\nvar middleware = require('./middleware/init');\nvar query = require('./middleware/query');\nvar debug = require('debug')('express:application');\nvar View = require('./view');\nvar http = require('http');\nvar compileETag = require('./utils').compileETag;\nvar compileQueryParser = require('./utils').compileQueryParser;\nvar compileTrust = require('./utils').compileTrust;\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar merge = require('utils-merge');\nvar resolve = require('path').resolve;\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar slice = Array.prototype.slice;\n\n/**\n * Application prototype.\n */\n\nvar app = exports = module.exports = {};\n\n/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n\n/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n\n  this.defaultConfiguration();\n};\n\n/**\n * Initialize application configuration.\n * @private\n */\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development';\n\n  // default settings\n  this.enable('x-powered-by');\n  this.set('etag'\x2C 'weak');\n  this.set('env'\x2C env);\n  this.set('query parser'\x2C 'extended');\n  this.set('subdomain offset'\x2C 2);\n  this.set('trust proxy'\x2C false);\n\n  // trust proxy inherit back-compat\n  Object.defineProperty(this.settings\x2C trustProxyDefaultSymbol\x2C {\n    configurable: true\x2C\n    value: true\n  });\n\n  debug('booting in %s mode'\x2C env);\n\n  this.on('mount'\x2C function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true\n      && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    }\n\n    // inherit protos\n    setPrototypeOf(this.request\x2C parent.request)\n    setPrototypeOf(this.response\x2C parent.response)\n    setPrototypeOf(this.engines\x2C parent.engines)\n    setPrototypeOf(this.settings\x2C parent.settings)\n  });\n\n  // setup locals\n  this.locals = Object.create(null);\n\n  // top-most app is mounted at /\n  this.mountpath = '/';\n\n  // default locals\n  this.locals.settings = this.settings;\n\n  // default configuration\n  this.set('view'\x2C View);\n  this.set('views'\x2C resolve('views'));\n  this.set('jsonp callback name'\x2C 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this\x2C 'router'\x2C {\n    get: function() {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n\n/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing')\x2C\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n    this._router.use(middleware.init(this));\n  }\n};\n\n/**\n * Dispatch a req\x2C res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided\x2C then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */\n\napp.handle = function handle(req\x2C res\x2C callback) {\n  var router = this._router;\n\n  // final handler\n  var done = callback || finalhandler(req\x2C res\x2C {\n    env: this.get('env')\x2C\n    onerror: logerror.bind(this)\n  });\n\n  // no routes\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req\x2C res\x2C done);\n};\n\n/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app\x2C then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate app.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments\x2C offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function')\n  }\n\n  // setup router\n  this.lazyrouter();\n  var router = this._router;\n\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path\x2C fn);\n    }\n\n    debug('.use app under %s'\x2C path);\n    fn.mountpath = path;\n    fn.parent = this;\n\n    // restore .app property on req and res\n    router.use(path\x2C function mounted_app(req\x2C res\x2C next) {\n      var orig = req.app;\n      fn.handle(req\x2C res\x2C function (err) {\n        setPrototypeOf(req\x2C orig.request)\n        setPrototypeOf(res\x2C orig.response)\n        next(err);\n      });\n    });\n\n    // mounted an app\n    fn.emit('mount'\x2C this);\n  }\x2C this);\n\n  return this;\n};\n\n/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n\n/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a "foo.ejs" file Express will invoke the following internally:\n *\n *     app.engine('ejs'\x2C require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box\x2C\n * or if you wish to "map" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * ".html" files:\n *\n *     app.engine('html'\x2C require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path\x2C options\x2C callback)`\x2C\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using ".ejs" extensions you don't need to do anything.\n *\n * Some template engines do not follow this convention\x2C the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention\x2C thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.engine = function engine(ext\x2C fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  }\n\n  // get file extension\n  var extension = ext[0] !== '.'\n    ? '.' + ext\n    : ext;\n\n  // store engine\n  this.engines[extension] = fn;\n\n  return this;\n};\n\n/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.param = function param(name\x2C fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i]\x2C fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name\x2C fn);\n\n  return this;\n};\n\n/**\n * Assign `setting` to `val`\x2C or return `setting`'s value.\n *\n *    app.set('foo'\x2C 'bar');\n *    app.set('foo');\n *    // => "bar"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */\n\napp.set = function set(setting\x2C val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    var settings = this.settings\n\n    while (settings && settings !== Object.prototype) {\n      if (hasOwnProperty.call(settings\x2C setting)) {\n        return settings[setting]\n      }\n\n      settings = Object.getPrototypeOf(settings)\n    }\n\n    return undefined\n  }\n\n  debug('set "%s" to %o'\x2C setting\x2C val);\n\n  // set value\n  this.settings[setting] = val;\n\n  // trigger matched settings\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn'\x2C compileETag(val));\n      break;\n    case 'query parser':\n      this.set('query parser fn'\x2C compileQueryParser(val));\n      break;\n    case 'trust proxy':\n      this.set('trust proxy fn'\x2C compileTrust(val));\n\n      // trust proxy inherit back-compat\n      Object.defineProperty(this.settings\x2C trustProxyDefaultSymbol\x2C {\n        configurable: true\x2C\n        value: false\n      });\n\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as "/admin"\x2C which itself\n * was mounted as "/blog" then the\n * return value would be "/blog/admin".\n *\n * @return {String}\n * @private\n */\n\napp.path = function path() {\n  return this.parent\n    ? this.parent.path() + this.mountpath\n    : '';\n};\n\n/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n\n/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n\n/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.enable = function enable(setting) {\n  return this.set(setting\x2C true);\n};\n\n/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.disable = function disable(setting) {\n  return this.set(setting\x2C false);\n};\n\n/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n    route[method].apply(route\x2C slice.call(arguments\x2C 1));\n    return this;\n  };\n});\n\n/**\n * Special-cased "all" method\x2C applying the given route `path`\x2C\n * middleware\x2C and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n  var args = slice.call(arguments\x2C 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route\x2C args);\n  }\n\n  return this;\n};\n\n// del -> delete alias\n\napp.del = deprecate.function(app.delete\x2C 'app.del: Use app.delete instead');\n\n/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email'\x2C { name: 'Tobi' }\x2C function(err\x2C html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */\n\napp.render = function render(name\x2C options\x2C callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge app.locals\n  merge(renderOptions\x2C this.locals);\n\n  // merge options._locals\n  if (opts._locals) {\n    merge(renderOptions\x2C opts._locals);\n  }\n\n  // merge options\n  merge(renderOptions\x2C opts);\n\n  // set .cache unless explicitly provided\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  }\n\n  // primed cache\n  if (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  // view\n  if (!view) {\n    var View = this.get('view');\n\n    view = new View(name\x2C {\n      defaultEngine: this.get('view engine')\x2C\n      root: this.get('views')\x2C\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n        ? 'directories "' + view.root.slice(0\x2C -1).join('"\x2C "') + '" or "' + view.root[view.root.length - 1] + '"'\n        : 'directory "' + view.root + '"'\n      var err = new Error('Failed to lookup view "' + name + '" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    }\n\n    // prime the cache\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  // render\n  tryRender(view\x2C renderOptions\x2C done);\n};\n\n/**\n * Listen for connections.\n *\n * A node `http.Server` is returned\x2C with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the "http"\n * and "https" modules as shown here:\n *\n *    var http = require('http')\n *      \x2C https = require('https')\n *      \x2C express = require('express')\n *      \x2C app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }\x2C app).listen(443);\n *\n * @return {http.Server}\n * @public\n */\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server\x2C arguments);\n};\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Try rendering a view.\n * @private\n */\n\nfunction tryRender(view\x2C options\x2C callback) {\n  try {\n    view.render(options\x2C callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n
code-source-info,0x2ce89f02d1c,140,0,14593,C0O0C4O14593,,
code-creation,JS,10,197865,0x2ce89f0376c,479, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:1:1,0x2ce89f02c90,~
code-source-info,0x2ce89f0376c
tick,0x7ff6ab60db30,198100,0,0x0,3,0x7ff62c507c67,0x3c570275170,0x3c570274a81,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,JS,11,198318,0x7ff62c511280,2256,Module._resolveLookupPaths node:internal/modules/cjs/loader:839:38,0x22671cb7118,^
code-source-info,0x7ff62c511280,63,26398,27718,,,
code-creation,JS,11,198444,0x7ff62c511b80,2348,wrapSafe node:internal/modules/cjs/loader:1257:18,0x22671cb75d8,^
code-source-info,0x7ff62c511b80,63,41295,43936,,,
new,MemoryChunk,0x15859200000,262144
new,MemoryChunk,0x2c4e01c0000,262144
new,MemoryChunk,0x338a0180000,262144
new,MemoryChunk,0x117ebc00000,262144
code-creation,Eval,10,201334,0x2ce89f06654,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\finalhandler\\index.js:1:1,0x2ce89f063c0,~
script-source,141,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\finalhandler\\index.js,/*!\n * finalhandler\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn\x2C arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP\x2C '<br>')\n    .replace(DOUBLE_SPACE_REGEXP\x2C ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang="en">\\n' +\n    '<head>\\n' +\n    '<meta charset="utf-8">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req\x2C res\x2C options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err\x2C status\x2C env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s'\x2C status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror\x2C err\x2C req\x2C res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent'\x2C status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req\x2C res\x2C status\x2C headers\x2C msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object\x2C fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err\x2C status\x2C env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack\x2C which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses.message[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to "resource" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req\x2C res\x2C status\x2C headers\x2C message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses.message[status]\n\n    // remove any content headers\n    res.removeHeader('Content-Encoding')\n    res.removeHeader('Content-Language')\n    res.removeHeader('Content-Range')\n\n    // response headers\n    setHeaders(res\x2C headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy'\x2C "default-src 'none'")\n    res.setHeader('X-Content-Type-Options'\x2C 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type'\x2C 'text/html; charset=utf-8')\n    res.setHeader('Content-Length'\x2C Buffer.byteLength(body\x2C 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body\x2C 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req\x2C write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res\x2C headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key\x2C headers[key])\n  }\n}\n
code-source-info,0x2ce89f06654,141,0,6689,C0O0C4O6689,,
code-creation,JS,10,201678,0x2ce89f06bac,184, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\finalhandler\\index.js:1:1,0x2ce89f065c8,~
code-source-info,0x2ce89f06bac,141,0,6689,C0O0C64O165C67O165C75O181C79O165C81O214C84O214C88O214C90O252C93O252C97O252C99O292C102O292C106O292C108O330C111O330C115O330C117O365C120O365C124O365C126O398C129O398C133O398C135O485C140O485C142O517C147O517C149O563C156O602C165O563C167O701C170O712C174O701C176O1250C178O1265C183O6688,,
code-creation,Eval,10,203718,0x2ce89f087bc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\index.js:1:1,0x2ce89f08668,~
script-source,142,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\index.js,/**\n * Detect Electron renderer process\x2C which is node\x2C but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n
code-source-info,0x2ce89f087bc,142,0,263,C0O0C4O263,,
code-creation,JS,10,203859,0x2ce89f08864,49, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\index.js:1:1,0x2ce89f08730,~
code-source-info,0x2ce89f08864,142,0,263,C0O98C7O136C11O144C18O149C23O169C26O186C30O184C36O222C39O239C43O237C48O262,,
code-creation,Eval,10,205043,0x2ce89f09864,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js:1:1,0x2ce89f096b0,~
script-source,143,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js,/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6\x2C 2\x2C 3\x2C 4\x2C 5\x2C 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj\x2C key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g\x2C function (_\x2C k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}\x2C {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD\x2C 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}\x2C 'except for stderr(2) and stdout(1)\x2C any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`\x2C all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v\x2C this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`\x2C allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v\x2C this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util\x2C arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined\x2C it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd\x2C { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd\x2C\n        readable: false\x2C\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n
code-source-info,0x2ce89f09864,143,0,6015,C0O0C4O6015,,
code-creation,JS,10,205352,0x2ce89f09fe4,399, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js:1:1,0x2ce89f097d8,~
code-source-info,0x2ce89f09fe4,143,0,6015,C0O0C48O43C54O43C58O43C60O70C66O70C70O70C72O187C78O214C83O212C89O195C91O234C96O247C100O255C105O267C109O274C114O293C118O307C123O320C127O328C132O341C136O349C141O367C145O401C152O416C156O607C159O629C163O636C168O641C172O649C177O636C183O653C193O654C199O711C211O712C217O627C221O1375C225O1384C229O1392C234O1396C242O1375C251O1375C253O1417C258O1423C268O1435C273O1447C276O1452C289O1452C296O1646C299O1665C304O1667C309O1676C313O1684C324O1708C329O1717C333O1725C342O1747C346O1665C348O2040C351O2048C360O2061C364O2322C367O2330C376O2343C380O5991C383O5999C388O6006C392O5999C398O6014,,
code-creation,Eval,10,205832,0x2ce89f0aefc,5, node:tty:1:1,0x2ce89f0ace8,~
script-source,144,node:tty,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst { TTY\x2C isTTY } = internalBinding('tty_wrap');\x0d\nconst errors = require('internal/errors');\x0d\nconst { ERR_INVALID_FD\x2C ERR_TTY_INIT_FAILED } = errors.codes;\x0d\nconst {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x2C\x0d\n} = require('internal/tty');\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet readline;\x0d\n\x0d\nfunction isatty(fd) {\x0d\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\x0d\n         isTTY(fd);\x0d\n}\x0d\n\x0d\nfunction ReadStream(fd\x2C options) {\x0d\n  if (!(this instanceof ReadStream))\x0d\n    return new ReadStream(fd\x2C options);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    readableHighWaterMark: 0\x2C\x0d\n    handle: tty\x2C\x0d\n    manualStart: true\x2C\x0d\n    ...options\x2C\x0d\n  });\x0d\n\x0d\n  this.isRaw = false;\x0d\n  this.isTTY = true;\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ReadStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(ReadStream\x2C net.Socket);\x0d\n\x0d\nReadStream.prototype.setRawMode = function(flag) {\x0d\n  flag = !!flag;\x0d\n  const err = this._handle?.setRawMode(flag);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C new errors.ErrnoException(err\x2C 'setRawMode'));\x0d\n    return this;\x0d\n  }\x0d\n  this.isRaw = flag;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction WriteStream(fd) {\x0d\n  if (!(this instanceof WriteStream))\x0d\n    return new WriteStream(fd);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    readableHighWaterMark: 0\x2C\x0d\n    handle: tty\x2C\x0d\n    manualStart: true\x2C\x0d\n  });\x0d\n\x0d\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\x0d\n  // As noted in the following reference\x2C local TTYs tend to be quite fast and\x0d\n  // this behavior has become expected due historical functionality on OS X\x2C\x0d\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\x0d\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\x0d\n  this._handle.setBlocking(true);\x0d\n\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (!err) {\x0d\n    this.columns = winSize[0];\x0d\n    this.rows = winSize[1];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(WriteStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(WriteStream\x2C net.Socket);\x0d\n\x0d\nWriteStream.prototype.isTTY = true;\x0d\n\x0d\nWriteStream.prototype.getColorDepth = getColorDepth;\x0d\n\x0d\nWriteStream.prototype.hasColors = hasColors;\x0d\n\x0d\nWriteStream.prototype._refreshSize = function() {\x0d\n  const oldCols = this.columns;\x0d\n  const oldRows = this.rows;\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C new errors.ErrnoException(err\x2C 'getWindowSize'));\x0d\n    return;\x0d\n  }\x0d\n  const { 0: newCols\x2C 1: newRows } = winSize;\x0d\n  if (oldCols !== newCols || oldRows !== newRows) {\x0d\n    this.columns = newCols;\x0d\n    this.rows = newRows;\x0d\n    this.emit('resize');\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards-compat\x0d\nWriteStream.prototype.cursorTo = function(x\x2C y\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.cursorTo(this\x2C x\x2C y\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.moveCursor = function(dx\x2C dy\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.moveCursor(this\x2C dx\x2C dy\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearLine = function(dir\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearLine(this\x2C dir\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearScreenDown = function(callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearScreenDown(this\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.getWindowSize = function() {\x0d\n  return [this.columns\x2C this.rows];\x0d\n};\x0d\n\x0d\nmodule.exports = { isatty\x2C ReadStream\x2C WriteStream };\x0d\n
code-source-info,0x2ce89f0aefc,144,0,5230,C0O0C4O5230,,
code-creation,JS,10,206081,0x2ce89f0b624,426, node:tty:1:1,0x2ce89f0ae70,~
code-source-info,0x2ce89f0b
code-creation,Eval,10,206371,0x2ce89f0c8e4,5, node:internal/tty:1:1,0x2ce89f0c680,~
script-source,145,node:internal/tty,// MIT License\x0d\n\x0d\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\x0d\n\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\x0d\n// of this software and associated documentation files (the "Software")\x2C to deal\x0d\n// in the Software without restriction\x2C including without limitation the rights\x0d\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\x0d\n// copies of the Software\x2C and to permit persons to whom the Software is\x0d\n// furnished to do so\x2C subject to the following conditions:\x0d\n\x0d\n// The above copyright notice and this permission notice shall be included in\x0d\n// all copies or substantial portions of the Software.\x0d\n\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\x0d\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\x0d\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\x0d\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\x0d\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\x0d\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\x0d\n// SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSome\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { validateInteger } = require('internal/validators');\x0d\n\x0d\nlet OSRelease;\x0d\n\x0d\nconst COLORS_2 = 1;\x0d\nconst COLORS_16 = 4;\x0d\nconst COLORS_256 = 8;\x0d\nconst COLORS_16m = 24;\x0d\n\x0d\n// Some entries were taken from `dircolors`\x0d\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\x0d\n// support more than 16 colors\x2C but this was not tested for.\x0d\n//\x0d\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\x0d\n// distribution of this file\x2C with or without modification\x2C are permitted\x0d\n// provided the copyright notice and this notice are preserved.\x0d\nconst TERM_ENVS = {\x0d\n  'eterm': COLORS_16\x2C\x0d\n  'cons25': COLORS_16\x2C\x0d\n  'console': COLORS_16\x2C\x0d\n  'cygwin': COLORS_16\x2C\x0d\n  'dtterm': COLORS_16\x2C\x0d\n  'gnome': COLORS_16\x2C\x0d\n  'hurd': COLORS_16\x2C\x0d\n  'jfbterm': COLORS_16\x2C\x0d\n  'konsole': COLORS_16\x2C\x0d\n  'kterm': COLORS_16\x2C\x0d\n  'mlterm': COLORS_16\x2C\x0d\n  'mosh': COLORS_16m\x2C\x0d\n  'putty': COLORS_16\x2C\x0d\n  'st': COLORS_16\x2C\x0d\n  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color\x0d\n  'rxvt-unicode-24bit': COLORS_16m\x2C\x0d\n  // https://gist.github.com/XVilka/8346728#gistcomment-2823421\x0d\n  'terminator': COLORS_16m\x2C\x0d\n};\x0d\n\x0d\nconst TERM_ENVS_REG_EXP = [\x0d\n  /ansi/\x2C\x0d\n  /color/\x2C\x0d\n  /linux/\x2C\x0d\n  /^con[0-9]*x[0-9]/\x2C\x0d\n  /^rxvt/\x2C\x0d\n  /^screen/\x2C\x0d\n  /^xterm/\x2C\x0d\n  /^vt100/\x2C\x0d\n];\x0d\n\x0d\nlet warned = false;\x0d\nfunction warnOnDeactivatedColors(env) {\x0d\n  if (warned)\x0d\n    return;\x0d\n  let name = '';\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined)\x0d\n    name = 'NODE_DISABLE_COLORS';\x0d\n  if (env.NO_COLOR !== undefined) {\x0d\n    if (name !== '') {\x0d\n      name += "' and '";\x0d\n    }\x0d\n    name += 'NO_COLOR';\x0d\n  }\x0d\n\x0d\n  if (name !== '') {\x0d\n    process.emitWarning(\x0d\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\x0d\n      'Warning'\x2C\x0d\n    );\x0d\n    warned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The `getColorDepth` API got inspired by multiple sources such as\x0d\n// https://github.com/chalk/supports-color\x2C\x0d\n// https://github.com/isaacs/color-support.\x0d\nfunction getColorDepth(env = process.env) {\x0d\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\x0d\n  // consistency throughout the ecosystem.\x0d\n  if (env.FORCE_COLOR !== undefined) {\x0d\n    switch (env.FORCE_COLOR) {\x0d\n      case '':\x0d\n      case '1':\x0d\n      case 'true':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16;\x0d\n      case '2':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_256;\x0d\n      case '3':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16m;\x0d\n      default:\x0d\n        return COLORS_2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined ||\x0d\n      // See https://no-color.org/\x0d\n      env.NO_COLOR !== undefined ||\x0d\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\x0d\n      // ANSI color control codes.\x0d\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\x0d\n      env.TERM === 'dumb') {\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // Lazy load for startup performance.\x0d\n    if (OSRelease === undefined) {\x0d\n      const { release } = require('os');\x0d\n      OSRelease = StringPrototypeSplit(release()\x2C '.');\x0d\n    }\x0d\n    // Windows 10 build 10586 is the first Windows release that supports 256\x0d\n    // colors. Windows 10 build 14931 is the first release that supports\x0d\n    // 16m/TrueColor.\x0d\n    if (+OSRelease[0] >= 10) {\x0d\n      const build = +OSRelease[2];\x0d\n      if (build >= 14931)\x0d\n        return COLORS_16m;\x0d\n      if (build >= 10586)\x0d\n        return COLORS_256;\x0d\n    }\x0d\n\x0d\n    return COLORS_16;\x0d\n  }\x0d\n\x0d\n  if (env.TMUX) {\x0d\n    return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.CI) {\x0d\n    if ([\x0d\n      'APPVEYOR'\x2C\x0d\n      'BUILDKITE'\x2C\x0d\n      'CIRCLECI'\x2C\x0d\n      'DRONE'\x2C\x0d\n      'GITHUB_ACTIONS'\x2C\x0d\n      'GITLAB_CI'\x2C\x0d\n      'TRAVIS'\x2C\x0d\n    ].some((sign) => sign in env) || env.CI_NAME === 'codeship') {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if ('TEAMCITY_VERSION' in env) {\x0d\n    return RegExpPrototypeExec(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) !== null ?\x0d\n      COLORS_16 : COLORS_2;\x0d\n  }\x0d\n\x0d\n  switch (env.TERM_PROGRAM) {\x0d\n    case 'iTerm.app':\x0d\n      if (!env.TERM_PROGRAM_VERSION ||\x0d\n        RegExpPrototypeExec(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION) !== null\x0d\n      ) {\x0d\n        return COLORS_256;\x0d\n      }\x0d\n      return COLORS_16m;\x0d\n    case 'HyperTerm':\x0d\n    case 'MacTerm':\x0d\n      return COLORS_16m;\x0d\n    case 'Apple_Terminal':\x0d\n      return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\x0d\n    return COLORS_16m;\x0d\n  }\x0d\n\x0d\n  if (env.TERM) {\x0d\n    if (RegExpPrototypeExec(/^xterm-256/\x2C env.TERM) !== null) {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n\x0d\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\x0d\n\x0d\n    if (TERM_ENVS[termEnv]) {\x0d\n      return TERM_ENVS[termEnv];\x0d\n    }\x0d\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\x0d\n                           (term) => RegExpPrototypeExec(term\x2C termEnv) !== null)) {\x0d\n      return COLORS_16;\x0d\n    }\x0d\n  }\x0d\n  // Move 16 color COLORTERM below 16m and 256\x0d\n  if (env.COLORTERM) {\x0d\n    return COLORS_16;\x0d\n  }\x0d\n  return COLORS_2;\x0d\n}\x0d\n\x0d\nfunction hasColors(count\x2C env) {\x0d\n  if (env === undefined &&\x0d\n      (count === undefined || (typeof count === 'object' && count !== null))) {\x0d\n    env = count;\x0d\n    count = 16;\x0d\n  } else {\x0d\n    validateInteger(count\x2C 'count'\x2C 2);\x0d\n  }\x0d\n\x0d\n  return count <= 2 ** getColorDepth(env);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x2C\x0d\n};\x0d\n
code-source-info,0x2ce89f0c8e4,145,0,6722,C0O0C4O6722,,
code-creation,JS,10,206654,0x2ce89f0cd5c,366, node:internal/tty:1:1,0x2ce89f0c858,~
code-source-info,0x2ce89f0cd5c,145,0,6722,C0O0C69O1211C75O1234C81O1258C87O1283C93O1360C99O1360C104O1340C110O1399C111O1399C113O1430C115O1430C117O1452C119O1452C121O1475C123O1475C125O1498C127O1498C129O1924C136O1938C142O1962C148O1987C154O2011C160O2035C166O2058C172O2080C178O2105C184O2130C190O2153C196O2177C202O2199C208O2223C214O2243C220O2350C226O2444C232O1924C234O2489C336O2489C338O2621C339O2621C341O6666C348O6688C354O6706C360O6681C365O6721,,
code-creation,JS,10,206994,0x2ce89f0e014,12,get transferableAbortSignal node:util:415:30,0x22671ca76e0,~
script-source,48,node:util,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  Date\x2C\x0d\n  DatePrototypeGetDate\x2C\x0d\n  DatePrototypeGetHours\x2C\x0d\n  DatePrototypeGetMinutes\x2C\x0d\n  DatePrototypeGetMonth\x2C\x0d\n  DatePrototypeGetSeconds\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FALSY_VALUE_REJECTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  ErrnoException\x2C\x0d\n  ExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  inspect\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst { debuglog } = require('internal/util/debuglog');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateNumber\x2C\x0d\n} = require('internal/validators');\x0d\nconst { isBuffer } = require('buffer').Buffer;\x0d\nconst types = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  deprecate\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName: internalErrorName\x2C\x0d\n  promisify\x2C\x0d\n  toUSVString\x2C\x0d\n  defineLazyProperties\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nlet abortController;\x0d\n\x0d\nfunction lazyAbortController() {\x0d\n  abortController ??= require('internal/abort_controller');\x0d\n  return abortController;\x0d\n}\x0d\n\x0d\nlet internalDeepEqual;\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is boolean}\x0d\n */\x0d\nfunction isBoolean(arg) {\x0d\n  return typeof arg === 'boolean';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is null}\x0d\n */\x0d\nfunction isNull(arg) {\x0d\n  return arg === null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is (null | undefined)}\x0d\n */\x0d\nfunction isNullOrUndefined(arg) {\x0d\n  return arg === null || arg === undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is number}\x0d\n */\x0d\nfunction isNumber(arg) {\x0d\n  return typeof arg === 'number';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {any} arg\x0d\n * @returns {arg is string}\x0d\n */\x0d\nfunction isString(arg) {\x0d\n  return typeof arg === 'string';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is symbol}\x0d\n */\x0d\nfunction isSymbol(arg) {\x0d\n  return typeof arg === 'symbol';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is undefined}\x0d\n */\x0d\nfunction isUndefined(arg) {\x0d\n  return arg === undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {a is NonNullable<object>}\x0d\n */\x0d\nfunction isObject(arg) {\x0d\n  return arg !== null && typeof arg === 'object';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} e\x0d\n * @returns {arg is Error}\x0d\n */\x0d\nfunction isError(e) {\x0d\n  return ObjectPrototypeToString(e) === '[object Error]' || e instanceof Error;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is Function}\x0d\n */\x0d\nfunction isFunction(arg) {\x0d\n  return typeof arg === 'function';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v4.0.0\x0d\n * @param {any} arg\x0d\n * @returns {arg is (boolean | null | number | string | symbol | undefined)}\x0d\n */\x0d\nfunction isPrimitive(arg) {\x0d\n  return arg === null ||\x0d\n         (typeof arg !== 'object' && typeof arg !== 'function');\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} n\x0d\n * @returns {string}\x0d\n */\x0d\nfunction pad(n) {\x0d\n  return StringPrototypePadStart(n.toString()\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nconst months = ['Jan'\x2C 'Feb'\x2C 'Mar'\x2C 'Apr'\x2C 'May'\x2C 'Jun'\x2C 'Jul'\x2C 'Aug'\x2C 'Sep'\x2C\x0d\n                'Oct'\x2C 'Nov'\x2C 'Dec'];\x0d\n\x0d\n/**\x0d\n * @returns {string}  26 Feb 16:19:34\x0d\n */\x0d\nfunction timestamp() {\x0d\n  const d = new Date();\x0d\n  const t = ArrayPrototypeJoin([\x0d\n    pad(DatePrototypeGetHours(d))\x2C\x0d\n    pad(DatePrototypeGetMinutes(d))\x2C\x0d\n    pad(DatePrototypeGetSeconds(d))\x2C\x0d\n  ]\x2C ':');\x0d\n  return `${DatePrototypeGetDate(d)} ${months[DatePrototypeGetMonth(d)]} ${t}`;\x0d\n}\x0d\n\x0d\nlet console;\x0d\n/**\x0d\n * Log is just a thin wrapper to console.log that prepends a timestamp\x0d\n * @deprecated since v6.0.0\x0d\n * @type {(...args: any[]) => void}\x0d\n */\x0d\nfunction log(...args) {\x0d\n  if (!console) {\x0d\n    console = require('internal/console/global');\x0d\n  }\x0d\n  console.log('%s - %s'\x2C timestamp()\x2C format(...args));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Inherit the prototype methods from one constructor into another.\x0d\n *\x0d\n * The Function.prototype.inherits from lang.js rewritten as a standalone\x0d\n * function (not on Function.prototype). NOTE: If this file is to be loaded\x0d\n * during bootstrapping this function needs to be rewritten using some native\x0d\n * functions as prototype setup using normal JavaScript does not work as\x0d\n * expected during bootstrapping (see mirror.js in r114903).\x0d\n * @param {Function} ctor Constructor function which needs to inherit the\x0d\n *     prototype.\x0d\n * @param {Function} superCtor Constructor function to inherit prototype from.\x0d\n * @throws {TypeError} Will error if either constructor is null\x2C or if\x0d\n *     the super constructor lacks a prototype.\x0d\n */\x0d\nfunction inherits(ctor\x2C superCtor) {\x0d\n\x0d\n  if (ctor === undefined || ctor === null)\x0d\n    throw new ERR_INVALID_ARG_TYPE('ctor'\x2C 'Function'\x2C ctor);\x0d\n\x0d\n  if (superCtor === undefined || superCtor === null)\x0d\n    throw new ERR_INVALID_ARG_TYPE('superCtor'\x2C 'Function'\x2C superCtor);\x0d\n\x0d\n  if (superCtor.prototype === undefined) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('superCtor.prototype'\x2C\x0d\n                                   'Object'\x2C superCtor.prototype);\x0d\n  }\x0d\n  ObjectDefineProperty(ctor\x2C 'super_'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: superCtor\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(ctor.prototype\x2C superCtor.prototype);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @deprecated since v6.0.0\x0d\n * @template T\x0d\n * @template S\x0d\n * @param {T} target\x0d\n * @param {S} source\x0d\n * @returns {S extends null ? T : (T & S)}\x0d\n */\x0d\nfunction _extend(target\x2C source) {\x0d\n  // Don't do anything if source isn't an object\x0d\n  if (source === null || typeof source !== 'object') return target;\x0d\n\x0d\n  const keys = ObjectKeys(source);\x0d\n  let i = keys.length;\x0d\n  while (i--) {\x0d\n    target[keys[i]] = source[keys[i]];\x0d\n  }\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst callbackifyOnRejected = (reason\x2C cb) => {\x0d\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\x0d\n  // Because `null` is a special error value in callbacks which means "no error\x0d\n  // occurred"\x2C we error-wrap so the callback consumer can distinguish between\x0d\n  // "the promise rejected with null" or "the promise fulfilled with undefined".\x0d\n  if (!reason) {\x0d\n    reason = new ERR_FALSY_VALUE_REJECTION.HideStackFramesError(reason);\x0d\n    ErrorCaptureStackTrace(reason\x2C callbackifyOnRejected);\x0d\n  }\x0d\n  return cb(reason);\x0d\n};\x0d\n\x0d\n/**\x0d\n * @template {(...args: any[]) => Promise<any>} T\x0d\n * @param {T} original\x0d\n * @returns {T extends (...args: infer TArgs) => Promise<infer TReturn> ?\x0d\n *   ((...params: [...TArgs\x2C ((err: Error\x2C ret: TReturn) => any)]) => void) :\x0d\n *   never\x0d\n * }\x0d\n */\x0d\nfunction callbackify(original) {\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  // We DO NOT return the promise as it gives the user a false sense that\x0d\n  // the promise is actually somehow related to the callback's execution\x0d\n  // and that the callback throwing will reject the promise.\x0d\n  function callbackified(...args) {\x0d\n    const maybeCb = ArrayPrototypePop(args);\x0d\n    validateFunction(maybeCb\x2C 'last argument');\x0d\n    const cb = FunctionPrototypeBind(maybeCb\x2C this);\x0d\n    // In true node style we process the callback on `nextTick` with all the\x0d\n    // implications (stack\x2C `uncaughtException`\x2C `async_hooks`)\x0d\n    ReflectApply(original\x2C this\x2C args)\x0d\n      .then((ret) => process.nextTick(cb\x2C null\x2C ret)\x2C\x0d\n            (rej) => process.nextTick(callbackifyOnRejected\x2C rej\x2C cb));\x0d\n  }\x0d\n\x0d\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\x0d\n  // It is possible to manipulate a functions `length` or `name` property. This\x0d\n  // guards against the manipulation.\x0d\n  if (typeof descriptors.length.value === 'number') {\x0d\n    descriptors.length.value++;\x0d\n  }\x0d\n  if (typeof descriptors.name.value === 'string') {\x0d\n    descriptors.name.value += 'Callbackified';\x0d\n  }\x0d\n  const propertiesValues = ObjectValues(descriptors);\x0d\n  for (let i = 0; i < propertiesValues.length; i++) {\x0d\n  // We want to use null-prototype objects to not rely on globally mutable\x0d\n  // %Object.prototype%.\x0d\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n  }\x0d\n  ObjectDefineProperties(callbackified\x2C descriptors);\x0d\n  return callbackified;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} err\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getSystemErrorName(err) {\x0d\n  validateNumber(err\x2C 'err');\x0d\n  if (err >= 0 || !NumberIsSafeInteger(err)) {\x0d\n    throw new ERR_OUT_OF_RANGE('err'\x2C 'a negative integer'\x2C err);\x0d\n  }\x0d\n  return internalErrorName(err);\x0d\n}\x0d\n\x0d\nfunction _errnoException(...args) {\x0d\n  if (isErrorStackTraceLimitWritable()) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    Error.stackTraceLimit = 0;\x0d\n    const e = new ErrnoException(...args);\x0d\n    Error.stackTraceLimit = limit;\x0d\n    ErrorCaptureStackTrace(e\x2C _exceptionWithHostPort);\x0d\n    return e;\x0d\n  }\x0d\n  return new ErrnoException(...args);\x0d\n}\x0d\n\x0d\nfunction _exceptionWithHostPort(...args) {\x0d\n  if (isErrorStackTraceLimitWritable()) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    Error.stackTraceLimit = 0;\x0d\n    const e = new ExceptionWithHostPort(...args);\x0d\n    Error.stackTraceLimit = limit;\x0d\n    ErrorCaptureStackTrace(e\x2C _exceptionWithHostPort);\x0d\n    return e;\x0d\n  }\x0d\n  return new ExceptionWithHostPort(...args);\x0d\n}\x0d\n\x0d\n// Keep the `exports =` so that various functions can still be monkeypatched\x0d\nmodule.exports = {\x0d\n  _errnoException\x2C\x0d\n  _exceptionWithHostPort\x2C\x0d\n  _extend\x2C\x0d\n  callbackify\x2C\x0d\n  debug: debuglog\x2C\x0d\n  debuglog\x2C\x0d\n  deprecate\x2C\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  inherits\x2C\x0d\n  inspect\x2C\x0d\n  isArray: ArrayIsArray\x2C\x0d\n  isBoolean\x2C\x0d\n  isBuffer\x2C\x0d\n  isDeepStrictEqual(a\x2C b) {\x0d\n    if (internalDeepEqual === undefined) {\x0d\n      internalDeepEqual = require('internal/util/comparisons')\x0d\n        .isDeepStrictEqual;\x0d\n    }\x0d\n    return internalDeepEqual(a\x2C b);\x0d\n  }\x2C\x0d\n  isNull\x2C\x0d\n  isNullOrUndefined\x2C\x0d\n  isNumber\x2C\x0d\n  isString\x2C\x0d\n  isSymbol\x2C\x0d\n  isUndefined\x2C\x0d\n  isRegExp: types.isRegExp\x2C\x0d\n  isObject\x2C\x0d\n  isDate: types.isDate\x2C\x0d\n  isError\x2C\x0d\n  isFunction\x2C\x0d\n  isPrimitive\x2C\x0d\n  log\x2C\x0d\n  promisify\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n  toUSVString\x2C\x0d\n  get transferableAbortSignal() {\x0d\n    return lazyAbortController().transferableAbortSignal;\x0d\n  }\x2C\x0d\n  get transferableAbortController() {\x0d\n    return lazyAbortController().transferableAbortController;\x0d\n  }\x2C\x0d\n  get aborted() {\x0d\n    return lazyAbortController().aborted;\x0d\n  }\x2C\x0d\n  types\x2C\x0d\n};\x0d\n\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/util/parse_args/parse_args'\x2C\x0d\n  ['parseArgs']\x2C\x0d\n);\x0d\n\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/encoding'\x2C\x0d\n  ['TextDecoder'\x2C 'TextEncoder']\x2C\x0d\n);\x0d\n\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/mime'\x2C\x0d\n  ['MIMEType'\x2C 'MIMEParams']\x2C\x0d\n);\x0d\n
code-source-info,0x2ce89f0e014,48,11551,11619,C0O11561C3O11568C7O11589C11O11614,,
code-creation,JS,10,207592,0x2ce89f0eeec,23,lazyAbortController node:util:84:29,0x22671ca6be8,~
code-source-info,0x2ce89f0eeec,48,2521,2616,C0O2529C14O2549C18O2545C20O2590C22O2613,,
code-creation,JS,10,207626,0x2ce89f0f00c,12,get transferableAbortController node:util:418:34,0x22671ca7768,~
code-source-info,0x2ce89f0f00c,48,11655,11727,C0O11665C3O11672C7O11693C11O11722,,
code-creation,JS,10,207652,0x2ce89f0f10c,12,get aborted node:util:421:14,0x22671ca77f0,~
code-source-info,0x2ce89f0f10c,48,11743,11795,C0O11753C3O11760C7O11781C11O11790,,
code-creation,JS,10,207698,0x2ce89f0f204,63,get node:internal/util:621:17,0x22671c81e48,~
code-source-info,0x2ce89f0f204,16,17959,18150,C0O17971C19O17987C22O17979C26O17975C30O17999C36O18045C43O18067C45O18066C48O18061C50O18082C56O18082C60O18120C62O18143,,
code-creation,Eval,10,208134,0x2ce89f10a44,5, node:internal/util/parse_args/parse_args:1:1,0x2ce89f10630,~
script-source,146,node:internal/util/parse_args/parse_args,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  ObjectEntries\x2C\x0d\n  ObjectPrototypeHasOwnProperty: ObjectHasOwn\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBooleanArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateUnion\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  findLongOptionForShort\x2C\x0d\n  isLoneLongOption\x2C\x0d\n  isLoneShortOption\x2C\x0d\n  isLongOptionAndValue\x2C\x0d\n  isOptionValue\x2C\x0d\n  isOptionLikeValue\x2C\x0d\n  isShortOptionAndValue\x2C\x0d\n  isShortOptionGroup\x2C\x0d\n  useDefaultValueOption\x2C\x0d\n  objectGetOwn\x2C\x0d\n  optionsGetOwn\x2C\x0d\n} = require('internal/util/parse_args/utils');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_PARSE_ARGS_INVALID_OPTION_VALUE\x2C\x0d\n    ERR_PARSE_ARGS_UNKNOWN_OPTION\x2C\x0d\n    ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\n\x0d\nfunction getMainArgs() {\x0d\n  // Work out where to slice process.argv for user supplied arguments.\x0d\n\x0d\n  // Check node options for scenarios where user CLI args follow executable.\x0d\n  const execArgv = process.execArgv;\x0d\n  if (ArrayPrototypeIncludes(execArgv\x2C '-e') ||\x0d\n      ArrayPrototypeIncludes(execArgv\x2C '--eval') ||\x0d\n      ArrayPrototypeIncludes(execArgv\x2C '-p') ||\x0d\n      ArrayPrototypeIncludes(execArgv\x2C '--print')) {\x0d\n    return ArrayPrototypeSlice(process.argv\x2C 1);\x0d\n  }\x0d\n\x0d\n  // Normally first two arguments are executable and script\x2C then CLI arguments\x0d\n  return ArrayPrototypeSlice(process.argv\x2C 2);\x0d\n}\x0d\n\x0d\n/**\x0d\n * In strict mode\x2C throw for possible usage errors like --foo --bar\x0d\n * @param {object} token - from tokens as available from parseArgs\x0d\n */\x0d\nfunction checkOptionLikeValue(token) {\x0d\n  if (!token.inlineValue && isOptionLikeValue(token.value)) {\x0d\n    // Only show short example if user used short option.\x0d\n    const example = StringPrototypeStartsWith(token.rawName\x2C '--') ?\x0d\n      `'${token.rawName}=-XYZ'` :\x0d\n      `'--${token.name}=-XYZ' or '${token.rawName}-XYZ'`;\x0d\n    const errorMessage = `Option '${token.rawName}' argument is ambiguous.\x0d\nDid you forget to specify the option argument for '${token.rawName}'?\x0d\nTo specify an option argument starting with a dash use ${example}.`;\x0d\n    throw new ERR_PARSE_ARGS_INVALID_OPTION_VALUE(errorMessage);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * In strict mode\x2C throw for usage errors.\x0d\n * @param {object} config - from config passed to parseArgs\x0d\n * @param {object} token - from tokens as available from parseArgs\x0d\n */\x0d\nfunction checkOptionUsage(config\x2C token) {\x0d\n  if (!ObjectHasOwn(config.options\x2C token.name)) {\x0d\n    throw new ERR_PARSE_ARGS_UNKNOWN_OPTION(\x0d\n      token.rawName\x2C config.allowPositionals);\x0d\n  }\x0d\n\x0d\n  const short = optionsGetOwn(config.options\x2C token.name\x2C 'short');\x0d\n  const shortAndLong = `${short ? `-${short}\x2C ` : ''}--${token.name}`;\x0d\n  const type = optionsGetOwn(config.options\x2C token.name\x2C 'type');\x0d\n  if (type === 'string' && typeof token.value !== 'string') {\x0d\n    throw new ERR_PARSE_ARGS_INVALID_OPTION_VALUE(`Option '${shortAndLong} <value>' argument missing`);\x0d\n  }\x0d\n  // (Idiomatic test for undefined||null\x2C expecting undefined.)\x0d\n  if (type === 'boolean' && token.value != null) {\x0d\n    throw new ERR_PARSE_ARGS_INVALID_OPTION_VALUE(`Option '${shortAndLong}' does not take an argument`);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Store the option value in `values`.\x0d\n * @param {string} longOption - long option name e.g. 'foo'\x0d\n * @param {string|undefined} optionValue - value from user args\x0d\n * @param {object} options - option configs\x2C from parseArgs({ options })\x0d\n * @param {object} values - option values returned in `values` by parseArgs\x0d\n */\x0d\nfunction storeOption(longOption\x2C optionValue\x2C options\x2C values) {\x0d\n  if (longOption === '__proto__') {\x0d\n    return; // No. Just no.\x0d\n  }\x0d\n\x0d\n  // We store based on the option value rather than option type\x2C\x0d\n  // preserving the users intent for author to deal with.\x0d\n  const newValue = optionValue ?? true;\x0d\n  if (optionsGetOwn(options\x2C longOption\x2C 'multiple')) {\x0d\n    // Always store value in array\x2C including for boolean.\x0d\n    // values[longOption] starts out not present\x2C\x0d\n    // first value is added as new array [newValue]\x2C\x0d\n    // subsequent values are pushed to existing array.\x0d\n    // (note: values has null prototype\x2C so simpler usage)\x0d\n    if (values[longOption]) {\x0d\n      ArrayPrototypePush(values[longOption]\x2C newValue);\x0d\n    } else {\x0d\n      values[longOption] = [newValue];\x0d\n    }\x0d\n  } else {\x0d\n    values[longOption] = newValue;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Store the default option value in `values`.\x0d\n * @param {string} longOption - long option name e.g. 'foo'\x0d\n * @param {string\x0d\n *         | boolean\x0d\n *         | string[]\x0d\n *         | boolean[]} optionValue - default value from option config\x0d\n * @param {object} values - option values returned in `values` by parseArgs\x0d\n */\x0d\nfunction storeDefaultOption(longOption\x2C optionValue\x2C values) {\x0d\n  if (longOption === '__proto__') {\x0d\n    return; // No. Just no.\x0d\n  }\x0d\n\x0d\n  values[longOption] = optionValue;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Process args and turn into identified tokens:\x0d\n * - option (along with value\x2C if any)\x0d\n * - positional\x0d\n * - option-terminator\x0d\n * @param {string[]} args - from parseArgs({ args }) or mainArgs\x0d\n * @param {object} options - option configs\x2C from parseArgs({ options })\x0d\n */\x0d\nfunction argsToTokens(args\x2C options) {\x0d\n  const tokens = [];\x0d\n  let index = -1;\x0d\n  let groupCount = 0;\x0d\n\x0d\n  const remainingArgs = ArrayPrototypeSlice(args);\x0d\n  while (remainingArgs.length > 0) {\x0d\n    const arg = ArrayPrototypeShift(remainingArgs);\x0d\n    const nextArg = remainingArgs[0];\x0d\n    if (groupCount > 0)\x0d\n      groupCount--;\x0d\n    else\x0d\n      index++;\x0d\n\x0d\n    // Check if `arg` is an options terminator.\x0d\n    // Guideline 10 in https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html\x0d\n    if (arg === '--') {\x0d\n      // Everything after a bare '--' is considered a positional argument.\x0d\n      ArrayPrototypePush(tokens\x2C { kind: 'option-terminator'\x2C index });\x0d\n      ArrayPrototypePushApply(\x0d\n        tokens\x2C ArrayPrototypeMap(remainingArgs\x2C (arg) => {\x0d\n          return { kind: 'positional'\x2C index: ++index\x2C value: arg };\x0d\n        })\x2C\x0d\n      );\x0d\n      break; // Finished processing args\x2C leave while loop.\x0d\n    }\x0d\n\x0d\n    if (isLoneShortOption(arg)) {\x0d\n      // e.g. '-f'\x0d\n      const shortOption = StringPrototypeCharAt(arg\x2C 1);\x0d\n      const longOption = findLongOptionForShort(shortOption\x2C options);\x0d\n      let value;\x0d\n      let inlineValue;\x0d\n      if (optionsGetOwn(options\x2C longOption\x2C 'type') === 'string' &&\x0d\n          isOptionValue(nextArg)) {\x0d\n        // e.g. '-f'\x2C 'bar'\x0d\n        value = ArrayPrototypeShift(remainingArgs);\x0d\n        inlineValue = false;\x0d\n      }\x0d\n      ArrayPrototypePush(\x0d\n        tokens\x2C\x0d\n        { kind: 'option'\x2C name: longOption\x2C rawName: arg\x2C\x0d\n          index\x2C value\x2C inlineValue });\x0d\n      if (value != null) ++index;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (isShortOptionGroup(arg\x2C options)) {\x0d\n      // Expand -fXzy to -f -X -z -y\x0d\n      const expanded = [];\x0d\n      for (let index = 1; index < arg.length; index++) {\x0d\n        const shortOption = StringPrototypeCharAt(arg\x2C index);\x0d\n        const longOption = findLongOptionForShort(shortOption\x2C options);\x0d\n        if (optionsGetOwn(options\x2C longOption\x2C 'type') !== 'string' ||\x0d\n          index === arg.length - 1) {\x0d\n          // Boolean option\x2C or last short in group. Well formed.\x0d\n          ArrayPrototypePush(expanded\x2C `-${shortOption}`);\x0d\n        } else {\x0d\n          // String option in middle. Yuck.\x0d\n          // Expand -abfFILE to -a -b -fFILE\x0d\n          ArrayPrototypePush(expanded\x2C `-${StringPrototypeSlice(arg\x2C index)}`);\x0d\n          break; // finished short group\x0d\n        }\x0d\n      }\x0d\n      ArrayPrototypeUnshiftApply(remainingArgs\x2C expanded);\x0d\n      groupCount = expanded.length;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (isShortOptionAndValue(arg\x2C options)) {\x0d\n      // e.g. -fFILE\x0d\n      const shortOption = StringPrototypeCharAt(arg\x2C 1);\x0d\n      const longOption = findLongOptionForShort(shortOption\x2C options);\x0d\n      const value = StringPrototypeSlice(arg\x2C 2);\x0d\n      ArrayPrototypePush(\x0d\n        tokens\x2C\x0d\n        { kind: 'option'\x2C name: longOption\x2C rawName: `-${shortOption}`\x2C\x0d\n          index\x2C value\x2C inlineValue: true });\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (isLoneLongOption(arg)) {\x0d\n      // e.g. '--foo'\x0d\n      const longOption = StringPrototypeSlice(arg\x2C 2);\x0d\n      let value;\x0d\n      let inlineValue;\x0d\n      if (optionsGetOwn(options\x2C longOption\x2C 'type') === 'string' &&\x0d\n          isOptionValue(nextArg)) {\x0d\n        // e.g. '--foo'\x2C 'bar'\x0d\n        value = ArrayPrototypeShift(remainingArgs);\x0d\n        inlineValue = false;\x0d\n      }\x0d\n      ArrayPrototypePush(\x0d\n        tokens\x2C\x0d\n        { kind: 'option'\x2C name: longOption\x2C rawName: arg\x2C\x0d\n          index\x2C value\x2C inlineValue });\x0d\n      if (value != null) ++index;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (isLongOptionAndValue(arg)) {\x0d\n      // e.g. --foo=bar\x0d\n      const equalIndex = StringPrototypeIndexOf(arg\x2C '=');\x0d\n      const longOption = StringPrototypeSlice(arg\x2C 2\x2C equalIndex);\x0d\n      const value = StringPrototypeSlice(arg\x2C equalIndex + 1);\x0d\n      ArrayPrototypePush(\x0d\n        tokens\x2C\x0d\n        { kind: 'option'\x2C name: longOption\x2C rawName: `--${longOption}`\x2C\x0d\n          index\x2C value\x2C inlineValue: true });\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(tokens\x2C { kind: 'positional'\x2C index\x2C value: arg });\x0d\n  }\x0d\n  return tokens;\x0d\n}\x0d\n\x0d\nconst parseArgs = (config = kEmptyObject) => {\x0d\n  const args = objectGetOwn(config\x2C 'args') ?? getMainArgs();\x0d\n  const strict = objectGetOwn(config\x2C 'strict') ?? true;\x0d\n  const allowPositionals = objectGetOwn(config\x2C 'allowPositionals') ?? !strict;\x0d\n  const returnTokens = objectGetOwn(config\x2C 'tokens') ?? false;\x0d\n  const options = objectGetOwn(config\x2C 'options') ?? { __proto__: null };\x0d\n  // Bundle these up for passing to strict-mode checks.\x0d\n  const parseConfig = { args\x2C strict\x2C options\x2C allowPositionals };\x0d\n\x0d\n  // Validate input configuration.\x0d\n  validateArray(args\x2C 'args');\x0d\n  validateBoolean(strict\x2C 'strict');\x0d\n  validateBoolean(allowPositionals\x2C 'allowPositionals');\x0d\n  validateBoolean(returnTokens\x2C 'tokens');\x0d\n  validateObject(options\x2C 'options');\x0d\n  ArrayPrototypeForEach(\x0d\n    ObjectEntries(options)\x2C\x0d\n    ({ 0: longOption\x2C 1: optionConfig }) => {\x0d\n      validateObject(optionConfig\x2C `options.${longOption}`);\x0d\n\x0d\n      // type is required\x0d\n      const optionType = objectGetOwn(optionConfig\x2C 'type');\x0d\n      validateUnion(optionType\x2C `options.${longOption}.type`\x2C ['string'\x2C 'boolean']);\x0d\n\x0d\n      if (ObjectHasOwn(optionConfig\x2C 'short')) {\x0d\n        const shortOption = optionConfig.short;\x0d\n        validateString(shortOption\x2C `options.${longOption}.short`);\x0d\n        if (shortOption.length !== 1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(\x0d\n            `options.${longOption}.short`\x2C\x0d\n            shortOption\x2C\x0d\n            'must be a single character'\x2C\x0d\n          );\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const multipleOption = objectGetOwn(optionConfig\x2C 'multiple');\x0d\n      if (ObjectHasOwn(optionConfig\x2C 'multiple')) {\x0d\n        validateBoolean(multipleOption\x2C `options.${longOption}.multiple`);\x0d\n      }\x0d\n\x0d\n      const defaultValue = objectGetOwn(optionConfig\x2C 'default');\x0d\n      if (defaultValue !== undefined) {\x0d\n        let validator;\x0d\n        switch (optionType) {\x0d\n          case 'string':\x0d\n            validator = multipleOption ? validateStringArray : validateString;\x0d\n            break;\x0d\n\x0d\n          case 'boolean':\x0d\n            validator = multipleOption ? validateBooleanArray : validateBoolean;\x0d\n            break;\x0d\n        }\x0d\n        validator(defaultValue\x2C `options.${longOption}.default`);\x0d\n      }\x0d\n    }\x2C\x0d\n  );\x0d\n\x0d\n  // Phase 1: identify tokens\x0d\n  const tokens = argsToTokens(args\x2C options);\x0d\n\x0d\n  // Phase 2: process tokens into parsed option values and positionals\x0d\n  const result = {\x0d\n    values: { __proto__: null }\x2C\x0d\n    positionals: []\x2C\x0d\n  };\x0d\n  if (returnTokens) {\x0d\n    result.tokens = tokens;\x0d\n  }\x0d\n  ArrayPrototypeForEach(tokens\x2C (token) => {\x0d\n    if (token.kind === 'option') {\x0d\n      if (strict) {\x0d\n        checkOptionUsage(parseConfig\x2C token);\x0d\n        checkOptionLikeValue(token);\x0d\n      }\x0d\n      storeOption(token.name\x2C token.value\x2C options\x2C result.values);\x0d\n    } else if (token.kind === 'positional') {\x0d\n      if (!allowPositionals) {\x0d\n        throw new ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL(token.value);\x0d\n      }\x0d\n      ArrayPrototypePush(result.positionals\x2C token.value);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  // Phase 3: fill in default values for missing args\x0d\n  ArrayPrototypeForEach(ObjectEntries(options)\x2C ({ 0: longOption\x2C\x0d\n                                                   1: optionConfig }) => {\x0d\n    const mustSetDefault = useDefaultValueOption(longOption\x2C\x0d\n                                                 optionConfig\x2C\x0d\n                                                 result.values);\x0d\n    if (mustSetDefault) {\x0d\n      storeDefaultOption(longOption\x2C\x0d\n                         objectGetOwn(optionConfig\x2C 'default')\x2C\x0d\n                         result.values);\x0d\n    }\x0d\n  });\x0d\n\x0d\n\x0d\n  return result;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  parseArgs\x2C\x0d\n};\x0d\n
code-source-info,0x2ce89f10a44,146,0,13310,C0O0C4O13310,,
code-creation,JS,10,208805,0x2ce89f10ef4,439, node:internal/util/parse_args/parse_args:1:1,0x2ce89f109b8,~
code-source-info,0x2ce89f10ef4,146,0,13310,C0O0C156O28C162O54C168O81C174O103C180O126C186O154C192O178C198O202C204O233C210O282C216O299C222O325C228O352C234O377C240O581C243O581C248O436C254O454C260O474C266O499C272O518C278O537C284O561C290O874C293O874C298O627C304O654C310O675C316O697C322O722C328O740C334O762C340O788C346O811C352O837C358O854C364O1100C367O1100C372O938C377O945C383O973C389O1015C395O1051C401O1161C404O1161C409O1142C415O9652C420O13272C427O13294C433O13287C438O13309,,
code-creation,Eval,10,209074,0x2ce89f11c3c,5, node:internal/util/parse_args/utils:1:1,0x2ce89f11a48,~
script-source,147,node:internal/util/parse_args/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFind\x2C\x0d\n  ObjectEntries\x2C\x0d\n  ObjectPrototypeHasOwnProperty: ObjectHasOwn\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\n// These are internal utilities to make the parsing logic easier to read\x2C and\x0d\n// add lots of detail for the curious. They are in a separate file to allow\x0d\n// unit testing\x2C although that is not essential (this could be rolled into\x0d\n// main file and just tested implicitly via API).\x0d\n//\x0d\n// These routines are for internal use\x2C not for export to client.\x0d\n\x0d\n/**\x0d\n * Return the named property\x2C but only if it is an own property.\x0d\n */\x0d\nfunction objectGetOwn(obj\x2C prop) {\x0d\n  if (ObjectHasOwn(obj\x2C prop))\x0d\n    return obj[prop];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Return the named options property\x2C but only if it is an own property.\x0d\n */\x0d\nfunction optionsGetOwn(options\x2C longOption\x2C prop) {\x0d\n  if (ObjectHasOwn(options\x2C longOption))\x0d\n    return objectGetOwn(options[longOption]\x2C prop);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determines if the argument may be used as an option value.\x0d\n * @example\x0d\n * isOptionValue('V') // returns true\x0d\n * isOptionValue('-v') // returns true (greedy)\x0d\n * isOptionValue('--foo') // returns true (greedy)\x0d\n * isOptionValue(undefined) // returns false\x0d\n */\x0d\nfunction isOptionValue(value) {\x0d\n  if (value == null) return false;\x0d\n\x0d\n  // Open Group Utility Conventions are that an option-argument\x0d\n  // is the argument after the option\x2C and may start with a dash.\x0d\n  return true; // greedy!\x0d\n}\x0d\n\x0d\n/**\x0d\n * Detect whether there is possible confusion and user may have omitted\x0d\n * the option argument\x2C like `--port --verbose` when `port` of type:string.\x0d\n * In strict mode we throw errors if value is option-like.\x0d\n */\x0d\nfunction isOptionLikeValue(value) {\x0d\n  if (value == null) return false;\x0d\n\x0d\n  return value.length > 1 && StringPrototypeCharAt(value\x2C 0) === '-';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determines if `arg` is just a short option.\x0d\n * @example '-f'\x0d\n */\x0d\nfunction isLoneShortOption(arg) {\x0d\n  return arg.length === 2 &&\x0d\n    StringPrototypeCharAt(arg\x2C 0) === '-' &&\x0d\n    StringPrototypeCharAt(arg\x2C 1) !== '-';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determines if `arg` is a lone long option.\x0d\n * @example\x0d\n * isLoneLongOption('a') // returns false\x0d\n * isLoneLongOption('-a') // returns false\x0d\n * isLoneLongOption('--foo') // returns true\x0d\n * isLoneLongOption('--foo=bar') // returns false\x0d\n */\x0d\nfunction isLoneLongOption(arg) {\x0d\n  return arg.length > 2 &&\x0d\n    StringPrototypeStartsWith(arg\x2C '--') &&\x0d\n    !StringPrototypeIncludes(arg\x2C '='\x2C 3);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determines if `arg` is a long option and value in the same argument.\x0d\n * @example\x0d\n * isLongOptionAndValue('--foo') // returns false\x0d\n * isLongOptionAndValue('--foo=bar') // returns true\x0d\n */\x0d\nfunction isLongOptionAndValue(arg) {\x0d\n  return arg.length > 2 &&\x0d\n    StringPrototypeStartsWith(arg\x2C '--') &&\x0d\n    StringPrototypeIncludes(arg\x2C '='\x2C 3);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determines if `arg` is a short option group.\x0d\n *\x0d\n * See Guideline 5 of the [Open Group Utility Conventions](https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html).\x0d\n *   One or more options without option-arguments\x2C followed by at most one\x0d\n *   option that takes an option-argument\x2C should be accepted when grouped\x0d\n *   behind one '-' delimiter.\x0d\n * @example\x0d\n * isShortOptionGroup('-a'\x2C {}) // returns false\x0d\n * isShortOptionGroup('-ab'\x2C {}) // returns true\x0d\n * // -fb is an option and a value\x2C not a short option group\x0d\n * isShortOptionGroup('-fb'\x2C {\x0d\n *   options: { f: { type: 'string' } }\x0d\n * }) // returns false\x0d\n * isShortOptionGroup('-bf'\x2C {\x0d\n *   options: { f: { type: 'string' } }\x0d\n * }) // returns true\x0d\n * // -bfb is an edge case\x2C return true and caller sorts it out\x0d\n * isShortOptionGroup('-bfb'\x2C {\x0d\n *   options: { f: { type: 'string' } }\x0d\n * }) // returns true\x0d\n */\x0d\nfunction isShortOptionGroup(arg\x2C options) {\x0d\n  if (arg.length <= 2) return false;\x0d\n  if (StringPrototypeCharAt(arg\x2C 0) !== '-') return false;\x0d\n  if (StringPrototypeCharAt(arg\x2C 1) === '-') return false;\x0d\n\x0d\n  const firstShort = StringPrototypeCharAt(arg\x2C 1);\x0d\n  const longOption = findLongOptionForShort(firstShort\x2C options);\x0d\n  return optionsGetOwn(options\x2C longOption\x2C 'type') !== 'string';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determine if arg is a short string option followed by its value.\x0d\n * @example\x0d\n * isShortOptionAndValue('-a'\x2C {}); // returns false\x0d\n * isShortOptionAndValue('-ab'\x2C {}); // returns false\x0d\n * isShortOptionAndValue('-fFILE'\x2C {\x0d\n *   options: { foo: { short: 'f'\x2C type: 'string' }}\x0d\n * }) // returns true\x0d\n */\x0d\nfunction isShortOptionAndValue(arg\x2C options) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  if (arg.length <= 2) return false;\x0d\n  if (StringPrototypeCharAt(arg\x2C 0) !== '-') return false;\x0d\n  if (StringPrototypeCharAt(arg\x2C 1) === '-') return false;\x0d\n\x0d\n  const shortOption = StringPrototypeCharAt(arg\x2C 1);\x0d\n  const longOption = findLongOptionForShort(shortOption\x2C options);\x0d\n  return optionsGetOwn(options\x2C longOption\x2C 'type') === 'string';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Find the long option associated with a short option. Looks for a configured\x0d\n * `short` and returns the short option itself if a long option is not found.\x0d\n * @example\x0d\n * findLongOptionForShort('a'\x2C {}) // returns 'a'\x0d\n * findLongOptionForShort('b'\x2C {\x0d\n *   options: { bar: { short: 'b' } }\x0d\n * }) // returns 'bar'\x0d\n */\x0d\nfunction findLongOptionForShort(shortOption\x2C options) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const longOptionEntry = ArrayPrototypeFind(\x0d\n    ObjectEntries(options)\x2C\x0d\n    ({ 1: optionConfig }) => objectGetOwn(optionConfig\x2C 'short') === shortOption\x2C\x0d\n  );\x0d\n  return longOptionEntry?.[0] ?? shortOption;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Check if the given option includes a default value\x0d\n * and that option has not been set by the input args.\x0d\n * @param {string} longOption - long option name e.g. 'foo'\x0d\n * @param {object} optionConfig - the option configuration properties\x0d\n * @param {object} values - option values returned in `values` by parseArgs\x0d\n */\x0d\nfunction useDefaultValueOption(longOption\x2C optionConfig\x2C values) {\x0d\n  return objectGetOwn(optionConfig\x2C 'default') !== undefined &&\x0d\n    values[longOption] === undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findLongOptionForShort\x2C\x0d\n  isLoneLongOption\x2C\x0d\n  isLoneShortOption\x2C\x0d\n  isLongOptionAndValue\x2C\x0d\n  isOptionValue\x2C\x0d\n  isOptionLikeValue\x2C\x0d\n  isShortOptionAndValue\x2C\x0d\n  isShortOptionGroup\x2C\x0d\n  useDefaultValueOption\x2C\x0d\n  objectGetOwn\x2C\x0d\n  optionsGetOwn\x2C\x0d\n};\x0d\n
code-source-info,0x2ce89f11c3c,147,0,6422,C0O0C4O6422,,
code-creation,JS,10,209455,0x2ce89f1224c,213, node:internal/util/parse_args/utils:1:1,0x2ce89f11bb0,~
code-source-info,0x2ce89f1224c,147,0,6422,C0O0C84O28C90O51C96O100C102O117C108O143C114O171C120O251C123O251C128O230C134O6153C141O6175C147O6202C153O6223C159O6245C165O6270C171O6288C177O6310C183O6336C189O6359C195O6385C201O6402C207O6168C212O6421,,
code-creation,JS,10,209609,0x2ce89f129e4,37,set node:internal/util:610:17,0x22671c81df0,~
code-source-info,0x2ce89f129e4,16,17702,17839,C0O17719C11O17740C16O17748C26O17815C30O17719C36O17838,,
code-creation,Eval,10,210001,0x2ce89f14364,5, node:internal/mime:1:1,0x2ce89f13ef0,~
script-source,148,node:internal/mime,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeStringPrototypeSearch\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_INVALID_MIME_SYNTAX\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst NOT_HTTP_TOKEN_CODE_POINT = /[^!#$%&'*+\\-.^_`|~A-Za-z0-9]/g;\x0d\nconst NOT_HTTP_QUOTED_STRING_CODE_POINT = /[^\\t\\u0020-~\\u0080-\\u00FF]/g;\x0d\n\x0d\nconst END_BEGINNING_WHITESPACE = /[^\\r\\n\\t ]|$/;\x0d\nconst START_ENDING_WHITESPACE = /[\\r\\n\\t ]*$/;\x0d\n\x0d\nfunction toASCIILower(str) {\x0d\n  let result = '';\x0d\n  for (let i = 0; i < str.length; i++) {\x0d\n    const char = str[i];\x0d\n\x0d\n    result += char >= 'A' && char <= 'Z' ?\x0d\n      StringPrototypeToLowerCase(char) :\x0d\n      char;\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst SOLIDUS = '/';\x0d\nconst SEMICOLON = ';';\x0d\n\x0d\nfunction parseTypeAndSubtype(str) {\x0d\n  // Skip only HTTP whitespace from start\x0d\n  let position = SafeStringPrototypeSearch(str\x2C END_BEGINNING_WHITESPACE);\x0d\n  // read until '/'\x0d\n  const typeEnd = StringPrototypeIndexOf(str\x2C SOLIDUS\x2C position);\x0d\n  const trimmedType = typeEnd === -1 ?\x0d\n    StringPrototypeSlice(str\x2C position) :\x0d\n    StringPrototypeSlice(str\x2C position\x2C typeEnd);\x0d\n  const invalidTypeIndex = SafeStringPrototypeSearch(trimmedType\x2C\x0d\n                                                     NOT_HTTP_TOKEN_CODE_POINT);\x0d\n  if (trimmedType === '' || invalidTypeIndex !== -1 || typeEnd === -1) {\x0d\n    throw new ERR_INVALID_MIME_SYNTAX('type'\x2C str\x2C invalidTypeIndex);\x0d\n  }\x0d\n  // skip type and '/'\x0d\n  position = typeEnd + 1;\x0d\n  const type = toASCIILower(trimmedType);\x0d\n  // read until ';'\x0d\n  const subtypeEnd = StringPrototypeIndexOf(str\x2C SEMICOLON\x2C position);\x0d\n  const rawSubtype = subtypeEnd === -1 ?\x0d\n    StringPrototypeSlice(str\x2C position) :\x0d\n    StringPrototypeSlice(str\x2C position\x2C subtypeEnd);\x0d\n  position += rawSubtype.length;\x0d\n  if (subtypeEnd !== -1) {\x0d\n    // skip ';'\x0d\n    position += 1;\x0d\n  }\x0d\n  const trimmedSubtype = StringPrototypeSlice(\x0d\n    rawSubtype\x2C\x0d\n    0\x2C\x0d\n    SafeStringPrototypeSearch(rawSubtype\x2C START_ENDING_WHITESPACE));\x0d\n  const invalidSubtypeIndex = SafeStringPrototypeSearch(trimmedSubtype\x2C\x0d\n                                                        NOT_HTTP_TOKEN_CODE_POINT);\x0d\n  if (trimmedSubtype === '' || invalidSubtypeIndex !== -1) {\x0d\n    throw new ERR_INVALID_MIME_SYNTAX('subtype'\x2C str\x2C trimmedSubtype);\x0d\n  }\x0d\n  const subtype = toASCIILower(trimmedSubtype);\x0d\n  return [\x0d\n    type\x2C\x0d\n    subtype\x2C\x0d\n    position\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nconst EQUALS_SEMICOLON_OR_END = /[;=]|$/;\x0d\nconst QUOTED_VALUE_PATTERN = /^(?:([\\\\]$)|[\\\\][\\s\\S]|[^"])*(?:(")|$)/u;\x0d\n\x0d\nfunction removeBackslashes(str) {\x0d\n  let ret = '';\x0d\n  // We stop at str.length - 1 because we want to look ahead one character.\x0d\n  let i;\x0d\n  for (i = 0; i < str.length - 1; i++) {\x0d\n    const c = str[i];\x0d\n    if (c === '\\\\') {\x0d\n      i++;\x0d\n      ret += str[i];\x0d\n    } else {\x0d\n      ret += c;\x0d\n    }\x0d\n  }\x0d\n  // We add the last character if we didn't skip to it.\x0d\n  if (i === str.length - 1) {\x0d\n    ret += str[i];\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n\x0d\nfunction escapeQuoteOrSolidus(str) {\x0d\n  let result = '';\x0d\n  for (let i = 0; i < str.length; i++) {\x0d\n    const char = str[i];\x0d\n    result += (char === '"' || char === '\\\\') ? `\\\\${char}` : char;\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst encode = (value) => {\x0d\n  if (value.length === 0) return '""';\x0d\n  const encode = SafeStringPrototypeSearch(value\x2C NOT_HTTP_TOKEN_CODE_POINT) !== -1;\x0d\n  if (!encode) return value;\x0d\n  const escaped = escapeQuoteOrSolidus(value);\x0d\n  return `"${escaped}"`;\x0d\n};\x0d\n\x0d\nclass MIMEParams {\x0d\n  #data = new SafeMap();\x0d\n  // We set the flag the MIMEParams instance as processed on initialization\x0d\n  // to defer the parsing of a potentially large string.\x0d\n  #processed = true;\x0d\n  #string = null;\x0d\n\x0d\n  /**\x0d\n   * Used to instantiate a MIMEParams object within the MIMEType class and\x0d\n   * to allow it to be parsed lazily.\x0d\n   */\x0d\n  static instantiateMimeParams(str) {\x0d\n    const instance = new MIMEParams();\x0d\n    instance.#string = str;\x0d\n    instance.#processed = false;\x0d\n    return instance;\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    this.#parse();\x0d\n    this.#data.delete(name);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    this.#parse();\x0d\n    const data = this.#data;\x0d\n    if (data.has(name)) {\x0d\n      return data.get(name);\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    this.#parse();\x0d\n    return this.#data.has(name);\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    this.#parse();\x0d\n    const data = this.#data;\x0d\n    name = `${name}`;\x0d\n    value = `${value}`;\x0d\n    const invalidNameIndex = SafeStringPrototypeSearch(name\x2C NOT_HTTP_TOKEN_CODE_POINT);\x0d\n    if (name.length === 0 || invalidNameIndex !== -1) {\x0d\n      throw new ERR_INVALID_MIME_SYNTAX(\x0d\n        'parameter name'\x2C\x0d\n        name\x2C\x0d\n        invalidNameIndex\x2C\x0d\n      );\x0d\n    }\x0d\n    const invalidValueIndex = SafeStringPrototypeSearch(\x0d\n      value\x2C\x0d\n      NOT_HTTP_QUOTED_STRING_CODE_POINT);\x0d\n    if (invalidValueIndex !== -1) {\x0d\n      throw new ERR_INVALID_MIME_SYNTAX(\x0d\n        'parameter value'\x2C\x0d\n        value\x2C\x0d\n        invalidValueIndex\x2C\x0d\n      );\x0d\n    }\x0d\n    data.set(name\x2C value);\x0d\n  }\x0d\n\x0d\n  *entries() {\x0d\n    this.#parse();\x0d\n    yield* this.#data.entries();\x0d\n  }\x0d\n\x0d\n  *keys() {\x0d\n    this.#parse();\x0d\n    yield* this.#data.keys();\x0d\n  }\x0d\n\x0d\n  *values() {\x0d\n    this.#parse();\x0d\n    yield* this.#data.values();\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    this.#parse();\x0d\n    let ret = '';\x0d\n    for (const { 0: key\x2C 1: value } of this.#data) {\x0d\n      const encoded = encode(value);\x0d\n      // Ensure they are separated\x0d\n      if (ret.length) ret += ';';\x0d\n      ret += `${key}=${encoded}`;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Used to act as a friendly class to stringifying stuff\x0d\n  // not meant to be exposed to users\x2C could inject invalid values\x0d\n  #parse() {\x0d\n    if (this.#processed) return;  // already parsed\x0d\n    const paramsMap = this.#data;\x0d\n    let position = 0;\x0d\n    const str = this.#string;\x0d\n    const endOfSource = SafeStringPrototypeSearch(\x0d\n      StringPrototypeSlice(str\x2C position)\x2C\x0d\n      START_ENDING_WHITESPACE\x2C\x0d\n    ) + position;\x0d\n    while (position < endOfSource) {\x0d\n      // Skip any whitespace before parameter\x0d\n      position += SafeStringPrototypeSearch(\x0d\n        StringPrototypeSlice(str\x2C position)\x2C\x0d\n        END_BEGINNING_WHITESPACE\x2C\x0d\n      );\x0d\n      // Read until ';' or '='\x0d\n      const afterParameterName = SafeStringPrototypeSearch(\x0d\n        StringPrototypeSlice(str\x2C position)\x2C\x0d\n        EQUALS_SEMICOLON_OR_END\x2C\x0d\n      ) + position;\x0d\n      const parameterString = toASCIILower(\x0d\n        StringPrototypeSlice(str\x2C position\x2C afterParameterName)\x2C\x0d\n      );\x0d\n      position = afterParameterName;\x0d\n      // If we found a terminating character\x0d\n      if (position < endOfSource) {\x0d\n        // Safe to use because we never do special actions for surrogate pairs\x0d\n        const char = StringPrototypeCharAt(str\x2C position);\x0d\n        // Skip the terminating character\x0d\n        position += 1;\x0d\n        // Ignore parameters without values\x0d\n        if (char === ';') {\x0d\n          continue;\x0d\n        }\x0d\n      }\x0d\n      // If we are at end of the string\x2C it cannot have a value\x0d\n      if (position >= endOfSource) break;\x0d\n      // Safe to use because we never do special actions for surrogate pairs\x0d\n      const char = StringPrototypeCharAt(str\x2C position);\x0d\n      let parameterValue = null;\x0d\n      if (char === '"') {\x0d\n        // Handle quoted-string form of values\x0d\n        // skip '"'\x0d\n        position += 1;\x0d\n        // Find matching closing '"' or end of string\x0d\n        //   use $1 to see if we terminated on unmatched '\\'\x0d\n        //   use $2 to see if we terminated on a matching '"'\x0d\n        //   so we can skip the last char in either case\x0d\n        const insideMatch = RegExpPrototypeExec(\x0d\n          QUOTED_VALUE_PATTERN\x2C\x0d\n          StringPrototypeSlice(str\x2C position));\x0d\n        position += insideMatch[0].length;\x0d\n        // Skip including last character if an unmatched '\\' or '"' during\x0d\n        // unescape\x0d\n        const inside = insideMatch[1] || insideMatch[2] ?\x0d\n          StringPrototypeSlice(insideMatch[0]\x2C 0\x2C -1) :\x0d\n          insideMatch[0];\x0d\n        // Unescape '\\' quoted characters\x0d\n        parameterValue = removeBackslashes(inside);\x0d\n        // If we did have an unmatched '\\' add it back to the end\x0d\n        if (insideMatch[1]) parameterValue += '\\\\';\x0d\n      } else {\x0d\n        // Handle the normal parameter value form\x0d\n        const valueEnd = StringPrototypeIndexOf(str\x2C SEMICOLON\x2C position);\x0d\n        const rawValue = valueEnd === -1 ?\x0d\n          StringPrototypeSlice(str\x2C position) :\x0d\n          StringPrototypeSlice(str\x2C position\x2C valueEnd);\x0d\n        position += rawValue.length;\x0d\n        const trimmedValue = StringPrototypeSlice(\x0d\n          rawValue\x2C\x0d\n          0\x2C\x0d\n          SafeStringPrototypeSearch(rawValue\x2C START_ENDING_WHITESPACE)\x2C\x0d\n        );\x0d\n        // Ignore parameters without values\x0d\n        if (trimmedValue === '') continue;\x0d\n        parameterValue = trimmedValue;\x0d\n      }\x0d\n      if (\x0d\n        parameterString !== '' &&\x0d\n        SafeStringPrototypeSearch(parameterString\x2C\x0d\n                                  NOT_HTTP_TOKEN_CODE_POINT) === -1 &&\x0d\n        SafeStringPrototypeSearch(parameterValue\x2C\x0d\n                                  NOT_HTTP_QUOTED_STRING_CODE_POINT) === -1 &&\x0d\n        paramsMap.has(parameterString) === false\x0d\n      ) {\x0d\n        paramsMap.set(parameterString\x2C parameterValue);\x0d\n      }\x0d\n      position++;\x0d\n    }\x0d\n    this.#data = paramsMap;\x0d\n    this.#processed = true;\x0d\n  }\x0d\n}\x0d\nconst MIMEParamsStringify = MIMEParams.prototype.toString;\x0d\nObjectDefineProperty(MIMEParams.prototype\x2C SymbolIterator\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  value: MIMEParams.prototype.entries\x2C\x0d\n  writable: true\x2C\x0d\n});\x0d\nObjectDefineProperty(MIMEParams.prototype\x2C 'toJSON'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  value: MIMEParamsStringify\x2C\x0d\n  writable: true\x2C\x0d\n});\x0d\n\x0d\nconst { instantiateMimeParams } = MIMEParams;\x0d\ndelete MIMEParams.instantiateMimeParams;\x0d\n\x0d\nclass MIMEType {\x0d\n  #type;\x0d\n  #subtype;\x0d\n  #parameters;\x0d\n  constructor(string) {\x0d\n    string = `${string}`;\x0d\n    const data = parseTypeAndSubtype(string);\x0d\n    this.#type = data[0];\x0d\n    this.#subtype = data[1];\x0d\n    this.#parameters = instantiateMimeParams(StringPrototypeSlice(string\x2C data[2]));\x0d\n  }\x0d\n\x0d\n  get type() {\x0d\n    return this.#type;\x0d\n  }\x0d\n\x0d\n  set type(v) {\x0d\n    v = `${v}`;\x0d\n    const invalidTypeIndex = SafeStringPrototypeSearch(v\x2C NOT_HTTP_TOKEN_CODE_POINT);\x0d\n    if (v.length === 0 || invalidTypeIndex !== -1) {\x0d\n      throw new ERR_INVALID_MIME_SYNTAX('type'\x2C v\x2C invalidTypeIndex);\x0d\n    }\x0d\n    this.#type = toASCIILower(v);\x0d\n  }\x0d\n\x0d\n  get subtype() {\x0d\n    return this.#subtype;\x0d\n  }\x0d\n\x0d\n  set subtype(v) {\x0d\n    v = `${v}`;\x0d\n    const invalidSubtypeIndex = SafeStringPrototypeSearch(v\x2C NOT_HTTP_TOKEN_CODE_POINT);\x0d\n    if (v.length === 0 || invalidSubtypeIndex !== -1) {\x0d\n      throw new ERR_INVALID_MIME_SYNTAX('subtype'\x2C v\x2C invalidSubtypeIndex);\x0d\n    }\x0d\n    this.#subtype = toASCIILower(v);\x0d\n  }\x0d\n\x0d\n  get essence() {\x0d\n    return `${this.#type}/${this.#subtype}`;\x0d\n  }\x0d\n\x0d\n  get params() {\x0d\n    return this.#parameters;\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    let ret = `${this.#type}/${this.#subtype}`;\x0d\n    const paramStr = FunctionPrototypeCall(MIMEParamsStringify\x2C this.#parameters);\x0d\n    if (paramStr.length) ret += `;${paramStr}`;\x0d\n    return ret;\x0d\n  }\x0d\n}\x0d\nObjectDefineProperty(MIMEType.prototype\x2C 'toJSON'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  value: MIMEType.prototype.toString\x2C\x0d\n  writable: true\x2C\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  MIMEParams\x2C\x0d\n  MIMEType\x2C\x0d\n};\x0d\n
code-source-info,0x2ce89f14364,148,0,11555,C0O0C4O11555,,
code-creation,JS,10,210502,0x2ce89f154ec,609, node:internal/mime:1:1,0x2ce89f142d8,~
code-source-info,0x2ce89f154ec,148,0,11555,C0O0C89O28C95O54C100O79C106O103C112O115C118O145C124O171C130O198C136O223C142O254C147O330C150O330C155O356C160O300C166O401C171O401C173O477C178O477C180O544C185O544C187O593C192O593C194O874C196O874C198O898C200O898C202O2597C207O2597C209O2637C214O2637C216O3360C220O3360C367O9540C372O9550C376O9529C378O9593C383O9604C388O9686C393O9696C404O9561C409O9762C424O9838C428O9730C433O9894C439O9933C553O11371C566O11456C571O11466C579O11341C584O11503C591O11525C597O11540C603O11518C608O11554,,
code-creation,JS,10,210555,0x2ce89f15864,29,MIMEType node:internal/mime:326:16,0x2ce89f14cc8,~
code-source-info,0x2ce89f15864,148,9992,11339,C4O9997C13O10007C22O10020C28O11339,,
code-creation,JS,10,210570,0x2ce89f1590c,40,MIMEParams node:internal/mime:124:18,0x2ce89f14918,~
code-source-info,0x2ce89f1590c,148,3627,9499,C3O3640C10O3640C23O3806C32O3825C39O9499,,
code-creation,Eval,10,211761,0x2ce89f16e0c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js:1:1,0x2ce89f16c88,~
script-source,149,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js,\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names\x2C and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special "%n" handling functions\x2C for the debug "format" argument.\n *\n * Valid key names are a single\x2C lower or upper-case letter\x2C i.e. "n" and "N".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0\x2C i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g\x2C function(match\x2C format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self\x2C val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index\x2C 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors\x2C etc.)\n    exports.formatArgs.call(self\x2C args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self\x2C args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s\x2C]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g\x2C '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled\x2C false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i\x2C len;\n  for (i = 0\x2C len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0\x2C len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n
code-source-info,0x2ce89f16e0c,149,0,4394,C0O0C4O4394,,
code-creation,JS,10,211970,0x2ce89f1717c,140, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js:1:1,0x2ce89f16d80,~
code-source-info,0x2ce89f1717c,149,0,4394,C0O0C40O146C42O216C48O191C54O171C60O154C62O231C67O246C71O256C76O272C80O283C85O298C89O308C94O324C98O335C104O354C108O352C112O440C117O454C121O460C126O474C130O648C134O667C139O4393,,
tick,0x7ff64c28c60f,212788,0,0x0,0,0x7ff62c4cd966,0x7ff62c4c834e,0x7ff62c4c884b,0x3c57026efc9,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x2ce89f171e4,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x2ce89f0a032,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x2ce89f0888b,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x2ce89f06bef,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x2ce89f03780,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,Eval,10,212967,0x2ce89f18da4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ms\\index.js:1:1,0x2ce89f18bc0,~
script-source,150,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ms\\index.js,/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val\x2C options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms\x2C d\x2C 'day') ||\n    plural(ms\x2C h\x2C 'hour') ||\n    plural(ms\x2C m\x2C 'minute') ||\n    plural(ms\x2C s\x2C 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms\x2C n\x2C name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n
code-source-info,0x2ce89f18da4,150,0,2764,C0O0C4O2764,,
code-creation,JS,10,213096,0x2ce89f1905c,76, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ms\\index.js:1:1,0x2ce89f18d18,~
code-source-info,0x2ce89f1905c,150,0,2764,C0O0C29O29C33O29C35O43C37O45C40O43C42O59C44O61C47O59C49O75C51O77C54O75C56O91C61O93C64O91C66O390C70O405C75O2763,,
code-creation,JS,10,213285,0x2ce89f195bc,17, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js:34:64,0x2ce89f09b00,~
code-source-info,0x2ce89f195bc,143,670,710,C0O680C6O698C11O698C16O708,,
code-creation,RegExp,3,213374,0x7ff62c4d1780,864,^debug_
code-creation,JS,10,213471,0x2ce89f19854,104,getStderr node:internal/bootstrap/switches/is_main_thread:170:19,0x22671ca8820,~
script-source,52,node:internal/bootstrap/switches/is_main_thread,'use strict';\x0d\n\x0d\nconst { ObjectDefineProperty } = primordials;\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n// TODO(joyeecheung): deprecate and remove these underscore methods\x0d\nprocess._debugProcess = rawMethods._debugProcess;\x0d\nprocess._debugEnd = rawMethods._debugEnd;\x0d\n\x0d\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\x0d\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\x0d\n// Five word summary: they were broken beyond repair.\x0d\nprocess._startProfilerIdleNotifier = () => {};\x0d\nprocess._stopProfilerIdleNotifier = () => {};\x0d\n\x0d\nfunction defineStream(name\x2C getter) {\x0d\n  ObjectDefineProperty(process\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: getter\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineStream('stdout'\x2C getStdout);\x0d\ndefineStream('stdin'\x2C getStdin);\x0d\ndefineStream('stderr'\x2C getStderr);\x0d\n\x0d\n// Worker threads don't receive signals.\x0d\nconst {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x2C\x0d\n} = require('internal/process/signal');\x0d\nprocess.on('newListener'\x2C startListeningIfSignal);\x0d\nprocess.on('removeListener'\x2C stopListeningIfSignal);\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst { guessHandleType } = require('internal/util');\x0d\n\x0d\nfunction createWritableStdioStream(fd) {\x0d\n  let stream;\x0d\n  // Note stream._type is used for test-module-load-list.js\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY': {\x0d\n      const tty = require('tty');\x0d\n      stream = new tty.WriteStream(fd);\x0d\n      stream._type = 'tty';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'FILE': {\x0d\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\x0d\n      stream = new SyncWriteStream(fd\x2C { autoClose: false });\x0d\n      stream._type = 'fs';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP': {\x0d\n      const net = require('net');\x0d\n\x0d\n      // If fd is already being used for the IPC channel\x2C libuv will return\x0d\n      // an error when trying to use it again. In that case\x2C create the socket\x0d\n      // using the existing handle instead of the fd.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        const { kChannelHandle } = require('internal/child_process');\x0d\n        stream = new net.Socket({\x0d\n          handle: process[kChannelHandle]\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x2C\x0d\n        });\x0d\n      } else {\x0d\n        stream = new net.Socket({\x0d\n          fd\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x2C\x0d\n        });\x0d\n      }\x0d\n\x0d\n      stream._type = 'pipe';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    default: {\x0d\n      // Provide a dummy black-hole output for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Writable } = require('stream');\x0d\n      stream = new Writable({\x0d\n        write(buf\x2C enc\x2C cb) {\x0d\n          cb();\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stream.fd = fd;\x0d\n\x0d\n  stream._isStdio = true;\x0d\n\x0d\n  return stream;\x0d\n}\x0d\n\x0d\nfunction dummyDestroy(err\x2C cb) {\x0d\n  cb(err);\x0d\n  this._undestroy();\x0d\n\x0d\n  // We need to emit 'close' anyway so that the closing\x0d\n  // of the stream is observable. We just make sure we\x0d\n  // are not going to do it twice.\x0d\n  // The 'close' event is needed so that finished and\x0d\n  // pipeline work correctly.\x0d\n  if (!this._writableState.emitClose) {\x0d\n    process.nextTick(() => {\x0d\n      this.emit('close');\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nlet stdin;\x0d\nlet stdout;\x0d\nlet stderr;\x0d\n\x0d\nlet stdoutDestroy;\x0d\nlet stderrDestroy;\x0d\n\x0d\nfunction refreshStdoutOnSigWinch() {\x0d\n  stdout._refreshSize();\x0d\n}\x0d\n\x0d\nfunction refreshStderrOnSigWinch() {\x0d\n  stderr._refreshSize();\x0d\n}\x0d\n\x0d\nfunction addCleanup(fn) {\x0d\n  if (isBuildingSnapshot()) {\x0d\n    addSerializeCallback(fn);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getStdout() {\x0d\n  if (stdout) return stdout;\x0d\n  stdout = createWritableStdioStream(1);\x0d\n  stdout.destroySoon = stdout.destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stdoutDestroy = stdout._destroy;\x0d\n  stdout._destroy = dummyDestroy;\x0d\n  if (stdout.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C refreshStdoutOnSigWinch);\x0d\n  }\x0d\n\x0d\n  addCleanup(function cleanupStdout() {\x0d\n    stdout._destroy = stdoutDestroy;\x0d\n    stdout.destroy();\x0d\n    process.removeListener('SIGWINCH'\x2C refreshStdoutOnSigWinch);\x0d\n    stdout = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stdout = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stdout;\x0d\n}\x0d\n\x0d\nfunction getStderr() {\x0d\n  if (stderr) return stderr;\x0d\n  stderr = createWritableStdioStream(2);\x0d\n  stderr.destroySoon = stderr.destroy;\x0d\n  stderrDestroy = stderr._destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stderr._destroy = dummyDestroy;\x0d\n  if (stderr.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C refreshStderrOnSigWinch);\x0d\n  }\x0d\n  addCleanup(function cleanupStderr() {\x0d\n    stderr._destroy = stderrDestroy;\x0d\n    stderr.destroy();\x0d\n    process.removeListener('SIGWINCH'\x2C refreshStderrOnSigWinch);\x0d\n    stderr = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stderr = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stderr;\x0d\n}\x0d\n\x0d\nfunction getStdin() {\x0d\n  if (stdin) return stdin;\x0d\n  const fd = 0;\x0d\n\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY': {\x0d\n      const tty = require('tty');\x0d\n      stdin = new tty.ReadStream(fd);\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'FILE': {\x0d\n      const fs = require('fs');\x0d\n      stdin = new fs.ReadStream(null\x2C { fd: fd\x2C autoClose: false });\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP': {\x0d\n      const net = require('net');\x0d\n\x0d\n      // It could be that process has been started with an IPC channel\x0d\n      // sitting on fd=0\x2C in such case the pipe for this fd is already\x0d\n      // present and creating a new one will lead to the assertion failure\x0d\n      // in libuv.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        stdin = new net.Socket({\x0d\n          handle: process.channel\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x2C\x0d\n        });\x0d\n      } else {\x0d\n        stdin = new net.Socket({\x0d\n          fd: fd\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x2C\x0d\n        });\x0d\n      }\x0d\n      // Make sure the stdin can't be `.end()`-ed\x0d\n      stdin._writableState.ended = true;\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    default: {\x0d\n      // Provide a dummy contentless input for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Readable } = require('stream');\x0d\n      stdin = new Readable({ read() {} });\x0d\n      stdin.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stdin.fd = fd;\x0d\n\x0d\n  // `stdin` starts out life in a paused state\x2C but node doesn't\x0d\n  // know yet. Explicitly to readStop() it to put it in the\x0d\n  // not-reading state.\x0d\n  if (stdin._handle && stdin._handle.readStop) {\x0d\n    stdin._handle.reading = false;\x0d\n    stdin._readableState.reading = false;\x0d\n    stdin._handle.readStop();\x0d\n  }\x0d\n\x0d\n  // If the user calls stdin.pause()\x2C then we need to stop reading\x0d\n  // once the stream implementation does so (one nextTick later)\x2C\x0d\n  // so that the process can close down.\x0d\n  stdin.on('pause'\x2C () => {\x0d\n    process.nextTick(onpause);\x0d\n  });\x0d\n\x0d\n  function onpause() {\x0d\n    if (!stdin._handle)\x0d\n      return;\x0d\n    if (stdin._handle.reading && !stdin.readableFlowing) {\x0d\n      stdin._readableState.reading = false;\x0d\n      stdin._handle.reading = false;\x0d\n      stdin._handle.readStop();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  addCleanup(function cleanupStdin() {\x0d\n    stdin.destroy();\x0d\n    stdin = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stdin = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stdin;\x0d\n}\x0d\n\x0d\n// Used by internal tests.\x0d\nrawMethods.resetStdioForTesting = function() {\x0d\n  stdin = undefined;\x0d\n  stdout = undefined;\x0d\n  stderr = undefined;\x0d\n};\x0d\n\x0d\n// Needed by the module loader and generally needed everywhere.\x0d\nrequire('fs');\x0d\nrequire('util');\x0d\nrequire('url'); // eslint-disable-line no-restricted-modules\x0d\n\x0d\nrequire('internal/modules/cjs/loader');\x0d\nrequire('internal/modules/esm/utils');\x0d\nrequire('internal/vm/module');\x0d\n// Needed to refresh the time origin.\x0d\nrequire('internal/perf/utils');\x0d\n// Needed to register the async hooks.\x0d\nif (internalBinding('config').hasInspector) {\x0d\n  require('internal/inspector_async_hook');\x0d\n}\x0d\n// Needed to set the wasm web API callbacks.\x0d\ninternalBinding('wasm_web_api');\x0d\n// Needed to detect whether it's on main thread.\x0d\ninternalBinding('worker');\x0d\n// Needed by most execution modes.\x0d\nrequire('internal/modules/run_main');\x0d\n// Needed to refresh DNS configurations.\x0d\nrequire('internal/dns/utils');\x0d\n// Needed by almost all execution modes. It's fine to\x0d\n// load them into the snapshot as long as we don't run\x0d\n// any of the initialization.\x0d\nrequire('internal/process/pre_execution');\x0d\n
code-source-info,0x2ce89f19854,52,4613,5305,C0O4621C6O4633C8O4647C9O4651C15O4660C19O4658C21O4693C27O4721C31O4712C35O4733C38O4756C45O4747C51O4834C56O4850C60O4869C63O4880C69O4894C72O4902C83O4902C89O4951C97O4951C101O5288C103O5302,,
code-creation,JS,10,213926,0x2ce89f1a68c,280,createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:47:35,0x22671ca85b8,~
code-source-info,0x2ce89f1a68c,52,1504,3134,C0O1518C2O1590C7O1598C42O1659C48O1659C53O1699C60O1691C66O1723C68O1736C72O1752C74O1819C80O1819C85O1897C95O1877C101O1931C103O1944C107O1959C109O2031C115O2031C120O2268C123O2280C132O2299C137O2307C144O2310C149O2356C155O2356C160O2337C165O2417C180O2452C189O2409C197O2580C209O2600C215O2572C221O2690C223O2703C227O2720C229O2877C235O2877C240O2864C245O2903C250O2936C260O2912C266O3067C268O3077C272O3088C273O3104C277O3117C279O3131,,
code-creation,JS,10,214199,0x2ce89f1aa1c,192,WriteStream node:tty:84:21,0x2ce89f0afe0,~
code-source-info,0x2ce89f1aa1c,144,2588,3571,C0O2598C2O2609C7O2639C12O2646C17O2666C18O2670C20O2677C26O2682C32O2695C37O2705C44O2711C49O2705C50O2752C52O2771C65O2771C71O2800C77O2827C84O2833C89O2827C90O2873C95O2877C100O2884C112O2941C116O2884C122O3374C127O3382C134O3382C139O3422C149O3422C155O3456C160O3464C165O3464C171O3491C173O3508C174O3530C177O3521C181O3540C183O3559C186O3550C191O3570,,
code-creation,JS,10,215007,0x2ce89f1bfb4,21,addCleanup node:internal/bootstrap/switches/is_main_thread:142:20,0x22671ca8748,~
code-source-info,0x2ce89f1bfb4,52,3799,3875,C0O3809C5O3813C10O3842C15O3842C20O3874,,
code-creation,JS,10,215065,0x2ce89f1c1dc,14,load C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js:156:14,0x2ce89f099f8,~
code-source-info,0x2ce89f1c1dc,143,3628,3662,C0O3635C4O3650C9O3654C13O3660,,
code-creation,JS,10,215158,0x2ce89f1c354,238,enable C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js:138:16,0x2ce89f16f40,~
code-source-info,0x2ce89f1c354,149,3132,3657,C0O3149C3O3157C8O3157C13O3178C18O3192C22O3200C27O3214C31O3235C44O3286C55O3286C61O3321C66O3345C68O3350C70O3350C75O3368C77O3378C82O3383C84O3421C86O3439C90O3443C104O3443C112O3470C113O3484C119O3488C124O3505C127O3513C132O3519C137O3528C144O3552C152O3552C157O3539C163O3562C169O3524C175O3519C182O3590C185O3598C190O3604C195O3613C204O3624C210O3637C216O3609C222O3604C227O3358C232O3332C237O3656,,
code-creation,JS,10,215222,0x2ce89f1c5a4,37,save C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js:139:14,0x2ce89f099a0,~
code-source-info,0x2ce89f1c5a4,143,3235,3498,C0O3252C5O3420C9O3435C20O3461C24O3469C31O3479C36O3497,,
code-creation,JS,11,215376,0x7ff62c512500,3508,Module._compile node:internal/modules/cjs/loader:1330:37,0x22671cb7660,^
code-source-info,0x7ff62c512500,63,44273,46143,,,
code-creation,JS,11,215409,0x7ff62c507fc0,228,normalizeEncoding node:internal/util:213:27,0xfca8d3fbc0,^
code-source-info,0x7ff62c507fc0,16,5905,6013,,,
code-creation,JS,11,215433,0x7ff62c508100,872,Module.require node:internal/modules/cjs/loader:1227:36,0x22671cb7548,^
code-source-info,0x7ff62c508100,63,40383,40686,,,
code-creation,JS,11,215450,0x7ff62c5084c0,96,require node:internal/modules/helpers:174:31,0x3c570277140,^
code-source-info,0x7ff62c5084c0,64,5513,5640,,,
code-creation,JS,11,215466,0x7ff62c508540,128, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js:34:64,0x2ce89f09b00,^
code-source-info,0x7ff62c508540,143,670,710,,,
code-creation,JS,11,215487,0x7ff62c508600,108,get node:net:2300:6,0x3ba13652d00,^
code-source-info,0x7ff62c508600,88,65984,66012,,,
code-creation,JS,11,215561,0x7ff62c5086c0,1620,Module.load node:internal/modules/cjs/loader:1194:33,0x22671cb74d0,^
code-source-info,0x7ff62c5086c0,63,39214,40080,,,
code-creation,JS,11,215608,0x7ff62c513300,3440,Module._extensions..js node:internal/modules/cjs/loader:1389:37,0x22671cb76f8,^
code-source-info,0x7ff62c513300,63,46336,48304,,,
code-creation,JS,10,215689,0x2ce89f1cee4,113,createDebug C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js:63:21,0x2ce89f16e98,~
code-source-info,0x2ce89f1cee4,149,1220,2957,C0O1220C11O2650C16O2666C20O2681C28O2705C33O2705C38O2695C42O2727C50O2753C55O2753C59O2743C63O2768C71O2782C75O2780C79O2868C84O2902C92O2914C97O2922C105O2922C110O2942C112O2955,,
code-creation,JS,10,215761,0x2ce89f1d15c,120,enabled C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js:176:17,0x2ce89f16ff0,~
code-source-info,0x2ce89f1d15c,149,3913,4206,C0O3943C2O3954C5O3964C10O3970C15O3980C17O3980C22O3998C25O4010C32O4015C36O4019C41O4019C48O4039C49O4052C50O3988C55O3938C59O4070C61O4081C64O4091C69O4097C74O4107C76O4107C81O4125C84O4137C91O4142C95O4146C100O4146C107O4166C108O4178C109O4115C114O4065C118O4191C119O4204,,
code-creation,JS,10,215820,0x2ce89f1d35c,55,useColors C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js:75:19,0x2ce89f09898,~
code-source-info,0x2ce89f1d35c,143,1865,1976,C0O1872C6O1899C10O1888C22O1933C27O1945C32O1917C41O1963C49O1963C54O1974,,
code-creation,JS,10,215861,0x2ce89f1d484,38,isatty node:tty:42:16,0x2ce89f0af30,~
code-source-info,0x2ce89f1d484,144,1591,1685,C0O1601C5O1608C12O1634C23O1645C30O1672C33O1672C37O1682,,
code-creation,JS,10,216024,0x2ce89f1d5f4,107,selectColor C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js:44:21,0x2ce89f16e40,~
code-source-info,0x2ce89f1d5f4,149,838,1071,C0O865C2O884C15O879C28O901C30O916C36O922C40O942C45O942C50O930C54O961C58O966C61O874C65O1007C68O1022C73O1029C77O1034C82O1034C91O1054C96O1061C100O1044C103O1028C106O1069,,
code-creation,JS,10,216139,0x2ce89f1d7f4,81,init C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js:235:15,0x2ce89f09aa8,~
code-source-info,0x2ce89f1d7f4,143,5724,5918,C0O5736C1O5754C5O5774C9O5781C17O5794C22O5781C28O5823C30O5835C34O5828C39O5860C46O5876C53O5891C60O5907C63O5902C66O5881C70O5844C75O5810C80O5917,,
code-creation,Eval,10,217151,0x2ce89f1eb34,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\encodeurl\\index.js:1:1,0x2ce89f1e9b0,~
script-source,151,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\encodeurl\\index.js,/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points\x2C *after* encoding (i.e. not including "%")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form\x2C excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the "%" character unless it is\n * not part of a valid sequence (`%20` will be left as-is\x2C but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be "safe" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL\x2C including replacing any raw\x2C\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP\x2C UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP\x2C encodeURI)\n}\n
code-source-info,0x2ce89f1eb34,151,0,1586,C0O0C4O1586,,
code-creation,JS,10,217246,0x2ce89f1ec34,36, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\encodeurl\\index.js:1:1,0x2ce89f1eaa8,~
code-source-info,0x2ce89f1ec34,151,0,1586,C0O0C10O139C12O154C16O339C21O339C23O551C28O551C30O739C32O739C35O1585,,
code-creation,Eval,10,218169,0x2ce89f1fadc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\escape-html\\index.js:1:1,0x2ce89f1f978,~
script-source,152,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\escape-html\\index.js,/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng "Timothy" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /["'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // "\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex\x2C index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex\x2C index)\n    : html;\n}\n
code-source-info,0x2ce89f1fadc,152,0,1362,C0O0C4O1362,,
code-creation,JS,10,218271,0x2ce89f1fbcc,25, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\escape-html\\index.js:1:1,0x2ce89f1fa50,~
code-source-info,0x2ce89f1fbcc,152,0,1362,C0O0C10O239C15O239C17O290C19O305C24O1361,,
code-creation,Eval,10,219262,0x2ce89f212b4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\on-finished\\index.js:1:1,0x2ce89f210c0,~
script-source,153,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\on-finished\\index.js,/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn\x2C arguments)) }\n\n/**\n * Invoke callback when the response has finished\x2C useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished (msg\x2C listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener\x2C null\x2C msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg\x2C wrap(listener))\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished (msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener (msg\x2C callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish (error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg\x2C 'end'\x2C 'finish']]\x2C onFinish)\n\n  function onSocket (socket) {\n    // remove listener\n    msg.removeListener('socket'\x2C onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket\x2C 'error'\x2C 'close']]\x2C onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket'\x2C onSocket)\n\n  if (msg.socket === undefined) {\n    // istanbul ignore next: node.js 0.8 patch\n    patchAssignSocket(msg\x2C onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener (msg\x2C listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg\x2C attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener (msg) {\n  function listener (err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err\x2C msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\n// istanbul ignore next: node.js 0.8 patch\nfunction patchAssignSocket (res\x2C callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket'\x2C callback) is broken in 0.8\n  res.assignSocket = function _assignSocket (socket) {\n    assignSocket.call(this\x2C socket)\n    callback(socket)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource\x2C if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res\x2C fn\x2C null)\n}\n
code-source-info,0x2ce89f212b4,153,0,4430,C0O0C4O4430,,
code-creation,JS,10,219458,0x2ce89f21734,109, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\on-finished\\index.js:1:1,0x2ce89f21228,~
code-source-info,0x2ce89f21734,153,0,4430,C0O0C55O175C57O190C61O210C68O229C72O305C75O305C77O340C83O340C87O340C89O435C96O474C105O435C108O4429,,
code-creation,JS,10,219530,0x2ce89f21a8c,27,tryRequireAsyncHooks C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\on-finished\\index.js:205:31,0x2ce89f21578,~
code-source-info,0x2ce89f21a8c,153,3891,3973,C3O3908C9O3915C13O3937C25O3958C26O3967,,
code-creation,Eval,10,220216,0x2ce89f22c4c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ee-first\\index.js:1:1,0x2ce89f22ae8,~
script-source,154,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ee-first\\index.js,/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff\x2C done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee\x2C events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee\x2C events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event\x2C callback)\n\n      // listen to the event\n      ee.on(event\x2C fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee\x2C\n        event: event\x2C\n        fn: fn\x2C\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null\x2C arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event\x2C x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event\x2C done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err\x2C ee\x2C event\x2C args)\n  }\n}\n
code-source-info,0x2ce89f22c4c,154,0,1684,C0O0C4O1684,,
code-creation,JS,10,220298,0x2ce89f22df4,24, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ee-first\\index.js:1:1,0x2ce89f22bc0,~
code-source-info,0x2ce89f22df4,154,0,1684,C0O0C16O124C18O139C23O1683,,
code-creation,JS,11,220856,0x7ff62c5140c0,4540,stringToFlags node:internal/fs/utils:560:23,0x22671cb3a78,^
code-source-info,0x7ff62c5140c0,60,15629,16903,,,
code-creation,JS,11,220895,0x7ff62c508d40,1520,resolveExports node:internal/modules/cjs/loader:581:24,0x22671cb6f90,^
code-source-info,0x7ff62c508d40,63,17548,18363,,,
code-creation,Eval,10,221061,0x2ce89f24334,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\parseurl\\index.js:1:1,0x2ce89f24190,~
script-source,155,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\parseurl\\index.js,/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url\x2C parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url\x2C parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0\x2C i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n\n  if (search !== null) {\n    url.query = query\n    url.search = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url\x2C parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n
code-source-info,0x2ce89f24334,155,0,2809,C0O0C4O2809,,
code-creation,JS,10,221170,0x2ce89f2455c,67, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\parseurl\\index.js:1:1,0x2ce89f242a8,~
code-source-info,0x2ce89f2455c,155,0,2809,C0O0C28O193C31O193C36O224C40O220C42O244C46O240C48O288C50O303C54O321C61O338C66O2808,,
code-creation,Eval,10,221836,0x2ce89f26644,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\statuses\\index.js:1:1,0x2ce89f264c0,~
script-source,156,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\statuses\\index.js,/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.message = codes\n\n// status message (lower-case) to code map\nstatus.code = createMessageToStatusCodeMap(codes)\n\n// array of status codes\nstatus.codes = createStatusCodeList(codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true\x2C\n  301: true\x2C\n  302: true\x2C\n  303: true\x2C\n  305: true\x2C\n  307: true\x2C\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true\x2C\n  205: true\x2C\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true\x2C\n  503: true\x2C\n  504: true\n}\n\n/**\n * Create a map of message to status code.\n * @private\n */\n\nfunction createMessageToStatusCodeMap (codes) {\n  var map = {}\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // populate map\n    map[message.toLowerCase()] = status\n  })\n\n  return map\n}\n\n/**\n * Create a list of all status codes.\n * @private\n */\n\nfunction createStatusCodeList (codes) {\n  return Object.keys(codes).map(function mapCode (code) {\n    return Number(code)\n  })\n}\n\n/**\n * Get the status code for given message.\n * @private\n */\n\nfunction getStatusCode (message) {\n  var msg = message.toLowerCase()\n\n  if (!Object.prototype.hasOwnProperty.call(status.code\x2C msg)) {\n    throw new Error('invalid status message: "' + message + '"')\n  }\n\n  return status.code[msg]\n}\n\n/**\n * Get the status message for given code.\n * @private\n */\n\nfunction getStatusMessage (code) {\n  if (!Object.prototype.hasOwnProperty.call(status.message\x2C code)) {\n    throw new Error('invalid status code: ' + code)\n  }\n\n  return status.message[code]\n}\n\n/**\n * Get the status code.\n *\n * Given a number\x2C this will throw if it is not a known status\n * code\x2C otherwise the code will be returned. Given a string\x2C\n * the string will be parsed for a number and return the code\n * if valid\x2C otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    return getStatusMessage(code)\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code\x2C 10)\n  if (!isNaN(n)) {\n    return getStatusMessage(n)\n  }\n\n  return getStatusCode(code)\n}\n
code-source-info,0x2ce89f26644,156,0,2610,C0O0C4O2610,,
code-creation,JS,10,221989,0x2ce89f26a7c,113, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\statuses\\index.js:1:1,0x2ce89f265b8,~
code-source-info,0x2ce89f26a7c,156,0,2610,C0O0C33O190C36O190C41O254C43O269C47O309C52O324C56O376C59O390C63O388C67O452C70O467C74O465C78O526C85O542C89O672C96O685C100O784C107O797C112O2609,,
code-creation,JS,10,222267,0x2ce89f26fa4,142,Module._extensions..json node:internal/modules/cjs/loader:1443:39,0x22671cb77c8,~
code-source-info,0x2ce89f26fa4,63,48501,48914,C0O48541C5O48544C13O48544C20O48598C25O48598C31O48606C39O48621C41O48660C46O48660C51O48699C56O48699C65O48757C75O48791C80O48801C83O48801C88O48791C96O48757C114O48846C119O48869C126O48882C130O48876C133O48858C137O48896C139O48896C141O48913,,
code-creation,JS,10,222389,0x2ce89f27154,39,stripBOM node:internal/modules/helpers:219:18,0x22671cb83b8,~
code-source-info,0x2ce89f27154,64,6741,6884,C0O6756C5O6760C16O6795C21O6814C29O6824C36O6866C38O6881,,
code-creation,JS,10,222456,0x2ce89f274f4,48,createMessageToStatusCodeMap C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\statuses\\index.js:63:39,0x2ce89f26678,~
code-source-info,0x2ce89f274f4,156,944,1170,C0O944C9O966C10O966C12O972C16O979C24O979C30O990C40O991C45O1158C47O1168,,
code-creation,JS,10,222540,0x2ce89f27c24,39,forEachCode C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\statuses\\index.js:66:51,0x2ce89f27430,~
code-source-info,0x2ce89f27c24,156,1020,1153,C0O1047C5O1052C9O1076C13O1076C18O1114C21O1126C26O1126C33O1141C38O1152,,
new,MemoryChunk,0x1a441040000,262144
new,MemoryChunk,0x395cad40000,262144
new,MemoryChunk,0x1ffa7480000,262144
code-creation,JS,10,223326,0x2ce89f28ca4,31,createStatusCodeList C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\statuses\\index.js:82:31,0x2ce89f266f8,~
code-source-info,0x2ce89f28ca4,156,1261,1359,C0O1273C4O1287C9O1287C15O1298C25O1299C30O1357,,
code-creation,JS,10,223369,0x2ce89f28dcc,9,mapCode C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\statuses\\index.js:83:50,0x2ce89f28be8,~
code-source-info,0x2ce89f28dcc,156,1320,1356,C0O1333C4O1340C8O1352,,
code-creation,Eval,10,223960,0x2ce89f2a02c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\unpipe\\index.js:1:1,0x2ce89f29ec8,~
script-source,157,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\unpipe\\index.js,/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n
code-source-info,0x2ce89f2a02c,157,0,1118,C0O0C4O1118,,
code-creation,JS,10,224023,0x2ce89f2a174,24, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\unpipe\\index.js:1:1,0x2ce89f29fa0,~
code-source-info,0x2ce89f2a174,157,0,1118,C0O0C16O136C18O151C23O1117,,
code-creation,Eval,10,224780,0x2ce89f2c274,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:1:1,0x2ce89f2bfd0,~
script-source,158,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req\x2C res\x2C next) {\n    router.handle(req\x2C res\x2C next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router\x2C proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code\x2C\n *\n * The callback uses the same signature as middleware\x2C the only difference\n * being that the value of the placeholder is passed\x2C in this case the _id_\n * of the user. Once the `next()` function is invoked\x2C just like middleware\n * it will continue on to execute the route\x2C or subsequent parameter functions.\n *\n * Just like in middleware\x2C you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id'\x2C function(req\x2C res\x2C next\x2C id){\n *    User.find(id\x2C function(err\x2C user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name\x2C fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + '\x2C fn): Use router.param(' + JSON.stringify(name.slice(1)) + '\x2C fn) instead')\n    name = name.slice(1)\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name\x2C fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + '\x2C got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req\x2C res into the router.\n * @private\n */\n\nproto.handle = function handle(req\x2C res\x2C out) {\n  var self = this;\n\n  debug('dispatching %s %s'\x2C req.method\x2C req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var sync = 0\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out\x2C req\x2C 'baseUrl'\x2C 'next'\x2C 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests\x2C respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done\x2C function(old\x2C err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res\x2C options\x2C old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.slice(1)\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.slice(protohost.length)\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done\x2C null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done\x2C layerError);\n      return;\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next\x2C err)\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer\x2C path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options\x2C route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params\x2C parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer\x2C paramcalled\x2C req\x2C res\x2C function (err) {\n      if (err) {\n        next(layerError || err)\n      } else if (route) {\n        layer.handle_request(req\x2C res\x2C next)\n      } else {\n        trim_prefix(layer\x2C layerError\x2C layerPath\x2C path)\n      }\n\n      sync = 0\n    });\n  }\n\n  function trim_prefix(layer\x2C layerError\x2C layerPath\x2C path) {\n    if (layerPath.length !== 0) {\n      // Validate path is a prefix match\n      if (layerPath !== path.slice(0\x2C layerPath.length)) {\n        next(layerError)\n        return\n      }\n\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s'\x2C layerPath\x2C req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.slice(protohost.length + removed.length)\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0\x2C removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s'\x2C layer.name\x2C layerPath\x2C req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError\x2C req\x2C res\x2C next);\n    } else {\n      layer.handle_request(req\x2C res\x2C next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer\x2C called\x2C req\x2C res\x2C done) {\n  var params = this.params;\n\n  // captured parameters from the layer\x2C keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null\x2C\n      match: paramVal\x2C\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req\x2C res\x2C paramCallback\x2C paramVal\x2C key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function\x2C with optional path\x2C defaulting to "/".\n *\n * Use (like `.all`) will run for any http METHOD\x2C but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the "prefix"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments\x2C offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s'\x2C path\x2C fn.name || '<anonymous>')\n\n    var layer = new Layer(path\x2C {\n      sensitive: this.caseSensitive\x2C\n      strict: false\x2C\n      end: false\n    }\x2C fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path\x2C {\n    sensitive: this.caseSensitive\x2C\n    strict: this.strict\x2C\n    end: true\n  }\x2C route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route\x2C slice.call(arguments\x2C 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list\x2C addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.slice(0\x2C pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substring(0\x2C url.indexOf('/'\x2C 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp\x2C '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer\x2C path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params\x2C parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}\x2C parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj\x2C params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj\x2C params);\n}\n\n// restore obj props after function\nfunction restore(fn\x2C obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this\x2C arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res\x2C options\x2C next) {\n  try {\n    var body = options.join('\x2C');\n    res.set('Allow'\x2C body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old\x2C fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0\x2C len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this\x2C args);\n  };\n}\n
code-source-info,0x2ce89f2c274,158,0,15124,C0O0C4O15124,,
code-creation,JS,10,225300,0x2ce89f2cb2c,291, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:1:1,0x2ce89f2c1e8,~
code-source-info,0x2ce89f2cb2c,158,0,15124,C0O0C59O238C62O238C66O238C68O270C71O270C75O270C77O304C80O304C85O336C88O336C92O336C94O372C97O372C105O388C109O372C111O424C114O424C122O439C126O424C128O466C131O466C135O466C137O507C140O507C144O507C146O549C149O549C153O549C155O637C160O637C162O671C166O677C171O687C175O671C177O709C181O716C186O726C190O709C192O906C197O921C203O906C205O2456C212O2468C216O3345C223O3358C227O8171C234O8192C238O10421C245O10431C249O11742C256O11754C260O12062C268O12062C274O12075C284O12076C290O15123,,
code-creation,Eval,10,225840,0x2ce89f2dbf4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\route.js:1:1,0x2ce89f2da40,~
script-source,159,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\route.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`\x2C\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o'\x2C path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req\x2C res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req\x2C res\x2C done) {\n  var idx = 0;\n  var stack = this.stack;\n  var sync = 0\n\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    // max sync stack\n    if (++sync > 100) {\n      return setImmediate(next\x2C err)\n    }\n\n    var layer = stack[idx++]\n\n    // end of layers\n    if (!layer) {\n      return done(err)\n    }\n\n    if (layer.method && layer.method !== method) {\n      next(err)\n    } else if (err) {\n      layer.handle_error(err\x2C req\x2C res\x2C next);\n    } else {\n      layer.handle_request(req\x2C res\x2C next);\n    }\n\n    sync = 0\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req\x2C res\x2C next){\n *     next();\n *   };\n *\n *   function validate_user(req\x2C res\x2C next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req\x2C res\x2C next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/'\x2C {}\x2C handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o'\x2C method\x2C this.path)\n\n      var layer = Layer('/'\x2C {}\x2C handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n
code-source-info,0x2ce89f2dbf4,159,0,4281,C0O0C4O4281,,
code-creation,JS,10,226005,0x2ce89f2df84,171, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\route.js:1:1,0x2ce89f2db68,~
code-source-info,0x2ce89f2df84,159,0,4281,C0O0C11O238C14O238C22O254C26O238C28O294C31O294C35O294C37O332C40O332C44O332C46O366C49O366C54O441C58O447C63O457C67O441C69O479C73O486C78O496C82O479C84O546C86O561C90O891C93O897C102O923C106O1223C109O1229C118O1248C122O1618C125O1624C134O1643C138O3141C141O3147C150O3161C154O3661C164O3661C170O4280,,
code-creation,JS,11,226386,0x7ff62c509380,776,selectColor C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js:44:21,0x2ce89f16e40,^
code-source-info,0x7ff62c509380,149,838,1071,,,
code-creation,JS,11,226417,0x7ff62c5096c0,260, node:internal/bootstrap/realm:351:15,0x3ba1367df20,^
code-source-info,0x7ff62c5096c0,9,11679,11777,,,
code-creation,JS,11,226441,0x7ff62c509800,1188,getESMFacade node:internal/bootstrap/realm:340:15,0xfca8d34338,^
code-source-info,0x7ff62c509800,9,11173,11942,,,
code-creation,JS,11,226464,0x7ff62c509d00,936,compileForPublicLoader node:internal/bootstrap/realm:322:25,0xfca8d342e0,^
code-source-info,0x7ff62c509d00,9,10449,11155,,,
code-creation,JS,11,226481,0x7ff62c50a100,436,loadBuiltinModule node:internal/modules/helpers:93:27,0x22671cb8270,^
code-source-info,0x7ff62c50a100,64,2705,3069,,,
code-creation,JS,11,226497,0x7ff62c50a300,216,forEachCode C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\statuses\\index.js:66:51,0x2ce89f27430,^
code-source-info,0x7ff62c50a300,156,1020,1153,,,
code-creation,JS,11,226514,0x7ff62c50a400,84,mapCode C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\statuses\\index.js:83:50,0x2ce89f28be8,^
code-source-info,0x7ff62c50a400,156,1320,1356,,,
code-creation,JS,11,226534,0x7ff62c50a480,456,encodeRealpathResult node:fs:2579:30,0x22671cad7b0,^
code-source-info,0x7ff62c50a480,55,70539,70805,,,
code-creation,Eval,10,227156,0x2ce89f2f9a4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\array-flatten\\array-flatten.js:1:1,0x2ce89f2f830,~
script-source,160,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\array-flatten\\array-flatten.js,'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array\x2C result\x2C depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value\x2C result\x2C depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array\x2C result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value\x2C result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array\x2C with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array\x2C depth) {\n  if (depth == null) {\n    return flattenForever(array\x2C [])\n  }\n\n  return flattenWithDepth(array\x2C []\x2C depth)\n}\n
code-source-info,0x2ce89f2f9a4,160,0,1195,C0O0C4O1195,,
code-creation,JS,10,227226,0x2ce89f2fb4c,30, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\array-flatten\\array-flatten.js:1:1,0x2ce89f2f918,~
code-source-info,0x2ce89f2fb4c,160,0,1195,C0O0C22O48C24O63C29O1194,,
code-creation,Eval,10,227643,0x2ce89f30814,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\layer.js:1:1,0x2ce89f30670,~
script-source,161,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\layer.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar pathRegexp = require('path-to-regexp');\nvar debug = require('debug')('express:router:layer');\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path\x2C options\x2C fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path\x2C options\x2C fn);\n  }\n\n  debug('new %o'\x2C path)\n  var opts = options || {};\n\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path\x2C this.keys = []\x2C opts);\n\n  // set fast path flags\n  this.regexp.fast_star = path === '*'\n  this.regexp.fast_slash = path === '/' && opts.end === false\n}\n\n/**\n * Handle the error for the layer.\n *\n * @param {Error} error\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_error = function handle_error(error\x2C req\x2C res\x2C next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error\x2C req\x2C res\x2C next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Handle the request for the layer.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_request = function handle(req\x2C res\x2C next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req\x2C res\x2C next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Check if this route matches `path`\x2C if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nLayer.prototype.match = function match(path) {\n  var match\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {}\n      this.path = ''\n      return true\n    }\n\n    // fast path for * (everything matched in a param)\n    if (this.regexp.fast_star) {\n      this.params = {'0': decode_param(path)}\n      this.path = path\n      return true\n    }\n\n    // match the path\n    match = this.regexp.exec(path)\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n\n  // store values\n  this.params = {};\n  this.path = match[0]\n\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i])\n\n    if (val !== undefined || !(hasOwnProperty.call(params\x2C prop))) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Decode param value.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n
code-source-info,0x2ce89f30814,161,0,3296,C0O0C4O3296,,
tick,0x7ff6ab6209a3,227922,0,0x0,3,0x7ff62c507c67,0x7ff62c5120f7,0x7ff62c512728,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f2dfac,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f2cb6a,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f03789,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,JS,10,227977,0x2ce89f30ac4,114, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\layer.js:1:1,0x2ce89f30788,~
code-source-info,0x2ce89f30ac4,161,0,3296,C0O0C17O243C20O243C24O243C26O282C29O282C37O298C41O282C43O388C47O395C52O405C56O388C58O461C60O476C64O1115C67O1121C76O1144C80O1528C83O1534C92O1559C96O1919C99O1925C108O1941C113O3295,,
code-creation,Eval,10,228771,0x2ce89f31dc4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\path-to-regexp\\index.js:1:1,0x2ce89f31c50,~
script-source,162,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\path-to-regexp\\index.js,/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n\n/**\n * Normalize the given path string\x2C\n * returning a regular expression.\n *\n * An empty array should be passed\x2C\n * which will contain the placeholder\n * key names. For example "/user/:id" will\n * then contain ["id"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path\x2C keys\x2C options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++\x2C\n        optional: false\x2C\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value\x2C keys\x2C options).source;\n    });\n\n    return new RegExp('(?:' + path.join('|') + ')'\x2C flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\n    .replace(/\\/\\(/g\x2C '/(?:')\n    .replace(/([\\/\\.])/g\x2C '\\\\$1')\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g\x2C function (match\x2C slash\x2C format\x2C key\x2C capture\x2C star\x2C optional\x2C offset) {\n      slash = slash || '';\n      format = format || '';\n      capture = capture || '([^\\\\/' + format + ']+?)';\n      optional = optional || '';\n\n      keys.push({\n        name: key\x2C\n        optional: !!optional\x2C\n        offset: offset + extraOffset\n      });\n\n      var result = ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + format + (optional ? slash : '') + capture\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    })\n    .replace(/\\*/g\x2C function (star\x2C index) {\n      var len = keys.length\n\n      while (len-- > keysOffset && keys[len].offset > index) {\n        keys[len].offset += 3; // Replacement length minus asterisk length.\n      }\n\n      return '(.*)';\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    }\n\n    // It's possible to escape the bracket.\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i\x2C 0\x2C {\n        name: name++\x2C // Unnamed matching groups must be consistently linear.\n        optional: false\x2C\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  // If the path is non-ending\x2C match until the end or a slash.\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\n\n  return new RegExp(path\x2C flags);\n};\n
code-source-info,0x2ce89f31dc4,162,0,3328,C0O0C4O3328,,
code-creation,JS,10,228924,0x2ce89f31eec,26, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\path-to-regexp\\index.js:1:1,0x2ce89f31d38,~
code-source-info,0x2ce89f31eec,162,0,3328,C0O0C11O35C13O50C17O153C22O153C25O3327,,
code-creation,Eval,10,229847,0x2ce89f33cbc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\methods\\index.js:1:1,0x2ce89f33b58,~
script-source,163,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\methods\\index.js,/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the "basic" Node.js methods\x2C a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get'\x2C\n    'post'\x2C\n    'put'\x2C\n    'head'\x2C\n    'delete'\x2C\n    'options'\x2C\n    'trace'\x2C\n    'copy'\x2C\n    'lock'\x2C\n    'mkcol'\x2C\n    'move'\x2C\n    'purge'\x2C\n    'propfind'\x2C\n    'proppatch'\x2C\n    'unlock'\x2C\n    'report'\x2C\n    'mkactivity'\x2C\n    'checkout'\x2C\n    'merge'\x2C\n    'm-search'\x2C\n    'notify'\x2C\n    'subscribe'\x2C\n    'unsubscribe'\x2C\n    'patch'\x2C\n    'search'\x2C\n    'connect'\n  ];\n}\n
code-source-info,0x2ce89f33cbc,163,0,1040,C0O0C4O1040,,
code-creation,JS,10,229912,0x2ce89f33e34,41, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\methods\\index.js:1:1,0x2ce89f33c30,~
code-source-info,0x2ce89f33e34,163,0,1040,C0O0C15O201C18O201C22O201C24O275C32O302C35O273C40O1039,,
code-creation,Eval,10,230116,0x2ce89f34ad4,5, node:http:1:1,0x2ce89f34900,~
script-source,164,node:http,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { validateInteger } = require('internal/validators');\x0d\nconst httpAgent = require('_http_agent');\x0d\nconst { ClientRequest } = require('_http_client');\x0d\nconst { methods\x2C parsers } = require('_http_common');\x0d\nconst { IncomingMessage } = require('_http_incoming');\x0d\nconst {\x0d\n  validateHeaderName\x2C\x0d\n  validateHeaderValue\x2C\x0d\n  OutgoingMessage\x2C\x0d\n} = require('_http_outgoing');\x0d\nconst {\x0d\n  _connectionListener\x2C\x0d\n  STATUS_CODES\x2C\x0d\n  Server\x2C\x0d\n  ServerResponse\x2C\x0d\n} = require('_http_server');\x0d\nlet maxHeaderSize;\x0d\n\x0d\n/**\x0d\n * Returns a new instance of `http.Server`.\x0d\n * @param {{\x0d\n *   IncomingMessage?: IncomingMessage;\x0d\n *   ServerResponse?: ServerResponse;\x0d\n *   insecureHTTPParser?: boolean;\x0d\n *   maxHeaderSize?: number;\x0d\n *   requireHostHeader?: boolean;\x0d\n *   joinDuplicateHeaders?: boolean;\x0d\n *   highWaterMark?: number;\x0d\n *   rejectNonStandardBodyWrites?: boolean;\x0d\n *   }} [opts]\x0d\n * @param {Function} [requestListener]\x0d\n * @returns {Server}\x0d\n */\x0d\nfunction createServer(opts\x2C requestListener) {\x0d\n  return new Server(opts\x2C requestListener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @typedef {object} HTTPRequestOptions\x0d\n * @property {httpAgent.Agent | boolean} [agent] Controls Agent behavior.\x0d\n * @property {string} [auth] Basic authentication ('user:password') to compute an Authorization header.\x0d\n * @property {Function} [createConnection] Produces a socket/stream to use when the agent option is not used.\x0d\n * @property {number} [defaultPort] Default port for the protocol.\x0d\n * @property {number} [family] IP address family to use when resolving host or hostname.\x0d\n * @property {object} [headers] An object containing request headers.\x0d\n * @property {number} [hints] Optional dns.lookup() hints.\x0d\n * @property {string} [host] A domain name or IP address of the server to issue the request to.\x0d\n * @property {string} [hostname] Alias for host.\x0d\n * @property {boolean} [insecureHTTPParser] Use an insecure HTTP parser that accepts invalid HTTP headers when true.\x0d\n * @property {boolean} [joinDuplicateHeaders] Multiple header that joined with `\x2C` field line values.\x0d\n * @property {string} [localAddress] Local interface to bind for network connections.\x0d\n * @property {number} [localPort] Local port to connect from.\x0d\n * @property {Function} [lookup] Custom lookup function. Default: dns.lookup().\x0d\n * @property {number} [maxHeaderSize] Overrides the --max-http-header-size value for responses received from the server.\x0d\n * @property {string} [method] A string specifying the HTTP request method.\x0d\n * @property {string} [path] Request path.\x0d\n * @property {number} [port] Port of remote server.\x0d\n * @property {string} [protocol] Protocol to use.\x0d\n * @property {boolean} [setHost] Specifies whether or not to automatically add the Host header.\x0d\n * @property {AbortSignal} [signal] An AbortSignal that may be used to abort an ongoing request.\x0d\n * @property {string} [socketPath] Unix domain socket.\x0d\n * @property {number} [timeout] A number specifying the socket timeout in milliseconds.\x0d\n * @property {Array} [uniqueHeaders] A list of request headers that should be sent only once.\x0d\n */\x0d\n\x0d\n/**\x0d\n * Makes an HTTP request.\x0d\n * @param {string | URL} url\x0d\n * @param {HTTPRequestOptions} [options]\x0d\n * @param {Function} [cb]\x0d\n * @returns {ClientRequest}\x0d\n */\x0d\nfunction request(url\x2C options\x2C cb) {\x0d\n  return new ClientRequest(url\x2C options\x2C cb);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Makes a `GET` HTTP request.\x0d\n * @param {string | URL} url\x0d\n * @param {HTTPRequestOptions} [options]\x0d\n * @param {Function} [cb]\x0d\n * @returns {ClientRequest}\x0d\n */\x0d\nfunction get(url\x2C options\x2C cb) {\x0d\n  const req = request(url\x2C options\x2C cb);\x0d\n  req.end();\x0d\n  return req;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _connectionListener\x2C\x0d\n  METHODS: ArrayPrototypeSort(ArrayPrototypeSlice(methods))\x2C\x0d\n  STATUS_CODES\x2C\x0d\n  Agent: httpAgent.Agent\x2C\x0d\n  ClientRequest\x2C\x0d\n  IncomingMessage\x2C\x0d\n  OutgoingMessage\x2C\x0d\n  Server\x2C\x0d\n  ServerResponse\x2C\x0d\n  createServer\x2C\x0d\n  validateHeaderName\x2C\x0d\n  validateHeaderValue\x2C\x0d\n  get\x2C\x0d\n  request\x2C\x0d\n  setMaxIdleHTTPParsers(max) {\x0d\n    validateInteger(max\x2C 'max'\x2C 1);\x0d\n    parsers.max = max;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperty(module.exports\x2C 'maxHeaderSize'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (maxHeaderSize === undefined) {\x0d\n      const { getOptionValue } = require('internal/options');\x0d\n      maxHeaderSize = getOptionValue('--max-http-header-size');\x0d\n    }\x0d\n\x0d\n    return maxHeaderSize;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(module.exports\x2C 'globalAgent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return httpAgent.globalAgent;\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    httpAgent.globalAgent = value;\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x2ce89f34ad4,164,0,5878,C0O0C4O5878,,
code-creation,JS,10,230339,0x2ce89f350b4,386, node:http:1:1,0x2ce89f34a48,~
code-source-info,0x2ce89f350b
code-creation,Eval,10,230789,0x2ce89f3700c,5, node:_http_agent:1:1,0x2ce89f36c58,~
script-source,165,node:_http_agent,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeSubstring\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst EventEmitter = require('events');\x0d\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\nconst { async_id_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateNumber\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kOnKeylog = Symbol('onkeylog');\x0d\nconst kRequestOptions = Symbol('requestOptions');\x0d\nconst kRequestAsyncResource = Symbol('requestAsyncResource');\x0d\n// New Agent code.\x0d\n\x0d\n// The largest departure from the previous implementation is that\x0d\n// an Agent instance holds connections for a variable number of host:ports.\x0d\n// Surprisingly\x2C this is still API compatible as far as third parties are\x0d\n// concerned. The only code that really notices the difference is the\x0d\n// request object.\x0d\n\x0d\n// Another departure is that all code related to HTTP parsing is in\x0d\n// ClientRequest.onSocket(). The Agent is now *strictly*\x0d\n// concerned with managing a connection pool.\x0d\n\x0d\nclass ReusedHandle {\x0d\n  constructor(type\x2C handle) {\x0d\n    this.type = type;\x0d\n    this.handle = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction freeSocketErrorListener(err) {\x0d\n  const socket = this;\x0d\n  debug('SOCKET ERROR on FREE socket:'\x2C err.message\x2C err.stack);\x0d\n  socket.destroy();\x0d\n  socket.emit('agentRemove');\x0d\n}\x0d\n\x0d\nfunction Agent(options) {\x0d\n  if (!(this instanceof Agent))\x0d\n    return new Agent(options);\x0d\n\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this.defaultPort = 80;\x0d\n  this.protocol = 'http:';\x0d\n\x0d\n  this.options = { __proto__: null\x2C ...options };\x0d\n\x0d\n  if (this.options.noDelay === undefined)\x0d\n    this.options.noDelay = true;\x0d\n\x0d\n  // Don't confuse net and make it think that we're connecting to a pipe\x0d\n  this.options.path = null;\x0d\n  this.requests = { __proto__: null };\x0d\n  this.sockets = { __proto__: null };\x0d\n  this.freeSockets = { __proto__: null };\x0d\n  this.keepAliveMsecs = this.options.keepAliveMsecs || 1000;\x0d\n  this.keepAlive = this.options.keepAlive || false;\x0d\n  this.maxSockets = this.options.maxSockets || Agent.defaultMaxSockets;\x0d\n  this.maxFreeSockets = this.options.maxFreeSockets || 256;\x0d\n  this.scheduling = this.options.scheduling || 'lifo';\x0d\n  this.maxTotalSockets = this.options.maxTotalSockets;\x0d\n  this.totalSocketCount = 0;\x0d\n\x0d\n  validateOneOf(this.scheduling\x2C 'scheduling'\x2C ['fifo'\x2C 'lifo']);\x0d\n\x0d\n  if (this.maxTotalSockets !== undefined) {\x0d\n    validateNumber(this.maxTotalSockets\x2C 'maxTotalSockets'\x2C 1);\x0d\n  } else {\x0d\n    this.maxTotalSockets = Infinity;\x0d\n  }\x0d\n\x0d\n  this.on('free'\x2C (socket\x2C options) => {\x0d\n    const name = this.getName(options);\x0d\n    debug('agent.on(free)'\x2C name);\x0d\n\x0d\n    // TODO(ronag): socket.destroy(err) might have been called\x0d\n    // before coming here and have an 'error' scheduled. In the\x0d\n    // case of socket.destroy() below this 'error' has no handler\x0d\n    // and could cause unhandled exception.\x0d\n\x0d\n    if (!socket.writable) {\x0d\n      socket.destroy();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const requests = this.requests[name];\x0d\n    if (requests && requests.length) {\x0d\n      const req = ArrayPrototypeShift(requests);\x0d\n      const reqAsyncRes = req[kRequestAsyncResource];\x0d\n      if (reqAsyncRes) {\x0d\n        // Run request within the original async context.\x0d\n        reqAsyncRes.runInAsyncScope(() => {\x0d\n          asyncResetHandle(socket);\x0d\n          setRequestSocket(this\x2C req\x2C socket);\x0d\n        });\x0d\n        req[kRequestAsyncResource] = null;\x0d\n      } else {\x0d\n        setRequestSocket(this\x2C req\x2C socket);\x0d\n      }\x0d\n      if (requests.length === 0) {\x0d\n        delete this.requests[name];\x0d\n      }\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // If there are no pending requests\x2C then put it in\x0d\n    // the freeSockets pool\x2C but only if we're allowed to do so.\x0d\n    const req = socket._httpMessage;\x0d\n    if (!req || !req.shouldKeepAlive || !this.keepAlive) {\x0d\n      socket.destroy();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const freeSockets = this.freeSockets[name] || [];\x0d\n    const freeLen = freeSockets.length;\x0d\n    let count = freeLen;\x0d\n    if (this.sockets[name])\x0d\n      count += this.sockets[name].length;\x0d\n\x0d\n    if (this.totalSocketCount > this.maxTotalSockets ||\x0d\n        count > this.maxSockets ||\x0d\n        freeLen >= this.maxFreeSockets ||\x0d\n        !this.keepSocketAlive(socket)) {\x0d\n      socket.destroy();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this.freeSockets[name] = freeSockets;\x0d\n    socket[async_id_symbol] = -1;\x0d\n    socket._httpMessage = null;\x0d\n    this.removeSocket(socket\x2C options);\x0d\n\x0d\n    socket.once('error'\x2C freeSocketErrorListener);\x0d\n    ArrayPrototypePush(freeSockets\x2C socket);\x0d\n  });\x0d\n\x0d\n  // Don't emit keylog events unless there is a listener for them.\x0d\n  this.on('newListener'\x2C maybeEnableKeylog);\x0d\n}\x0d\nObjectSetPrototypeOf(Agent.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Agent\x2C EventEmitter);\x0d\n\x0d\nfunction maybeEnableKeylog(eventName) {\x0d\n  if (eventName === 'keylog') {\x0d\n    this.removeListener('newListener'\x2C maybeEnableKeylog);\x0d\n    // Future sockets will listen on keylog at creation.\x0d\n    const agent = this;\x0d\n    this[kOnKeylog] = function onkeylog(keylog) {\x0d\n      agent.emit('keylog'\x2C keylog\x2C this);\x0d\n    };\x0d\n    // Existing sockets will start listening on keylog now.\x0d\n    const sockets = ObjectValues(this.sockets);\x0d\n    for (let i = 0; i < sockets.length; i++) {\x0d\n      sockets[i].on('keylog'\x2C this[kOnKeylog]);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nAgent.defaultMaxSockets = Infinity;\x0d\n\x0d\nAgent.prototype.createConnection = net.createConnection;\x0d\n\x0d\n// Get the key for a given set of request options\x0d\nAgent.prototype.getName = function getName(options = kEmptyObject) {\x0d\n  let name = options.host || 'localhost';\x0d\n\x0d\n  name += ':';\x0d\n  if (options.port)\x0d\n    name += options.port;\x0d\n\x0d\n  name += ':';\x0d\n  if (options.localAddress)\x0d\n    name += options.localAddress;\x0d\n\x0d\n  // Pacify parallel/test-http-agent-getname by only appending\x0d\n  // the ':' when options.family is set.\x0d\n  if (options.family === 4 || options.family === 6)\x0d\n    name += `:${options.family}`;\x0d\n\x0d\n  if (options.socketPath)\x0d\n    name += `:${options.socketPath}`;\x0d\n\x0d\n  return name;\x0d\n};\x0d\n\x0d\nAgent.prototype.addRequest = function addRequest(req\x2C options\x2C port/* legacy */\x2C\x0d\n                                                 localAddress/* legacy */) {\x0d\n  // Legacy API: addRequest(req\x2C host\x2C port\x2C localAddress)\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      __proto__: null\x2C\x0d\n      host: options\x2C\x0d\n      port\x2C\x0d\n      localAddress\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\x0d\n  if (options.socketPath)\x0d\n    options.path = options.socketPath;\x0d\n\x0d\n  normalizeServerName(options\x2C req);\x0d\n\x0d\n  const name = this.getName(options);\x0d\n  if (!this.sockets[name]) {\x0d\n    this.sockets[name] = [];\x0d\n  }\x0d\n\x0d\n  const freeSockets = this.freeSockets[name];\x0d\n  let socket;\x0d\n  if (freeSockets) {\x0d\n    while (freeSockets.length && freeSockets[0].destroyed) {\x0d\n      ArrayPrototypeShift(freeSockets);\x0d\n    }\x0d\n    socket = this.scheduling === 'fifo' ?\x0d\n      ArrayPrototypeShift(freeSockets) :\x0d\n      ArrayPrototypePop(freeSockets);\x0d\n    if (!freeSockets.length)\x0d\n      delete this.freeSockets[name];\x0d\n  }\x0d\n\x0d\n  const freeLen = freeSockets ? freeSockets.length : 0;\x0d\n  const sockLen = freeLen + this.sockets[name].length;\x0d\n\x0d\n  if (socket) {\x0d\n    asyncResetHandle(socket);\x0d\n    this.reuseSocket(socket\x2C req);\x0d\n    setRequestSocket(this\x2C req\x2C socket);\x0d\n    ArrayPrototypePush(this.sockets[name]\x2C socket);\x0d\n  } else if (sockLen < this.maxSockets &&\x0d\n             this.totalSocketCount < this.maxTotalSockets) {\x0d\n    debug('call onSocket'\x2C sockLen\x2C freeLen);\x0d\n    // If we are under maxSockets create a new one.\x0d\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\x0d\n      if (err)\x0d\n        req.onSocket(socket\x2C err);\x0d\n      else\x0d\n        setRequestSocket(this\x2C req\x2C socket);\x0d\n    });\x0d\n  } else {\x0d\n    debug('wait for socket');\x0d\n    // We are over limit so we'll add it to the queue.\x0d\n    if (!this.requests[name]) {\x0d\n      this.requests[name] = [];\x0d\n    }\x0d\n\x0d\n    // Used to create sockets for pending requests from different origin\x0d\n    req[kRequestOptions] = options;\x0d\n    // Used to capture the original async context.\x0d\n    req[kRequestAsyncResource] = new AsyncResource('QueuedRequest');\x0d\n\x0d\n    ArrayPrototypePush(this.requests[name]\x2C req);\x0d\n  }\x0d\n};\x0d\n\x0d\nAgent.prototype.createSocket = function createSocket(req\x2C options\x2C cb) {\x0d\n  options = { __proto__: null\x2C ...options\x2C ...this.options };\x0d\n  if (options.socketPath)\x0d\n    options.path = options.socketPath;\x0d\n\x0d\n  normalizeServerName(options\x2C req);\x0d\n\x0d\n  const name = this.getName(options);\x0d\n  options._agentKey = name;\x0d\n\x0d\n  debug('createConnection'\x2C name\x2C options);\x0d\n  options.encoding = null;\x0d\n\x0d\n  const oncreate = once((err\x2C s) => {\x0d\n    if (err)\x0d\n      return cb(err);\x0d\n    if (!this.sockets[name]) {\x0d\n      this.sockets[name] = [];\x0d\n    }\x0d\n    ArrayPrototypePush(this.sockets[name]\x2C s);\x0d\n    this.totalSocketCount++;\x0d\n    debug('sockets'\x2C name\x2C this.sockets[name].length\x2C this.totalSocketCount);\x0d\n    installListeners(this\x2C s\x2C options);\x0d\n    cb(null\x2C s);\x0d\n  });\x0d\n  // When keepAlive is true\x2C pass the related options to createConnection\x0d\n  if (this.keepAlive) {\x0d\n    options.keepAlive = this.keepAlive;\x0d\n    options.keepAliveInitialDelay = this.keepAliveMsecs;\x0d\n  }\x0d\n  const newSocket = this.createConnection(options\x2C oncreate);\x0d\n  if (newSocket)\x0d\n    oncreate(null\x2C newSocket);\x0d\n};\x0d\n\x0d\nfunction normalizeServerName(options\x2C req) {\x0d\n  if (!options.servername && options.servername !== '')\x0d\n    options.servername = calculateServerName(options\x2C req);\x0d\n}\x0d\n\x0d\nfunction calculateServerName(options\x2C req) {\x0d\n  let servername = options.host;\x0d\n  const hostHeader = req.getHeader('host');\x0d\n  if (hostHeader) {\x0d\n    validateString(hostHeader\x2C 'options.headers.host');\x0d\n\x0d\n    // abc => abc\x0d\n    // abc:123 => abc\x0d\n    // [::1] => ::1\x0d\n    // [::1]:123 => ::1\x0d\n    if (StringPrototypeStartsWith(hostHeader\x2C '[')) {\x0d\n      const index = StringPrototypeIndexOf(hostHeader\x2C ']');\x0d\n      if (index === -1) {\x0d\n        // Leading '['\x2C but no ']'. Need to do something...\x0d\n        servername = hostHeader;\x0d\n      } else {\x0d\n        servername = StringPrototypeSubstring(hostHeader\x2C 1\x2C index);\x0d\n      }\x0d\n    } else {\x0d\n      servername = StringPrototypeSplit(hostHeader\x2C ':'\x2C 1)[0];\x0d\n    }\x0d\n  }\x0d\n  // Don't implicitly set invalid (IP) servernames.\x0d\n  if (net.isIP(servername))\x0d\n    servername = '';\x0d\n  return servername;\x0d\n}\x0d\n\x0d\nfunction installListeners(agent\x2C s\x2C options) {\x0d\n  function onFree() {\x0d\n    debug('CLIENT socket onFree');\x0d\n    agent.emit('free'\x2C s\x2C options);\x0d\n  }\x0d\n  s.on('free'\x2C onFree);\x0d\n\x0d\n  function onClose(err) {\x0d\n    debug('CLIENT socket onClose');\x0d\n    // This is the only place where sockets get removed from the Agent.\x0d\n    // If you want to remove a socket from the pool\x2C just close it.\x0d\n    // All socket errors end in a close event anyway.\x0d\n    agent.totalSocketCount--;\x0d\n    agent.removeSocket(s\x2C options);\x0d\n  }\x0d\n  s.on('close'\x2C onClose);\x0d\n\x0d\n  function onTimeout() {\x0d\n    debug('CLIENT socket onTimeout');\x0d\n\x0d\n    // Destroy if in free list.\x0d\n    // TODO(ronag): Always destroy\x2C even if not in free list.\x0d\n    const sockets = agent.freeSockets;\x0d\n    if (ArrayPrototypeSome(ObjectKeys(sockets)\x2C (name) =>\x0d\n      ArrayPrototypeIncludes(sockets[name]\x2C s)\x2C\x0d\n    )) {\x0d\n      return s.destroy();\x0d\n    }\x0d\n  }\x0d\n  s.on('timeout'\x2C onTimeout);\x0d\n\x0d\n  function onRemove() {\x0d\n    // We need this function for cases like HTTP 'upgrade'\x0d\n    // (defined by WebSockets) where we need to remove a socket from the\x0d\n    // pool because it'll be locked up indefinitely\x0d\n    debug('CLIENT socket onRemove');\x0d\n    agent.totalSocketCount--;\x0d\n    agent.removeSocket(s\x2C options);\x0d\n    s.removeListener('close'\x2C onClose);\x0d\n    s.removeListener('free'\x2C onFree);\x0d\n    s.removeListener('timeout'\x2C onTimeout);\x0d\n    s.removeListener('agentRemove'\x2C onRemove);\x0d\n  }\x0d\n  s.on('agentRemove'\x2C onRemove);\x0d\n\x0d\n  if (agent[kOnKeylog]) {\x0d\n    s.on('keylog'\x2C agent[kOnKeylog]);\x0d\n  }\x0d\n}\x0d\n\x0d\nAgent.prototype.removeSocket = function removeSocket(s\x2C options) {\x0d\n  const name = this.getName(options);\x0d\n  debug('removeSocket'\x2C name\x2C 'writable:'\x2C s.writable);\x0d\n  const sets = [this.sockets];\x0d\n\x0d\n  // If the socket was destroyed\x2C remove it from the free buffers too.\x0d\n  if (!s.writable)\x0d\n    ArrayPrototypePush(sets\x2C this.freeSockets);\x0d\n\x0d\n  for (let sk = 0; sk < sets.length; sk++) {\x0d\n    const sockets = sets[sk];\x0d\n\x0d\n    if (sockets[name]) {\x0d\n      const index = ArrayPrototypeIndexOf(sockets[name]\x2C s);\x0d\n      if (index !== -1) {\x0d\n        ArrayPrototypeSplice(sockets[name]\x2C index\x2C 1);\x0d\n        // Don't leak\x0d\n        if (sockets[name].length === 0)\x0d\n          delete sockets[name];\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let req;\x0d\n  if (this.requests[name] && this.requests[name].length) {\x0d\n    debug('removeSocket\x2C have a request\x2C make a socket');\x0d\n    req = this.requests[name][0];\x0d\n  } else {\x0d\n    // TODO(rickyes): this logic will not be FIFO across origins.\x0d\n    // There might be older requests in a different origin\x2C but\x0d\n    // if the origin which releases the socket has pending requests\x0d\n    // that will be prioritized.\x0d\n    const keys = ObjectKeys(this.requests);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const prop = keys[i];\x0d\n      // Check whether this specific origin is already at maxSockets\x0d\n      if (this.sockets[prop] && this.sockets[prop].length) break;\x0d\n      debug('removeSocket\x2C have a request with different origin\x2C' +\x0d\n        ' make a socket');\x0d\n      req = this.requests[prop][0];\x0d\n      options = req[kRequestOptions];\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (req && options) {\x0d\n    req[kRequestOptions] = undefined;\x0d\n    // If we have pending requests and a socket gets closed make a new one\x0d\n    this.createSocket(req\x2C options\x2C (err\x2C socket) => {\x0d\n      if (err)\x0d\n        req.onSocket(socket\x2C err);\x0d\n      else\x0d\n        socket.emit('free');\x0d\n    });\x0d\n  }\x0d\n\x0d\n};\x0d\n\x0d\nAgent.prototype.keepSocketAlive = function keepSocketAlive(socket) {\x0d\n  socket.setKeepAlive(true\x2C this.keepAliveMsecs);\x0d\n  socket.unref();\x0d\n\x0d\n  let agentTimeout = this.options.timeout || 0;\x0d\n\x0d\n  if (socket._httpMessage?.res) {\x0d\n    const keepAliveHint = socket._httpMessage.res.headers['keep-alive'];\x0d\n\x0d\n    if (keepAliveHint) {\x0d\n      const hint = RegExpPrototypeExec(/^timeout=(\\d+)/\x2C keepAliveHint)?.[1];\x0d\n\x0d\n      if (hint) {\x0d\n        const serverHintTimeout = NumberParseInt(hint) * 1000;\x0d\n\x0d\n        if (serverHintTimeout < agentTimeout) {\x0d\n          agentTimeout = serverHintTimeout;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (socket.timeout !== agentTimeout) {\x0d\n    socket.setTimeout(agentTimeout);\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nAgent.prototype.reuseSocket = function reuseSocket(socket\x2C req) {\x0d\n  debug('have free socket');\x0d\n  socket.removeListener('error'\x2C freeSocketErrorListener);\x0d\n  req.reusedSocket = true;\x0d\n  socket.ref();\x0d\n};\x0d\n\x0d\nAgent.prototype.destroy = function destroy() {\x0d\n  const sets = [this.freeSockets\x2C this.sockets];\x0d\n  for (let s = 0; s < sets.length; s++) {\x0d\n    const set = sets[s];\x0d\n    const keys = ObjectKeys(set);\x0d\n    for (let v = 0; v < keys.length; v++) {\x0d\n      const setName = set[keys[v]];\x0d\n      for (let n = 0; n < setName.length; n++) {\x0d\n        setName[n].destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction setRequestSocket(agent\x2C req\x2C socket) {\x0d\n  req.onSocket(socket);\x0d\n  const agentTimeout = agent.options.timeout || 0;\x0d\n  if (req.timeout === undefined || req.timeout === agentTimeout) {\x0d\n    return;\x0d\n  }\x0d\n  socket.setTimeout(req.timeout);\x0d\n}\x0d\n\x0d\nfunction asyncResetHandle(socket) {\x0d\n  // Guard against an uninitialized or user supplied Socket.\x0d\n  const handle = socket._handle;\x0d\n  if (handle && typeof handle.asyncReset === 'function') {\x0d\n    // Assign the handle a new asyncId and run any destroy()/init() hooks.\x0d\n    handle.asyncReset(new ReusedHandle(handle.getProviderType()\x2C handle));\x0d\n    socket[async_id_symbol] = handle.getAsyncId();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Agent\x2C\x0d\n  globalAgent: new Agent({ keepAlive: true\x2C scheduling: 'lifo'\x2C timeout: 5000 })\x2C\x0d\n};\x0d\n
code-source-info,0x2ce89f3700c,165,0,17554,C0O0C4O17554,,
code-creation,JS,10,231439,0x2ce89f37abc,635, node:_http_agent:1:1,0x2ce89f36f80,~
code-source-info,0x2ce89f37abc
code-creation,JS,10,231791,0x2ce89f38984,426,Agent node:_http_agent:91:15,0x2ce89f37098,~
code-source-info,0x2ce89f38984,165,3052,6370,C0O3052C9O3067C16O3078C21O3102C28O3109C33O3128C34O3134C45O3156C51O3134C56O3182C61O3199C65O3208C70O3222C74O3238C88O3275C94O3251C98O3291C101O3300C106O3308C112O3336C115O3341C121O3357C125O3444C128O3449C134O3462C138O3473C145O3487C149O3513C156O3526C160O3552C167O3569C171O3595C174O3622C179O3630C189O3615C193O3657C196O3679C201O3687C208O3672C212O3710C215O3733C220O3741C231O3761C235O3726C239O3783C242O3810C247O3818C257O3803C261O3844C264O3867C269O3875C277O3860C281O3900C284O3928C289O3936C293O3921C297O3956C301O3978C305O3988C315O4007C328O3988C333O4057C336O4066C342O4104C352O4124C363O4104C370O4181C373O4204C376O4202C380O4224C383O4229C396O4229C402O6325C405O6330C418O6330C425O6369,,
code-creation,Eval,10,232500,0x2ce89f3dc3c,5, node:_http_client:1:1,0x2ce89f3d018,~
script-source,166,node:_http_client,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  _checkIsHttpToken: checkIsHttpToken\x2C\x0d\n  freeParser\x2C\x0d\n  parsers\x2C\x0d\n  HTTPParser\x2C\x0d\n  isLenient\x2C\x0d\n  prepareError\x2C\x0d\n} = require('_http_common');\x0d\nconst {\x0d\n  kUniqueHeaders\x2C\x0d\n  parseUniqueHeadersOption\x2C\x0d\n  OutgoingMessage\x2C\x0d\n} = require('_http_outgoing');\x0d\nconst Agent = require('_http_agent');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { defaultTriggerAsyncIdScope } = require('internal/async_hooks');\x0d\nconst { URL\x2C urlToHttpOptions\x2C isURL } = require('internal/url');\x0d\nconst {\x0d\n  kOutHeaders\x2C\x0d\n  kNeedDrain\x2C\x0d\n  isTraceHTTPEnabled\x2C\x0d\n  traceBegin\x2C\x0d\n  traceEnd\x2C\x0d\n  getNextTraceEventId\x2C\x0d\n} = require('internal/http');\x0d\nconst { ConnResetException\x2C codes } = require('internal/errors');\x0d\nconst {\x0d\n  ERR_HTTP_HEADERS_SENT\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_HTTP_TOKEN\x2C\x0d\n  ERR_INVALID_PROTOCOL\x2C\x0d\n  ERR_UNESCAPED_CHARACTERS\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n  validateBoolean\x2C\x0d\n} = require('internal/validators');\x0d\nconst { getTimerDuration } = require('internal/timers');\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst kClientRequestStatistics = Symbol('ClientRequestStatistics');\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst onClientRequestStartChannel = dc.channel('http.client.request.start');\x0d\nconst onClientResponseFinishChannel = dc.channel('http.client.response.finish');\x0d\n\x0d\nconst { addAbortSignal\x2C finished } = require('stream');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst INVALID_PATH_REGEX = /[^\\u0021-\\u00ff]/;\x0d\nconst kError = Symbol('kError');\x0d\n\x0d\nconst kLenientAll = HTTPParser.kLenientAll | 0;\x0d\nconst kLenientNone = HTTPParser.kLenientNone | 0;\x0d\n\x0d\nconst HTTP_CLIENT_TRACE_EVENT_NAME = 'http.client.request';\x0d\n\x0d\nfunction validateHost(host\x2C name) {\x0d\n  if (host !== null && host !== undefined && typeof host !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(`options.${name}`\x2C\x0d\n                                   ['string'\x2C 'undefined'\x2C 'null']\x2C\x0d\n                                   host);\x0d\n  }\x0d\n  return host;\x0d\n}\x0d\n\x0d\nclass HTTPClientAsyncResource {\x0d\n  constructor(type\x2C req) {\x0d\n    this.type = type;\x0d\n    this.req = req;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction ClientRequest(input\x2C options\x2C cb) {\x0d\n  FunctionPrototypeCall(OutgoingMessage\x2C this);\x0d\n\x0d\n  if (typeof input === 'string') {\x0d\n    const urlStr = input;\x0d\n    input = urlToHttpOptions(new URL(urlStr));\x0d\n  } else if (isURL(input)) {\x0d\n    // url.URL instance\x0d\n    input = urlToHttpOptions(input);\x0d\n  } else {\x0d\n    cb = options;\x0d\n    options = input;\x0d\n    input = null;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    cb = options;\x0d\n    options = input || kEmptyObject;\x0d\n  } else {\x0d\n    options = ObjectAssign(input || {}\x2C options);\x0d\n  }\x0d\n\x0d\n  let agent = options.agent;\x0d\n  const defaultAgent = options._defaultAgent || Agent.globalAgent;\x0d\n  if (agent === false) {\x0d\n    agent = new defaultAgent.constructor();\x0d\n  } else if (agent === null || agent === undefined) {\x0d\n    if (typeof options.createConnection !== 'function') {\x0d\n      agent = defaultAgent;\x0d\n    }\x0d\n    // Explicitly pass through this statement as agent will not be used\x0d\n    // when createConnection is provided.\x0d\n  } else if (typeof agent.addRequest !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.agent'\x2C\x0d\n                                   ['Agent-like Object'\x2C 'undefined'\x2C 'false']\x2C\x0d\n                                   agent);\x0d\n  }\x0d\n  this.agent = agent;\x0d\n\x0d\n  const protocol = options.protocol || defaultAgent.protocol;\x0d\n  let expectedProtocol = defaultAgent.protocol;\x0d\n  if (this.agent && this.agent.protocol)\x0d\n    expectedProtocol = this.agent.protocol;\x0d\n\x0d\n  if (options.path) {\x0d\n    const path = String(options.path);\x0d\n    if (RegExpPrototypeExec(INVALID_PATH_REGEX\x2C path) !== null) {\x0d\n      debug('Path contains unescaped characters: "%s"'\x2C path);\x0d\n      throw new ERR_UNESCAPED_CHARACTERS('Request path');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (protocol !== expectedProtocol) {\x0d\n    throw new ERR_INVALID_PROTOCOL(protocol\x2C expectedProtocol);\x0d\n  }\x0d\n\x0d\n  const defaultPort = options.defaultPort ||\x0d\n                    (this.agent && this.agent.defaultPort);\x0d\n\x0d\n  const port = options.port = options.port || defaultPort || 80;\x0d\n  const host = options.host = validateHost(options.hostname\x2C 'hostname') ||\x0d\n                            validateHost(options.host\x2C 'host') || 'localhost';\x0d\n\x0d\n  const setHost = (options.setHost === undefined || Boolean(options.setHost));\x0d\n\x0d\n  this.socketPath = options.socketPath;\x0d\n\x0d\n  if (options.timeout !== undefined)\x0d\n    this.timeout = getTimerDuration(options.timeout\x2C 'timeout');\x0d\n\x0d\n  const signal = options.signal;\x0d\n  if (signal) {\x0d\n    addAbortSignal(signal\x2C this);\x0d\n  }\x0d\n  let method = options.method;\x0d\n  const methodIsString = (typeof method === 'string');\x0d\n  if (method !== null && method !== undefined && !methodIsString) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.method'\x2C 'string'\x2C method);\x0d\n  }\x0d\n\x0d\n  if (methodIsString && method) {\x0d\n    if (!checkIsHttpToken(method)) {\x0d\n      throw new ERR_INVALID_HTTP_TOKEN('Method'\x2C method);\x0d\n    }\x0d\n    method = this.method = StringPrototypeToUpperCase(method);\x0d\n  } else {\x0d\n    method = this.method = 'GET';\x0d\n  }\x0d\n\x0d\n  const maxHeaderSize = options.maxHeaderSize;\x0d\n  if (maxHeaderSize !== undefined)\x0d\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\x0d\n  this.maxHeaderSize = maxHeaderSize;\x0d\n\x0d\n  const insecureHTTPParser = options.insecureHTTPParser;\x0d\n  if (insecureHTTPParser !== undefined) {\x0d\n    validateBoolean(insecureHTTPParser\x2C 'options.insecureHTTPParser');\x0d\n  }\x0d\n\x0d\n  this.insecureHTTPParser = insecureHTTPParser;\x0d\n\x0d\n  if (options.joinDuplicateHeaders !== undefined) {\x0d\n    validateBoolean(options.joinDuplicateHeaders\x2C 'options.joinDuplicateHeaders');\x0d\n  }\x0d\n\x0d\n  this.joinDuplicateHeaders = options.joinDuplicateHeaders;\x0d\n\x0d\n  this.path = options.path || '/';\x0d\n  if (cb) {\x0d\n    this.once('response'\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (method === 'GET' ||\x0d\n      method === 'HEAD' ||\x0d\n      method === 'DELETE' ||\x0d\n      method === 'OPTIONS' ||\x0d\n      method === 'TRACE' ||\x0d\n      method === 'CONNECT') {\x0d\n    this.useChunkedEncodingByDefault = false;\x0d\n  } else {\x0d\n    this.useChunkedEncodingByDefault = true;\x0d\n  }\x0d\n\x0d\n  this._ended = false;\x0d\n  this.res = null;\x0d\n  this.aborted = false;\x0d\n  this.timeoutCb = null;\x0d\n  this.upgradeOrConnect = false;\x0d\n  this.parser = null;\x0d\n  this.maxHeadersCount = null;\x0d\n  this.reusedSocket = false;\x0d\n  this.host = host;\x0d\n  this.protocol = protocol;\x0d\n\x0d\n  if (this.agent) {\x0d\n    // If there is an agent we should default to Connection:keep-alive\x2C\x0d\n    // but only if the Agent will actually reuse the connection!\x0d\n    // If it's not a keepAlive agent\x2C and the maxSockets==Infinity\x2C then\x0d\n    // there's never a case where this socket will actually be reused\x0d\n    if (!this.agent.keepAlive && !NumberIsFinite(this.agent.maxSockets)) {\x0d\n      this._last = true;\x0d\n      this.shouldKeepAlive = false;\x0d\n    } else {\x0d\n      this._last = false;\x0d\n      this.shouldKeepAlive = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const headersArray = ArrayIsArray(options.headers);\x0d\n  if (!headersArray) {\x0d\n    if (options.headers) {\x0d\n      const keys = ObjectKeys(options.headers);\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < keys.length; i++) {\x0d\n        const key = keys[i];\x0d\n        this.setHeader(key\x2C options.headers[key]);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (host && !this.getHeader('host') && setHost) {\x0d\n      let hostHeader = host;\x0d\n\x0d\n      // For the Host header\x2C ensure that IPv6 addresses are enclosed\x0d\n      // in square brackets\x2C as defined by URI formatting\x0d\n      // https://tools.ietf.org/html/rfc3986#section-3.2.2\x0d\n      const posColon = StringPrototypeIndexOf(hostHeader\x2C ':');\x0d\n      if (posColon !== -1 &&\x0d\n          StringPrototypeIncludes(hostHeader\x2C ':'\x2C posColon + 1) &&\x0d\n          StringPrototypeCharCodeAt(hostHeader\x2C 0) !== 91/* '[' */) {\x0d\n        hostHeader = `[${hostHeader}]`;\x0d\n      }\x0d\n\x0d\n      if (port && +port !== defaultPort) {\x0d\n        hostHeader += ':' + port;\x0d\n      }\x0d\n      this.setHeader('Host'\x2C hostHeader);\x0d\n    }\x0d\n\x0d\n    if (options.auth && !this.getHeader('Authorization')) {\x0d\n      this.setHeader('Authorization'\x2C 'Basic ' +\x0d\n                     Buffer.from(options.auth).toString('base64'));\x0d\n    }\x0d\n\x0d\n    if (this.getHeader('expect')) {\x0d\n      if (this._header) {\x0d\n        throw new ERR_HTTP_HEADERS_SENT('render');\x0d\n      }\x0d\n\x0d\n      this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\x0d\n                        this[kOutHeaders]);\x0d\n    }\x0d\n  } else {\x0d\n    this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\x0d\n                      options.headers);\x0d\n  }\x0d\n\x0d\n  this[kUniqueHeaders] = parseUniqueHeadersOption(options.uniqueHeaders);\x0d\n\x0d\n  let optsWithoutSignal = options;\x0d\n  if (optsWithoutSignal.signal) {\x0d\n    optsWithoutSignal = ObjectAssign({}\x2C options);\x0d\n    delete optsWithoutSignal.signal;\x0d\n  }\x0d\n\x0d\n  // initiate connection\x0d\n  if (this.agent) {\x0d\n    this.agent.addRequest(this\x2C optsWithoutSignal);\x0d\n  } else {\x0d\n    // No agent\x2C default to Connection:close.\x0d\n    this._last = true;\x0d\n    this.shouldKeepAlive = false;\x0d\n    if (typeof optsWithoutSignal.createConnection === 'function') {\x0d\n      const oncreate = once((err\x2C socket) => {\x0d\n        if (err) {\x0d\n          process.nextTick(() => this.emit('error'\x2C err));\x0d\n        } else {\x0d\n          this.onSocket(socket);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        const newSocket = optsWithoutSignal.createConnection(optsWithoutSignal\x2C\x0d\n                                                             oncreate);\x0d\n        if (newSocket) {\x0d\n          oncreate(null\x2C newSocket);\x0d\n        }\x0d\n      } catch (err) {\x0d\n        oncreate(err);\x0d\n      }\x0d\n    } else {\x0d\n      debug('CLIENT use net.createConnection'\x2C optsWithoutSignal);\x0d\n      this.onSocket(net.createConnection(optsWithoutSignal));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ClientRequest.prototype\x2C OutgoingMessage.prototype);\x0d\nObjectSetPrototypeOf(ClientRequest\x2C OutgoingMessage);\x0d\n\x0d\nClientRequest.prototype._finish = function _finish() {\x0d\n  FunctionPrototypeCall(OutgoingMessage.prototype._finish\x2C this);\x0d\n  if (hasObserver('http')) {\x0d\n    startPerf(this\x2C kClientRequestStatistics\x2C {\x0d\n      type: 'http'\x2C\x0d\n      name: 'HttpClient'\x2C\x0d\n      detail: {\x0d\n        req: {\x0d\n          method: this.method\x2C\x0d\n          url: `${this.protocol}//${this.host}${this.path}`\x2C\x0d\n          headers: typeof this.getHeaders === 'function' ? this.getHeaders() : {}\x2C\x0d\n        }\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  if (onClientRequestStartChannel.hasSubscribers) {\x0d\n    onClientRequestStartChannel.publish({\x0d\n      request: this\x2C\x0d\n    });\x0d\n  }\x0d\n  if (isTraceHTTPEnabled()) {\x0d\n    this._traceEventId = getNextTraceEventId();\x0d\n    traceBegin(HTTP_CLIENT_TRACE_EVENT_NAME\x2C this._traceEventId);\x0d\n  }\x0d\n};\x0d\n\x0d\nClientRequest.prototype._implicitHeader = function _implicitHeader() {\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('render');\x0d\n  }\x0d\n  this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n'\x2C\x0d\n                    this[kOutHeaders]);\x0d\n};\x0d\n\x0d\nClientRequest.prototype.abort = function abort() {\x0d\n  if (this.aborted) {\x0d\n    return;\x0d\n  }\x0d\n  this.aborted = true;\x0d\n  process.nextTick(emitAbortNT\x2C this);\x0d\n  this.destroy();\x0d\n};\x0d\n\x0d\nClientRequest.prototype.destroy = function destroy(err) {\x0d\n  if (this.destroyed) {\x0d\n    return this;\x0d\n  }\x0d\n  this.destroyed = true;\x0d\n\x0d\n  // If we're aborting\x2C we don't care about any more response data.\x0d\n  if (this.res) {\x0d\n    this.res._dump();\x0d\n  }\x0d\n\x0d\n  this[kError] = err;\x0d\n  this.socket?.destroy(err);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction emitAbortNT(req) {\x0d\n  req.emit('abort');\x0d\n}\x0d\n\x0d\nfunction ondrain() {\x0d\n  const msg = this._httpMessage;\x0d\n  if (msg && !msg.finished && msg[kNeedDrain]) {\x0d\n    msg[kNeedDrain] = false;\x0d\n    msg.emit('drain');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction socketCloseListener() {\x0d\n  const socket = this;\x0d\n  const req = socket._httpMessage;\x0d\n  debug('HTTP socket close');\x0d\n\x0d\n  // NOTE: It's important to get parser here\x2C because it could be freed by\x0d\n  // the `socketOnData`.\x0d\n  const parser = socket.parser;\x0d\n  const res = req.res;\x0d\n\x0d\n  req.destroyed = true;\x0d\n  if (res) {\x0d\n    // Socket closed before we emitted 'end' below.\x0d\n    if (!res.complete) {\x0d\n      res.destroy(new ConnResetException('aborted'));\x0d\n    }\x0d\n    req._closed = true;\x0d\n    req.emit('close');\x0d\n    if (!res.aborted && res.readable) {\x0d\n      res.push(null);\x0d\n    }\x0d\n  } else {\x0d\n    if (!req.socket._hadError) {\x0d\n      // This socket error fired before we started to\x0d\n      // receive a response. The error needs to\x0d\n      // fire on the request.\x0d\n      req.socket._hadError = true;\x0d\n      req.emit('error'\x2C new ConnResetException('socket hang up'));\x0d\n    }\x0d\n    req._closed = true;\x0d\n    req.emit('close');\x0d\n  }\x0d\n\x0d\n  // Too bad.  That output wasn't getting written.\x0d\n  // This is pretty terrible that it doesn't raise an error.\x0d\n  // Fixed better in v0.10\x0d\n  if (req.outputData)\x0d\n    req.outputData.length = 0;\x0d\n\x0d\n  if (parser) {\x0d\n    parser.finish();\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction socketErrorListener(err) {\x0d\n  const socket = this;\x0d\n  const req = socket._httpMessage;\x0d\n  debug('SOCKET ERROR:'\x2C err.message\x2C err.stack);\x0d\n\x0d\n  if (req) {\x0d\n    // For Safety. Some additional errors might fire later on\x0d\n    // and we need to make sure we don't double-fire the error event.\x0d\n    req.socket._hadError = true;\x0d\n    req.emit('error'\x2C err);\x0d\n  }\x0d\n\x0d\n  const parser = socket.parser;\x0d\n  if (parser) {\x0d\n    parser.finish();\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n  }\x0d\n\x0d\n  // Ensure that no further data will come out of the socket\x0d\n  socket.removeListener('data'\x2C socketOnData);\x0d\n  socket.removeListener('end'\x2C socketOnEnd);\x0d\n  socket.destroy();\x0d\n}\x0d\n\x0d\nfunction socketOnEnd() {\x0d\n  const socket = this;\x0d\n  const req = this._httpMessage;\x0d\n  const parser = this.parser;\x0d\n\x0d\n  if (!req.res && !req.socket._hadError) {\x0d\n    // If we don't have a response then we know that the socket\x0d\n    // ended prematurely and we need to emit an error on the request.\x0d\n    req.socket._hadError = true;\x0d\n    req.emit('error'\x2C new ConnResetException('socket hang up'));\x0d\n  }\x0d\n  if (parser) {\x0d\n    parser.finish();\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n  }\x0d\n  socket.destroy();\x0d\n}\x0d\n\x0d\nfunction socketOnData(d) {\x0d\n  const socket = this;\x0d\n  const req = this._httpMessage;\x0d\n  const parser = this.parser;\x0d\n\x0d\n  assert(parser && parser.socket === socket);\x0d\n\x0d\n  const ret = parser.execute(d);\x0d\n  if (ret instanceof Error) {\x0d\n    prepareError(ret\x2C parser\x2C d);\x0d\n    debug('parse error'\x2C ret);\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n    socket.removeListener('data'\x2C socketOnData);\x0d\n    socket.removeListener('end'\x2C socketOnEnd);\x0d\n    socket.destroy();\x0d\n    req.socket._hadError = true;\x0d\n    req.emit('error'\x2C ret);\x0d\n  } else if (parser.incoming && parser.incoming.upgrade) {\x0d\n    // Upgrade (if status code 101) or CONNECT\x0d\n    const bytesParsed = ret;\x0d\n    const res = parser.incoming;\x0d\n    req.res = res;\x0d\n\x0d\n    socket.removeListener('data'\x2C socketOnData);\x0d\n    socket.removeListener('end'\x2C socketOnEnd);\x0d\n    socket.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C req.timeoutCb);\x0d\n    socket.removeListener('timeout'\x2C responseOnTimeout);\x0d\n\x0d\n    parser.finish();\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n\x0d\n    const bodyHead = TypedArrayPrototypeSlice(d\x2C bytesParsed\x2C d.length);\x0d\n\x0d\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\x0d\n    if (req.listenerCount(eventName) > 0) {\x0d\n      req.upgradeOrConnect = true;\x0d\n\x0d\n      // detach the socket\x0d\n      socket.emit('agentRemove');\x0d\n      socket.removeListener('close'\x2C socketCloseListener);\x0d\n      socket.removeListener('error'\x2C socketErrorListener);\x0d\n\x0d\n      socket._httpMessage = null;\x0d\n      socket.readableFlowing = null;\x0d\n\x0d\n      req.emit(eventName\x2C res\x2C socket\x2C bodyHead);\x0d\n      req.destroyed = true;\x0d\n      req._closed = true;\x0d\n      req.emit('close');\x0d\n    } else {\x0d\n      // Requested Upgrade or used CONNECT method\x2C but have no handler.\x0d\n      socket.destroy();\x0d\n    }\x0d\n  } else if (parser.incoming && parser.incoming.complete &&\x0d\n             // When the status code is informational (100\x2C 102-199)\x2C\x0d\n             // the server will send a final response after this client\x0d\n             // sends a request body\x2C so we must not free the parser.\x0d\n             // 101 (Switching Protocols) and all other status codes\x0d\n             // should be processed normally.\x0d\n             !statusIsInformational(parser.incoming.statusCode)) {\x0d\n    socket.removeListener('data'\x2C socketOnData);\x0d\n    socket.removeListener('end'\x2C socketOnEnd);\x0d\n    socket.removeListener('drain'\x2C ondrain);\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction statusIsInformational(status) {\x0d\n  // 100 (Continue)    RFC7231 Section 6.2.1\x0d\n  // 102 (Processing)  RFC2518\x0d\n  // 103 (Early Hints) RFC8297\x0d\n  // 104-199 (Unassigned)\x0d\n  return (status < 200 && status >= 100 && status !== 101);\x0d\n}\x0d\n\x0d\n// client\x0d\nfunction parserOnIncomingClient(res\x2C shouldKeepAlive) {\x0d\n  const socket = this.socket;\x0d\n  const req = socket._httpMessage;\x0d\n\x0d\n  debug('AGENT incoming response!');\x0d\n\x0d\n  if (req.res) {\x0d\n    // We already have a response object\x2C this means the server\x0d\n    // sent a double response.\x0d\n    socket.destroy();\x0d\n    return 0;  // No special treatment.\x0d\n  }\x0d\n  req.res = res;\x0d\n\x0d\n  // Skip body and treat as Upgrade.\x0d\n  if (res.upgrade)\x0d\n    return 2;\x0d\n\x0d\n  // Responses to CONNECT request is handled as Upgrade.\x0d\n  const method = req.method;\x0d\n  if (method === 'CONNECT') {\x0d\n    res.upgrade = true;\x0d\n    return 2;  // Skip body and treat as Upgrade.\x0d\n  }\x0d\n\x0d\n  if (statusIsInformational(res.statusCode)) {\x0d\n    // Restart the parser\x2C as this is a 1xx informational message.\x0d\n    req.res = null; // Clear res so that we don't hit double-responses.\x0d\n    // Maintain compatibility by sending 100-specific events\x0d\n    if (res.statusCode === 100) {\x0d\n      req.emit('continue');\x0d\n    }\x0d\n    // Send information events to all 1xx responses except 101 Upgrade.\x0d\n    req.emit('information'\x2C {\x0d\n      statusCode: res.statusCode\x2C\x0d\n      statusMessage: res.statusMessage\x2C\x0d\n      httpVersion: res.httpVersion\x2C\x0d\n      httpVersionMajor: res.httpVersionMajor\x2C\x0d\n      httpVersionMinor: res.httpVersionMinor\x2C\x0d\n      headers: res.headers\x2C\x0d\n      rawHeaders: res.rawHeaders\x2C\x0d\n    });\x0d\n\x0d\n    return 1;  // Skip body but don't treat as Upgrade.\x0d\n  }\x0d\n\x0d\n  if (req.shouldKeepAlive && !shouldKeepAlive && !req.upgradeOrConnect) {\x0d\n    // Server MUST respond with Connection:keep-alive for us to enable it.\x0d\n    // If we've been upgraded (via WebSockets) we also shouldn't try to\x0d\n    // keep the connection open.\x0d\n    req.shouldKeepAlive = false;\x0d\n  }\x0d\n\x0d\n  if (req[kClientRequestStatistics] && hasObserver('http')) {\x0d\n    stopPerf(req\x2C kClientRequestStatistics\x2C {\x0d\n      detail: {\x0d\n        res: {\x0d\n          statusCode: res.statusCode\x2C\x0d\n          statusMessage: res.statusMessage\x2C\x0d\n          headers: res.headers\x2C\x0d\n        }\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  if (onClientResponseFinishChannel.hasSubscribers) {\x0d\n    onClientResponseFinishChannel.publish({\x0d\n      request: req\x2C\x0d\n      response: res\x2C\x0d\n    });\x0d\n  }\x0d\n  if (isTraceHTTPEnabled() && typeof req._traceEventId === 'number') {\x0d\n    traceEnd(HTTP_CLIENT_TRACE_EVENT_NAME\x2C req._traceEventId\x2C {\x0d\n      path: req.path\x2C\x0d\n      statusCode: res.statusCode\x2C\x0d\n    });\x0d\n  }\x0d\n  req.res = res;\x0d\n  res.req = req;\x0d\n\x0d\n  // Add our listener first\x2C so that we guarantee socket cleanup\x0d\n  res.on('end'\x2C responseOnEnd);\x0d\n  req.on('finish'\x2C requestOnFinish);\x0d\n  socket.on('timeout'\x2C responseOnTimeout);\x0d\n\x0d\n  // If the user did not listen for the 'response' event\x2C then they\x0d\n  // can't possibly read the data\x2C so we ._dump() it into the void\x0d\n  // so that the socket doesn't hang there in a paused state.\x0d\n  if (req.aborted || !req.emit('response'\x2C res))\x0d\n    res._dump();\x0d\n\x0d\n  if (method === 'HEAD')\x0d\n    return 1;  // Skip body but don't treat as Upgrade.\x0d\n\x0d\n  if (res.statusCode === 304) {\x0d\n    res.complete = true;\x0d\n    return 1; // Skip body as there won't be any\x0d\n  }\x0d\n\x0d\n  return 0;  // No special treatment.\x0d\n}\x0d\n\x0d\n// client\x0d\nfunction responseKeepAlive(req) {\x0d\n  const socket = req.socket;\x0d\n\x0d\n  debug('AGENT socket keep-alive');\x0d\n  if (req.timeoutCb) {\x0d\n    socket.setTimeout(0\x2C req.timeoutCb);\x0d\n    req.timeoutCb = null;\x0d\n  }\x0d\n  socket.removeListener('close'\x2C socketCloseListener);\x0d\n  socket.removeListener('error'\x2C socketErrorListener);\x0d\n  socket.removeListener('data'\x2C socketOnData);\x0d\n  socket.removeListener('end'\x2C socketOnEnd);\x0d\n\x0d\n  // TODO(ronag): Between here and emitFreeNT the socket\x0d\n  // has no 'error' handler.\x0d\n\x0d\n  // There are cases where _handle === null. Avoid those. Passing undefined to\x0d\n  // nextTick() will call getDefaultTriggerAsyncId() to retrieve the id.\x0d\n  const asyncId = socket._handle ? socket._handle.getAsyncId() : undefined;\x0d\n  // Mark this socket as available\x2C AFTER user-added end\x0d\n  // handlers have a chance to run.\x0d\n  defaultTriggerAsyncIdScope(asyncId\x2C process.nextTick\x2C emitFreeNT\x2C req);\x0d\n\x0d\n  req.destroyed = true;\x0d\n  if (req.res) {\x0d\n    // Detach socket from IncomingMessage to avoid destroying the freed\x0d\n    // socket in IncomingMessage.destroy().\x0d\n    req.res.socket = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction responseOnEnd() {\x0d\n  const req = this.req;\x0d\n  const socket = req.socket;\x0d\n\x0d\n  if (socket) {\x0d\n    if (req.timeoutCb) socket.removeListener('timeout'\x2C emitRequestTimeout);\x0d\n    socket.removeListener('timeout'\x2C responseOnTimeout);\x0d\n  }\x0d\n\x0d\n  req._ended = true;\x0d\n\x0d\n  if (!req.shouldKeepAlive) {\x0d\n    if (socket.writable) {\x0d\n      debug('AGENT socket.destroySoon()');\x0d\n      if (typeof socket.destroySoon === 'function')\x0d\n        socket.destroySoon();\x0d\n      else\x0d\n        socket.end();\x0d\n    }\x0d\n    assert(!socket.writable);\x0d\n  } else if (req.writableFinished && !this.aborted) {\x0d\n    assert(req.finished);\x0d\n    // We can assume `req.finished` means all data has been written since:\x0d\n    // - `'responseOnEnd'` means we have been assigned a socket.\x0d\n    // - when we have a socket we write directly to it without buffering.\x0d\n    // - `req.finished` means `end()` has been called and no further data.\x0d\n    //   can be written\x0d\n    // In addition\x2C `req.writableFinished` means all data written has been\x0d\n    // accepted by the kernel. (i.e. the `req.socket` is drained).Without\x0d\n    // this constraint\x2C we may assign a non drained socket to a request.\x0d\n    responseKeepAlive(req);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction responseOnTimeout() {\x0d\n  const req = this._httpMessage;\x0d\n  if (!req) return;\x0d\n  const res = req.res;\x0d\n  if (!res) return;\x0d\n  res.emit('timeout');\x0d\n}\x0d\n\x0d\n// This function is necessary in the case where we receive the entire response\x0d\n// from the server before we finish sending out the request.\x0d\nfunction requestOnFinish() {\x0d\n  const req = this;\x0d\n\x0d\n  if (req.shouldKeepAlive && req._ended)\x0d\n    responseKeepAlive(req);\x0d\n}\x0d\n\x0d\nfunction emitFreeNT(req) {\x0d\n  req._closed = true;\x0d\n  req.emit('close');\x0d\n  if (req.socket) {\x0d\n    req.socket.emit('free');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction tickOnSocket(req\x2C socket) {\x0d\n  const parser = parsers.alloc();\x0d\n  req.socket = socket;\x0d\n  const lenient = req.insecureHTTPParser === undefined ?\x0d\n    isLenient() : req.insecureHTTPParser;\x0d\n  parser.initialize(HTTPParser.RESPONSE\x2C\x0d\n                    new HTTPClientAsyncResource('HTTPINCOMINGMESSAGE'\x2C req)\x2C\x0d\n                    req.maxHeaderSize || 0\x2C\x0d\n                    lenient ? kLenientAll : kLenientNone);\x0d\n  parser.socket = socket;\x0d\n  parser.outgoing = req;\x0d\n  req.parser = parser;\x0d\n\x0d\n  socket.parser = parser;\x0d\n  socket._httpMessage = req;\x0d\n\x0d\n  // Propagate headers limit from request object to parser\x0d\n  if (typeof req.maxHeadersCount === 'number') {\x0d\n    parser.maxHeaderPairs = req.maxHeadersCount << 1;\x0d\n  }\x0d\n\x0d\n  parser.joinDuplicateHeaders = req.joinDuplicateHeaders;\x0d\n\x0d\n  parser.onIncoming = parserOnIncomingClient;\x0d\n  socket.on('error'\x2C socketErrorListener);\x0d\n  socket.on('data'\x2C socketOnData);\x0d\n  socket.on('end'\x2C socketOnEnd);\x0d\n  socket.on('close'\x2C socketCloseListener);\x0d\n  socket.on('drain'\x2C ondrain);\x0d\n\x0d\n  if (\x0d\n    req.timeout !== undefined ||\x0d\n    (req.agent && req.agent.options && req.agent.options.timeout)\x0d\n  ) {\x0d\n    listenSocketTimeout(req);\x0d\n  }\x0d\n  req.emit('socket'\x2C socket);\x0d\n}\x0d\n\x0d\nfunction emitRequestTimeout() {\x0d\n  const req = this._httpMessage;\x0d\n  if (req) {\x0d\n    req.emit('timeout');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction listenSocketTimeout(req) {\x0d\n  if (req.timeoutCb) {\x0d\n    return;\x0d\n  }\x0d\n  // Set timeoutCb so it will get cleaned up on request end.\x0d\n  req.timeoutCb = emitRequestTimeout;\x0d\n  // Delegate socket timeout event.\x0d\n  if (req.socket) {\x0d\n    req.socket.once('timeout'\x2C emitRequestTimeout);\x0d\n  } else {\x0d\n    req.on('socket'\x2C (socket) => {\x0d\n      socket.once('timeout'\x2C emitRequestTimeout);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nClientRequest.prototype.onSocket = function onSocket(socket\x2C err) {\x0d\n  // TODO(ronag): Between here and onSocketNT the socket\x0d\n  // has no 'error' handler.\x0d\n  process.nextTick(onSocketNT\x2C this\x2C socket\x2C err);\x0d\n};\x0d\n\x0d\nfunction onSocketNT(req\x2C socket\x2C err) {\x0d\n  if (req.destroyed || err) {\x0d\n    req.destroyed = true;\x0d\n\x0d\n    function _destroy(req\x2C err) {\x0d\n      if (!req.aborted && !err) {\x0d\n        err = new ConnResetException('socket hang up');\x0d\n      }\x0d\n      if (err) {\x0d\n        req.emit('error'\x2C err);\x0d\n      }\x0d\n      req._closed = true;\x0d\n      req.emit('close');\x0d\n    }\x0d\n\x0d\n    if (socket) {\x0d\n      if (!err && req.agent && !socket.destroyed) {\x0d\n        socket.emit('free');\x0d\n      } else {\x0d\n        finished(socket.destroy(err || req[kError])\x2C (er) => {\x0d\n          if (er?.code === 'ERR_STREAM_PREMATURE_CLOSE') {\x0d\n            er = null;\x0d\n          }\x0d\n          _destroy(req\x2C er || err);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    _destroy(req\x2C err || req[kError]);\x0d\n  } else {\x0d\n    tickOnSocket(req\x2C socket);\x0d\n    req._flush();\x0d\n  }\x0d\n}\x0d\n\x0d\nClientRequest.prototype._deferToConnect = _deferToConnect;\x0d\nfunction _deferToConnect(method\x2C arguments_) {\x0d\n  // This function is for calls that need to happen once the socket is\x0d\n  // assigned to this request and writable. It's an important promisy\x0d\n  // thing for all the socket calls that happen either now\x0d\n  // (when a socket is assigned) or in the future (when a socket gets\x0d\n  // assigned out of the pool and is eventually writable).\x0d\n\x0d\n  const callSocketMethod = () => {\x0d\n    if (method)\x0d\n      ReflectApply(this.socket[method]\x2C this.socket\x2C arguments_);\x0d\n  };\x0d\n\x0d\n  const onSocket = () => {\x0d\n    if (this.socket.writable) {\x0d\n      callSocketMethod();\x0d\n    } else {\x0d\n      this.socket.once('connect'\x2C callSocketMethod);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  if (!this.socket) {\x0d\n    this.once('socket'\x2C onSocket);\x0d\n  } else {\x0d\n    onSocket();\x0d\n  }\x0d\n}\x0d\n\x0d\nClientRequest.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\x0d\n  if (this._ended) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  listenSocketTimeout(this);\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n  if (callback) this.once('timeout'\x2C callback);\x0d\n\x0d\n  if (this.socket) {\x0d\n    setSocketTimeout(this.socket\x2C msecs);\x0d\n  } else {\x0d\n    this.once('socket'\x2C (sock) => setSocketTimeout(sock\x2C msecs));\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction setSocketTimeout(sock\x2C msecs) {\x0d\n  if (sock.connecting) {\x0d\n    sock.once('connect'\x2C function() {\x0d\n      sock.setTimeout(msecs);\x0d\n    });\x0d\n  } else {\x0d\n    sock.setTimeout(msecs);\x0d\n  }\x0d\n}\x0d\n\x0d\nClientRequest.prototype.setNoDelay = function setNoDelay(noDelay) {\x0d\n  this._deferToConnect('setNoDelay'\x2C [noDelay]);\x0d\n};\x0d\n\x0d\nClientRequest.prototype.setSocketKeepAlive =\x0d\n    function setSocketKeepAlive(enable\x2C initialDelay) {\x0d\n      this._deferToConnect('setKeepAlive'\x2C [enable\x2C initialDelay]);\x0d\n    };\x0d\n\x0d\nClientRequest.prototype.clearTimeout = function clearTimeout(cb) {\x0d\n  this.setTimeout(0\x2C cb);\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  ClientRequest\x2C\x0d\n};\x0d\n
code-source-info,0x2ce89f3dc3c,166,0,29260,C0O0C4O29260,,
code-creation,JS,10,233581,0x2ce89f3ed74,1084, node:_http_client:1:1,0x2ce89f3dbb0,~
code-source-info,0x2ce89f3ed
code-creation,Eval,10,234094,0x395cad5a8e4,5, node:_http_common:1:1,0x395cad5a5c0,~
script-source,167,node:_http_common,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  MathMin\x2C\x0d\n  Symbol\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { setImmediate } = require('timers');\x0d\n\x0d\nconst { methods\x2C HTTPParser } = internalBinding('http_parser');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst insecureHTTPParser = getOptionValue('--insecure-http-parser');\x0d\n\x0d\nconst FreeList = require('internal/freelist');\x0d\nconst incoming = require('_http_incoming');\x0d\nconst {\x0d\n  IncomingMessage\x2C\x0d\n  readStart\x2C\x0d\n  readStop\x2C\x0d\n} = incoming;\x0d\n\x0d\nconst kIncomingMessage = Symbol('IncomingMessage');\x0d\nconst kOnMessageBegin = HTTPParser.kOnMessageBegin | 0;\x0d\nconst kOnHeaders = HTTPParser.kOnHeaders | 0;\x0d\nconst kOnHeadersComplete = HTTPParser.kOnHeadersComplete | 0;\x0d\nconst kOnBody = HTTPParser.kOnBody | 0;\x0d\nconst kOnMessageComplete = HTTPParser.kOnMessageComplete | 0;\x0d\nconst kOnExecute = HTTPParser.kOnExecute | 0;\x0d\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\x0d\n\x0d\nconst MAX_HEADER_PAIRS = 2000;\x0d\n\x0d\n// Only called in the slow case where slow means\x0d\n// that the request headers were either fragmented\x0d\n// across multiple TCP packets or too large to be\x0d\n// processed in a single run. This method is also\x0d\n// called to process trailing HTTP headers.\x0d\nfunction parserOnHeaders(headers\x2C url) {\x0d\n  // Once we exceeded headers limit - stop collecting them\x0d\n  if (this.maxHeaderPairs <= 0 ||\x0d\n      this._headers.length < this.maxHeaderPairs) {\x0d\n    this._headers.push(...headers);\x0d\n  }\x0d\n  this._url += url;\x0d\n}\x0d\n\x0d\n// `headers` and `url` are set only if .onHeaders() has not been called for\x0d\n// this request.\x0d\n// `url` is not set for response parsers but that's not applicable here since\x0d\n// all our parsers are request parsers.\x0d\nfunction parserOnHeadersComplete(versionMajor\x2C versionMinor\x2C headers\x2C method\x2C\x0d\n                                 url\x2C statusCode\x2C statusMessage\x2C upgrade\x2C\x0d\n                                 shouldKeepAlive) {\x0d\n  const parser = this;\x0d\n  const { socket } = parser;\x0d\n\x0d\n  if (headers === undefined) {\x0d\n    headers = parser._headers;\x0d\n    parser._headers = [];\x0d\n  }\x0d\n\x0d\n  if (url === undefined) {\x0d\n    url = parser._url;\x0d\n    parser._url = '';\x0d\n  }\x0d\n\x0d\n  // Parser is also used by http client\x0d\n  const ParserIncomingMessage = (socket && socket.server &&\x0d\n                                 socket.server[kIncomingMessage]) ||\x0d\n                                 IncomingMessage;\x0d\n\x0d\n  const incoming = parser.incoming = new ParserIncomingMessage(socket);\x0d\n  incoming.httpVersionMajor = versionMajor;\x0d\n  incoming.httpVersionMinor = versionMinor;\x0d\n  incoming.httpVersion = `${versionMajor}.${versionMinor}`;\x0d\n  incoming.joinDuplicateHeaders = socket?.server?.joinDuplicateHeaders ||\x0d\n                                  parser.joinDuplicateHeaders;\x0d\n  incoming.url = url;\x0d\n  incoming.upgrade = upgrade;\x0d\n\x0d\n  let n = headers.length;\x0d\n\x0d\n  // If parser.maxHeaderPairs <= 0 assume that there's no limit.\x0d\n  if (parser.maxHeaderPairs > 0)\x0d\n    n = MathMin(n\x2C parser.maxHeaderPairs);\x0d\n\x0d\n  incoming._addHeaderLines(headers\x2C n);\x0d\n\x0d\n  if (typeof method === 'number') {\x0d\n    // server only\x0d\n    incoming.method = methods[method];\x0d\n  } else {\x0d\n    // client only\x0d\n    incoming.statusCode = statusCode;\x0d\n    incoming.statusMessage = statusMessage;\x0d\n  }\x0d\n\x0d\n  return parser.onIncoming(incoming\x2C shouldKeepAlive);\x0d\n}\x0d\n\x0d\nfunction parserOnBody(b) {\x0d\n  const stream = this.incoming;\x0d\n\x0d\n  // If the stream has already been removed\x2C then drop it.\x0d\n  if (stream === null)\x0d\n    return;\x0d\n\x0d\n  // Pretend this was the result of a stream._read call.\x0d\n  if (!stream._dumped) {\x0d\n    const ret = stream.push(b);\x0d\n    if (!ret)\x0d\n      readStop(this.socket);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction parserOnMessageComplete() {\x0d\n  const parser = this;\x0d\n  const stream = parser.incoming;\x0d\n\x0d\n  if (stream !== null) {\x0d\n    stream.complete = true;\x0d\n    // Emit any trailing headers.\x0d\n    const headers = parser._headers;\x0d\n    if (headers.length) {\x0d\n      stream._addHeaderLines(headers\x2C headers.length);\x0d\n      parser._headers = [];\x0d\n      parser._url = '';\x0d\n    }\x0d\n\x0d\n    // For emit end event\x0d\n    stream.push(null);\x0d\n  }\x0d\n\x0d\n  // Force to read the next incoming message\x0d\n  readStart(parser.socket);\x0d\n}\x0d\n\x0d\n\x0d\nconst parsers = new FreeList('parsers'\x2C 1000\x2C function parsersCb() {\x0d\n  const parser = new HTTPParser();\x0d\n\x0d\n  cleanParser(parser);\x0d\n\x0d\n  parser[kOnHeaders] = parserOnHeaders;\x0d\n  parser[kOnHeadersComplete] = parserOnHeadersComplete;\x0d\n  parser[kOnBody] = parserOnBody;\x0d\n  parser[kOnMessageComplete] = parserOnMessageComplete;\x0d\n\x0d\n  return parser;\x0d\n});\x0d\n\x0d\nfunction closeParserInstance(parser) { parser.close(); }\x0d\n\x0d\n// Free the parser and also break any links that it\x0d\n// might have to any other things.\x0d\n// TODO: All parser data should be attached to a\x0d\n// single object\x2C so that it can be easily cleaned\x0d\n// up by doing `parser.data = {}`\x2C which should\x0d\n// be done in FreeList.free.  `parsers.free(parser)`\x0d\n// should be all that is needed.\x0d\nfunction freeParser(parser\x2C req\x2C socket) {\x0d\n  if (parser) {\x0d\n    if (parser._consumed)\x0d\n      parser.unconsume();\x0d\n    cleanParser(parser);\x0d\n    parser.remove();\x0d\n    if (parsers.free(parser) === false) {\x0d\n      // Make sure the parser's stack has unwound before deleting the\x0d\n      // corresponding C++ object through .close().\x0d\n      setImmediate(closeParserInstance\x2C parser);\x0d\n    } else {\x0d\n      // Since the Parser destructor isn't going to run the destroy() callbacks\x0d\n      // it needs to be triggered manually.\x0d\n      parser.free();\x0d\n    }\x0d\n  }\x0d\n  if (req) {\x0d\n    req.parser = null;\x0d\n  }\x0d\n  if (socket) {\x0d\n    socket.parser = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst tokenRegExp = /^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$/;\x0d\n/**\x0d\n * Verifies that the given val is a valid HTTP token\x0d\n * per the rules defined in RFC 7230\x0d\n * See https://tools.ietf.org/html/rfc7230#section-3.2.6\x0d\n */\x0d\nfunction checkIsHttpToken(val) {\x0d\n  return RegExpPrototypeExec(tokenRegExp\x2C val) !== null;\x0d\n}\x0d\n\x0d\nconst headerCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\x0d\n/**\x0d\n * True if val contains an invalid field-vchar\x0d\n *  field-value    = *( field-content / obs-fold )\x0d\n *  field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\x0d\n *  field-vchar    = VCHAR / obs-text\x0d\n */\x0d\nfunction checkInvalidHeaderChar(val) {\x0d\n  return RegExpPrototypeExec(headerCharRegex\x2C val) !== null;\x0d\n}\x0d\n\x0d\nfunction cleanParser(parser) {\x0d\n  parser._headers = [];\x0d\n  parser._url = '';\x0d\n  parser.socket = null;\x0d\n  parser.incoming = null;\x0d\n  parser.outgoing = null;\x0d\n  parser.maxHeaderPairs = MAX_HEADER_PAIRS;\x0d\n  parser[kOnMessageBegin] = null;\x0d\n  parser[kOnExecute] = null;\x0d\n  parser[kOnTimeout] = null;\x0d\n  parser._consumed = false;\x0d\n  parser.onIncoming = null;\x0d\n  parser.joinDuplicateHeaders = null;\x0d\n}\x0d\n\x0d\nfunction prepareError(err\x2C parser\x2C rawPacket) {\x0d\n  err.rawPacket = rawPacket || parser.getCurrentBuffer();\x0d\n  if (typeof err.reason === 'string')\x0d\n    err.message = `Parse Error: ${err.reason}`;\x0d\n}\x0d\n\x0d\nlet warnedLenient = false;\x0d\n\x0d\nfunction isLenient() {\x0d\n  if (insecureHTTPParser && !warnedLenient) {\x0d\n    warnedLenient = true;\x0d\n    process.emitWarning('Using insecure HTTP parsing');\x0d\n  }\x0d\n  return insecureHTTPParser;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\x0d\n  _checkIsHttpToken: checkIsHttpToken\x2C\x0d\n  chunkExpression: /(?:^|\\W)chunked(?:$|\\W)/i\x2C\x0d\n  continueExpression: /(?:^|\\W)100-continue(?:$|\\W)/i\x2C\x0d\n  CRLF: '\\r\\n'\x2C // TODO: Deprecate this.\x0d\n  freeParser\x2C\x0d\n  methods\x2C\x0d\n  parsers\x2C\x0d\n  kIncomingMessage\x2C\x0d\n  HTTPParser\x2C\x0d\n  isLenient\x2C\x0d\n  prepareError\x2C\x0d\n};\x0d\n
code-source-info,0x395cad5a8e4,167,0,8532,C0O0C4O8532,,
code-creation,JS,10,234431,0x395cad5afec,466, node:_http_common:1:1,0x395cad5a858,~
code-source-info,0x395cad5afec
code-creation,Eval,10,234814,0x395cad5d91c,5, node:internal/freelist:1:1,0x395cad5d7b8,~
script-source,168,node:internal/freelist,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nclass FreeList {\x0d\n  constructor(name\x2C max\x2C ctor) {\x0d\n    this.name = name;\x0d\n    this.ctor = ctor;\x0d\n    this.max = max;\x0d\n    this.list = [];\x0d\n  }\x0d\n\x0d\n  alloc() {\x0d\n    return this.list.length > 0 ?\x0d\n      this.list.pop() :\x0d\n      ReflectApply(this.ctor\x2C this\x2C arguments);\x0d\n  }\x0d\n\x0d\n  free(obj) {\x0d\n    if (this.list.length < this.max) {\x0d\n      this.list.push(obj);\x0d\n      return true;\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = FreeList;\x0d\n
code-source-info,0x395cad5d91c,168,0,506,C0O0C4O506,,
code-creation,JS,10,234863,0x395cad5dc3c,53, node:internal/freelist:1:1,0x395cad5d890,~
code-source-info,0x395cad5dc3c,168,0,506,C0O0C8O28C45O478C47O493C52O505,,
code-creation,Eval,10,235184,0x395cad5f26c,5, node:_http_incoming:1:1,0x395cad5f028,~
script-source,169,node:_http_incoming,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Readable\x2C finished } = require('stream');\x0d\n\x0d\nconst kHeaders = Symbol('kHeaders');\x0d\nconst kHeadersDistinct = Symbol('kHeadersDistinct');\x0d\nconst kHeadersCount = Symbol('kHeadersCount');\x0d\nconst kTrailers = Symbol('kTrailers');\x0d\nconst kTrailersDistinct = Symbol('kTrailersDistinct');\x0d\nconst kTrailersCount = Symbol('kTrailersCount');\x0d\n\x0d\nfunction readStart(socket) {\x0d\n  if (socket && !socket._paused && socket.readable)\x0d\n    socket.resume();\x0d\n}\x0d\n\x0d\nfunction readStop(socket) {\x0d\n  if (socket)\x0d\n    socket.pause();\x0d\n}\x0d\n\x0d\n/* Abstract base class for ServerRequest and ClientResponse. */\x0d\nfunction IncomingMessage(socket) {\x0d\n  let streamOptions;\x0d\n\x0d\n  if (socket) {\x0d\n    streamOptions = {\x0d\n      highWaterMark: socket.readableHighWaterMark\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  Readable.call(this\x2C streamOptions);\x0d\n\x0d\n  this._readableState.readingMore = true;\x0d\n\x0d\n  this.socket = socket;\x0d\n\x0d\n  this.httpVersionMajor = null;\x0d\n  this.httpVersionMinor = null;\x0d\n  this.httpVersion = null;\x0d\n  this.complete = false;\x0d\n  this[kHeaders] = null;\x0d\n  this[kHeadersCount] = 0;\x0d\n  this.rawHeaders = [];\x0d\n  this[kTrailers] = null;\x0d\n  this[kTrailersCount] = 0;\x0d\n  this.rawTrailers = [];\x0d\n  this.joinDuplicateHeaders = false;\x0d\n  this.aborted = false;\x0d\n\x0d\n  this.upgrade = null;\x0d\n\x0d\n  // request (server) only\x0d\n  this.url = '';\x0d\n  this.method = null;\x0d\n\x0d\n  // response (client) only\x0d\n  this.statusCode = null;\x0d\n  this.statusMessage = null;\x0d\n  this.client = socket;\x0d\n\x0d\n  this._consuming = false;\x0d\n  // Flag for when we decide that this message cannot possibly be\x0d\n  // read by the user\x2C so there's no point continuing to handle it.\x0d\n  this._dumped = false;\x0d\n}\x0d\nObjectSetPrototypeOf(IncomingMessage.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(IncomingMessage\x2C Readable);\x0d\n\x0d\nObjectDefineProperty(IncomingMessage.prototype\x2C 'connection'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this.socket;\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    this.socket = val;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(IncomingMessage.prototype\x2C 'headers'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (!this[kHeaders]) {\x0d\n      this[kHeaders] = {};\x0d\n\x0d\n      const src = this.rawHeaders;\x0d\n      const dst = this[kHeaders];\x0d\n\x0d\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\x0d\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\x0d\n      }\x0d\n    }\x0d\n    return this[kHeaders];\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    this[kHeaders] = val;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(IncomingMessage.prototype\x2C 'headersDistinct'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (!this[kHeadersDistinct]) {\x0d\n      this[kHeadersDistinct] = {};\x0d\n\x0d\n      const src = this.rawHeaders;\x0d\n      const dst = this[kHeadersDistinct];\x0d\n\x0d\n      for (let n = 0; n < this[kHeadersCount]; n += 2) {\x0d\n        this._addHeaderLineDistinct(src[n + 0]\x2C src[n + 1]\x2C dst);\x0d\n      }\x0d\n    }\x0d\n    return this[kHeadersDistinct];\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    this[kHeadersDistinct] = val;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(IncomingMessage.prototype\x2C 'trailers'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (!this[kTrailers]) {\x0d\n      this[kTrailers] = {};\x0d\n\x0d\n      const src = this.rawTrailers;\x0d\n      const dst = this[kTrailers];\x0d\n\x0d\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\x0d\n        this._addHeaderLine(src[n + 0]\x2C src[n + 1]\x2C dst);\x0d\n      }\x0d\n    }\x0d\n    return this[kTrailers];\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    this[kTrailers] = val;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(IncomingMessage.prototype\x2C 'trailersDistinct'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (!this[kTrailersDistinct]) {\x0d\n      this[kTrailersDistinct] = {};\x0d\n\x0d\n      const src = this.rawTrailers;\x0d\n      const dst = this[kTrailersDistinct];\x0d\n\x0d\n      for (let n = 0; n < this[kTrailersCount]; n += 2) {\x0d\n        this._addHeaderLineDistinct(src[n + 0]\x2C src[n + 1]\x2C dst);\x0d\n      }\x0d\n    }\x0d\n    return this[kTrailersDistinct];\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    this[kTrailersDistinct] = val;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nIncomingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\x0d\n  if (callback)\x0d\n    this.on('timeout'\x2C callback);\x0d\n  this.socket.setTimeout(msecs);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Argument n cannot be factored out due to the overhead of\x0d\n// argument adaptor frame creation inside V8 in case that number of actual\x0d\n// arguments is different from expected arguments.\x0d\n// Ref: https://bugs.chromium.org/p/v8/issues/detail?id=10201\x0d\n// NOTE: Argument adapt frame issue might be solved in V8 engine v8.9.\x0d\n// Refactoring `n` out might be possible when V8 is upgraded to that\x0d\n// version.\x0d\n// Ref: https://v8.dev/blog/v8-release-89\x0d\nIncomingMessage.prototype._read = function _read(n) {\x0d\n  if (!this._consuming) {\x0d\n    this._readableState.readingMore = false;\x0d\n    this._consuming = true;\x0d\n  }\x0d\n\x0d\n  // We actually do almost nothing here\x2C because the parserOnBody\x0d\n  // function fills up our internal buffer directly.  However\x2C we\x0d\n  // do need to unpause the underlying socket so that it flows.\x0d\n  if (this.socket.readable)\x0d\n    readStart(this.socket);\x0d\n};\x0d\n\x0d\n// It's possible that the socket will be destroyed\x2C and removed from\x0d\n// any messages\x2C before ever calling this.  In that case\x2C just skip\x0d\n// it\x2C since something else is destroying this connection anyway.\x0d\nIncomingMessage.prototype._destroy = function _destroy(err\x2C cb) {\x0d\n  if (!this.readableEnded || !this.complete) {\x0d\n    this.aborted = true;\x0d\n    this.emit('aborted');\x0d\n  }\x0d\n\x0d\n  // If aborted and the underlying socket is not already destroyed\x2C\x0d\n  // destroy it.\x0d\n  // We have to check if the socket is already destroyed because finished\x0d\n  // does not call the callback when this method is invoked from `_http_client`\x0d\n  // in `test/parallel/test-http-client-spurious-aborted.js`\x0d\n  if (this.socket && !this.socket.destroyed && this.aborted) {\x0d\n    this.socket.destroy(err);\x0d\n    const cleanup = finished(this.socket\x2C (e) => {\x0d\n      if (e?.code === 'ERR_STREAM_PREMATURE_CLOSE') {\x0d\n        e = null;\x0d\n      }\x0d\n      cleanup();\x0d\n      process.nextTick(onError\x2C this\x2C e || err\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(onError\x2C this\x2C err\x2C cb);\x0d\n  }\x0d\n};\x0d\n\x0d\nIncomingMessage.prototype._addHeaderLines = _addHeaderLines;\x0d\nfunction _addHeaderLines(headers\x2C n) {\x0d\n  if (headers && headers.length) {\x0d\n    let dest;\x0d\n    if (this.complete) {\x0d\n      this.rawTrailers = headers;\x0d\n      this[kTrailersCount] = n;\x0d\n      dest = this[kTrailers];\x0d\n    } else {\x0d\n      this.rawHeaders = headers;\x0d\n      this[kHeadersCount] = n;\x0d\n      dest = this[kHeaders];\x0d\n    }\x0d\n\x0d\n    if (dest) {\x0d\n      for (let i = 0; i < n; i += 2) {\x0d\n        this._addHeaderLine(headers[i]\x2C headers[i + 1]\x2C dest);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This function is used to help avoid the lowercasing of a field name if it\x0d\n// matches a 'traditional cased' version of a field name. It then returns the\x0d\n// lowercased name to both avoid calling toLowerCase() a second time and to\x0d\n// indicate whether the field was a 'no duplicates' field. If a field is not a\x0d\n// 'no duplicates' field\x2C a `0` byte is prepended as a flag. The one exception\x0d\n// to this is the Set-Cookie header which is indicated by a `1` byte flag\x2C since\x0d\n// it is an 'array' field and thus is treated differently in _addHeaderLines().\x0d\n// TODO: perhaps http_parser could be returning both raw and lowercased versions\x0d\n// of known header names to avoid us having to call toLowerCase() for those\x0d\n// headers.\x0d\nfunction matchKnownFields(field\x2C lowercased) {\x0d\n  switch (field.length) {\x0d\n    case 3:\x0d\n      if (field === 'Age' || field === 'age') return 'age';\x0d\n      break;\x0d\n    case 4:\x0d\n      if (field === 'Host' || field === 'host') return 'host';\x0d\n      if (field === 'From' || field === 'from') return 'from';\x0d\n      if (field === 'ETag' || field === 'etag') return 'etag';\x0d\n      if (field === 'Date' || field === 'date') return '\\u0000date';\x0d\n      if (field === 'Vary' || field === 'vary') return '\\u0000vary';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (field === 'Server' || field === 'server') return 'server';\x0d\n      if (field === 'Cookie' || field === 'cookie') return '\\u0002cookie';\x0d\n      if (field === 'Origin' || field === 'origin') return '\\u0000origin';\x0d\n      if (field === 'Expect' || field === 'expect') return '\\u0000expect';\x0d\n      if (field === 'Accept' || field === 'accept') return '\\u0000accept';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (field === 'Referer' || field === 'referer') return 'referer';\x0d\n      if (field === 'Expires' || field === 'expires') return 'expires';\x0d\n      if (field === 'Upgrade' || field === 'upgrade') return '\\u0000upgrade';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (field === 'Location' || field === 'location')\x0d\n        return 'location';\x0d\n      if (field === 'If-Match' || field === 'if-match')\x0d\n        return '\\u0000if-match';\x0d\n      break;\x0d\n    case 10:\x0d\n      if (field === 'User-Agent' || field === 'user-agent')\x0d\n        return 'user-agent';\x0d\n      if (field === 'Set-Cookie' || field === 'set-cookie')\x0d\n        return '\\u0001';\x0d\n      if (field === 'Connection' || field === 'connection')\x0d\n        return '\\u0000connection';\x0d\n      break;\x0d\n    case 11:\x0d\n      if (field === 'Retry-After' || field === 'retry-after')\x0d\n        return 'retry-after';\x0d\n      break;\x0d\n    case 12:\x0d\n      if (field === 'Content-Type' || field === 'content-type')\x0d\n        return 'content-type';\x0d\n      if (field === 'Max-Forwards' || field === 'max-forwards')\x0d\n        return 'max-forwards';\x0d\n      break;\x0d\n    case 13:\x0d\n      if (field === 'Authorization' || field === 'authorization')\x0d\n        return 'authorization';\x0d\n      if (field === 'Last-Modified' || field === 'last-modified')\x0d\n        return 'last-modified';\x0d\n      if (field === 'Cache-Control' || field === 'cache-control')\x0d\n        return '\\u0000cache-control';\x0d\n      if (field === 'If-None-Match' || field === 'if-none-match')\x0d\n        return '\\u0000if-none-match';\x0d\n      break;\x0d\n    case 14:\x0d\n      if (field === 'Content-Length' || field === 'content-length')\x0d\n        return 'content-length';\x0d\n      break;\x0d\n    case 15:\x0d\n      if (field === 'Accept-Encoding' || field === 'accept-encoding')\x0d\n        return '\\u0000accept-encoding';\x0d\n      if (field === 'Accept-Language' || field === 'accept-language')\x0d\n        return '\\u0000accept-language';\x0d\n      if (field === 'X-Forwarded-For' || field === 'x-forwarded-for')\x0d\n        return '\\u0000x-forwarded-for';\x0d\n      break;\x0d\n    case 16:\x0d\n      if (field === 'Content-Encoding' || field === 'content-encoding')\x0d\n        return '\\u0000content-encoding';\x0d\n      if (field === 'X-Forwarded-Host' || field === 'x-forwarded-host')\x0d\n        return '\\u0000x-forwarded-host';\x0d\n      break;\x0d\n    case 17:\x0d\n      if (field === 'If-Modified-Since' || field === 'if-modified-since')\x0d\n        return 'if-modified-since';\x0d\n      if (field === 'Transfer-Encoding' || field === 'transfer-encoding')\x0d\n        return '\\u0000transfer-encoding';\x0d\n      if (field === 'X-Forwarded-Proto' || field === 'x-forwarded-proto')\x0d\n        return '\\u0000x-forwarded-proto';\x0d\n      break;\x0d\n    case 19:\x0d\n      if (field === 'Proxy-Authorization' || field === 'proxy-authorization')\x0d\n        return 'proxy-authorization';\x0d\n      if (field === 'If-Unmodified-Since' || field === 'if-unmodified-since')\x0d\n        return 'if-unmodified-since';\x0d\n      break;\x0d\n  }\x0d\n  if (lowercased) {\x0d\n    return '\\u0000' + field;\x0d\n  }\x0d\n  return matchKnownFields(StringPrototypeToLowerCase(field)\x2C true);\x0d\n}\x0d\n// Add the given (field\x2C value) pair to the message\x0d\n//\x0d\n// Per RFC2616\x2C section 4.2 it is acceptable to join multiple instances of the\x0d\n// same header with a '\x2C ' if the header in question supports specification of\x0d\n// multiple values this way. The one exception to this is the Cookie header\x2C\x0d\n// which has multiple values joined with a '; ' instead. If a header's values\x0d\n// cannot be joined in either of these ways\x2C we declare the first instance the\x0d\n// winner and drop the second. Extended header fields (those beginning with\x0d\n// 'x-') are always joined.\x0d\nIncomingMessage.prototype._addHeaderLine = _addHeaderLine;\x0d\nfunction _addHeaderLine(field\x2C value\x2C dest) {\x0d\n  field = matchKnownFields(field);\x0d\n  const flag = StringPrototypeCharCodeAt(field\x2C 0);\x0d\n  if (flag === 0 || flag === 2) {\x0d\n    field = StringPrototypeSlice(field\x2C 1);\x0d\n    // Make a delimited list\x0d\n    if (typeof dest[field] === 'string') {\x0d\n      dest[field] += (flag === 0 ? '\x2C ' : '; ') + value;\x0d\n    } else {\x0d\n      dest[field] = value;\x0d\n    }\x0d\n  } else if (flag === 1) {\x0d\n    // Array header -- only Set-Cookie at the moment\x0d\n    if (dest['set-cookie'] !== undefined) {\x0d\n      dest['set-cookie'].push(value);\x0d\n    } else {\x0d\n      dest['set-cookie'] = [value];\x0d\n    }\x0d\n  } else if (this.joinDuplicateHeaders) {\x0d\n    // RFC 9110 https://www.rfc-editor.org/rfc/rfc9110#section-5.2\x0d\n    // https://github.com/nodejs/node/issues/45699\x0d\n    // allow authorization multiple fields\x0d\n    // Make a delimited list\x0d\n    if (dest[field] === undefined) {\x0d\n      dest[field] = value;\x0d\n    } else {\x0d\n      dest[field] += '\x2C ' + value;\x0d\n    }\x0d\n  } else if (dest[field] === undefined) {\x0d\n    // Drop duplicates\x0d\n    dest[field] = value;\x0d\n  }\x0d\n}\x0d\n\x0d\nIncomingMessage.prototype._addHeaderLineDistinct = _addHeaderLineDistinct;\x0d\nfunction _addHeaderLineDistinct(field\x2C value\x2C dest) {\x0d\n  field = StringPrototypeToLowerCase(field);\x0d\n  if (!dest[field]) {\x0d\n    dest[field] = [value];\x0d\n  } else {\x0d\n    dest[field].push(value);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// Call this instead of resume() if we want to just\x0d\n// dump all the data to /dev/null\x0d\nIncomingMessage.prototype._dump = function _dump() {\x0d\n  if (!this._dumped) {\x0d\n    this._dumped = true;\x0d\n    // If there is buffered data\x2C it may trigger 'data' events.\x0d\n    // Remove 'data' event listeners explicitly.\x0d\n    this.removeAllListeners('data');\x0d\n    this.resume();\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction onError(self\x2C error\x2C cb) {\x0d\n  // This is to keep backward compatible behavior.\x0d\n  // An error is emitted only if there are listeners attached to the event.\x0d\n  if (self.listenerCount('error') === 0) {\x0d\n    cb();\x0d\n  } else {\x0d\n    cb(error);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  IncomingMessage\x2C\x0d\n  readStart\x2C\x0d\n  readStop\x2C\x0d\n};\x0d\n
code-source-info,0x395cad5f26c,169,0,15359,C0O0C4O15359,,
code-creation,JS,10,235956,0x395cad5fffc,504, node:_http_incoming:1:1,0x395cad5f1e0,~
code-source-info,0x395cad5fffc
code-creation,JS,10,236191,0x395cad60a44,26,FreeList node:internal/freelist:8:14,0x395cad5d950,~
code-source-info,0x395cad60a44,168,94,206,C0O119C2O129C6O142C8O152C12O165C14O174C18O186C20O196C25O205,,
code-creation,Eval,10,236996,0x395cad64834,5, node:_http_outgoing:1:1,0x395cad642b0,~
script-source,170,node:_http_outgoing,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  MathFloor\x2C\x0d\n  NumberPrototypeToString\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\x0d\nconst assert = require('internal/assert');\x0d\nconst EE = require('events');\x0d\nconst Stream = require('stream');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst { kOutHeaders\x2C utcDate\x2C kNeedDrain } = require('internal/http');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  _checkIsHttpToken: checkIsHttpToken\x2C\x0d\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\x0d\n  chunkExpression: RE_TE_CHUNKED\x2C\x0d\n} = require('_http_common');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_HTTP_CONTENT_LENGTH_MISMATCH\x2C\x0d\n    ERR_HTTP_HEADERS_SENT\x2C\x0d\n    ERR_HTTP_INVALID_HEADER_VALUE\x2C\x0d\n    ERR_HTTP_TRAILER_INVALID\x2C\x0d\n    ERR_HTTP_BODY_NOT_ALLOWED\x2C\x0d\n    ERR_INVALID_HTTP_TOKEN\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_CHAR\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n    ERR_STREAM_CANNOT_PIPE\x2C\x0d\n    ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n    ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n    ERR_STREAM_NULL_VALUES\x2C\x0d\n    ERR_STREAM_DESTROYED\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst kCorked = Symbol('corked');\x0d\nconst kSocket = Symbol('kSocket');\x0d\nconst kChunkedBuffer = Symbol('kChunkedBuffer');\x0d\nconst kChunkedLength = Symbol('kChunkedLength');\x0d\nconst kUniqueHeaders = Symbol('kUniqueHeaders');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kErrored = Symbol('errored');\x0d\nconst kHighWaterMark = Symbol('kHighWaterMark');\x0d\nconst kRejectNonStandardBodyWrites = Symbol('kRejectNonStandardBodyWrites');\x0d\n\x0d\nconst nop = () => {};\x0d\n\x0d\nconst RE_CONN_CLOSE = /(?:^|\\W)close(?:$|\\W)/i;\x0d\n\x0d\n// isCookieField performs a case-insensitive comparison of a provided string\x0d\n// against the word "cookie." As of V8 6.6 this is faster than handrolling or\x0d\n// using a case-insensitive RegExp.\x0d\nfunction isCookieField(s) {\x0d\n  return s.length === 6 && StringPrototypeToLowerCase(s) === 'cookie';\x0d\n}\x0d\n\x0d\nfunction isContentDispositionField(s) {\x0d\n  return s.length === 19 && StringPrototypeToLowerCase(s) === 'content-disposition';\x0d\n}\x0d\n\x0d\nfunction OutgoingMessage(options) {\x0d\n  Stream.call(this);\x0d\n\x0d\n  // Queue that holds all currently pending data\x2C until the response will be\x0d\n  // assigned to the socket (until it will its turn in the HTTP pipeline).\x0d\n  this.outputData = [];\x0d\n\x0d\n  // `outputSize` is an approximate measure of how much data is queued on this\x0d\n  // response. `_onPendingData` will be invoked to update similar global\x0d\n  // per-connection counter. That counter will be used to pause/unpause the\x0d\n  // TCP socket and HTTP Parser and thus handle the backpressure.\x0d\n  this.outputSize = 0;\x0d\n\x0d\n  this.writable = true;\x0d\n  this.destroyed = false;\x0d\n\x0d\n  this._last = false;\x0d\n  this.chunkedEncoding = false;\x0d\n  this.shouldKeepAlive = true;\x0d\n  this.maxRequestsOnConnectionReached = false;\x0d\n  this._defaultKeepAlive = true;\x0d\n  this.useChunkedEncodingByDefault = true;\x0d\n  this.sendDate = false;\x0d\n  this._removedConnection = false;\x0d\n  this._removedContLen = false;\x0d\n  this._removedTE = false;\x0d\n\x0d\n  this.strictContentLength = false;\x0d\n  this[kBytesWritten] = 0;\x0d\n  this._contentLength = null;\x0d\n  this._hasBody = true;\x0d\n  this._trailer = '';\x0d\n  this[kNeedDrain] = false;\x0d\n\x0d\n  this.finished = false;\x0d\n  this._headerSent = false;\x0d\n  this[kCorked] = 0;\x0d\n  this[kChunkedBuffer] = [];\x0d\n  this[kChunkedLength] = 0;\x0d\n  this._closed = false;\x0d\n\x0d\n  this[kSocket] = null;\x0d\n  this._header = null;\x0d\n  this[kOutHeaders] = null;\x0d\n\x0d\n  this._keepAliveTimeout = 0;\x0d\n\x0d\n  this._onPendingData = nop;\x0d\n\x0d\n  this[kErrored] = null;\x0d\n  this[kHighWaterMark] = options?.highWaterMark ?? getDefaultHighWaterMark();\x0d\n  this[kRejectNonStandardBodyWrites] = options?.rejectNonStandardBodyWrites ?? false;\x0d\n}\x0d\nObjectSetPrototypeOf(OutgoingMessage.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(OutgoingMessage\x2C Stream);\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'errored'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this[kErrored];\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'closed'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this._closed;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableFinished'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return (\x0d\n      this.finished &&\x0d\n      this.outputSize === 0 &&\x0d\n      (!this[kSocket] || this[kSocket].writableLength === 0)\x0d\n    );\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableObjectMode'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return false;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableLength'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this.outputSize + this[kChunkedLength] + (this[kSocket] ? this[kSocket].writableLength : 0);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableHighWaterMark'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this[kSocket] ? this[kSocket].writableHighWaterMark : this[kHighWaterMark];\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableCorked'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this[kCorked];\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headers'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: internalUtil.deprecate(function() {\x0d\n    return this.getHeaders();\x0d\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\x2C\x0d\n  set: internalUtil.deprecate(function(val) {\x0d\n    if (val == null) {\x0d\n      this[kOutHeaders] = null;\x0d\n    } else if (typeof val === 'object') {\x0d\n      const headers = this[kOutHeaders] = { __proto__: null };\x0d\n      const keys = ObjectKeys(val);\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < keys.length; ++i) {\x0d\n        const name = keys[i];\x0d\n        headers[StringPrototypeToLowerCase(name)] = [name\x2C val[name]];\x0d\n      }\x0d\n    }\x0d\n  }\x2C 'OutgoingMessage.prototype._headers is deprecated'\x2C 'DEP0066')\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'connection'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this[kSocket];\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    this.socket = val;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'socket'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this[kSocket];\x0d\n  }\x2C\x0d\n  set: function(val) {\x0d\n    for (let n = 0; n < this[kCorked]; n++) {\x0d\n      val?.cork();\x0d\n      this[kSocket]?.uncork();\x0d\n    }\x0d\n    this[kSocket] = val;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C '_headerNames'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: internalUtil.deprecate(function() {\x0d\n    const headers = this[kOutHeaders];\x0d\n    if (headers !== null) {\x0d\n      const out = { __proto__: null };\x0d\n      const keys = ObjectKeys(headers);\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < keys.length; ++i) {\x0d\n        const key = keys[i];\x0d\n        const val = headers[key][0];\x0d\n        out[key] = val;\x0d\n      }\x0d\n      return out;\x0d\n    }\x0d\n    return null;\x0d\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\x2C\x0d\n  set: internalUtil.deprecate(function(val) {\x0d\n    if (typeof val === 'object' && val !== null) {\x0d\n      const headers = this[kOutHeaders];\x0d\n      if (!headers)\x0d\n        return;\x0d\n      const keys = ObjectKeys(val);\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < keys.length; ++i) {\x0d\n        const header = headers[keys[i]];\x0d\n        if (header)\x0d\n          header[0] = val[keys[i]];\x0d\n      }\x0d\n    }\x0d\n  }\x2C 'OutgoingMessage.prototype._headerNames is deprecated'\x2C 'DEP0066')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype._renderHeaders = function _renderHeaders() {\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('render');\x0d\n  }\x0d\n\x0d\n  const headersMap = this[kOutHeaders];\x0d\n  const headers = {};\x0d\n\x0d\n  if (headersMap !== null) {\x0d\n    const keys = ObjectKeys(headersMap);\x0d\n    // Retain for(;;) loop for performance reasons\x0d\n    // Refs: https://github.com/nodejs/node/pull/30958\x0d\n    for (let i = 0\x2C l = keys.length; i < l; i++) {\x0d\n      const key = keys[i];\x0d\n      headers[headersMap[key][0]] = headersMap[key][1];\x0d\n    }\x0d\n  }\x0d\n  return headers;\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype.cork = function() {\x0d\n  this[kCorked]++;\x0d\n  if (this[kSocket]) {\x0d\n    this[kSocket].cork();\x0d\n  }\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype.uncork = function() {\x0d\n  this[kCorked]--;\x0d\n  if (this[kSocket]) {\x0d\n    this[kSocket].uncork();\x0d\n  }\x0d\n\x0d\n  if (this[kCorked] || this[kChunkedBuffer].length === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const len = this[kChunkedLength];\x0d\n  const buf = this[kChunkedBuffer];\x0d\n\x0d\n  assert(this.chunkedEncoding);\x0d\n\x0d\n  let callbacks;\x0d\n  this._send(NumberPrototypeToString(len\x2C 16)\x2C 'latin1'\x2C null);\x0d\n  this._send(crlf_buf\x2C null\x2C null);\x0d\n  for (let n = 0; n < buf.length; n += 3) {\x0d\n    this._send(buf[n + 0]\x2C buf[n + 1]\x2C null);\x0d\n    if (buf[n + 2]) {\x0d\n      callbacks ??= [];\x0d\n      callbacks.push(buf[n + 2]);\x0d\n    }\x0d\n  }\x0d\n  this._send(crlf_buf\x2C null\x2C callbacks.length ? (err) => {\x0d\n    for (const callback of callbacks) {\x0d\n      callback(err);\x0d\n    }\x0d\n  } : null);\x0d\n\x0d\n  this[kChunkedBuffer].length = 0;\x0d\n  this[kChunkedLength] = 0;\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\x0d\n\x0d\n  if (callback) {\x0d\n    this.on('timeout'\x2C callback);\x0d\n  }\x0d\n\x0d\n  if (!this[kSocket]) {\x0d\n    this.once('socket'\x2C function socketSetTimeoutOnConnect(socket) {\x0d\n      socket.setTimeout(msecs);\x0d\n    });\x0d\n  } else {\x0d\n    this[kSocket].setTimeout(msecs);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\n// It's possible that the socket will be destroyed\x2C and removed from\x0d\n// any messages\x2C before ever calling this.  In that case\x2C just skip\x0d\n// it\x2C since something else is destroying this connection anyway.\x0d\nOutgoingMessage.prototype.destroy = function destroy(error) {\x0d\n  if (this.destroyed) {\x0d\n    return this;\x0d\n  }\x0d\n  this.destroyed = true;\x0d\n\x0d\n  this[kErrored] = error;\x0d\n\x0d\n  if (this[kSocket]) {\x0d\n    this[kSocket].destroy(error);\x0d\n  } else {\x0d\n    this.once('socket'\x2C function socketDestroyOnConnect(socket) {\x0d\n      socket.destroy(error);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\n// This abstract either writing directly to the socket or buffering it.\x0d\nOutgoingMessage.prototype._send = function _send(data\x2C encoding\x2C callback\x2C byteLength) {\x0d\n  // This is a shameful hack to get the headers and first body chunk onto\x0d\n  // the same packet. Future versions of Node are going to take care of\x0d\n  // this at a lower level and in a more general way.\x0d\n  if (!this._headerSent && this._header !== null) {\x0d\n    // `this._header` can be null if OutgoingMessage is used without a proper Socket\x0d\n    // See: /test/parallel/test-http-outgoing-message-inheritance.js\x0d\n    if (typeof data === 'string' &&\x0d\n        (encoding === 'utf8' || encoding === 'latin1' || !encoding)) {\x0d\n      data = this._header + data;\x0d\n    } else {\x0d\n      const header = this._header;\x0d\n      this.outputData.unshift({\x0d\n        data: header\x2C\x0d\n        encoding: 'latin1'\x2C\x0d\n        callback: null\x2C\x0d\n      });\x0d\n      this.outputSize += header.length;\x0d\n      this._onPendingData(header.length);\x0d\n    }\x0d\n    this._headerSent = true;\x0d\n  }\x0d\n  return this._writeRaw(data\x2C encoding\x2C callback\x2C byteLength);\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype._writeRaw = _writeRaw;\x0d\nfunction _writeRaw(data\x2C encoding\x2C callback\x2C size) {\x0d\n  const conn = this[kSocket];\x0d\n  if (conn && conn.destroyed) {\x0d\n    // The socket was destroyed. If we're still trying to write to it\x2C\x0d\n    // then we haven't gotten the 'close' event yet.\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    callback = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  if (conn && conn._httpMessage === this && conn.writable) {\x0d\n    // There might be pending data in the this.output buffer.\x0d\n    if (this.outputData.length) {\x0d\n      this._flushOutput(conn);\x0d\n    }\x0d\n    // Directly write to socket.\x0d\n    return conn.write(data\x2C encoding\x2C callback);\x0d\n  }\x0d\n  // Buffer\x2C as long as we're not destroyed.\x0d\n  this.outputData.push({ data\x2C encoding\x2C callback });\x0d\n  this.outputSize += data.length;\x0d\n  this._onPendingData(data.length);\x0d\n  return this.outputSize < this[kHighWaterMark];\x0d\n}\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype._storeHeader = _storeHeader;\x0d\nfunction _storeHeader(firstLine\x2C headers) {\x0d\n  // firstLine in the case of request is: 'GET /index.html HTTP/1.1\\r\\n'\x0d\n  // in the case of response it is: 'HTTP/1.1 200 OK\\r\\n'\x0d\n  const state = {\x0d\n    connection: false\x2C\x0d\n    contLen: false\x2C\x0d\n    te: false\x2C\x0d\n    date: false\x2C\x0d\n    expect: false\x2C\x0d\n    trailer: false\x2C\x0d\n    header: firstLine\x2C\x0d\n  };\x0d\n\x0d\n  if (headers) {\x0d\n    if (headers === this[kOutHeaders]) {\x0d\n      for (const key in headers) {\x0d\n        const entry = headers[key];\x0d\n        processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C false);\x0d\n      }\x0d\n    } else if (ArrayIsArray(headers)) {\x0d\n      if (headers.length && ArrayIsArray(headers[0])) {\x0d\n        for (let i = 0; i < headers.length; i++) {\x0d\n          const entry = headers[i];\x0d\n          processHeader(this\x2C state\x2C entry[0]\x2C entry[1]\x2C true);\x0d\n        }\x0d\n      } else {\x0d\n        if (headers.length % 2 !== 0) {\x0d\n          throw new ERR_INVALID_ARG_VALUE('headers'\x2C headers);\x0d\n        }\x0d\n\x0d\n        for (let n = 0; n < headers.length; n += 2) {\x0d\n          processHeader(this\x2C state\x2C headers[n + 0]\x2C headers[n + 1]\x2C true);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      for (const key in headers) {\x0d\n        if (ObjectPrototypeHasOwnProperty(headers\x2C key)) {\x0d\n          processHeader(this\x2C state\x2C key\x2C headers[key]\x2C true);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let { header } = state;\x0d\n\x0d\n  // Date header\x0d\n  if (this.sendDate && !state.date) {\x0d\n    header += 'Date: ' + utcDate() + '\\r\\n';\x0d\n  }\x0d\n\x0d\n  // Force the connection to close when the response is a 204 No Content or\x0d\n  // a 304 Not Modified and the user has set a "Transfer-Encoding: chunked"\x0d\n  // header.\x0d\n  //\x0d\n  // RFC 2616 mandates that 204 and 304 responses MUST NOT have a body but\x0d\n  // node.js used to send out a zero chunk anyway to accommodate clients\x0d\n  // that don't have special handling for those responses.\x0d\n  //\x0d\n  // It was pointed out that this might confuse reverse proxies to the point\x0d\n  // of creating security liabilities\x2C so suppress the zero chunk and force\x0d\n  // the connection to close.\x0d\n  if (this.chunkedEncoding && (this.statusCode === 204 ||\x0d\n                               this.statusCode === 304)) {\x0d\n    debug(this.statusCode + ' response should not use chunked encoding\x2C' +\x0d\n          ' closing connection.');\x0d\n    this.chunkedEncoding = false;\x0d\n    this.shouldKeepAlive = false;\x0d\n  }\x0d\n\x0d\n  // keep-alive logic\x0d\n  if (this._removedConnection) {\x0d\n    // shouldKeepAlive is generally true for HTTP/1.1. In that common case\x2C\x0d\n    // even if the connection header isn't sent\x2C we still persist by default.\x0d\n    this._last = !this.shouldKeepAlive;\x0d\n  } else if (!state.connection) {\x0d\n    const shouldSendKeepAlive = this.shouldKeepAlive &&\x0d\n        (state.contLen || this.useChunkedEncodingByDefault || this.agent);\x0d\n    if (shouldSendKeepAlive && this.maxRequestsOnConnectionReached) {\x0d\n      header += 'Connection: close\\r\\n';\x0d\n    } else if (shouldSendKeepAlive) {\x0d\n      header += 'Connection: keep-alive\\r\\n';\x0d\n      if (this._keepAliveTimeout && this._defaultKeepAlive) {\x0d\n        const timeoutSeconds = MathFloor(this._keepAliveTimeout / 1000);\x0d\n        let max = '';\x0d\n        if (~~this._maxRequestsPerSocket > 0) {\x0d\n          max = `\x2C max=${this._maxRequestsPerSocket}`;\x0d\n        }\x0d\n        header += `Keep-Alive: timeout=${timeoutSeconds}${max}\\r\\n`;\x0d\n      }\x0d\n    } else {\x0d\n      this._last = true;\x0d\n      header += 'Connection: close\\r\\n';\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!state.contLen && !state.te) {\x0d\n    if (!this._hasBody) {\x0d\n      // Make sure we don't end the 0\\r\\n\\r\\n at the end of the message.\x0d\n      this.chunkedEncoding = false;\x0d\n    } else if (!this.useChunkedEncodingByDefault) {\x0d\n      this._last = true;\x0d\n    } else if (!state.trailer &&\x0d\n               !this._removedContLen &&\x0d\n               typeof this._contentLength === 'number') {\x0d\n      header += 'Content-Length: ' + this._contentLength + '\\r\\n';\x0d\n    } else if (!this._removedTE) {\x0d\n      header += 'Transfer-Encoding: chunked\\r\\n';\x0d\n      this.chunkedEncoding = true;\x0d\n    } else {\x0d\n      // We should only be able to get here if both Content-Length and\x0d\n      // Transfer-Encoding are removed by the user.\x0d\n      // See: test/parallel/test-http-remove-header-stays-removed.js\x0d\n      debug('Both Content-Length and Transfer-Encoding are removed');\x0d\n\x0d\n      // We can't keep alive in this case\x2C because with no header info the body\x0d\n      // is defined as all data until the connection is closed.\x0d\n      this._last = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Test non-chunked message does not have trailer header set\x2C\x0d\n  // message will be terminated by the first empty line after the\x0d\n  // header fields\x2C regardless of the header fields present in the\x0d\n  // message\x2C and thus cannot contain a message body or 'trailers'.\x0d\n  if (this.chunkedEncoding !== true && state.trailer) {\x0d\n    throw new ERR_HTTP_TRAILER_INVALID();\x0d\n  }\x0d\n\x0d\n  this._header = header + '\\r\\n';\x0d\n  this._headerSent = false;\x0d\n\x0d\n  // Wait until the first body chunk\x2C or close()\x2C is sent to flush\x2C\x0d\n  // UNLESS we're sending Expect: 100-continue.\x0d\n  if (state.expect) this._send('');\x0d\n}\x0d\n\x0d\nfunction processHeader(self\x2C state\x2C key\x2C value\x2C validate) {\x0d\n  if (validate)\x0d\n    validateHeaderName(key);\x0d\n\x0d\n  // If key is content-disposition and there is content-length\x0d\n  // encode the value in latin1\x0d\n  // https://www.rfc-editor.org/rfc/rfc6266#section-4.3\x0d\n  // Refs: https://github.com/nodejs/node/pull/46528\x0d\n  if (isContentDispositionField(key) && self._contentLength) {\x0d\n    value = Buffer.from(value\x2C 'latin1');\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(value)) {\x0d\n    if (\x0d\n      (value.length < 2 || !isCookieField(key)) &&\x0d\n      (!self[kUniqueHeaders] || !self[kUniqueHeaders].has(StringPrototypeToLowerCase(key)))\x0d\n    ) {\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < value.length; i++)\x0d\n        storeHeader(self\x2C state\x2C key\x2C value[i]\x2C validate);\x0d\n      return;\x0d\n    }\x0d\n    value = ArrayPrototypeJoin(value\x2C '; ');\x0d\n  }\x0d\n  storeHeader(self\x2C state\x2C key\x2C value\x2C validate);\x0d\n}\x0d\n\x0d\nfunction storeHeader(self\x2C state\x2C key\x2C value\x2C validate) {\x0d\n  if (validate)\x0d\n    validateHeaderValue(key\x2C value);\x0d\n  state.header += key + ': ' + value + '\\r\\n';\x0d\n  matchHeader(self\x2C state\x2C key\x2C value);\x0d\n}\x0d\n\x0d\nfunction matchHeader(self\x2C state\x2C field\x2C value) {\x0d\n  if (field.length < 4 || field.length > 17)\x0d\n    return;\x0d\n  field = StringPrototypeToLowerCase(field);\x0d\n  switch (field) {\x0d\n    case 'connection':\x0d\n      state.connection = true;\x0d\n      self._removedConnection = false;\x0d\n      if (RegExpPrototypeExec(RE_CONN_CLOSE\x2C value) !== null)\x0d\n        self._last = true;\x0d\n      else\x0d\n        self.shouldKeepAlive = true;\x0d\n      break;\x0d\n    case 'transfer-encoding':\x0d\n      state.te = true;\x0d\n      self._removedTE = false;\x0d\n      if (RegExpPrototypeExec(RE_TE_CHUNKED\x2C value) !== null)\x0d\n        self.chunkedEncoding = true;\x0d\n      break;\x0d\n    case 'content-length':\x0d\n      state.contLen = true;\x0d\n      self._contentLength = value;\x0d\n      self._removedContLen = false;\x0d\n      break;\x0d\n    case 'date':\x0d\n    case 'expect':\x0d\n    case 'trailer':\x0d\n      state[field] = true;\x0d\n      break;\x0d\n    case 'keep-alive':\x0d\n      self._defaultKeepAlive = false;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateHeaderName = hideStackFrames((name\x2C label) => {\x0d\n  if (typeof name !== 'string' || !name || !checkIsHttpToken(name)) {\x0d\n    throw new ERR_INVALID_HTTP_TOKEN.HideStackFramesError(label || 'Header name'\x2C name);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateHeaderValue = hideStackFrames((name\x2C value) => {\x0d\n  if (value === undefined) {\x0d\n    throw new ERR_HTTP_INVALID_HEADER_VALUE.HideStackFramesError(value\x2C name);\x0d\n  }\x0d\n  if (checkInvalidHeaderChar(value)) {\x0d\n    debug('Header "%s" contains invalid characters'\x2C name);\x0d\n    throw new ERR_INVALID_CHAR.HideStackFramesError('header content'\x2C name);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction parseUniqueHeadersOption(headers) {\x0d\n  if (!ArrayIsArray(headers)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  const unique = new SafeSet();\x0d\n  const l = headers.length;\x0d\n  for (let i = 0; i < l; i++) {\x0d\n    unique.add(StringPrototypeToLowerCase(headers[i]));\x0d\n  }\x0d\n\x0d\n  return unique;\x0d\n}\x0d\n\x0d\nOutgoingMessage.prototype.setHeader = function setHeader(name\x2C value) {\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('set');\x0d\n  }\x0d\n  validateHeaderName(name);\x0d\n  validateHeaderValue(name\x2C value);\x0d\n\x0d\n  let headers = this[kOutHeaders];\x0d\n  if (headers === null)\x0d\n    this[kOutHeaders] = headers = { __proto__: null };\x0d\n\x0d\n  headers[StringPrototypeToLowerCase(name)] = [name\x2C value];\x0d\n  return this;\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype.setHeaders = function setHeaders(headers) {\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('set');\x0d\n  }\x0d\n\x0d\n\x0d\n  if (\x0d\n    !headers ||\x0d\n    ArrayIsArray(headers) ||\x0d\n    typeof headers.keys !== 'function' ||\x0d\n    typeof headers.get !== 'function'\x0d\n  ) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('headers'\x2C ['Headers'\x2C 'Map']\x2C headers);\x0d\n  }\x0d\n\x0d\n  for (const key of headers.keys()) {\x0d\n    this.setHeader(key\x2C headers.get(key));\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype.appendHeader = function appendHeader(name\x2C value) {\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('append');\x0d\n  }\x0d\n  validateHeaderName(name);\x0d\n  validateHeaderValue(name\x2C value);\x0d\n\x0d\n  const field = StringPrototypeToLowerCase(name);\x0d\n  const headers = this[kOutHeaders];\x0d\n  if (headers === null || !headers[field]) {\x0d\n    return this.setHeader(name\x2C value);\x0d\n  }\x0d\n\x0d\n  // Prepare the field for appending\x2C if required\x0d\n  if (!ArrayIsArray(headers[field][1])) {\x0d\n    headers[field][1] = [headers[field][1]];\x0d\n  }\x0d\n\x0d\n  const existingValues = headers[field][1];\x0d\n  if (ArrayIsArray(value)) {\x0d\n    for (let i = 0\x2C length = value.length; i < length; i++) {\x0d\n      existingValues.push(value[i]);\x0d\n    }\x0d\n  } else {\x0d\n    existingValues.push(value);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype.getHeader = function getHeader(name) {\x0d\n  validateString(name\x2C 'name');\x0d\n\x0d\n  const headers = this[kOutHeaders];\x0d\n  if (headers === null)\x0d\n    return;\x0d\n\x0d\n  const entry = headers[StringPrototypeToLowerCase(name)];\x0d\n  return entry && entry[1];\x0d\n};\x0d\n\x0d\n\x0d\n// Returns an array of the names of the current outgoing headers.\x0d\nOutgoingMessage.prototype.getHeaderNames = function getHeaderNames() {\x0d\n  return this[kOutHeaders] !== null ? ObjectKeys(this[kOutHeaders]) : [];\x0d\n};\x0d\n\x0d\n\x0d\n// Returns an array of the names of the current outgoing raw headers.\x0d\nOutgoingMessage.prototype.getRawHeaderNames = function getRawHeaderNames() {\x0d\n  const headersMap = this[kOutHeaders];\x0d\n  if (headersMap === null) return [];\x0d\n\x0d\n  const values = ObjectValues(headersMap);\x0d\n  const headers = Array(values.length);\x0d\n  // Retain for(;;) loop for performance reasons\x0d\n  // Refs: https://github.com/nodejs/node/pull/30958\x0d\n  for (let i = 0\x2C l = values.length; i < l; i++) {\x0d\n    headers[i] = values[i][0];\x0d\n  }\x0d\n\x0d\n  return headers;\x0d\n};\x0d\n\x0d\n\x0d\n// Returns a shallow copy of the current outgoing headers.\x0d\nOutgoingMessage.prototype.getHeaders = function getHeaders() {\x0d\n  const headers = this[kOutHeaders];\x0d\n  const ret = { __proto__: null };\x0d\n  if (headers) {\x0d\n    const keys = ObjectKeys(headers);\x0d\n    // Retain for(;;) loop for performance reasons\x0d\n    // Refs: https://github.com/nodejs/node/pull/30958\x0d\n    for (let i = 0; i < keys.length; ++i) {\x0d\n      const key = keys[i];\x0d\n      const val = headers[key][1];\x0d\n      ret[key] = val;\x0d\n    }\x0d\n  }\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype.hasHeader = function hasHeader(name) {\x0d\n  validateString(name\x2C 'name');\x0d\n  return this[kOutHeaders] !== null &&\x0d\n    !!this[kOutHeaders][StringPrototypeToLowerCase(name)];\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype.removeHeader = function removeHeader(name) {\x0d\n  validateString(name\x2C 'name');\x0d\n\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('remove');\x0d\n  }\x0d\n\x0d\n  const key = StringPrototypeToLowerCase(name);\x0d\n\x0d\n  switch (key) {\x0d\n    case 'connection':\x0d\n      this._removedConnection = true;\x0d\n      break;\x0d\n    case 'content-length':\x0d\n      this._removedContLen = true;\x0d\n      break;\x0d\n    case 'transfer-encoding':\x0d\n      this._removedTE = true;\x0d\n      break;\x0d\n    case 'date':\x0d\n      this.sendDate = false;\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  if (this[kOutHeaders] !== null) {\x0d\n    delete this[kOutHeaders][key];\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype._implicitHeader = function _implicitHeader() {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_implicitHeader()');\x0d\n};\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'headersSent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() { return !!this._header; }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableEnded'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() { return this.finished; }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(OutgoingMessage.prototype\x2C 'writableNeedDrain'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return !this.destroyed && !this.finished && this[kNeedDrain];\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst crlf_buf = Buffer.from('\\r\\n');\x0d\nOutgoingMessage.prototype.write = function write(chunk\x2C encoding\x2C callback) {\x0d\n  if (typeof encoding === 'function') {\x0d\n    callback = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const ret = write_(this\x2C chunk\x2C encoding\x2C callback\x2C false);\x0d\n  if (!ret)\x0d\n    this[kNeedDrain] = true;\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onError(msg\x2C err\x2C callback) {\x0d\n  const triggerAsyncId = msg.socket ? msg.socket[async_id_symbol] : undefined;\x0d\n  defaultTriggerAsyncIdScope(triggerAsyncId\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitErrorNt\x2C\x0d\n                             msg\x2C\x0d\n                             err\x2C\x0d\n                             callback);\x0d\n}\x0d\n\x0d\nfunction emitErrorNt(msg\x2C err\x2C callback) {\x0d\n  callback(err);\x0d\n  if (typeof msg.emit === 'function' && !msg._closed) {\x0d\n    msg.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction strictContentLength(msg) {\x0d\n  return (\x0d\n    msg.strictContentLength &&\x0d\n    msg._contentLength != null &&\x0d\n    msg._hasBody &&\x0d\n    !msg._removedContLen &&\x0d\n    !msg.chunkedEncoding &&\x0d\n    !msg.hasHeader('transfer-encoding')\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction write_(msg\x2C chunk\x2C encoding\x2C callback\x2C fromEnd) {\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = nop;\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (typeof chunk !== 'string' && !isUint8Array(chunk)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (msg.finished) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (msg.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    if (!msg.destroyed) {\x0d\n      onError(msg\x2C err\x2C callback);\x0d\n    } else {\x0d\n      process.nextTick(callback\x2C err);\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  let len;\x0d\n\x0d\n  if (msg.strictContentLength) {\x0d\n    len ??= typeof chunk === 'string' ? Buffer.byteLength(chunk\x2C encoding) : chunk.byteLength;\x0d\n\x0d\n    if (\x0d\n      strictContentLength(msg) &&\x0d\n      (fromEnd ? msg[kBytesWritten] + len !== msg._contentLength : msg[kBytesWritten] + len > msg._contentLength)\x0d\n    ) {\x0d\n      throw new ERR_HTTP_CONTENT_LENGTH_MISMATCH(len + msg[kBytesWritten]\x2C msg._contentLength);\x0d\n    }\x0d\n\x0d\n    msg[kBytesWritten] += len;\x0d\n  }\x0d\n\x0d\n  if (!msg._header) {\x0d\n    if (fromEnd) {\x0d\n      len ??= typeof chunk === 'string' ? Buffer.byteLength(chunk\x2C encoding) : chunk.byteLength;\x0d\n      msg._contentLength = len;\x0d\n    }\x0d\n    msg._implicitHeader();\x0d\n  }\x0d\n\x0d\n  if (!msg._hasBody) {\x0d\n    if (msg[kRejectNonStandardBodyWrites]) {\x0d\n      throw new ERR_HTTP_BODY_NOT_ALLOWED();\x0d\n    } else {\x0d\n      debug('This type of response MUST NOT have a body. ' +\x0d\n        'Ignoring write() calls.');\x0d\n      process.nextTick(callback);\x0d\n      return true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!fromEnd && msg.socket && !msg.socket.writableCorked) {\x0d\n    msg.socket.cork();\x0d\n    process.nextTick(connectionCorkNT\x2C msg.socket);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (msg.chunkedEncoding && chunk.length !== 0) {\x0d\n    len ??= typeof chunk === 'string' ? Buffer.byteLength(chunk\x2C encoding) : chunk.byteLength;\x0d\n    if (msg[kCorked] && msg._headerSent) {\x0d\n      msg[kChunkedBuffer].push(chunk\x2C encoding\x2C callback);\x0d\n      msg[kChunkedLength] += len;\x0d\n      ret = msg[kChunkedLength] < msg[kHighWaterMark];\x0d\n    } else {\x0d\n      msg._send(NumberPrototypeToString(len\x2C 16)\x2C 'latin1'\x2C null);\x0d\n      msg._send(crlf_buf\x2C null\x2C null);\x0d\n      msg._send(chunk\x2C encoding\x2C null\x2C len);\x0d\n      ret = msg._send(crlf_buf\x2C null\x2C callback);\x0d\n    }\x0d\n  } else {\x0d\n    ret = msg._send(chunk\x2C encoding\x2C callback\x2C len);\x0d\n  }\x0d\n\x0d\n  debug('write ret = ' + ret);\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectionCorkNT(conn) {\x0d\n  conn.uncork();\x0d\n}\x0d\n\x0d\nOutgoingMessage.prototype.addTrailers = function addTrailers(headers) {\x0d\n  this._trailer = '';\x0d\n  const keys = ObjectKeys(headers);\x0d\n  const isArray = ArrayIsArray(headers);\x0d\n  // Retain for(;;) loop for performance reasons\x0d\n  // Refs: https://github.com/nodejs/node/pull/30958\x0d\n  for (let i = 0\x2C l = keys.length; i < l; i++) {\x0d\n    let field\x2C value;\x0d\n    const key = keys[i];\x0d\n    if (isArray) {\x0d\n      field = headers[key][0];\x0d\n      value = headers[key][1];\x0d\n    } else {\x0d\n      field = key;\x0d\n      value = headers[key];\x0d\n    }\x0d\n    validateHeaderName(field\x2C 'Trailer name');\x0d\n\x0d\n    // Check if the field must be sent several times\x0d\n    const isArrayValue = ArrayIsArray(value);\x0d\n    if (\x0d\n      isArrayValue && value.length > 1 &&\x0d\n      (!this[kUniqueHeaders] || !this[kUniqueHeaders].has(StringPrototypeToLowerCase(field)))\x0d\n    ) {\x0d\n      for (let j = 0\x2C l = value.length; j < l; j++) {\x0d\n        if (checkInvalidHeaderChar(value[j])) {\x0d\n          debug('Trailer "%s"[%d] contains invalid characters'\x2C field\x2C j);\x0d\n          throw new ERR_INVALID_CHAR('trailer content'\x2C field);\x0d\n        }\x0d\n        this._trailer += field + ': ' + value[j] + '\\r\\n';\x0d\n      }\x0d\n    } else {\x0d\n      if (isArrayValue) {\x0d\n        value = ArrayPrototypeJoin(value\x2C '; ');\x0d\n      }\x0d\n\x0d\n      if (checkInvalidHeaderChar(value)) {\x0d\n        debug('Trailer "%s" contains invalid characters'\x2C field);\x0d\n        throw new ERR_INVALID_CHAR('trailer content'\x2C field);\x0d\n      }\x0d\n      this._trailer += field + ': ' + value + '\\r\\n';\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction onFinish(outmsg) {\x0d\n  if (outmsg && outmsg.socket && outmsg.socket._hadError) return;\x0d\n  outmsg.emit('finish');\x0d\n}\x0d\n\x0d\nOutgoingMessage.prototype.end = function end(chunk\x2C encoding\x2C callback) {\x0d\n  if (typeof chunk === 'function') {\x0d\n    callback = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    callback = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  if (chunk) {\x0d\n    if (this.finished) {\x0d\n      onError(this\x2C\x0d\n              new ERR_STREAM_WRITE_AFTER_END()\x2C\x0d\n              typeof callback !== 'function' ? nop : callback);\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    if (this[kSocket]) {\x0d\n      this[kSocket].cork();\x0d\n    }\x0d\n\x0d\n    write_(this\x2C chunk\x2C encoding\x2C null\x2C true);\x0d\n  } else if (this.finished) {\x0d\n    if (typeof callback === 'function') {\x0d\n      if (!this.writableFinished) {\x0d\n        this.on('finish'\x2C callback);\x0d\n      } else {\x0d\n        callback(new ERR_STREAM_ALREADY_FINISHED('end'));\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  } else if (!this._header) {\x0d\n    if (this[kSocket]) {\x0d\n      this[kSocket].cork();\x0d\n    }\x0d\n\x0d\n    this._contentLength = 0;\x0d\n    this._implicitHeader();\x0d\n  }\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.once('finish'\x2C callback);\x0d\n\x0d\n  if (strictContentLength(this) && this[kBytesWritten] !== this._contentLength) {\x0d\n    throw new ERR_HTTP_CONTENT_LENGTH_MISMATCH(this[kBytesWritten]\x2C this._contentLength);\x0d\n  }\x0d\n\x0d\n  const finish = onFinish.bind(undefined\x2C this);\x0d\n\x0d\n  if (this._hasBody && this.chunkedEncoding) {\x0d\n    this._send('0\\r\\n' + this._trailer + '\\r\\n'\x2C 'latin1'\x2C finish);\x0d\n  } else if (!this._headerSent || this.writableLength || chunk) {\x0d\n    this._send(''\x2C 'latin1'\x2C finish);\x0d\n  } else {\x0d\n    process.nextTick(finish);\x0d\n  }\x0d\n\x0d\n  if (this[kSocket]) {\x0d\n    // Fully uncork connection on end().\x0d\n    this[kSocket]._writableState.corked = 1;\x0d\n    this[kSocket].uncork();\x0d\n  }\x0d\n  this[kCorked] = 1;\x0d\n  this.uncork();\x0d\n\x0d\n  this.finished = true;\x0d\n\x0d\n  // There is the first message on the outgoing queue\x2C and we've sent\x0d\n  // everything to the socket.\x0d\n  debug('outgoing message end.');\x0d\n  if (this.outputData.length === 0 &&\x0d\n      this[kSocket] &&\x0d\n      this[kSocket]._httpMessage === this) {\x0d\n    this._finish();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\n// This function is called once all user data are flushed to the socket.\x0d\n// Note that it has a chance that the socket is not drained.\x0d\nOutgoingMessage.prototype._finish = function _finish() {\x0d\n  assert(this[kSocket]);\x0d\n  this.emit('prefinish');\x0d\n};\x0d\n\x0d\n\x0d\n// This logic is probably a bit confusing. Let me explain a bit:\x0d\n//\x0d\n// In both HTTP servers and clients it is possible to queue up several\x0d\n// outgoing messages. This is easiest to imagine in the case of a client.\x0d\n// Take the following situation:\x0d\n//\x0d\n//    req1 = client.request('GET'\x2C '/');\x0d\n//    req2 = client.request('POST'\x2C '/');\x0d\n//\x0d\n// When the user does\x0d\n//\x0d\n//   req2.write('hello world\\n');\x0d\n//\x0d\n// it's possible that the first request has not been completely flushed to\x0d\n// the socket yet. Thus the outgoing messages need to be prepared to queue\x0d\n// up data internally before sending it on further to the socket's queue.\x0d\n//\x0d\n// This function\x2C _flush()\x2C is called by both the Server and Client\x0d\n// to attempt to flush any pending messages out to the socket.\x0d\nOutgoingMessage.prototype._flush = function _flush() {\x0d\n  const socket = this[kSocket];\x0d\n\x0d\n  if (socket && socket.writable) {\x0d\n    // There might be remaining data in this.output; write it out\x0d\n    const ret = this._flushOutput(socket);\x0d\n\x0d\n    if (this.finished) {\x0d\n      // This is a queue to the server or client to bring in the next this.\x0d\n      this._finish();\x0d\n    } else if (ret && this[kNeedDrain]) {\x0d\n      this[kNeedDrain] = false;\x0d\n      this.emit('drain');\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype._flushOutput = function _flushOutput(socket) {\x0d\n  const outputLength = this.outputData.length;\x0d\n  if (outputLength <= 0)\x0d\n    return undefined;\x0d\n\x0d\n  const outputData = this.outputData;\x0d\n  socket.cork();\x0d\n  let ret;\x0d\n  // Retain for(;;) loop for performance reasons\x0d\n  // Refs: https://github.com/nodejs/node/pull/30958\x0d\n  for (let i = 0; i < outputLength; i++) {\x0d\n    const { data\x2C encoding\x2C callback } = outputData[i];\x0d\n    ret = socket.write(data\x2C encoding\x2C callback);\x0d\n  }\x0d\n  socket.uncork();\x0d\n\x0d\n  this.outputData = [];\x0d\n  this._onPendingData(-this.outputSize);\x0d\n  this.outputSize = 0;\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nOutgoingMessage.prototype.flushHeaders = function flushHeaders() {\x0d\n  if (!this._header) {\x0d\n    this._implicitHeader();\x0d\n  }\x0d\n\x0d\n  // Force-flush the headers.\x0d\n  this._send('');\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype.pipe = function pipe() {\x0d\n  // OutgoingMessage should be write-only. Piping from it is disabled.\x0d\n  this.emit('error'\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nOutgoingMessage.prototype[EE.captureRejectionSymbol] =\x0d\nfunction(err\x2C event) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  kHighWaterMark\x2C\x0d\n  kUniqueHeaders\x2C\x0d\n  parseUniqueHeadersOption\x2C\x0d\n  validateHeaderName\x2C\x0d\n  validateHeaderValue\x2C\x0d\n  OutgoingMessage\x2C\x0d\n};\x0d\n
code-source-info,0x395cad64834,170,0,37036,C0O0C4O37036,,
code-creation,JS,10,238479,0x395cad669d4,1814, node:_http_outgoing:1:1,0x395cad647a8,~
code-source-info,0x395cad669d
code-creation,Eval,10,238912,0x395cad68224,5, node:internal/http:1:1,0x395cad68000,~
script-source,171,node:internal/http,'use strict';\x0d\n\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n  Date\x2C\x0d\n  DatePrototypeGetMilliseconds\x2C\x0d\n  DatePrototypeToUTCString\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { setUnrefTimeout } = require('internal/timers');\x0d\nconst { trace\x2C isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B\x2C\x0d\n  CHAR_LOWERCASE_E\x2C\x0d\n} = require('internal/constants');\x0d\n\x0d\nlet utcCache;\x0d\n\x0d\nfunction utcDate() {\x0d\n  if (!utcCache) cache();\x0d\n  return utcCache;\x0d\n}\x0d\n\x0d\nfunction cache() {\x0d\n  const d = new Date();\x0d\n  utcCache = DatePrototypeToUTCString(d);\x0d\n  setUnrefTimeout(resetCache\x2C 1000 - DatePrototypeGetMilliseconds(d));\x0d\n}\x0d\n\x0d\nfunction resetCache() {\x0d\n  utcCache = undefined;\x0d\n}\x0d\n\x0d\nlet traceEventId = 0;\x0d\n\x0d\nfunction getNextTraceEventId() {\x0d\n  return ++traceEventId;\x0d\n}\x0d\n\x0d\nfunction isTraceHTTPEnabled() {\x0d\n  return isTraceCategoryEnabled('node.http');\x0d\n}\x0d\n\x0d\nconst traceEventCategory = 'node\x2Cnode.http';\x0d\n\x0d\nfunction traceBegin(...args) {\x0d\n  trace(CHAR_LOWERCASE_B\x2C traceEventCategory\x2C ...args);\x0d\n}\x0d\n\x0d\nfunction traceEnd(...args) {\x0d\n  trace(CHAR_LOWERCASE_E\x2C traceEventCategory\x2C ...args);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  kOutHeaders: Symbol('kOutHeaders')\x2C\x0d\n  kNeedDrain: Symbol('kNeedDrain')\x2C\x0d\n  utcDate\x2C\x0d\n  traceBegin\x2C\x0d\n  traceEnd\x2C\x0d\n  getNextTraceEventId\x2C\x0d\n  isTraceHTTPEnabled\x2C\x0d\n};\x0d\n
code-source-info,0x395cad68224,171,0,1257,C0O0C4O1257,,
code-creation,JS,10,238983,0x395cad6867c,227, node:internal/http:1:1,0x395cad68198,~
code-source-info,0x395cad6867c,171,0,1257,C0O0C75O28C80O39C86O48C92O81C98O156C101O156C106O136C112O227C115O227C120O193C126O200C132O316C135O316C140O272C146O293C152O354C153O354C155O680C156O680C158O863C160O863C162O1070C170O1105C181O1143C191O1168C197O1180C203O1195C209O1208C215O1232C221O1085C226O1256,,
code-creation,JS,11,239174,0x7ff62c50a680,960,debuglog node:internal/util/debuglog:76:18,0x22671c89498,^
code-source-info,0x7ff62c50a680,22,2403,3452,,,
code-creation,JS,11,239200,0x7ff62c50aa80,536,trySelfParentPath node:internal/modules/cjs/loader:520:27,0x22671cb6ee0,^
code-source-info,0x7ff62c50aa80,63,15713,15992,,,
code-creation,JS,11,239233,0x7ff62c50acc0,264, node:internal/validators:453:42,0xfca8d3dfe0,^
code-source-info,0x7ff62c50acc0,15,13318,13437,,,
code-creation,JS,11,239249,0x7ff62c50ae00,156,checkListener node:events:275:23,0x22671c8aa68,^
code-source-info,0x7ff62c50ae00,23,8339,8397,,,
code-creation,JS,11,239283,0x7ff62c5152c0,2028,_addListener node:events:547:22,0x22671c8b678,^
code-source-info,0x7ff62c5152c0,23,16257,18185,,,
code-creation,JS,11,239301,0x7ff62c50aec0,128,addListener node:events:610:58,0x22671c8bb70,^
code-source-info,0x7ff62c50aec0,23,18391,18465,,,
code-creation,Eval,10,240304,0x395cad6f9c4,5, node:_http_server:1:1,0x395cad6e508,~
script-source,172,node:_http_server,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst EE = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  parsers\x2C\x0d\n  freeParser\x2C\x0d\n  continueExpression\x2C\x0d\n  chunkExpression\x2C\x0d\n  kIncomingMessage\x2C\x0d\n  HTTPParser\x2C\x0d\n  isLenient\x2C\x0d\n  _checkInvalidHeaderChar: checkInvalidHeaderChar\x2C\x0d\n  prepareError\x2C\x0d\n} = require('_http_common');\x0d\nconst { ConnectionsList } = internalBinding('http_parser');\x0d\nconst {\x0d\n  kUniqueHeaders\x2C\x0d\n  parseUniqueHeadersOption\x2C\x0d\n  OutgoingMessage\x2C\x0d\n} = require('_http_outgoing');\x0d\nconst {\x0d\n  kOutHeaders\x2C\x0d\n  kNeedDrain\x2C\x0d\n  isTraceHTTPEnabled\x2C\x0d\n  traceBegin\x2C\x0d\n  traceEnd\x2C\x0d\n  getNextTraceEventId\x2C\x0d\n} = require('internal/http');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst { IncomingMessage } = require('_http_incoming');\x0d\nconst {\x0d\n  ConnResetException\x2C\x0d\n  codes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_HTTP_REQUEST_TIMEOUT\x2C\x0d\n  ERR_HTTP_HEADERS_SENT\x2C\x0d\n  ERR_HTTP_INVALID_STATUS_CODE\x2C\x0d\n  ERR_HTTP_SOCKET_ENCODING\x2C\x0d\n  ERR_HTTP_SOCKET_ASSIGNED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_CHAR\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateLinkHeaderValue\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { setInterval\x2C clearInterval } = require('timers');\x0d\nlet debug = require('internal/util/debuglog').debuglog('http'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst onRequestStartChannel = dc.channel('http.server.request.start');\x0d\nconst onResponseFinishChannel = dc.channel('http.server.response.finish');\x0d\n\x0d\nconst kServerResponse = Symbol('ServerResponse');\x0d\nconst kServerResponseStatistics = Symbol('ServerResponseStatistics');\x0d\n\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst STATUS_CODES = {\x0d\n  100: 'Continue'\x2C                   // RFC 7231 6.2.1\x0d\n  101: 'Switching Protocols'\x2C        // RFC 7231 6.2.2\x0d\n  102: 'Processing'\x2C                 // RFC 2518 10.1 (obsoleted by RFC 4918)\x0d\n  103: 'Early Hints'\x2C                // RFC 8297 2\x0d\n  200: 'OK'\x2C                         // RFC 7231 6.3.1\x0d\n  201: 'Created'\x2C                    // RFC 7231 6.3.2\x0d\n  202: 'Accepted'\x2C                   // RFC 7231 6.3.3\x0d\n  203: 'Non-Authoritative Information'\x2C // RFC 7231 6.3.4\x0d\n  204: 'No Content'\x2C                 // RFC 7231 6.3.5\x0d\n  205: 'Reset Content'\x2C              // RFC 7231 6.3.6\x0d\n  206: 'Partial Content'\x2C            // RFC 7233 4.1\x0d\n  207: 'Multi-Status'\x2C               // RFC 4918 11.1\x0d\n  208: 'Already Reported'\x2C           // RFC 5842 7.1\x0d\n  226: 'IM Used'\x2C                    // RFC 3229 10.4.1\x0d\n  300: 'Multiple Choices'\x2C           // RFC 7231 6.4.1\x0d\n  301: 'Moved Permanently'\x2C          // RFC 7231 6.4.2\x0d\n  302: 'Found'\x2C                      // RFC 7231 6.4.3\x0d\n  303: 'See Other'\x2C                  // RFC 7231 6.4.4\x0d\n  304: 'Not Modified'\x2C               // RFC 7232 4.1\x0d\n  305: 'Use Proxy'\x2C                  // RFC 7231 6.4.5\x0d\n  307: 'Temporary Redirect'\x2C         // RFC 7231 6.4.7\x0d\n  308: 'Permanent Redirect'\x2C         // RFC 7238 3\x0d\n  400: 'Bad Request'\x2C                // RFC 7231 6.5.1\x0d\n  401: 'Unauthorized'\x2C               // RFC 7235 3.1\x0d\n  402: 'Payment Required'\x2C           // RFC 7231 6.5.2\x0d\n  403: 'Forbidden'\x2C                  // RFC 7231 6.5.3\x0d\n  404: 'Not Found'\x2C                  // RFC 7231 6.5.4\x0d\n  405: 'Method Not Allowed'\x2C         // RFC 7231 6.5.5\x0d\n  406: 'Not Acceptable'\x2C             // RFC 7231 6.5.6\x0d\n  407: 'Proxy Authentication Required'\x2C // RFC 7235 3.2\x0d\n  408: 'Request Timeout'\x2C            // RFC 7231 6.5.7\x0d\n  409: 'Conflict'\x2C                   // RFC 7231 6.5.8\x0d\n  410: 'Gone'\x2C                       // RFC 7231 6.5.9\x0d\n  411: 'Length Required'\x2C            // RFC 7231 6.5.10\x0d\n  412: 'Precondition Failed'\x2C        // RFC 7232 4.2\x0d\n  413: 'Payload Too Large'\x2C          // RFC 7231 6.5.11\x0d\n  414: 'URI Too Long'\x2C               // RFC 7231 6.5.12\x0d\n  415: 'Unsupported Media Type'\x2C     // RFC 7231 6.5.13\x0d\n  416: 'Range Not Satisfiable'\x2C      // RFC 7233 4.4\x0d\n  417: 'Expectation Failed'\x2C         // RFC 7231 6.5.14\x0d\n  418: 'I\\'m a Teapot'\x2C              // RFC 7168 2.3.3\x0d\n  421: 'Misdirected Request'\x2C        // RFC 7540 9.1.2\x0d\n  422: 'Unprocessable Entity'\x2C       // RFC 4918 11.2\x0d\n  423: 'Locked'\x2C                     // RFC 4918 11.3\x0d\n  424: 'Failed Dependency'\x2C          // RFC 4918 11.4\x0d\n  425: 'Too Early'\x2C                  // RFC 8470 5.2\x0d\n  426: 'Upgrade Required'\x2C           // RFC 2817 and RFC 7231 6.5.15\x0d\n  428: 'Precondition Required'\x2C      // RFC 6585 3\x0d\n  429: 'Too Many Requests'\x2C          // RFC 6585 4\x0d\n  431: 'Request Header Fields Too Large'\x2C // RFC 6585 5\x0d\n  451: 'Unavailable For Legal Reasons'\x2C // RFC 7725 3\x0d\n  500: 'Internal Server Error'\x2C      // RFC 7231 6.6.1\x0d\n  501: 'Not Implemented'\x2C            // RFC 7231 6.6.2\x0d\n  502: 'Bad Gateway'\x2C                // RFC 7231 6.6.3\x0d\n  503: 'Service Unavailable'\x2C        // RFC 7231 6.6.4\x0d\n  504: 'Gateway Timeout'\x2C            // RFC 7231 6.6.5\x0d\n  505: 'HTTP Version Not Supported'\x2C // RFC 7231 6.6.6\x0d\n  506: 'Variant Also Negotiates'\x2C    // RFC 2295 8.1\x0d\n  507: 'Insufficient Storage'\x2C       // RFC 4918 11.5\x0d\n  508: 'Loop Detected'\x2C              // RFC 5842 7.2\x0d\n  509: 'Bandwidth Limit Exceeded'\x2C\x0d\n  510: 'Not Extended'\x2C               // RFC 2774 7\x0d\n  511: 'Network Authentication Required'\x2C // RFC 6585 6\x0d\n};\x0d\n\x0d\nconst kOnExecute = HTTPParser.kOnExecute | 0;\x0d\nconst kOnTimeout = HTTPParser.kOnTimeout | 0;\x0d\nconst kLenientAll = HTTPParser.kLenientAll | 0;\x0d\nconst kLenientNone = HTTPParser.kLenientNone | 0;\x0d\nconst kConnections = Symbol('http.server.connections');\x0d\nconst kConnectionsCheckingInterval = Symbol('http.server.connectionsCheckingInterval');\x0d\n\x0d\nconst HTTP_SERVER_TRACE_EVENT_NAME = 'http.server.request';\x0d\n\x0d\nclass HTTPServerAsyncResource {\x0d\n  constructor(type\x2C socket) {\x0d\n    this.type = type;\x0d\n    this.socket = socket;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction ServerResponse(req\x2C options) {\x0d\n  OutgoingMessage.call(this\x2C options);\x0d\n\x0d\n  if (req.method === 'HEAD') this._hasBody = false;\x0d\n\x0d\n  this.req = req;\x0d\n  this.sendDate = true;\x0d\n  this._sent100 = false;\x0d\n  this._expect_continue = false;\x0d\n\x0d\n  if (req.httpVersionMajor < 1 || req.httpVersionMinor < 1) {\x0d\n    this.useChunkedEncodingByDefault = RegExpPrototypeExec(chunkExpression\x2C\x0d\n                                                           req.headers.te) !== null;\x0d\n    this.shouldKeepAlive = false;\x0d\n  }\x0d\n\x0d\n  if (hasObserver('http')) {\x0d\n    startPerf(this\x2C kServerResponseStatistics\x2C {\x0d\n      type: 'http'\x2C\x0d\n      name: 'HttpRequest'\x2C\x0d\n      detail: {\x0d\n        req: {\x0d\n          method: req.method\x2C\x0d\n          url: req.url\x2C\x0d\n          headers: req.headers\x2C\x0d\n        }\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  if (isTraceHTTPEnabled()) {\x0d\n    this._traceEventId = getNextTraceEventId();\x0d\n    traceBegin(HTTP_SERVER_TRACE_EVENT_NAME\x2C this._traceEventId);\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ServerResponse.prototype\x2C OutgoingMessage.prototype);\x0d\nObjectSetPrototypeOf(ServerResponse\x2C OutgoingMessage);\x0d\n\x0d\nServerResponse.prototype._finish = function _finish() {\x0d\n  if (this[kServerResponseStatistics] && hasObserver('http')) {\x0d\n    stopPerf(this\x2C kServerResponseStatistics\x2C {\x0d\n      detail: {\x0d\n        res: {\x0d\n          statusCode: this.statusCode\x2C\x0d\n          statusMessage: this.statusMessage\x2C\x0d\n          headers: typeof this.getHeaders === 'function' ? this.getHeaders() : {}\x2C\x0d\n        }\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  OutgoingMessage.prototype._finish.call(this);\x0d\n  if (isTraceHTTPEnabled() && typeof this._traceEventId === 'number') {\x0d\n    const data = {\x0d\n      url: this.req?.url\x2C\x0d\n      statusCode: this.statusCode\x2C\x0d\n    };\x0d\n    traceEnd(HTTP_SERVER_TRACE_EVENT_NAME\x2C this._traceEventId\x2C data);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nServerResponse.prototype.statusCode = 200;\x0d\nServerResponse.prototype.statusMessage = undefined;\x0d\n\x0d\nfunction onServerResponseClose() {\x0d\n  // EventEmitter.emit makes a copy of the 'close' listeners array before\x0d\n  // calling the listeners. detachSocket() unregisters onServerResponseClose\x0d\n  // but if detachSocket() is called\x2C directly or indirectly\x2C by a 'close'\x0d\n  // listener\x2C onServerResponseClose is still in that copy of the listeners\x0d\n  // array. That is\x2C in the example below\x2C b still gets called even though\x0d\n  // it's been removed by a:\x0d\n  //\x0d\n  //   const EventEmitter = require('events');\x0d\n  //   const obj = new EventEmitter();\x0d\n  //   obj.on('event'\x2C a);\x0d\n  //   obj.on('event'\x2C b);\x0d\n  //   function a() { obj.removeListener('event'\x2C b) }\x0d\n  //   function b() { throw "BAM!" }\x0d\n  //   obj.emit('event');  // throws\x0d\n  //\x0d\n  // Ergo\x2C we need to deal with stale 'close' events and handle the case\x0d\n  // where the ServerResponse object has already been deconstructed.\x0d\n  // Fortunately\x2C that requires only a single if check. :-)\x0d\n  if (this._httpMessage) {\x0d\n    emitCloseNT(this._httpMessage);\x0d\n  }\x0d\n}\x0d\n\x0d\nServerResponse.prototype.assignSocket = function assignSocket(socket) {\x0d\n  if (socket._httpMessage) {\x0d\n    throw new ERR_HTTP_SOCKET_ASSIGNED();\x0d\n  }\x0d\n  socket._httpMessage = this;\x0d\n  socket.on('close'\x2C onServerResponseClose);\x0d\n  this.socket = socket;\x0d\n  this.emit('socket'\x2C socket);\x0d\n  this._flush();\x0d\n};\x0d\n\x0d\nServerResponse.prototype.detachSocket = function detachSocket(socket) {\x0d\n  assert(socket._httpMessage === this);\x0d\n  socket.removeListener('close'\x2C onServerResponseClose);\x0d\n  socket._httpMessage = null;\x0d\n  this.socket = null;\x0d\n};\x0d\n\x0d\nServerResponse.prototype.writeContinue = function writeContinue(cb) {\x0d\n  this._writeRaw('HTTP/1.1 100 Continue\\r\\n\\r\\n'\x2C 'ascii'\x2C cb);\x0d\n  this._sent100 = true;\x0d\n};\x0d\n\x0d\nServerResponse.prototype.writeProcessing = function writeProcessing(cb) {\x0d\n  this._writeRaw('HTTP/1.1 102 Processing\\r\\n\\r\\n'\x2C 'ascii'\x2C cb);\x0d\n};\x0d\n\x0d\nServerResponse.prototype.writeEarlyHints = function writeEarlyHints(hints\x2C cb) {\x0d\n  let head = 'HTTP/1.1 103 Early Hints\\r\\n';\x0d\n\x0d\n  validateObject(hints\x2C 'hints');\x0d\n\x0d\n  if (hints.link === null || hints.link === undefined) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const link = validateLinkHeaderValue(hints.link);\x0d\n\x0d\n  if (link.length === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  head += 'Link: ' + link + '\\r\\n';\x0d\n\x0d\n  for (const key of ObjectKeys(hints)) {\x0d\n    if (key !== 'link') {\x0d\n      head += key + ': ' + hints[key] + '\\r\\n';\x0d\n    }\x0d\n  }\x0d\n\x0d\n  head += '\\r\\n';\x0d\n\x0d\n  this._writeRaw(head\x2C 'ascii'\x2C cb);\x0d\n};\x0d\n\x0d\nServerResponse.prototype._implicitHeader = function _implicitHeader() {\x0d\n  this.writeHead(this.statusCode);\x0d\n};\x0d\n\x0d\nServerResponse.prototype.writeHead = writeHead;\x0d\nfunction writeHead(statusCode\x2C reason\x2C obj) {\x0d\n\x0d\n  if (this._header) {\x0d\n    throw new ERR_HTTP_HEADERS_SENT('write');\x0d\n  }\x0d\n\x0d\n  const originalStatusCode = statusCode;\x0d\n\x0d\n  statusCode |= 0;\x0d\n  if (statusCode < 100 || statusCode > 999) {\x0d\n    throw new ERR_HTTP_INVALID_STATUS_CODE(originalStatusCode);\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof reason === 'string') {\x0d\n    // writeHead(statusCode\x2C reasonPhrase[\x2C headers])\x0d\n    this.statusMessage = reason;\x0d\n  } else {\x0d\n    // writeHead(statusCode[\x2C headers])\x0d\n    if (!this.statusMessage)\x0d\n      this.statusMessage = STATUS_CODES[statusCode] || 'unknown';\x0d\n    obj ??= reason;\x0d\n  }\x0d\n  this.statusCode = statusCode;\x0d\n\x0d\n  let headers;\x0d\n  if (this[kOutHeaders]) {\x0d\n    // Slow-case: when progressive API and header fields are passed.\x0d\n    let k;\x0d\n    if (ArrayIsArray(obj)) {\x0d\n      if (obj.length % 2 !== 0) {\x0d\n        throw new ERR_INVALID_ARG_VALUE('headers'\x2C obj);\x0d\n      }\x0d\n\x0d\n      for (let n = 0; n < obj.length; n += 2) {\x0d\n        k = obj[n + 0];\x0d\n        if (k) this.setHeader(k\x2C obj[n + 1]);\x0d\n      }\x0d\n    } else if (obj) {\x0d\n      const keys = ObjectKeys(obj);\x0d\n      // Retain for(;;) loop for performance reasons\x0d\n      // Refs: https://github.com/nodejs/node/pull/30958\x0d\n      for (let i = 0; i < keys.length; i++) {\x0d\n        k = keys[i];\x0d\n        if (k) this.setHeader(k\x2C obj[k]);\x0d\n      }\x0d\n    }\x0d\n    // Only progressive api is used\x0d\n    headers = this[kOutHeaders];\x0d\n  } else {\x0d\n    // Only writeHead() called\x0d\n    headers = obj;\x0d\n  }\x0d\n\x0d\n  if (checkInvalidHeaderChar(this.statusMessage))\x0d\n    throw new ERR_INVALID_CHAR('statusMessage');\x0d\n\x0d\n  const statusLine = `HTTP/1.1 ${statusCode} ${this.statusMessage}\\r\\n`;\x0d\n\x0d\n  if (statusCode === 204 || statusCode === 304 ||\x0d\n      (statusCode >= 100 && statusCode <= 199)) {\x0d\n    // RFC 2616\x2C 10.2.5:\x0d\n    // The 204 response MUST NOT include a message-body\x2C and thus is always\x0d\n    // terminated by the first empty line after the header fields.\x0d\n    // RFC 2616\x2C 10.3.5:\x0d\n    // The 304 response MUST NOT contain a message-body\x2C and thus is always\x0d\n    // terminated by the first empty line after the header fields.\x0d\n    // RFC 2616\x2C 10.1 Informational 1xx:\x0d\n    // This class of status code indicates a provisional response\x2C\x0d\n    // consisting only of the Status-Line and optional headers\x2C and is\x0d\n    // terminated by an empty line.\x0d\n    this._hasBody = false;\x0d\n  }\x0d\n\x0d\n  // Don't keep alive connections where the client expects 100 Continue\x0d\n  // but we sent a final status; they may put extra bytes on the wire.\x0d\n  if (this._expect_continue && !this._sent100) {\x0d\n    this.shouldKeepAlive = false;\x0d\n  }\x0d\n\x0d\n  this._storeHeader(statusLine\x2C headers);\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\n// Docs-only deprecated: DEP0063\x0d\nServerResponse.prototype.writeHeader = ServerResponse.prototype.writeHead;\x0d\n\x0d\nfunction storeHTTPOptions(options) {\x0d\n  this[kIncomingMessage] = options.IncomingMessage || IncomingMessage;\x0d\n  this[kServerResponse] = options.ServerResponse || ServerResponse;\x0d\n\x0d\n  const maxHeaderSize = options.maxHeaderSize;\x0d\n  if (maxHeaderSize !== undefined)\x0d\n    validateInteger(maxHeaderSize\x2C 'maxHeaderSize'\x2C 0);\x0d\n  this.maxHeaderSize = maxHeaderSize;\x0d\n\x0d\n  const insecureHTTPParser = options.insecureHTTPParser;\x0d\n  if (insecureHTTPParser !== undefined)\x0d\n    validateBoolean(insecureHTTPParser\x2C 'options.insecureHTTPParser');\x0d\n  this.insecureHTTPParser = insecureHTTPParser;\x0d\n\x0d\n  const requestTimeout = options.requestTimeout;\x0d\n  if (requestTimeout !== undefined) {\x0d\n    validateInteger(requestTimeout\x2C 'requestTimeout'\x2C 0);\x0d\n    this.requestTimeout = requestTimeout;\x0d\n  } else {\x0d\n    this.requestTimeout = 300_000; // 5 minutes\x0d\n  }\x0d\n\x0d\n  const headersTimeout = options.headersTimeout;\x0d\n  if (headersTimeout !== undefined) {\x0d\n    validateInteger(headersTimeout\x2C 'headersTimeout'\x2C 0);\x0d\n    this.headersTimeout = headersTimeout;\x0d\n  } else {\x0d\n    this.headersTimeout = MathMin(60_000\x2C this.requestTimeout); // Minimum between 60 seconds or requestTimeout\x0d\n  }\x0d\n\x0d\n  if (this.requestTimeout > 0 && this.headersTimeout > 0 && this.headersTimeout > this.requestTimeout) {\x0d\n    throw new codes.ERR_OUT_OF_RANGE('headersTimeout'\x2C '<= requestTimeout'\x2C headersTimeout);\x0d\n  }\x0d\n\x0d\n  const keepAliveTimeout = options.keepAliveTimeout;\x0d\n  if (keepAliveTimeout !== undefined) {\x0d\n    validateInteger(keepAliveTimeout\x2C 'keepAliveTimeout'\x2C 0);\x0d\n    this.keepAliveTimeout = keepAliveTimeout;\x0d\n  } else {\x0d\n    this.keepAliveTimeout = 5_000; // 5 seconds;\x0d\n  }\x0d\n\x0d\n  const connectionsCheckingInterval = options.connectionsCheckingInterval;\x0d\n  if (connectionsCheckingInterval !== undefined) {\x0d\n    validateInteger(connectionsCheckingInterval\x2C 'connectionsCheckingInterval'\x2C 0);\x0d\n    this.connectionsCheckingInterval = connectionsCheckingInterval;\x0d\n  } else {\x0d\n    this.connectionsCheckingInterval = 30_000; // 30 seconds\x0d\n  }\x0d\n\x0d\n  const requireHostHeader = options.requireHostHeader;\x0d\n  if (requireHostHeader !== undefined) {\x0d\n    validateBoolean(requireHostHeader\x2C 'options.requireHostHeader');\x0d\n    this.requireHostHeader = requireHostHeader;\x0d\n  } else {\x0d\n    this.requireHostHeader = true;\x0d\n  }\x0d\n\x0d\n  const joinDuplicateHeaders = options.joinDuplicateHeaders;\x0d\n  if (joinDuplicateHeaders !== undefined) {\x0d\n    validateBoolean(joinDuplicateHeaders\x2C 'options.joinDuplicateHeaders');\x0d\n  }\x0d\n  this.joinDuplicateHeaders = joinDuplicateHeaders;\x0d\n\x0d\n  const rejectNonStandardBodyWrites = options.rejectNonStandardBodyWrites;\x0d\n  if (rejectNonStandardBodyWrites !== undefined) {\x0d\n    validateBoolean(rejectNonStandardBodyWrites\x2C 'options.rejectNonStandardBodyWrites');\x0d\n    this.rejectNonStandardBodyWrites = rejectNonStandardBodyWrites;\x0d\n  } else {\x0d\n    this.rejectNonStandardBodyWrites = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupConnectionsTracking() {\x0d\n  // Start connection handling\x0d\n  if (!this[kConnections]) {\x0d\n    this[kConnections] = new ConnectionsList();\x0d\n  }\x0d\n\x0d\n  // This checker is started without checking whether any headersTimeout or requestTimeout is non zero\x0d\n  // otherwise it would not be started if such timeouts are modified after createServer.\x0d\n  this[kConnectionsCheckingInterval] =\x0d\n    setInterval(checkConnections.bind(this)\x2C this.connectionsCheckingInterval).unref();\x0d\n}\x0d\n\x0d\nfunction httpServerPreClose(server) {\x0d\n  server.closeIdleConnections();\x0d\n  clearInterval(server[kConnectionsCheckingInterval]);\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C requestListener) {\x0d\n  if (!(this instanceof Server)) return new Server(options\x2C requestListener);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    requestListener = options;\x0d\n    options = kEmptyObject;\x0d\n  } else if (options == null) {\x0d\n    options = kEmptyObject;\x0d\n  } else {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n\x0d\n  storeHTTPOptions.call(this\x2C options);\x0d\n  net.Server.call(\x0d\n    this\x2C\x0d\n    { allowHalfOpen: true\x2C noDelay: options.noDelay ?? true\x2C\x0d\n      keepAlive: options.keepAlive\x2C\x0d\n      keepAliveInitialDelay: options.keepAliveInitialDelay\x2C\x0d\n      highWaterMark: options.highWaterMark });\x0d\n\x0d\n  if (requestListener) {\x0d\n    this.on('request'\x2C requestListener);\x0d\n  }\x0d\n\x0d\n  // Similar option to this. Too lazy to write my own docs.\x0d\n  // http://www.squid-cache.org/Doc/config/half_closed_clients/\x0d\n  // https://wiki.squid-cache.org/SquidFaq/InnerWorkings#What_is_a_half-closed_filedescriptor.3F\x0d\n  this.httpAllowHalfOpen = false;\x0d\n\x0d\n  this.on('connection'\x2C connectionListener);\x0d\n  this.on('listening'\x2C setupConnectionsTracking);\x0d\n\x0d\n  this.timeout = 0;\x0d\n  this.maxHeadersCount = null;\x0d\n  this.maxRequestsPerSocket = 0;\x0d\n\x0d\n  this[kUniqueHeaders] = parseUniqueHeadersOption(options.uniqueHeaders);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C net.Server.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C net.Server);\x0d\n\x0d\nServer.prototype.close = function() {\x0d\n  httpServerPreClose(this);\x0d\n  ReflectApply(net.Server.prototype.close\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nServer.prototype[SymbolAsyncDispose] = async function() {\x0d\n  return FunctionPrototypeCall(promisify(this.close)\x2C this);\x0d\n};\x0d\n\x0d\nServer.prototype.closeAllConnections = function() {\x0d\n  if (!this[kConnections]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const connections = this[kConnections].all();\x0d\n\x0d\n  for (let i = 0\x2C l = connections.length; i < l; i++) {\x0d\n    connections[i].socket.destroy();\x0d\n  }\x0d\n};\x0d\n\x0d\nServer.prototype.closeIdleConnections = function() {\x0d\n  if (!this[kConnections]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const connections = this[kConnections].idle();\x0d\n\x0d\n  for (let i = 0\x2C l = connections.length; i < l; i++) {\x0d\n    if (connections[i].socket._httpMessage && !connections[i].socket._httpMessage.finished) {\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    connections[i].socket.destroy();\x0d\n  }\x0d\n};\x0d\n\x0d\nServer.prototype.setTimeout = function setTimeout(msecs\x2C callback) {\x0d\n  this.timeout = msecs;\x0d\n  if (callback)\x0d\n    this.on('timeout'\x2C callback);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype[EE.captureRejectionSymbol] = function(err\x2C event\x2C ...args) {\x0d\n  switch (event) {\x0d\n    case 'request': {\x0d\n      const { 1: res } = args;\x0d\n      if (!res.headersSent && !res.writableEnded) {\x0d\n        // Don't leak headers.\x0d\n        const names = res.getHeaderNames();\x0d\n        for (let i = 0; i < names.length; i++) {\x0d\n          res.removeHeader(names[i]);\x0d\n        }\x0d\n        res.statusCode = 500;\x0d\n        res.end(STATUS_CODES[500]);\x0d\n      } else {\x0d\n        res.destroy();\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n    default:\x0d\n      net.Server.prototype[SymbolFor('nodejs.rejection')]\x0d\n        .apply(this\x2C arguments);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction checkConnections() {\x0d\n  if (this.headersTimeout === 0 && this.requestTimeout === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const expired = this[kConnections].expired(this.headersTimeout\x2C this.requestTimeout);\x0d\n\x0d\n  for (let i = 0; i < expired.length; i++) {\x0d\n    const socket = expired[i].socket;\x0d\n\x0d\n    if (socket) {\x0d\n      onRequestTimeout(socket);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction connectionListener(socket) {\x0d\n  defaultTriggerAsyncIdScope(\x0d\n    getOrSetAsyncId(socket)\x2C connectionListenerInternal\x2C this\x2C socket\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction connectionListenerInternal(server\x2C socket) {\x0d\n  debug('SERVER new http connection');\x0d\n\x0d\n  // Ensure that the server property of the socket is correctly set.\x0d\n  // See https://github.com/nodejs/node/issues/13435\x0d\n  socket.server = server;\x0d\n\x0d\n  // If the user has added a listener to the server\x2C\x0d\n  // request\x2C or response\x2C then it's their responsibility.\x0d\n  // otherwise\x2C destroy on timeout by default\x0d\n  if (server.timeout && typeof socket.setTimeout === 'function')\x0d\n    socket.setTimeout(server.timeout);\x0d\n  socket.on('timeout'\x2C socketOnTimeout);\x0d\n\x0d\n  const parser = parsers.alloc();\x0d\n\x0d\n  const lenient = server.insecureHTTPParser === undefined ?\x0d\n    isLenient() : server.insecureHTTPParser;\x0d\n\x0d\n  // TODO(addaleax): This doesn't play well with the\x0d\n  // `async_hooks.currentResource()` proposal\x2C see\x0d\n  // https://github.com/nodejs/node/pull/21313\x0d\n  parser.initialize(\x0d\n    HTTPParser.REQUEST\x2C\x0d\n    new HTTPServerAsyncResource('HTTPINCOMINGMESSAGE'\x2C socket)\x2C\x0d\n    server.maxHeaderSize || 0\x2C\x0d\n    lenient ? kLenientAll : kLenientNone\x2C\x0d\n    server[kConnections]\x2C\x0d\n  );\x0d\n  parser.socket = socket;\x0d\n  socket.parser = parser;\x0d\n\x0d\n  // Propagate headers limit from server instance to parser\x0d\n  if (typeof server.maxHeadersCount === 'number') {\x0d\n    parser.maxHeaderPairs = server.maxHeadersCount << 1;\x0d\n  }\x0d\n\x0d\n  const state = {\x0d\n    onData: null\x2C\x0d\n    onEnd: null\x2C\x0d\n    onClose: null\x2C\x0d\n    onDrain: null\x2C\x0d\n    outgoing: []\x2C\x0d\n    incoming: []\x2C\x0d\n    // `outgoingData` is an approximate amount of bytes queued through all\x0d\n    // inactive responses. If more data than the high watermark is queued - we\x0d\n    // need to pause TCP socket/HTTP parser\x2C and wait until the data will be\x0d\n    // sent to the client.\x0d\n    outgoingData: 0\x2C\x0d\n    requestsCount: 0\x2C\x0d\n    keepAliveTimeoutSet: false\x2C\x0d\n  };\x0d\n  state.onData = socketOnData.bind(undefined\x2C\x0d\n                                   server\x2C socket\x2C parser\x2C state);\x0d\n  state.onEnd = socketOnEnd.bind(undefined\x2C\x0d\n                                 server\x2C socket\x2C parser\x2C state);\x0d\n  state.onClose = socketOnClose.bind(undefined\x2C\x0d\n                                     socket\x2C state);\x0d\n  state.onDrain = socketOnDrain.bind(undefined\x2C\x0d\n                                     socket\x2C state);\x0d\n  socket.on('data'\x2C state.onData);\x0d\n  socket.on('error'\x2C socketOnError);\x0d\n  socket.on('end'\x2C state.onEnd);\x0d\n  socket.on('close'\x2C state.onClose);\x0d\n  socket.on('drain'\x2C state.onDrain);\x0d\n  parser.onIncoming = parserOnIncoming.bind(undefined\x2C\x0d\n                                            server\x2C socket\x2C state);\x0d\n\x0d\n  // We are consuming socket\x2C so it won't get any actual data\x0d\n  socket.on('resume'\x2C onSocketResume);\x0d\n  socket.on('pause'\x2C onSocketPause);\x0d\n\x0d\n  // Overrides to unconsume on `data`\x2C `readable` listeners\x0d\n  socket.on = generateSocketListenerWrapper('on');\x0d\n  socket.addListener = generateSocketListenerWrapper('addListener');\x0d\n  socket.prependListener = generateSocketListenerWrapper('prependListener');\x0d\n  socket.setEncoding = socketSetEncoding;\x0d\n\x0d\n  // We only consume the socket if it has never been consumed before.\x0d\n  if (socket._handle && socket._handle.isStreamBase &&\x0d\n      !socket._handle._consumed) {\x0d\n    parser._consumed = true;\x0d\n    socket._handle._consumed = true;\x0d\n    parser.consume(socket._handle);\x0d\n  }\x0d\n  parser[kOnExecute] =\x0d\n    onParserExecute.bind(undefined\x2C\x0d\n                         server\x2C socket\x2C parser\x2C state);\x0d\n\x0d\n  parser[kOnTimeout] =\x0d\n    onParserTimeout.bind(undefined\x2C\x0d\n                         server\x2C socket);\x0d\n\x0d\n  socket._paused = false;\x0d\n}\x0d\n\x0d\nfunction socketSetEncoding() {\x0d\n  throw new ERR_HTTP_SOCKET_ENCODING();\x0d\n}\x0d\n\x0d\nfunction updateOutgoingData(socket\x2C state\x2C delta) {\x0d\n  state.outgoingData += delta;\x0d\n  socketOnDrain(socket\x2C state);\x0d\n}\x0d\n\x0d\nfunction socketOnDrain(socket\x2C state) {\x0d\n  const needPause = state.outgoingData > socket.writableHighWaterMark;\x0d\n\x0d\n  // If we previously paused\x2C then start reading again.\x0d\n  if (socket._paused && !needPause) {\x0d\n    socket._paused = false;\x0d\n    if (socket.parser)\x0d\n      socket.parser.resume();\x0d\n    socket.resume();\x0d\n  }\x0d\n\x0d\n  const msg = socket._httpMessage;\x0d\n  if (msg && !msg.finished && msg[kNeedDrain]) {\x0d\n    msg[kNeedDrain] = false;\x0d\n    msg.emit('drain');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction socketOnTimeout() {\x0d\n  const req = this.parser && this.parser.incoming;\x0d\n  const reqTimeout = req && !req.complete && req.emit('timeout'\x2C this);\x0d\n  const res = this._httpMessage;\x0d\n  const resTimeout = res && res.emit('timeout'\x2C this);\x0d\n  const serverTimeout = this.server.emit('timeout'\x2C this);\x0d\n\x0d\n  if (!reqTimeout && !resTimeout && !serverTimeout)\x0d\n    this.destroy();\x0d\n}\x0d\n\x0d\nfunction socketOnClose(socket\x2C state) {\x0d\n  debug('server socket close');\x0d\n  freeParser(socket.parser\x2C null\x2C socket);\x0d\n  abortIncoming(state.incoming);\x0d\n}\x0d\n\x0d\nfunction abortIncoming(incoming) {\x0d\n  while (incoming.length) {\x0d\n    const req = incoming.shift();\x0d\n    req.destroy(new ConnResetException('aborted'));\x0d\n  }\x0d\n  // Abort socket._httpMessage ?\x0d\n}\x0d\n\x0d\nfunction socketOnEnd(server\x2C socket\x2C parser\x2C state) {\x0d\n  const ret = parser.finish();\x0d\n\x0d\n  if (ret instanceof Error) {\x0d\n    debug('parse error');\x0d\n    // socketOnError has additional logic and will call socket.destroy(err).\x0d\n    socketOnError.call(socket\x2C ret);\x0d\n  } else if (!server.httpAllowHalfOpen) {\x0d\n    socket.end();\x0d\n  } else if (state.outgoing.length) {\x0d\n    state.outgoing[state.outgoing.length - 1]._last = true;\x0d\n  } else if (socket._httpMessage) {\x0d\n    socket._httpMessage._last = true;\x0d\n  } else {\x0d\n    socket.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction socketOnData(server\x2C socket\x2C parser\x2C state\x2C d) {\x0d\n  assert(!socket._paused);\x0d\n  debug('SERVER socketOnData %d'\x2C d.length);\x0d\n\x0d\n  const ret = parser.execute(d);\x0d\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d);\x0d\n}\x0d\n\x0d\nfunction onRequestTimeout(socket) {\x0d\n  // socketOnError has additional logic and will call socket.destroy(err).\x0d\n  socketOnError.call(socket\x2C new ERR_HTTP_REQUEST_TIMEOUT());\x0d\n}\x0d\n\x0d\nfunction onParserExecute(server\x2C socket\x2C parser\x2C state\x2C ret) {\x0d\n  // When underlying `net.Socket` instance is consumed - no\x0d\n  // `data` events are emitted\x2C and thus `socket.setTimeout` fires the\x0d\n  // callback even if the data is constantly flowing into the socket.\x0d\n  // See\x2C https://github.com/nodejs/node/commit/ec2822adaad76b126b5cccdeaa1addf2376c9aa6\x0d\n  socket._unrefTimer();\x0d\n  debug('SERVER socketOnParserExecute %d'\x2C ret);\x0d\n  onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction onParserTimeout(server\x2C socket) {\x0d\n  const serverTimeout = server.emit('timeout'\x2C socket);\x0d\n\x0d\n  if (!serverTimeout)\x0d\n    socket.destroy();\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\nconst badRequestResponse = Buffer.from(\x0d\n  `HTTP/1.1 400 ${STATUS_CODES[400]}\\r\\n` +\x0d\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\x2C\x0d\n);\x0d\nconst requestTimeoutResponse = Buffer.from(\x0d\n  `HTTP/1.1 408 ${STATUS_CODES[408]}\\r\\n` +\x0d\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\x2C\x0d\n);\x0d\nconst requestHeaderFieldsTooLargeResponse = Buffer.from(\x0d\n  `HTTP/1.1 431 ${STATUS_CODES[431]}\\r\\n` +\x0d\n  'Connection: close\\r\\n\\r\\n'\x2C 'ascii'\x2C\x0d\n);\x0d\n\x0d\nfunction warnUnclosedSocket() {\x0d\n  if (warnUnclosedSocket.emitted) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  warnUnclosedSocket.emitted = true;\x0d\n  process.emitWarning(\x0d\n    'An error event has already been emitted on the socket. ' +\x0d\n    'Please use the destroy method on the socket while handling ' +\x0d\n    "a 'clientError' event."\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction socketOnError(e) {\x0d\n  // Ignore further errors\x0d\n  this.removeListener('error'\x2C socketOnError);\x0d\n\x0d\n  if (this.listenerCount('error'\x2C noop) === 0) {\x0d\n    this.on('error'\x2C noop);\x0d\n  } else {\x0d\n    warnUnclosedSocket();\x0d\n  }\x0d\n\x0d\n  if (!this.server.emit('clientError'\x2C e\x2C this)) {\x0d\n    // Caution must be taken to avoid corrupting the remote peer.\x0d\n    // Reply an error segment if there is no in-flight `ServerResponse`\x2C\x0d\n    // or no data of the in-flight one has been written yet to this socket.\x0d\n    if (this.writable &&\x0d\n        (!this._httpMessage || !this._httpMessage._headerSent)) {\x0d\n      let response;\x0d\n\x0d\n      switch (e.code) {\x0d\n        case 'HPE_HEADER_OVERFLOW':\x0d\n          response = requestHeaderFieldsTooLargeResponse;\x0d\n          break;\x0d\n        case 'ERR_HTTP_REQUEST_TIMEOUT':\x0d\n          response = requestTimeoutResponse;\x0d\n          break;\x0d\n        default:\x0d\n          response = badRequestResponse;\x0d\n          break;\x0d\n      }\x0d\n\x0d\n      this.write(response);\x0d\n    }\x0d\n    this.destroy(e);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParserExecuteCommon(server\x2C socket\x2C parser\x2C state\x2C ret\x2C d) {\x0d\n  resetSocketTimeout(server\x2C socket\x2C state);\x0d\n\x0d\n  if (ret instanceof Error) {\x0d\n    prepareError(ret\x2C parser\x2C d);\x0d\n    debug('parse error'\x2C ret);\x0d\n    socketOnError.call(socket\x2C ret);\x0d\n  } else if (parser.incoming && parser.incoming.upgrade) {\x0d\n    // Upgrade or CONNECT\x0d\n    const req = parser.incoming;\x0d\n    debug('SERVER upgrade or connect'\x2C req.method);\x0d\n\x0d\n    if (!d)\x0d\n      d = parser.getCurrentBuffer();\x0d\n\x0d\n    socket.removeListener('data'\x2C state.onData);\x0d\n    socket.removeListener('end'\x2C state.onEnd);\x0d\n    socket.removeListener('close'\x2C state.onClose);\x0d\n    socket.removeListener('drain'\x2C state.onDrain);\x0d\n    socket.removeListener('error'\x2C socketOnError);\x0d\n    socket.removeListener('timeout'\x2C socketOnTimeout);\x0d\n    unconsume(parser\x2C socket);\x0d\n    parser.finish();\x0d\n    freeParser(parser\x2C req\x2C socket);\x0d\n    parser = null;\x0d\n\x0d\n    const eventName = req.method === 'CONNECT' ? 'connect' : 'upgrade';\x0d\n    if (eventName === 'upgrade' || server.listenerCount(eventName) > 0) {\x0d\n      debug('SERVER have listener for %s'\x2C eventName);\x0d\n      const bodyHead = d.slice(ret\x2C d.length);\x0d\n\x0d\n      socket.readableFlowing = null;\x0d\n\x0d\n      server.emit(eventName\x2C req\x2C socket\x2C bodyHead);\x0d\n    } else {\x0d\n      // Got CONNECT method\x2C but have no handler.\x0d\n      socket.destroy();\x0d\n    }\x0d\n  } else if (parser.incoming && parser.incoming.method === 'PRI') {\x0d\n    debug('SERVER got PRI request');\x0d\n    socket.destroy();\x0d\n  }\x0d\n\x0d\n  if (socket._paused && socket.parser) {\x0d\n    // onIncoming paused the socket\x2C we should pause the parser as well\x0d\n    debug('pause parser');\x0d\n    socket.parser.pause();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction clearIncoming(req) {\x0d\n  req = req || this;\x0d\n  const parser = req.socket && req.socket.parser;\x0d\n  // Reset the .incoming property so that the request object can be gc'ed.\x0d\n  if (parser && parser.incoming === req) {\x0d\n    if (req.readableEnded) {\x0d\n      parser.incoming = null;\x0d\n    } else {\x0d\n      req.on('end'\x2C clearIncoming);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resOnFinish(req\x2C res\x2C socket\x2C state\x2C server) {\x0d\n  if (onResponseFinishChannel.hasSubscribers) {\x0d\n    onResponseFinishChannel.publish({\x0d\n      request: req\x2C\x0d\n      response: res\x2C\x0d\n      socket\x2C\x0d\n      server\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Usually the first incoming element should be our request.  it may\x0d\n  // be that in the case abortIncoming() was called that the incoming\x0d\n  // array will be empty.\x0d\n  assert(state.incoming.length === 0 || state.incoming[0] === req);\x0d\n\x0d\n  state.incoming.shift();\x0d\n\x0d\n  // If the user never called req.read()\x2C and didn't pipe() or\x0d\n  // .resume() or .on('data')\x2C then we call req._dump() so that the\x0d\n  // bytes will be pulled off the wire.\x0d\n  if (!req._consuming && !req._readableState.resumeScheduled)\x0d\n    req._dump();\x0d\n\x0d\n  res.detachSocket(socket);\x0d\n  clearIncoming(req);\x0d\n  process.nextTick(emitCloseNT\x2C res);\x0d\n\x0d\n  if (res._last) {\x0d\n    if (typeof socket.destroySoon === 'function') {\x0d\n      socket.destroySoon();\x0d\n    } else {\x0d\n      socket.end();\x0d\n    }\x0d\n  } else if (state.outgoing.length === 0) {\x0d\n    if (server.keepAliveTimeout && typeof socket.setTimeout === 'function') {\x0d\n      socket.setTimeout(server.keepAliveTimeout);\x0d\n      state.keepAliveTimeoutSet = true;\x0d\n    }\x0d\n  } else {\x0d\n    // Start sending the next message\x0d\n    const m = state.outgoing.shift();\x0d\n    if (m) {\x0d\n      m.assignSocket(socket);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  if (!self._closed) {\x0d\n    self.destroyed = true;\x0d\n    self._closed = true;\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\n// The following callback is issued after the headers have been read on a\x0d\n// new message. In this callback we setup the response object and pass it\x0d\n// to the user.\x0d\nfunction parserOnIncoming(server\x2C socket\x2C state\x2C req\x2C keepAlive) {\x0d\n  resetSocketTimeout(server\x2C socket\x2C state);\x0d\n\x0d\n  if (req.upgrade) {\x0d\n    req.upgrade = req.method === 'CONNECT' ||\x0d\n                  server.listenerCount('upgrade') > 0;\x0d\n    if (req.upgrade)\x0d\n      return 2;\x0d\n  }\x0d\n\x0d\n  state.incoming.push(req);\x0d\n\x0d\n  // If the writable end isn't consuming\x2C then stop reading\x0d\n  // so that we don't become overwhelmed by a flood of\x0d\n  // pipelined requests that may never be resolved.\x0d\n  if (!socket._paused) {\x0d\n    const ws = socket._writableState;\x0d\n    if (ws.needDrain || state.outgoingData >= socket.writableHighWaterMark) {\x0d\n      socket._paused = true;\x0d\n      // We also need to pause the parser\x2C but don't do that until after\x0d\n      // the call to execute\x2C because we may still be processing the last\x0d\n      // chunk.\x0d\n      socket.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const res = new server[kServerResponse](req\x2C\x0d\n                                          {\x0d\n                                            highWaterMark: socket.writableHighWaterMark\x2C\x0d\n                                            rejectNonStandardBodyWrites: server.rejectNonStandardBodyWrites\x2C\x0d\n                                          });\x0d\n  res._keepAliveTimeout = server.keepAliveTimeout;\x0d\n  res._maxRequestsPerSocket = server.maxRequestsPerSocket;\x0d\n  res._onPendingData = updateOutgoingData.bind(undefined\x2C\x0d\n                                               socket\x2C state);\x0d\n\x0d\n  res.shouldKeepAlive = keepAlive;\x0d\n  res[kUniqueHeaders] = server[kUniqueHeaders];\x0d\n\x0d\n  if (onRequestStartChannel.hasSubscribers) {\x0d\n    onRequestStartChannel.publish({\x0d\n      request: req\x2C\x0d\n      response: res\x2C\x0d\n      socket\x2C\x0d\n      server\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (socket._httpMessage) {\x0d\n    // There are already pending outgoing res\x2C append.\x0d\n    state.outgoing.push(res);\x0d\n  } else {\x0d\n    res.assignSocket(socket);\x0d\n  }\x0d\n\x0d\n  // When we're finished writing the response\x2C check if this is the last\x0d\n  // response\x2C if so destroy the socket.\x0d\n  res.on('finish'\x2C\x0d\n         resOnFinish.bind(undefined\x2C\x0d\n                          req\x2C res\x2C socket\x2C state\x2C server));\x0d\n\x0d\n  let handled = false;\x0d\n\x0d\n\x0d\n  if (req.httpVersionMajor === 1 && req.httpVersionMinor === 1) {\x0d\n\x0d\n    // From RFC 7230 5.4 https://datatracker.ietf.org/doc/html/rfc7230#section-5.4\x0d\n    // A server MUST respond with a 400 (Bad Request) status code to any\x0d\n    // HTTP/1.1 request message that lacks a Host header field\x0d\n    if (server.requireHostHeader && req.headers.host === undefined) {\x0d\n      res.writeHead(400\x2C ['Connection'\x2C 'close']);\x0d\n      res.end();\x0d\n      return 0;\x0d\n    }\x0d\n\x0d\n    const isRequestsLimitSet = (\x0d\n      typeof server.maxRequestsPerSocket === 'number' &&\x0d\n      server.maxRequestsPerSocket > 0\x0d\n    );\x0d\n\x0d\n    if (isRequestsLimitSet) {\x0d\n      state.requestsCount++;\x0d\n      res.maxRequestsOnConnectionReached = (\x0d\n        server.maxRequestsPerSocket <= state.requestsCount);\x0d\n    }\x0d\n\x0d\n    if (isRequestsLimitSet &&\x0d\n      (server.maxRequestsPerSocket < state.requestsCount)) {\x0d\n      handled = true;\x0d\n      server.emit('dropRequest'\x2C req\x2C socket);\x0d\n      res.writeHead(503);\x0d\n      res.end();\x0d\n    } else if (req.headers.expect !== undefined) {\x0d\n      handled = true;\x0d\n\x0d\n      if (RegExpPrototypeExec(continueExpression\x2C req.headers.expect) !== null) {\x0d\n        res._expect_continue = true;\x0d\n        if (server.listenerCount('checkContinue') > 0) {\x0d\n          server.emit('checkContinue'\x2C req\x2C res);\x0d\n        } else {\x0d\n          res.writeContinue();\x0d\n          server.emit('request'\x2C req\x2C res);\x0d\n        }\x0d\n      } else if (server.listenerCount('checkExpectation') > 0) {\x0d\n        server.emit('checkExpectation'\x2C req\x2C res);\x0d\n      } else {\x0d\n        res.writeHead(417);\x0d\n        res.end();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!handled) {\x0d\n    server.emit('request'\x2C req\x2C res);\x0d\n  }\x0d\n\x0d\n  return 0;  // No special treatment.\x0d\n}\x0d\n\x0d\nfunction resetSocketTimeout(server\x2C socket\x2C state) {\x0d\n  if (!state.keepAliveTimeoutSet)\x0d\n    return;\x0d\n\x0d\n  socket.setTimeout(server.timeout || 0);\x0d\n  state.keepAliveTimeoutSet = false;\x0d\n}\x0d\n\x0d\nfunction onSocketResume() {\x0d\n  // It may seem that the socket is resumed\x2C but this is an enemy's trick to\x0d\n  // deceive us! `resume` is emitted asynchronously\x2C and may be called from\x0d\n  // `incoming.readStart()`. Stop the socket again here\x2C just to preserve the\x0d\n  // state.\x0d\n  //\x0d\n  // We don't care about stream semantics for the consumed socket anyway.\x0d\n  if (this._paused) {\x0d\n    this.pause();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (this._handle && !this._handle.reading) {\x0d\n    this._handle.reading = true;\x0d\n    this._handle.readStart();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onSocketPause() {\x0d\n  if (this._handle && this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    this._handle.readStop();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction unconsume(parser\x2C socket) {\x0d\n  if (socket._handle) {\x0d\n    if (parser._consumed)\x0d\n      parser.unconsume();\x0d\n    parser._consumed = false;\x0d\n    socket.removeListener('pause'\x2C onSocketPause);\x0d\n    socket.removeListener('resume'\x2C onSocketResume);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction generateSocketListenerWrapper(originalFnName) {\x0d\n  return function socketListenerWrap(ev\x2C fn) {\x0d\n    const res = net.Socket.prototype[originalFnName].call(this\x2C\x0d\n                                                          ev\x2C fn);\x0d\n    if (!this.parser) {\x0d\n      this.on = net.Socket.prototype.on;\x0d\n      this.addListener = net.Socket.prototype.addListener;\x0d\n      this.prependListener = net.Socket.prototype.prependListener;\x0d\n      return res;\x0d\n    }\x0d\n\x0d\n    if (ev === 'data' || ev === 'readable')\x0d\n      unconsume(this.parser\x2C this);\x0d\n\x0d\n    return res;\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  STATUS_CODES\x2C\x0d\n  Server\x2C\x0d\n  ServerResponse\x2C\x0d\n  setupConnectionsTracking\x2C\x0d\n  storeHTTPOptions\x2C\x0d\n  _connectionListener: connectionListener\x2C\x0d\n  kServerResponse\x2C\x0d\n  httpServerPreClose\x2C\x0d\n  kConnectionsCheckingInterval\x2C\x0d\n};\x0d\n
code-source-info,0x395cad6f9c4,172,0,39598,C0O0C4O39598,,
code-creation,JS,10,241879,0x395cad717bc,1637, node:_http_server:1:1,0x395cad6f938,~
code-source-info,0x395cad717bc
code-creation,JS,10,242435,0x395cad736d4,499,getEncodingOps node:buffer:710:24,0x22671c90758,~
code-source-info,0x395cad736d
code-creation,JS,10,242569,0x395cad73ab4,5,byteLength node:buffer:659:17,0x22671c8fb80,~
code-source-info,0x395cad73ab4,24,19596,19621,C0O19615C4O19621,,
code-creation,JS,10,242598,0x395cad73b8c,23,write node:buffer:660:12,0x22671c8fc58,~
code-source-info,0x395cad73b8c,24,19635,19700,C0O19669C17O19669C22O19700,,
tick,0x7ffe2c1bb856,242810,0,0x0,0,0x7ff6ac072190,0x395cad71dcf,0x7ff62c4c3fb7,0x7ff62c4c3cc7,0x2ce89f35162,0x7ff62c4c3fb7,0x7ff62c509eb5,0x7ff62c50a29f,0x7ff62c50f175,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f33e46,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f2dfb5,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f2cb6a,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f03789,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,JS,10,243011,0x395cad747cc,34,get node:http:144:6,0x2ce89f34c68,~
code-source-info,0x395cad747cc,164,5421,5634,C0O5431C6O5500C12O5500C17O5481C22O5536C25O5552C29O5550C31O5608C33O5629,,
code-creation,JS,10,243069,0x395cad74e14,10,get node:http:158:6,0x2ce89f34cc0,~
code-source-info,0x395cad74e14,164,5768,5812,C0O5778C5O5795C9O5807,,
code-creation,JS,10,243130,0x395cad74f9c,33,getCurrentNodeMethods C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\methods\\index.js:29:31,0x2ce89f33cf0,~
code-source-info,0x395cad74f9c,163,413,535,C0O420C3O432C12O448C17O456C27O456C32O533,,
code-creation,JS,10,243173,0x395cad750c4,10,lowerCaseMethod C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\methods\\index.js:30:67,0x395cad74ee8,~
code-source-info,0x395cad750c4,163,484,531,C0O513C5O513C9O527,,
code-creation,JS,10,243244,0x395cad75424,32, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\route.js:201:25,0x2ce89f2de08,~
code-source-info,0x395cad75424,159,3677,4278,C0O3677C9O3689C14O3695C22O3705C26O3713C31O4277,,
code-creation,Eval,10,244351,0x395cad76d94,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\utils-merge\\index.js:1:1,0x395cad76c40,~
script-source,173,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\utils-merge\\index.js,/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       \x2C b = { bar: 'baz' };\n *\n *     merge(a\x2C b);\n *     // => { foo: 'bar'\x2C bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\nexports = module.exports = function(a\x2C b){\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n
code-source-info,0x395cad76d94,173,0,381,C0O0C4O381,,
code-creation,JS,10,244416,0x395cad76eac,14, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\utils-merge\\index.js:1:1,0x395cad76d08,~
code-source-info,0x395cad76eac,173,0,381,C0O249C5O274C13O380,,
code-creation,JS,11,245689,0x7ff62c50af80,1748,tryPackage node:internal/modules/cjs/loader:429:20,0x22671cb6d80,^
code-source-info,0x7ff62c50af80,63,12523,13818,,,
code-creation,JS,11,245727,0x7ff62c50b680,272,hideStackFrames node:internal/errors:507:25,0xfca8d37988,^
code-source-info,0x7ff62c50b680,10,13905,14189,,,
code-creation,JS,11,245746,0x7ff62c50b7c0,208,get node:diagnostics_channel:45:6,0x15e3f45c2a8,^
code-source-info,0x7ff62c50b7c0,109,1024,1071,,,
code-creation,JS,11,245765,0x7ff62c50b8c0,160,WeakReference node:internal/util:844:21,0x22671c82d98,^
code-source-info,0x7ff62c50b8c0,16,24254,24808,,,
code-creation,JS,11,245786,0x7ff62c50b980,268,SafeWeakRef node:internal/per_context/primordials:448:16,0xfca8d324b0,^
code-source-info,0x7ff62c50b980,6,13425,13452,,,
code-creation,JS,11,245803,0x7ff62c50bac0,248,WeakReference node:internal/util:848:14,0x22671c82bd0,^
code-source-info,0x7ff62c50bac0,16,24324,24382,,,
code-creation,JS,11,245821,0x7ff62c50bc00,308,set node:diagnostics_channel:40:6,0x15e3f45c250,^
code-source-info,0x7ff62c50bc00,109,898,1015,,,
code-creation,JS,11,245838,0x7ff62c50bd80,256,Channel node:diagnostics_channel:168:14,0x15e3f45c6d8,^
code-source-info,0x7ff62c50bd80,109,3913,4049,,,
code-creation,JS,11,245861,0x7ff62c50bec0,588,channel node:diagnostics_channel:213:17,0x15e3f45bfe8,^
code-source-info,0x7ff62c50bec0,109,4763,5022,,,
code-creation,JS,11,245878,0x7ff62c50c140,80,lowerCaseMethod C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\methods\\index.js:30:67,0x395cad74ee8,^
code-source-info,0x7ff62c50c140,163,484,531,,,
code-creation,JS,11,245901,0x7ff62c50c1c0,264, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\route.js:201:25,0x2ce89f2de08,^
code-source-info,0x7ff62c50c1c0,159,3677,4278,,,
code-creation,Eval,10,246141,0x395cad78c6c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\setprototypeof\\index.js:1:1,0x395cad78b18,~
script-source,174,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\setprototypeof\\index.js,'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj\x2C proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj\x2C proto) {\n  for (var prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj\x2C prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n
code-source-info,0x395cad78c6c,174,0,407,C0O0C4O407,,
code-creation,JS,10,246240,0x395cad78dcc,59, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\setprototypeof\\index.js:1:1,0x395cad78be0,~
code-source-info,0x395cad78dcc,174,0,407,C0O0C10O55C14O62C28O94C39O110C42O99C53O53C58O406,,
code-creation,JS,10,246356,0x395cad792e4,27, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:518:39,0x2ce89f2c910,~
code-source-info,0x395cad792e4,158,12092,12250,C0O12092C9O12104C17O12110C21O12118C26O12249,,
code-creation,JS,11,246720,0x7ff62c515b00,3804,normalize node:path:308:12,0x22671c9aa28,^
code-source-info,0x7ff62c515b00,34,9970,13124,,,
code-creation,JS,11,246748,0x7ff62c50c300,236, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:518:39,0x2ce89f2c910,^
code-source-info,0x7ff62c50c300,158,12092,12250,,,
code-creation,Eval,10,247189,0x395cad7acd4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\middleware\\init.js:1:1,0x395cad7ab70,~
script-source,175,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\middleware\\init.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Initialization middleware\x2C exposing the\n * request and response to each other\x2C as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nexports.init = function(app){\n  return function expressInit(req\x2C res\x2C next){\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By'\x2C 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n\n    setPrototypeOf(req\x2C app.request)\n    setPrototypeOf(res\x2C app.response)\n\n    res.locals = res.locals || Object.create(null);\n\n    next();\n  };\n};\n\n
code-source-info,0x395cad7acd4,175,0,853,C0O0C4O853,,
code-creation,JS,10,247253,0x395cad7ae24,24, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\middleware\\init.js:1:1,0x395cad7ac48,~
code-source-info,0x395cad7ae24,175,0,853,C0O0C5O247C8O247C12O247C14O487C18O500C23O852,,
code-creation,Eval,10,247861,0x395cad7bc9c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\middleware\\query.js:1:1,0x395cad7bb18,~
script-source,176,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\middleware\\query.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}\x2C options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req\x2C res\x2C next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val\x2C opts);\n    }\n\n    next();\n  };\n};\n
code-source-info,0x395cad7bc9c,176,0,885,C0O0C4O885,,
code-creation,JS,10,247932,0x395cad7bdc4,42, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\middleware\\query.js:1:1,0x395cad7bc10,~
code-source-info,0x395cad7bdc4,176,0,885,C0O0C5O226C8O226C12O226C14O264C17O264C21O264C23O294C26O294C30O294C32O383C36O398C41O884,,
new,MemoryChunk,0x229f2640000,262144
code-creation,Eval,10,250000,0x395cad7e5fc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\index.js:1:1,0x395cad7e4a8,~
script-source,177,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\index.js,'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats\x2C\n    parse: parse\x2C\n    stringify: stringify\n};\n
code-source-info,0x395cad7e5fc,177,0,211,C0O0C4O211,,
code-creation,JS,10,250056,0x395cad7e6fc,55, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\index.js:1:1,0x395cad7e570,~
code-source-info,0x395cad7e6fc,177,0,211,C0O31C3O31C8O67C11O67C16O101C19O101C24O124C31O156C37O176C43O198C49O139C54O210,,
code-creation,JS,11,250591,0x7ff62c516a00,3180,readFileSync node:fs:446:22,0x22671cabbb0,^
code-source-info,0x7ff62c516a00,55,11712,13387,,,
code-creation,JS,11,250637,0x7ff62c50c440,1632,trySelf node:internal/modules/cjs/loader:539:17,0x22671cb6f38,^
code-source-info,0x7ff62c50c440,63,16223,17163,,,
code-creation,Eval,10,250968,0x395cad7fe3c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\stringify.js:1:1,0x395cad7fbf8,~
script-source,178,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\stringify.js,'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    }\x2C\n    comma: 'comma'\x2C\n    indices: function indices(prefix\x2C key) {\n        return prefix + '[' + key + ']';\n    }\x2C\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr\x2C valueOrArray) {\n    push.apply(arr\x2C isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false\x2C\n    allowDots: false\x2C\n    charset: 'utf-8'\x2C\n    charsetSentinel: false\x2C\n    delimiter: '&'\x2C\n    encode: true\x2C\n    encoder: utils.encode\x2C\n    encodeValuesOnly: false\x2C\n    format: defaultFormat\x2C\n    formatter: formats.formatters[defaultFormat]\x2C\n    // deprecated\n    indices: false\x2C\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    }\x2C\n    skipNulls: false\x2C\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object\x2C\n    prefix\x2C\n    generateArrayPrefix\x2C\n    commaRoundTrip\x2C\n    strictNullHandling\x2C\n    skipNulls\x2C\n    encoder\x2C\n    filter\x2C\n    sort\x2C\n    allowDots\x2C\n    serializeDate\x2C\n    format\x2C\n    formatter\x2C\n    encodeValuesOnly\x2C\n    charset\x2C\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix\x2C obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj\x2C function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix\x2C defaults.encoder\x2C charset\x2C 'key'\x2C format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix\x2C defaults.encoder\x2C charset\x2C 'key'\x2C format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj)\x2C '\x2C');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : '\x2C') + formatter(encoder(valuesArray[i]\x2C defaults.encoder\x2C charset\x2C 'value'\x2C format));\n                }\n                return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj\x2C defaults.encoder\x2C charset\x2C 'value'\x2C format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join('\x2C') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix\x2C key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object\x2C step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel\x2C sideChannel);\n        pushToArray(values\x2C stringify(\n            value\x2C\n            keyPrefix\x2C\n            generateArrayPrefix\x2C\n            commaRoundTrip\x2C\n            strictNullHandling\x2C\n            skipNulls\x2C\n            encoder\x2C\n            filter\x2C\n            sort\x2C\n            allowDots\x2C\n            serializeDate\x2C\n            format\x2C\n            formatter\x2C\n            encodeValuesOnly\x2C\n            charset\x2C\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8\x2C iso-8859-1\x2C or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters\x2C opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix\x2C\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots\x2C\n        charset: charset\x2C\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel\x2C\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter\x2C\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode\x2C\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder\x2C\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly\x2C\n        filter: filter\x2C\n        format: format\x2C\n        formatter: formatter\x2C\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate\x2C\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls\x2C\n        sort: typeof opts.sort === 'function' ? opts.sort : null\x2C\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object\x2C opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter(''\x2C obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean\x2C or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys\x2C stringify(\n            obj[key]\x2C\n            key\x2C\n            generateArrayPrefix\x2C\n            commaRoundTrip\x2C\n            options.strictNullHandling\x2C\n            options.skipNulls\x2C\n            options.encode ? options.encoder : null\x2C\n            options.filter\x2C\n            options.sort\x2C\n            options.allowDots\x2C\n            options.serializeDate\x2C\n            options.format\x2C\n            options.formatter\x2C\n            options.encodeValuesOnly\x2C\n            options.charset\x2C\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;')\x2C the "numeric entity" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n
code-source-info,0x395cad7fe3c,178,0,10356,C0O0C4O10356,,
code-creation,JS,10,251389,0x229f26501dc,231, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\stringify.js:1:1,0x395cad7fdb0,~
code-source-info,0x229f26501dc,178,0,10356,C0O0C5O36C8O36C12O36C14O73C17O73C21O73C23O107C26O107C30O107C32O139C36O146C41O156C45O139C47O201C52O217C60O315C68O407C78O201C80O480C84O486C88O480C90O507C94O514C99O524C103O507C105O542C109O548C114O558C118O542C120O582C124O582C126O705C130O710C135O720C139O705C141O754C144O761C149O789C157O947C167O996C174O1034C181O1044C188O1118C198O789C200O1273C204O1273C206O1495C207O1495C209O1516C213O1516C215O5667C219O5667C221O7892C225O7907C230O10355,,
code-creation,Eval,10,252711,0x229f2656814,5, node:internal/modules/esm/resolve:1:1,0x229f2655370,~
script-source,179,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst { realpathSync } = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C toNamespacedPath\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst inputTypeFlag = getOptionValue('--input-type');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath\x2C isURL } = require('internal/url');\x0d\nconst { getCWDURL } = require('internal/util');\x0d\nconst { canParse: URLCanParse } = internalBinding('url');\x0d\nconst { legacyMainResolve: FSLegacyMainResolve } = internalBinding('fs');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\nconst { getPackageScopeConfig } = require('internal/modules/esm/package_config');\x0d\nconst { getConditionsSet } = require('internal/modules/esm/utils');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\n\x0d\n/**\x0d\n * @typedef {import('internal/modules/esm/package_config.js').PackageConfig} PackageConfig\x0d\n */\x0d\n\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * Emits a deprecation warning for the use of a deprecated trailing slash pattern mapping in the "exports" field\x0d\n * module resolution of a package.\x0d\n * @param {string} match - The deprecated trailing slash pattern mapping.\x0d\n * @param {string} pjsonUrl - The URL of the package.json file.\x0d\n * @param {string} base - The URL of the module that imported the package.\x0d\n */\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C base) {\x0d\n  if (process.noDeprecation) {\x0d\n    return;\x0d\n  }\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match)) { return; }\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ` +\x0d\n    `"exports" field module resolution of the package at ${pjsonPath}${\x0d\n      base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nconst doubleSlashRegEx = /[/\\\\][/\\\\]/;\x0d\n\x0d\n/**\x0d\n * Emits a deprecation warning for invalid segment in module resolution.\x0d\n * @param {string} target - The target module.\x0d\n * @param {string} request - The requested module.\x0d\n * @param {string} match - The matched module.\x0d\n * @param {string} pjsonUrl - The package.json URL.\x0d\n * @param {boolean} internal - Whether the module is in the "imports" or "exports" field.\x0d\n * @param {string} base - The base URL.\x0d\n * @param {boolean} isTarget - Whether the target is a module.\x0d\n */\x0d\nfunction emitInvalidSegmentDeprecation(target\x2C request\x2C match\x2C pjsonUrl\x2C internal\x2C base\x2C isTarget) {\x0d\n  if (process.noDeprecation) {\x0d\n    return;\x0d\n  }\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  const double = RegExpPrototypeExec(doubleSlashRegEx\x2C isTarget ? target : request) !== null;\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated ${double ? 'double slash' :\x0d\n      'leading or trailing slash matching'} resolving "${target}" for module ` +\x0d\n      `request "${request}" ${request !== match ? `matched to "${match}" ` : ''\x0d\n      }in the "${internal ? 'imports' : 'exports'}" field module resolution of the package at ${\x0d\n        pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0166'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Emits a deprecation warning if the given URL is a module and\x0d\n * the package.json file does not define a "main" or "exports" field.\x0d\n * @param {URL} url - The URL of the module being resolved.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file for the module.\x0d\n * @param {string | URL} [base] - The base URL for the module being resolved.\x0d\n * @param {string} [main] - The "main" field from the package.json file.\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  if (process.noDeprecation) {\x0d\n    return;\x0d\n  }\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module') { return; }\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (!main) {\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x2C\x0d\n    );\x0d\n  } else if (resolve(pkgPath\x2C main) !== path) {\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to "${main}"\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\nconst legacyMainResolveExtensions = [\x0d\n  ''\x2C\x0d\n  '.js'\x2C\x0d\n  '.json'\x2C\x0d\n  '.node'\x2C\x0d\n  '/index.js'\x2C\x0d\n  '/index.json'\x2C\x0d\n  '/index.node'\x2C\x0d\n  './index.js'\x2C\x0d\n  './index.json'\x2C\x0d\n  './index.node'\x2C\x0d\n];\x0d\n\x0d\nconst legacyMainResolveExtensionsIndexes = {\x0d\n  // 0-6: when packageConfig.main is defined\x0d\n  kResolvedByMain: 0\x2C\x0d\n  kResolvedByMainJs: 1\x2C\x0d\n  kResolvedByMainJson: 2\x2C\x0d\n  kResolvedByMainNode: 3\x2C\x0d\n  kResolvedByMainIndexJs: 4\x2C\x0d\n  kResolvedByMainIndexJson: 5\x2C\x0d\n  kResolvedByMainIndexNode: 6\x2C\x0d\n  // 7-9: when packageConfig.main is NOT defined\x2C\x0d\n  //      or when the previous case didn't found the file\x0d\n  kResolvedByPackageAndJs: 7\x2C\x0d\n  kResolvedByPackageAndJson: 8\x2C\x0d\n  kResolvedByPackageAndNode: 9\x2C\x0d\n};\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  const packageJsonUrlString = packageJSONUrl.href;\x0d\n\x0d\n  if (typeof packageJsonUrlString !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('packageJSONUrl'\x2C ['URL']\x2C packageJSONUrl);\x0d\n  }\x0d\n\x0d\n  const baseStringified = isURL(base) ? base.href : base;\x0d\n\x0d\n  const resolvedOption = FSLegacyMainResolve(packageJsonUrlString\x2C packageConfig.main\x2C baseStringified);\x0d\n\x0d\n  const baseUrl = resolvedOption <= legacyMainResolveExtensionsIndexes.kResolvedByMainIndexNode ? `./${packageConfig.main}` : '';\x0d\n  const resolvedUrl = new URL(baseUrl + legacyMainResolveExtensions[resolvedOption]\x2C packageJSONUrl);\x0d\n\x0d\n  emitLegacyIndexDeprecation(resolvedUrl\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n\x0d\n  return resolvedUrl;\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * Finalizes the resolution of a module specifier by checking if the resolved pathname contains encoded "/" or "\\\\"\x0d\n * characters\x2C checking if the resolved pathname is a directory or file\x2C and resolving any symlinks if necessary.\x0d\n * @param {URL} resolved - The resolved URL object.\x0d\n * @param {string | URL | undefined} base - The base URL object.\x0d\n * @param {boolean} preserveSymlinks - Whether to preserve symlinks or not.\x0d\n * @returns {URL} - The finalized URL object.\x0d\n * @throws {ERR_INVALID_MODULE_SPECIFIER} - If the resolved pathname contains encoded "/" or "\\\\" characters.\x0d\n * @throws {ERR_UNSUPPORTED_DIR_IMPORT} - If the resolved pathname is a directory.\x0d\n * @throws {ERR_MODULE_NOT_FOUND} - If the resolved pathname is not a file.\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  let path;\x0d\n  try {\x0d\n    path = fileURLToPath(resolved);\x0d\n  } catch (err) {\x0d\n    const { setOwnProperty } = require('internal/util');\x0d\n    setOwnProperty(err\x2C 'input'\x2C `${resolved}`);\x0d\n    setOwnProperty(err\x2C 'module'\x2C `${base}`);\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const stats = internalModuleStat(toNamespacedPath(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path));\x0d\n\x0d\n  // Check for stats.isDirectory()\x0d\n  if (stats === 1) {\x0d\n    throw new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base)\x2C String(resolved));\x0d\n  } else if (stats !== 0) {\x0d\n    // Check for !stats.isFile()\x0d\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\x0d\n      process.send({ 'watch:require': [path || resolved.pathname] });\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C resolved);\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x2C\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an error object indicating that the specified import is not defined.\x0d\n * @param {string} specifier - The import specifier that is not defined.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file\x2C or null if not available.\x0d\n * @param {string | URL | undefined} base - The base URL to use for resolving relative URLs.\x0d\n * @returns {ERR_PACKAGE_IMPORT_NOT_DEFINED} - The error object.\x0d\n */\x0d\nfunction importNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  return new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an error object indicating that the specified subpath was not exported by the package.\x0d\n * @param {string} subpath - The subpath that was not exported.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file.\x0d\n * @param {string | URL | undefined} [base] - The base URL to use for resolving the subpath.\x0d\n * @returns {ERR_PACKAGE_PATH_NOT_EXPORTED} - The error object.\x0d\n */\x0d\nfunction exportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  return new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throws an error indicating that the given request is not a valid subpath match for the specified pattern.\x0d\n * @param {string} request - The request that failed to match the pattern.\x0d\n * @param {string} match - The pattern that the request was compared against.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file being resolved.\x0d\n * @param {boolean} internal - Whether the resolution is for an "imports" or "exports" field in package.json.\x0d\n * @param {string | URL | undefined} base - The base URL for the resolution.\x0d\n * @throws {ERR_INVALID_MODULE_SPECIFIER} When the request is not a valid match for the pattern.\x0d\n */\x0d\nfunction throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid match in pattern "${match}" for the "${\x0d\n    internal ? 'imports' : 'exports'}" resolution of ${\x0d\n    fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(request\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates an error object for an invalid package target.\x0d\n * @param {string} subpath - The subpath.\x0d\n * @param {import('internal/modules/esm/package_config.js').PackageTarget} target - The target.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file.\x0d\n * @param {boolean} internal - Whether the package is internal.\x0d\n * @param {string | URL | undefined} base - The base URL.\x0d\n * @returns {ERR_INVALID_PACKAGE_TARGET} - The error object.\x0d\n */\x0d\nfunction invalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  return new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)/i;\x0d\nconst deprecatedInvalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\n/**\x0d\n * Resolves the package target string to a URL object.\x0d\n * @param {string} target - The target string to resolve.\x0d\n * @param {string} subpath - The subpath to append to the resolved URL.\x0d\n * @param {RegExpMatchArray} match - The matched string array from the import statement.\x0d\n * @param {string} packageJSONUrl - The URL of the package.json file.\x0d\n * @param {string} base - The base URL to resolve the target against.\x0d\n * @param {RegExp} pattern - The pattern to replace in the target string.\x0d\n * @param {boolean} internal - Whether the target is internal to the package.\x0d\n * @param {boolean} isPathMap - Whether the target is a path map.\x0d\n * @param {string[]} conditions - The import conditions.\x0d\n * @returns {URL} - The resolved URL object.\x0d\n * @throws {ERR_INVALID_PACKAGE_TARGET} - If the target is invalid.\x0d\n * @throws {ERR_INVALID_SUBPATH} - If the subpath is invalid.\x0d\n */\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C\x0d\n  subpath\x2C\x0d\n  match\x2C\x0d\n  packageJSONUrl\x2C\x0d\n  base\x2C\x0d\n  pattern\x2C\x0d\n  internal\x2C\x0d\n  isPathMap\x2C\x0d\n  conditions\x2C\x0d\n) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/') {\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      // No need to convert target to string\x2C since it's already presumed to be\x0d\n      if (!URLCanParse(target)) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null) {\x0d\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) === null) {\x0d\n      if (!isPathMap) {\x0d\n        const request = pattern ?\x0d\n          StringPrototypeReplace(match\x2C '*'\x2C () => subpath) :\x0d\n          match + subpath;\x0d\n        const resolvedTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target;\x0d\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C true);\x0d\n      }\x0d\n    } else {\x0d\n      throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath)) {\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (subpath === '') { return resolved; }\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\x0d\n    const request = pattern ? StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\x0d\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C subpath) === null) {\x0d\n      if (!isPathMap) {\x0d\n        const resolvedTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target;\x0d\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C false);\x0d\n      }\x0d\n    } else {\x0d\n      throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C () => subpath)\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Checks if the given key is a valid array index.\x0d\n * @param {string} key - The key to check.\x0d\n * @returns {boolean} - Returns `true` if the key is a valid array index\x2C else `false`.\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) { return false; }\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves the target of a package based on the provided parameters.\x0d\n * @param {string} packageJSONUrl - The URL of the package.json file.\x0d\n * @param {import('internal/modules/esm/package_config.js').PackageTarget} target - The target to resolve.\x0d\n * @param {string} subpath - The subpath to resolve.\x0d\n * @param {string} packageSubpath - The subpath of the package to resolve.\x0d\n * @param {string} base - The base path to resolve.\x0d\n * @param {RegExp} pattern - The pattern to match.\x0d\n * @param {boolean} internal - Whether the package is internal.\x0d\n * @param {boolean} isPathMap - Whether the package is a path map.\x0d\n * @param {Set<string>} conditions - The conditions to match.\x0d\n * @returns {URL | null | undefined} - The resolved target\x2C or null if not found\x2C or undefined if not resolvable.\x0d\n */\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C isPathMap\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      isPathMap\x2C conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C isPathMap\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null) {\x0d\n      return lastException;\x0d\n    }\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C isPathMap\x2C conditions);\x0d\n        if (resolveResult === undefined) { continue; }\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throw invalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                             base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Is the given exports object using the shorthand syntax?\x0d\n * @param {import('internal/modules/esm/package_config.js').PackageConfig['exports']} exports\x0d\n * @param {URL} packageJSONUrl The URL of the package.json file.\x0d\n * @param {string | URL | undefined} base The base URL.\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) { return true; }\x0d\n  if (typeof exports !== 'object' || exports === null) { return false; }\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves the exports of a package.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file.\x0d\n * @param {string} packageSubpath - The subpath of the package to resolve.\x0d\n * @param {import('internal/modules/esm/package_config.js').PackageConfig} packageConfig - The package metadata.\x0d\n * @param {string | URL | undefined} base - The base path to resolve from.\x0d\n * @param {Set<string>} conditions - An array of conditions to match.\x0d\n * @returns {URL} - The resolved package target.\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base)) {\x0d\n    exports = { '.': exports };\x0d\n  }\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolveResult = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C false\x2C\x0d\n      conditions\x2C\x0d\n    );\x0d\n\x0d\n    if (resolveResult == null) {\x0d\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return resolveResult;\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      // When this reaches EOL\x2C this can throw at the top of the whole function:\x0d\n      //\x0d\n      // if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n      //   throwInvalidSubpath(packageSubpath)\x0d\n      //\x0d\n      // To match "imports" and the spec.\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            base);\x0d\n      }\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const resolveResult = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      true\x2C\x0d\n      false\x2C\x0d\n      StringPrototypeEndsWith(packageSubpath\x2C '/')\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolveResult == null) {\x0d\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n    return resolveResult;\x0d\n  }\x0d\n\x0d\n  throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Compares two strings that may contain a wildcard character ('*') and returns a value indicating their order.\x0d\n * @param {string} a - The first string to compare.\x0d\n * @param {string} b - The second string to compare.\x0d\n * @returns {number} - A negative number if `a` should come before `b`\x2C a positive number if `a` should come after `b`\x2C\x0d\n * or 0 if they are equal.\x0d\n */\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) { return -1; }\x0d\n  if (baseLenB > baseLenA) { return 1; }\x0d\n  if (aPatternIndex === -1) { return 1; }\x0d\n  if (bPatternIndex === -1) { return -1; }\x0d\n  if (a.length > b.length) { return -1; }\x0d\n  if (b.length > a.length) { return 1; }\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves the given import name for a package.\x0d\n * @param {string} name - The name of the import to resolve.\x0d\n * @param {string | URL | undefined} base - The base URL to resolve the import from.\x0d\n * @param {Set<string>} conditions - An object containing the import conditions.\x0d\n * @throws {ERR_INVALID_MODULE_SPECIFIER} If the import name is not valid.\x0d\n * @throws {ERR_PACKAGE_IMPORT_NOT_DEFINED} If the import name cannot be resolved.\x0d\n * @returns {URL} The resolved import URL.\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/') ||\x0d\n      StringPrototypeEndsWith(name\x2C '/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*')) {\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C false\x2C\x0d\n          conditions\x2C\x0d\n        );\x0d\n        if (resolveResult != null) {\x0d\n          return resolveResult;\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const resolveResult = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                                     bestMatchSubpath\x2C\x0d\n                                                     bestMatch\x2C base\x2C true\x2C\x0d\n                                                     true\x2C false\x2C conditions);\x0d\n          if (resolveResult != null) {\x0d\n            return resolveResult;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throw importNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the package type for a given URL.\x0d\n * @param {URL} url - The URL to get the package type for.\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Parse a package name from a specifier.\x0d\n * @param {string} specifier - The import specifier.\x0d\n * @param {string | URL | undefined} base - The parent URL.\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null) {\x0d\n    validPackageName = false;\x0d\n  }\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves a package specifier to a URL.\x0d\n * @param {string} specifier - The package specifier to resolve.\x0d\n * @param {string | URL | undefined} base - The base URL to use for resolution.\x0d\n * @param {Set<string>} conditions - An object containing the conditions for resolution.\x0d\n * @returns {URL} - The resolved URL.\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n    return new URL('node:' + specifier);\x0d\n  }\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.exports != null && packageConfig.name === packageName) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = internalModuleStat(toNamespacedPath(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                                          packageJSONPath.length - 13)));\x0d\n    // Check for !stat.isDirectory()\x0d\n    if (stat !== 1) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = packageJsonReader.read(packageJSONPath\x2C { __proto__: null\x2C specifier\x2C base\x2C isESM: true });\x0d\n    if (packageConfig.exports != null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\x0d\n    }\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base)\x2C null);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Checks if a specifier is a bare specifier.\x0d\n * @param {string} specifier - The specifier to check.\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determines whether a specifier is a relative path.\x0d\n * @param {string} specifier - The specifier to check.\x0d\n */\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') { return true; }\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') { return true; }\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determines whether a specifier should be treated as a relative or absolute path.\x0d\n * @param {string} specifier - The specifier to check.\x0d\n */\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') { return false; }\x0d\n  if (specifier[0] === '/') { return true; }\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves a module specifier to a URL.\x0d\n * @param {string} specifier - The module specifier to resolve.\x0d\n * @param {string | URL | undefined} base - The base URL to resolve against.\x0d\n * @param {Set<string>} conditions - An object containing environment conditions.\x0d\n * @param {boolean} preserveSymlinks - Whether to preserve symlinks in the resolved URL.\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    resolved = packageImportsResolve(specifier\x2C base\x2C conditions);\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:') {\x0d\n    return resolved;\x0d\n  }\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module.\x0d\n * @param {string} specifier - The specifier to resolve.\x0d\n * @param {string} parentURL - The base URL.\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw an error if an import is not allowed.\x0d\n * TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\n * @param {string} specifier - The import specifier.\x0d\n * @param {URL} parsed - The parsed URL of the import specifier.\x0d\n * @param {URL} parsedParentURL - The parsed URL of the parent module.\x0d\n * @throws {ERR_NETWORK_IMPORT_DISALLOWED} - If the import is disallowed.\x0d\n */\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    // Avoid accessing the `protocol` property due to the lazy getters.\x0d\n    const parentProtocol = parsedParentURL.protocol;\x0d\n    if (\x0d\n      parentProtocol === 'http:' ||\x0d\n      parentProtocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // Avoid accessing the `protocol` property due to the lazy getters.\x0d\n        const parsedProtocol = parsed?.protocol;\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsedProtocol &&\x0d\n          parsedProtocol !== 'https:' &&\x0d\n          parsedProtocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parsedParentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x2C\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parsedParentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x2C\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parsedParentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Validate user-input in `context` supplied by a custom loader.\x0d\n * @param {string | URL | undefined} parentURL - The parent URL.\x0d\n */\x0d\nfunction throwIfInvalidParentURL(parentURL) {\x0d\n  if (parentURL === undefined) {\x0d\n    return; // Main entry point\x2C so no parent\x0d\n  }\x0d\n  if (typeof parentURL !== 'string' && !isURL(parentURL)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('parentURL'\x2C ['string'\x2C 'URL']\x2C parentURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves the given specifier using the provided context\x2C which includes the parent URL and conditions.\x0d\n * Throws an error if the parent URL is invalid or if the resolution is disallowed by the policy manifest.\x0d\n * Otherwise\x2C attempts to resolve the specifier and returns the resulting URL and format.\x0d\n * @param {string} specifier - The specifier to resolve.\x0d\n * @param {object} [context={}] - The context object containing the parent URL and conditions.\x0d\n * @param {string} [context.parentURL] - The URL of the parent module.\x0d\n * @param {string[]} [context.conditions] - The conditions for resolving the specifier.\x0d\n */\x0d\nfunction defaultResolve(specifier\x2C context = {}) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  throwIfInvalidParentURL(parentURL);\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { __proto__: null\x2C url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    // Avoid accessing the `protocol` property due to the lazy getters.\x0d\n    const protocol = parsed.protocol;\x0d\n    if (protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          protocol === 'https:' ||\x0d\n          protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { __proto__: null\x2C url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) { return maybeReturn; }\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') { return { __proto__: null\x2C url: specifier }; }\x0d\n\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = getCWDURL().href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (inputTypeFlag) { throw new ERR_INPUT_TYPE_NOT_ALLOWED(); }\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(\x0d\n      specifier\x2C\x0d\n      parentURL\x2C\x0d\n      conditions\x2C\x0d\n      isMain ? preserveSymlinksMain : preserveSymlinks\x2C\x0d\n    );\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      decorateErrorWithCommonJSHints(error\x2C specifier\x2C parentURL);\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Decorates the given error with a hint for CommonJS modules.\x0d\n * @param {Error} error - The error to decorate.\x0d\n * @param {string} specifier - The specifier that was attempted to be imported.\x0d\n * @param {string} parentURL - The URL of the parent module.\x0d\n */\x0d\nfunction decorateErrorWithCommonJSHints(error\x2C specifier\x2C parentURL) {\x0d\n  const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n  if (found) {\x0d\n    // Modify the stack and message string to include the hint\x0d\n    const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n    const hint = `Did you mean to import ${found}?`;\x0d\n    error.stack =\x0d\n      ArrayPrototypeShift(lines) + '\\n' +\x0d\n      hint + '\\n' +\x0d\n      ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n    error.message += `\\n${hint}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  decorateErrorWithCommonJSHints\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n  throwIfInvalidParentURL\x2C\x0d\n  legacyMainResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x2C\x0d\n  ) {\x0d\n    const ret = $defaultResolve(specifier\x2C context);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x2C\x0d\n      )\x2C\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x229f2656814,179,0,45812,C0O0C4O45812,,
code-creation,JS,10,254486,0x229f2657814,1076, node:internal/modules/esm/resolve:1:1,0x229f2656788,~
code-source-info,0x229f
code-creation,Eval,10,254881,0x229f26586dc,5, node:internal/modules/esm/package_config:1:1,0x229f2658548,~
script-source,180,node:internal/modules/esm/package_config,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\n\x0d\n/**\x0d\n * @typedef {object} PackageConfig\x0d\n * @property {string} pjsonPath - The path to the package.json file.\x0d\n * @property {boolean} exists - Whether the package.json file exists.\x0d\n * @property {'none' | 'commonjs' | 'module'} type - The type of the package.\x0d\n * @property {string} [name] - The name of the package.\x0d\n * @property {string} [main] - The main entry point of the package.\x0d\n * @property {PackageTarget} [exports] - The exports configuration of the package.\x0d\n * @property {Record<string\x2C string | Record<string\x2C string>>} [imports] - The imports configuration of the package.\x0d\n */\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C string | Record<string\x2C string>>} PackageTarget\x0d\n */\x0d\n\x0d\n/**\x0d\n * Returns the package configuration for the given resolved URL.\x0d\n * @param {URL | string} resolved - The resolved URL.\x0d\n * @returns {PackageConfig} - The package configuration.\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json')) {\x0d\n      break;\x0d\n    }\x0d\n    const packageConfig = packageJsonReader.read(fileURLToPath(packageJSONUrl)\x2C {\x0d\n      __proto__: null\x2C\x0d\n      specifier: resolved\x2C\x0d\n      isESM: true\x2C\x0d\n    });\x0d\n    if (packageConfig.exists) {\x0d\n      return packageConfig;\x0d\n    }\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) {\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  getPackageScopeConfig\x2C\x0d\n};\x0d\n
code-source-info,0x229f26586dc,180,0,2284,C0O0C4O2284,,
code-creation,JS,10,254996,0x229f2658824,76, node:internal/modules/esm/package_config:1:1,0x229f2658650,~
code-source-info,0x229f2658824,180,0,2284,C0O0C22O28C28O103C31O103C36O80C42O85C48O155C51O155C55O155C57O2234C64O2256C70O2249C75O2283,,
code-creation,Eval,10,255323,0x229f2659c2c,5, node:internal/modules/esm/get_format:1:1,0x229f2659978,~
script-source,181,node:internal/modules/esm/get_format,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getFormatOfExtensionlessFile\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst { getPackageType } = require('internal/modules/esm/resolve');\x0d\nconst { fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = {\x0d\n  '__proto__': null\x2C\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\nconst DOT_CODE = 46;\x0d\nconst SLASH_CODE = 47;\x0d\n\x0d\n/**\x0d\n * Returns the file extension from a URL. Should give similar result to\x0d\n * `require('node:path').extname(require('node:url').fileURLToPath(url))`\x0d\n * when used with a `file:` URL.\x0d\n * @param {URL} url\x0d\n * @returns {string}\x0d\n */\x0d\nfunction extname(url) {\x0d\n  const { pathname } = url;\x0d\n  for (let i = pathname.length - 1; i > 0; i--) {\x0d\n    switch (StringPrototypeCharCodeAt(pathname\x2C i)) {\x0d\n      case SLASH_CODE:\x0d\n        return '';\x0d\n\x0d\n      case DOT_CODE:\x0d\n        return StringPrototypeCharCodeAt(pathname\x2C i - 1) === SLASH_CODE ? '' : StringPrototypeSlice(pathname\x2C i);\x0d\n    }\x0d\n  }\x0d\n  return '';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determine whether the given file URL is under a `node_modules` folder.\x0d\n * This function assumes that the input has already been verified to be a `file:` URL\x2C\x0d\n * and is a file rather than a folder.\x0d\n * @param {URL} url\x0d\n */\x0d\nfunction underNodeModules(url) {\x0d\n  if (url.protocol !== 'file:') { return false; } // We determine module types for other protocols based on MIME header\x0d\n\x0d\n  return StringPrototypeIncludes(url.pathname\x2C '/node_modules/');\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string; source?: Buffer}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context = { __proto__: null }\x2C ignoreErrors) {\x0d\n  const { source } = context;\x0d\n  const ext = extname(url);\x0d\n\x0d\n  if (ext === '.js') {\x0d\n    const packageType = getPackageType(url);\x0d\n    if (packageType !== 'none') {\x0d\n      return packageType;\x0d\n    }\x0d\n\x0d\n    // The controlling `package.json` file has no `type` field.\x0d\n    switch (getOptionValue('--experimental-default-type')) {\x0d\n      case 'module': { // The user explicitly passed `--experimental-default-type=module`.\x0d\n        // An exception to the type flag making ESM the default everywhere is that package scopes under `node_modules`\x0d\n        // should retain the assumption that a lack of a `type` field means CommonJS.\x0d\n        return underNodeModules(url) ? 'commonjs' : 'module';\x0d\n      }\x0d\n      case 'commonjs': { // The user explicitly passed `--experimental-default-type=commonjs`.\x0d\n        return 'commonjs';\x0d\n      }\x0d\n      default: { // The user did not pass `--experimental-default-type`.\x0d\n        // `source` is undefined when this is called from `defaultResolve`;\x0d\n        // but this gets called again from `defaultLoad`/`defaultLoadSync`.\x0d\n        if (getOptionValue('--experimental-detect-module')) {\x0d\n          return source ?\x0d\n            (containsModuleSyntax(`${source}`\x2C fileURLToPath(url)) ? 'module' : 'commonjs') :\x0d\n            null;\x0d\n        }\x0d\n        return 'commonjs';\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ext === '') {\x0d\n    const packageType = getPackageType(url);\x0d\n    if (packageType === 'module') {\x0d\n      return getFormatOfExtensionlessFile(url);\x0d\n    }\x0d\n    if (packageType !== 'none') {\x0d\n      return packageType; // 'commonjs' or future package types\x0d\n    }\x0d\n\x0d\n    // The controlling `package.json` file has no `type` field.\x0d\n    switch (getOptionValue('--experimental-default-type')) {\x0d\n      case 'module': { // The user explicitly passed `--experimental-default-type=module`.\x0d\n        return underNodeModules(url) ? 'commonjs' : getFormatOfExtensionlessFile(url);\x0d\n      }\x0d\n      case 'commonjs': { // The user explicitly passed `--experimental-default-type=commonjs`.\x0d\n        return 'commonjs';\x0d\n      }\x0d\n      default: { // The user did not pass `--experimental-default-type`.\x0d\n        if (getOptionValue('--experimental-detect-module')) {\x0d\n          if (!source) { return null; }\x0d\n          const format = getFormatOfExtensionlessFile(url);\x0d\n          if (format === 'module') {\x0d\n            return containsModuleSyntax(`${source}`\x2C fileURLToPath(url)) ? 'module' : 'commonjs';\x0d\n          }\x0d\n          return format;\x0d\n        }\x0d\n        return 'commonjs';\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) { return format; }\x0d\n\x0d\n  // Explicit undefined return indicates load hook should rerun format check\x0d\n  if (ignoreErrors) { return undefined; }\x0d\n  const filepath = fileURLToPath(url);\x0d\n  throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    const { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const protocol = url.protocol;\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C protocol)) {\x0d\n    return null;\x0d\n  }\x0d\n  return protocolHandlers[protocol](url\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const protocol = url.protocol;\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C protocol)) {\x0d\n    return null;\x0d\n  }\x0d\n  return protocolHandlers[protocol](url\x2C context\x2C false);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n  extname\x2C\x0d\n};\x0d\n
code-source-info,0x229f2659c2c,181,0,6880,C0O0C4O6880,,
code-creation,JS,10,255614,0x229f265a17c,359, node:internal/modules/esm/get_format:1:1,0x229f2659ba0,~
code-source-info,0x229f265a17c,181,0,6880,C0O0C103O28C109O52C115O86C121O111C127O130C133O158C139O188C145O256C151O256C156O237C162O372C168O372C173O297C179O320C185O353C191O454C197O454C201O454C203O538C206O538C211O513C217O597C223O597C228O578C234O665C240O665C245O647C251O730C257O730C262O756C267O699C273O792C280O828C286O869C292O910C298O952C302O984C312O792C314O1331C316O1331C318O1355C320O1355C322O6766C329O6788C335O6809C341O6843C347O6866C353O6781C358O6879,,
code-creation,Eval,10,255865,0x229f265aa8c,5, node:internal/modules/esm/formats:1:1,0x229f265a8d8,~
script-source,182,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst { RegExpPrototypeExec } = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst pathModule = require('path');\x0d\nconst fsBindings = internalBinding('fs');\x0d\nconst { fs: fsConstants } = internalBinding('constants');\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeExec(\x0d\n      /^\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?$/i\x2C\x0d\n      mime\x2C\x0d\n    ) !== null\x0d\n  ) { return 'module'; }\x0d\n  if (mime === 'application/json') { return 'json'; }\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') { return 'wasm'; }\x0d\n  return null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * For extensionless files in a `module` package scope\x2C or a default `module` scope enabled by the\x0d\n * `--experimental-default-type` flag\x2C we check the file contents to disambiguate between ES module JavaScript and Wasm.\x0d\n * We do this by taking advantage of the fact that all Wasm files start with the header `0x00 0x61 0x73 0x6d` (`_asm`).\x0d\n * @param {URL} url\x0d\n */\x0d\nfunction getFormatOfExtensionlessFile(url) {\x0d\n  if (!experimentalWasmModules) { return 'module'; }\x0d\n\x0d\n  const path = pathModule.toNamespacedPath(getValidatedPath(url));\x0d\n\x0d\n  switch (fsBindings.getFormatOfExtensionlessFile(path)) {\x0d\n    case fsConstants.EXTENSIONLESS_FORMAT_WASM:\x0d\n      return 'wasm';\x0d\n    default:\x0d\n      return 'module';\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getFormatOfExtensionlessFile\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x229f265aa8c,182,0,1861,C0O0C4O1861,,
code-creation,JS,10,255961,0x229f265acf4,153, node:internal/modules/esm/formats:1:1,0x229f265aa00,~
code-source-info,0x229f265acf4,182,0,1861,C0O0C33O25C39O90C42O90C47O71C52O149C55O149C60O128C66O199C69O199C73O199C75O236C78O236C82O236C84O288C87O288C92O272C98O353C101O353C105O353C107O430C112O545C116O579C118O607C122O1764C129O1786C135O1809C141O1842C147O1779C152O1860,,
code-creation,JS,10,256192,0x229f265b2ec,392,pathToFileURL node:internal/url:1439:23,0x22671ca0428,~
code-source-info,0x229f265b2ec
code-creation,JS,10,256359,0x229f265b6a4,221,encodePathChars node:internal/url:1424:25,0x22671ca03d0,~
code-source-info,0x229f265b6a4,39,41575,42340,C0O41591C8O41595C16O41633C21O41646C28O41686C37O41657C44O41778C56O41796C64O41835C69O41848C76O41888C85O41859C92O41925C98O41929C106O41968C111O41981C118O42021C127O41992C134O42056C140O42060C148O42099C153O42112C160O42152C169O42123C176O42194C182O42198C190O42237C195O42250C202O42290C211O42261C218O42321C220O42337,,
code-creation,JS,10,256464,0x229f265b8e4,136,URL node:internal/url:769:14,0x22671c9ef48,~
code-source-info,0x229f265b8e4,39,22360,22707,C0O22360C39O22393C53O22393C58O22452C64O22459C69O22475C81O22481C86O22475C87O22559C91O22586C95O22619C99O22651C101O22656C111O22671C114O22682C119O22682C129O22670C135O22706,,
code-creation,JS,10,256525,0x229f265bafc,16,URLContext node:internal/url:166:1,0x22671c9e298,~
code-source-info,0x229f265bafc,39,3704,3704,C0O3704C15O3704,,
code-creation,JS,10,256591,0x229f265bfd4,89,markTransferMode node:internal/worker/js_transferable:84:26,0x22671c953a0,~
script-source,26,node:internal/worker/js_transferable,'use strict';\x0d\nconst {\x0d\n  Error\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  messaging_deserialize_symbol\x2C\x0d\n  messaging_transfer_symbol\x2C\x0d\n  messaging_clone_symbol\x2C\x0d\n  messaging_transfer_list_symbol\x2C\x0d\n} = internalBinding('symbols');\x0d\nconst {\x0d\n  setDeserializerCreateObjectFunction\x2C\x0d\n} = internalBinding('messaging');\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    transfer_mode_private_symbol\x2C\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kDisallowCloneAndTransfer\x2C\x0d\n    kTransferable\x2C\x0d\n    kCloneable\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nfunction setup() {\x0d\n  // Register the handler that will be used when deserializing JS-based objects\x0d\n  // from .postMessage() calls. The format of `deserializeInfo` is generally\x0d\n  // 'module:Constructor'\x2C e.g. 'internal/fs/promises:FileHandle'.\x0d\n  setDeserializerCreateObjectFunction((deserializeInfo) => {\x0d\n    const { 0: module\x2C 1: ctor } = StringPrototypeSplit(deserializeInfo\x2C ':');\x0d\n    const Ctor = require(module)[ctor];\x0d\n    if (typeof Ctor !== 'function' ||\x0d\n        typeof Ctor.prototype[messaging_deserialize_symbol] !== 'function') {\x0d\n      // Not one of the official errors because one should not be able to get\x0d\n      // here without messing with Node.js internals.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Unknown deserialize spec ${deserializeInfo}`);\x0d\n    }\x0d\n\x0d\n    return new Ctor();\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Mark an object as being transferable or customized cloneable in\x0d\n * `.postMessage()`.\x0d\n * This should only applied to host objects like Web API interfaces\x2C Node.js'\x0d\n * built-in objects.\x0d\n * Objects marked as cloneable and transferable should implement the method\x0d\n * `@@kClone` and `@@kTransfer` respectively. Method `@@kDeserialize` is\x0d\n * required to deserialize the data to a new instance.\x0d\n *\x0d\n * Example implementation of a cloneable interface (assuming its located in\x0d\n * `internal/my_interface.js`):\x0d\n *\x0d\n * ```\x0d\n * class MyInterface {\x0d\n *   constructor(...args) {\x0d\n *     markTransferMode(this\x2C true);\x0d\n *     this.args = args;\x0d\n *   }\x0d\n *   [kDeserialize](data) {\x0d\n *     this.args = data.args;\x0d\n *   }\x0d\n *   [kClone]() {\x0d\n *     return {\x0d\n *        data: { args: this.args }\x2C\x0d\n *        deserializeInfo: 'internal/my_interface:MyInterface'\x2C\x0d\n *     }\x0d\n *   }\x0d\n * }\x0d\n *\x0d\n * module.exports = {\x0d\n *   MyInterface\x2C\x0d\n * };\x0d\n * ```\x0d\n * @param {object} obj Host objects that can be either cloned or transferred.\x0d\n * @param {boolean} [cloneable] if the object can be cloned and `@@kClone` is\x0d\n *                              implemented.\x0d\n * @param {boolean} [transferable] if the object can be transferred and\x0d\n *                                 `@@kTransfer` is implemented.\x0d\n */\x0d\nfunction markTransferMode(obj\x2C cloneable = false\x2C transferable = false) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  let mode = kDisallowCloneAndTransfer;\x0d\n  if (cloneable) mode |= kCloneable;\x0d\n  if (transferable) mode |= kTransferable;\x0d\n  obj[transfer_mode_private_symbol] = mode;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  markTransferMode\x2C\x0d\n  setup\x2C\x0d\n  kClone: messaging_clone_symbol\x2C\x0d\n  kDeserialize: messaging_deserialize_symbol\x2C\x0d\n  kTransfer: messaging_transfer_symbol\x2C\x0d\n  kTransferList: messaging_transfer_list_symbol\x2C\x0d\n};\x0d\n
code-source-info,0x229f265bfd4,26,2695,3075,C23O2747C39O2828C40O2835C41O2919C46O2949C50O2964C52O2972C61O2987C65O3005C67O3013C76O3031C78O3035C83O3065C88O3074,,
code-creation,JS,10,256830,0x229f265c50c,260,#updateContext node:internal/url:813:17,0x22671c9f080,~
code-source-info,0x229f265c50c,39,23478,24403,C0O23492C2O23497C8O23511C12O23744C19O23755C26O23544C33O23568C40O23592C47O23614C54O23634C61O23650C68O23676C75O23700C82O23722C86O23777C88O23782C94O23804C98O23825C100O23830C106O23852C110O23873C112O23878C118O23898C122O23917C124O23922C130O23940C134O23957C136O23962C142O23976C146O23989C148O23994C154O24018C158O24041C160O24046C166O24068C170O24089C172O24094C178O24114C182O24133C184O24138C190O24159C194O24181C196O24190C201O24214C203O24223C207O24232C213O24254C222O24278C226O24298C231O24254C238O24332C247O24356C253O24332C259O24402,,
code-creation,JS,10,256927,0x229f265ca04,15,getCjsConditions node:internal/modules/helpers:81:26,0x22671cb8218,~
code-source-info,0x229f265ca04,64,2338,2445,C0O2346C6O2386C9O2386C12O2421C14O2442,,
code-creation,JS,10,257125,0x229f265cb84,485,packageExportsResolve node:internal/modules/esm/resolve:576:31,0x229f2656cc0,~
code-source-info,0x229f265cb
code-creation,JS,10,257302,0x229f265f65c,162,isConditionalExportsMainSugar node:internal/modules/esm/resolve:544:39,0x229f2656c68,~
code-source-info,0x229f265f65c,179,21744,22670,C0O21781C8O21816C11O21816C17O21841C18O21853C19O21859C29O21914C30O21927C31O21948C36O21948C41O22012C43O22030C45O22049C47O22061C51O22054C56O22093C58O22097C62O22137C64O22141C70O22154C76O22158C81O22172C90O22180C95O22196C102O22252C104O22275C109O22311C116O22358C119O22358C129O22475C135O22557C144O22317C149O22311C150O22070C155O22036C159O22641C161O22667,,
code-creation,JS,10,257444,0x229f265f96c,411,resolvePackageTarget node:internal/modules/esm/resolve:470:30,0x229f2656c10,~
code-source-info,0x229f265f96c
code-creation,JS,10,257543,0x229f265fd0c,28,isArrayIndex node:internal/modules/esm/resolve:451:22,0x229f2656bb8,~
code-source-info,0x229f265fd0c,179,18161,18288,C0O18187C2O18187C5O18196C9O18212C14O18223C15O18236C16O18242C17O18256C24O18271C27O18285,,
code-creation,JS,10,257678,0x229f26600ec,762,resolvePackageTargetString node:internal/modules/esm/resolve:366:36,0x229f2656b60,~
code-source-info,0x229f26600ec
tick,0x7ff6acc20c04,257910,0,0x0,3,0x7ff6abde9970,0x229f265f990,0x229f265fad1,0x229f265f9e4,0x229f265cbfa,0x7ff62c5091a9,0x7ff62c505f2c,0x7ff62c510de0,0x7ff62c50ee62,0x7ff62c50833e,0x7ff62c50850f,0x229f26501e4,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x395cad7e6ff,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x395cad7bdde,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f037a4,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,JS,10,258754,0x229f26606a4,11,toString node:internal/url:847:11,0x22671c9f0d8,~
code-source-info,0x229f26606a4,39,24417,24458,C0O24427C2O24439C6O24448C10O24453,,
code-creation,JS,10,258917,0x229f26607ec,88,get pathname node:internal/url:983:15,0x22671c9f808,~
code-source-info,0x229f26607ec,39,28208,28496,C0O28222C2O28235C4O28244C8O28253C14O28273C16O28287C20O28296C27O28322C29O28331C33O28340C39O28358C41O28372C45O28381C50O28405C59O28438C63O28447C70O28458C74O28467C82O28412C87O28491,,
code-creation,JS,10,258967,0x229f2660974,20,get hasSearch node:internal/url:200:16,0x22671c9e1a8,~
code-source-info,0x229f2660974,39,4388,4452,C0O4410C7O4427C12O4438C15O4423C19O4447,,
code-creation,JS,10,258997,0x229f2660a84,20,get hasHash node:internal/url:204:14,0x22671c9e220,~
code-source-info,0x229f2660a84,39,4469,4531,C0O4491C7O4506C12O4517C15O4502C19O4526,,
code-creation,JS,10,259094,0x229f2660bec,103,finalizeEsmResolution node:internal/modules/cjs/loader:1158:31,0x22671cb7420,~
code-source-info,0x229f2660bec,63,37970,38535,C0O38035C6O38035C11O38015C16O38079C21O38083C28O38147C44O38153C49O38147C50O38293C55O38293C60O38336C63O38336C68O38358C70O38377C72O38391C73O38412C78O38479C81O38484C89O38484C96O38412C102O38522,,
code-creation,JS,10,259206,0x229f2660e64,106,fileURLToPath node:internal/url:1395:23,0x22671ca0378,~
code-source-info,0x229f2660e64,39,40392,40717,C0O40404C6O40439C13O40446C22O40469C25O40474C31O40492C49O40498C54O40492C55O40569C62O40578C67O40596C77O40602C82O40596C83O40641C92O40660C101O40688C105O40714,,
code-creation,JS,10,259277,0x229f2661094,11,get href node:internal/url:851:11,0x22671c9f130,~
code-source-info,0x229f2661094,39,24472,24513,C0O24482C2O24494C6O24503C10O24508,,
code-creation,JS,10,259314,0x229f26611c4,37,get protocol node:internal/url:894:15,0x22671c9f288,~
code-source-info,0x229f26611c4,39,25674,25768,C0O25684C9O25717C13O25726C22O25740C26O25749C31O25691C36O25763,,
code-creation,JS,10,259412,0x229f2661424,272,getPathFromURLWin32 node:internal/url:1342:29,0x22671ca02c8,~
code-source-info,0x229f
code-creation,JS,10,259499,0x229f26616f4,78,get hostname node:internal/url:953:15,0x22671c9f638,~
code-source-info,0x229f26616f4,39,27434,27711,C0O27459C2O27464C6O27473C11O27549C13O27558C17O27567C24O27571C30O27582C35O27600C40O27624C49O27657C53O27666C60O27687C64O27696C72O27631C77O27706,,
code-creation,JS,10,259569,0x229f26619f4,23,SideEffectFreeRegExpPrototypeSymbolReplace node:internal/util:781:52,0x22671c82858,~
code-source-info,0x229f26619f4,16,22366,22471,C0O22400C3O22407C10O22432C12O22431C16O22446C22O22468,,
code-creation,JS,10,259628,0x229f2661bc4,214,getCrossRelmRegex node:internal/util:762:27,0x22671c82800,~
code-source-info,0x229f2661bc4,16,21529,22311,C0O21557C5O21574C10O21574C16O21589C18O21601C20O21615C21O21638C24O21645C29O21649C35O21686C44O21708C49O21712C55O21745C64O21767C69O21771C75O21808C84O21830C89O21834C95O21870C104O21892C109O21896C115O21929C124O21951C129O21955C135O21989C144O22011C149O22015C155O22048C164O22115C167O22115C171O22088C176O22162C178O22189C181O22189C191O22162C197O22238C200O22255C205O22255C211O22286C213O22308,,
code-creation,Eval,10,260362,0x229f26627f4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\side-channel\\index.js:1:1,0x229f26625c0,~
script-source,183,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\side-channel\\index.js,'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%'\x2C true);\nvar $Map = GetIntrinsic('%Map%'\x2C true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get'\x2C true);\nvar $weakMapSet = callBound('WeakMap.prototype.set'\x2C true);\nvar $weakMapHas = callBound('WeakMap.prototype.has'\x2C true);\nvar $mapGet = callBound('Map.prototype.get'\x2C true);\nvar $mapSet = callBound('Map.prototype.set'\x2C true);\nvar $mapHas = callBound('Map.prototype.has'\x2C true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list\x2C so that if it's accessed\n * again we don't need to traverse the whole list. By doing so\x2C all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list\x2C key) { // eslint-disable-line consistent-return\n\x09for (var prev = list\x2C curr; (curr = prev.next) !== null; prev = curr) {\n\x09\x09if (curr.key === key) {\n\x09\x09\x09prev.next = curr.next;\n\x09\x09\x09curr.next = list.next;\n\x09\x09\x09list.next = curr; // eslint-disable-line no-param-reassign\n\x09\x09\x09return curr;\n\x09\x09}\n\x09}\n};\n\nvar listGet = function (objects\x2C key) {\n\x09var node = listGetNode(objects\x2C key);\n\x09return node && node.value;\n};\nvar listSet = function (objects\x2C key\x2C value) {\n\x09var node = listGetNode(objects\x2C key);\n\x09if (node) {\n\x09\x09node.value = value;\n\x09} else {\n\x09\x09// Prepend the new node to the beginning of the list\n\x09\x09objects.next = { // eslint-disable-line no-param-reassign\n\x09\x09\x09key: key\x2C\n\x09\x09\x09next: objects.next\x2C\n\x09\x09\x09value: value\n\x09\x09};\n\x09}\n};\nvar listHas = function (objects\x2C key) {\n\x09return !!listGetNode(objects\x2C key);\n};\n\nmodule.exports = function getSideChannel() {\n\x09var $wm;\n\x09var $m;\n\x09var $o;\n\x09var channel = {\n\x09\x09assert: function (key) {\n\x09\x09\x09if (!channel.has(key)) {\n\x09\x09\x09\x09throw new $TypeError('Side channel does not contain ' + inspect(key));\n\x09\x09\x09}\n\x09\x09}\x2C\n\x09\x09get: function (key) { // eslint-disable-line consistent-return\n\x09\x09\x09if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\x09\x09\x09\x09if ($wm) {\n\x09\x09\x09\x09\x09return $weakMapGet($wm\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09} else if ($Map) {\n\x09\x09\x09\x09if ($m) {\n\x09\x09\x09\x09\x09return $mapGet($m\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09} else {\n\x09\x09\x09\x09if ($o) { // eslint-disable-line no-lonely-if\n\x09\x09\x09\x09\x09return listGet($o\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09}\n\x09\x09}\x2C\n\x09\x09has: function (key) {\n\x09\x09\x09if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\x09\x09\x09\x09if ($wm) {\n\x09\x09\x09\x09\x09return $weakMapHas($wm\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09} else if ($Map) {\n\x09\x09\x09\x09if ($m) {\n\x09\x09\x09\x09\x09return $mapHas($m\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09} else {\n\x09\x09\x09\x09if ($o) { // eslint-disable-line no-lonely-if\n\x09\x09\x09\x09\x09return listHas($o\x2C key);\n\x09\x09\x09\x09}\n\x09\x09\x09}\n\x09\x09\x09return false;\n\x09\x09}\x2C\n\x09\x09set: function (key\x2C value) {\n\x09\x09\x09if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\x09\x09\x09\x09if (!$wm) {\n\x09\x09\x09\x09\x09$wm = new $WeakMap();\n\x09\x09\x09\x09}\n\x09\x09\x09\x09$weakMapSet($wm\x2C key\x2C value);\n\x09\x09\x09} else if ($Map) {\n\x09\x09\x09\x09if (!$m) {\n\x09\x09\x09\x09\x09$m = new $Map();\n\x09\x09\x09\x09}\n\x09\x09\x09\x09$mapSet($m\x2C key\x2C value);\n\x09\x09\x09} else {\n\x09\x09\x09\x09if (!$o) {\n\x09\x09\x09\x09\x09/*\n\x09\x09\x09\x09\x09 * Initialize the linked list as an empty node\x2C so that we don't have\n\x09\x09\x09\x09\x09 * to special-case handling of the first node: we can always refer to\n\x09\x09\x09\x09\x09 * it as (previous node).next\x2C instead of something like (list).head\n\x09\x09\x09\x09\x09 */\n\x09\x09\x09\x09\x09$o = { key: {}\x2C next: null };\n\x09\x09\x09\x09}\n\x09\x09\x09\x09listSet($o\x2C key\x2C value);\n\x09\x09\x09}\n\x09\x09}\n\x09};\n\x09return channel;\n};\n
code-source-info,0x229f26627f4,183,0,3391,C0O0C4O3391,,
code-creation,JS,10,260561,0x229f2662af4,169, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\side-channel\\index.js:1:1,0x229f2662768,~
code-source-info,0x229f2662af4,183,0,3391,C0O0C5O34C8O34C13O76C16O76C21O122C24O122C28O122C30O167C33O167C37O167C39O211C44O211C49O211C51O255C56O255C61O255C63O303C68O303C73O303C75O363C80O363C85O363C87O423C92O423C97O423C99O479C104O479C109O479C111O531C116O531C121O531C123O583C128O583C133O583C135O948C139O948C141O1266C145O1266C147O1376C151O1376C153O1685C157O1685C159O1752C163O1767C168O3390,,
code-creation,RegExp,3,261595,0x7ff62c4d1b00,83440,(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)
code-creation,RegExp,3,261689,0x7ff62c4e6140,940,%2F|%5C
code-creation,Eval,10,262717,0x229f2666adc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:1:1,0x229f26666f8,~
script-source,184,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js,'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\x09try {\n\x09\x09return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();\n\x09} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\x09try {\n\x09\x09$gOPD({}\x2C '');\n\x09} catch (e) {\n\x09\x09$gOPD = null; // this is IE 8\x2C which has a broken gOPD\n\x09}\n}\n\nvar throwTypeError = function () {\n\x09throw new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\x09? (function () {\n\x09\x09try {\n\x09\x09\x09// eslint-disable-next-line no-unused-expressions\x2C no-caller\x2C no-restricted-properties\n\x09\x09\x09arguments.callee; // IE 8 does not throw here\n\x09\x09\x09return throwTypeError;\n\x09\x09} catch (calleeThrows) {\n\x09\x09\x09try {\n\x09\x09\x09\x09// IE 8 throws on Object.getOwnPropertyDescriptor(arguments\x2C '')\n\x09\x09\x09\x09return $gOPD(arguments\x2C 'callee').get;\n\x09\x09\x09} catch (gOPDthrows) {\n\x09\x09\x09\x09return throwTypeError;\n\x09\x09\x09}\n\x09\x09}\n\x09}())\n\x09: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\x09hasProto\n\x09\x09? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\x09\x09: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\x09'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError\x2C\n\x09'%Array%': Array\x2C\n\x09'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer\x2C\n\x09'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined\x2C\n\x09'%AsyncFromSyncIteratorPrototype%': undefined\x2C\n\x09'%AsyncFunction%': needsEval\x2C\n\x09'%AsyncGenerator%': needsEval\x2C\n\x09'%AsyncGeneratorFunction%': needsEval\x2C\n\x09'%AsyncIteratorPrototype%': needsEval\x2C\n\x09'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics\x2C\n\x09'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt\x2C\n\x09'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array\x2C\n\x09'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array\x2C\n\x09'%Boolean%': Boolean\x2C\n\x09'%DataView%': typeof DataView === 'undefined' ? undefined : DataView\x2C\n\x09'%Date%': Date\x2C\n\x09'%decodeURI%': decodeURI\x2C\n\x09'%decodeURIComponent%': decodeURIComponent\x2C\n\x09'%encodeURI%': encodeURI\x2C\n\x09'%encodeURIComponent%': encodeURIComponent\x2C\n\x09'%Error%': Error\x2C\n\x09'%eval%': eval\x2C // eslint-disable-line no-eval\n\x09'%EvalError%': EvalError\x2C\n\x09'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array\x2C\n\x09'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array\x2C\n\x09'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry\x2C\n\x09'%Function%': $Function\x2C\n\x09'%GeneratorFunction%': needsEval\x2C\n\x09'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array\x2C\n\x09'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array\x2C\n\x09'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array\x2C\n\x09'%isFinite%': isFinite\x2C\n\x09'%isNaN%': isNaN\x2C\n\x09'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined\x2C\n\x09'%JSON%': typeof JSON === 'object' ? JSON : undefined\x2C\n\x09'%Map%': typeof Map === 'undefined' ? undefined : Map\x2C\n\x09'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]())\x2C\n\x09'%Math%': Math\x2C\n\x09'%Number%': Number\x2C\n\x09'%Object%': Object\x2C\n\x09'%parseFloat%': parseFloat\x2C\n\x09'%parseInt%': parseInt\x2C\n\x09'%Promise%': typeof Promise === 'undefined' ? undefined : Promise\x2C\n\x09'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy\x2C\n\x09'%RangeError%': RangeError\x2C\n\x09'%ReferenceError%': ReferenceError\x2C\n\x09'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect\x2C\n\x09'%RegExp%': RegExp\x2C\n\x09'%Set%': typeof Set === 'undefined' ? undefined : Set\x2C\n\x09'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]())\x2C\n\x09'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer\x2C\n\x09'%String%': String\x2C\n\x09'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined\x2C\n\x09'%Symbol%': hasSymbols ? Symbol : undefined\x2C\n\x09'%SyntaxError%': $SyntaxError\x2C\n\x09'%ThrowTypeError%': ThrowTypeError\x2C\n\x09'%TypedArray%': TypedArray\x2C\n\x09'%TypeError%': $TypeError\x2C\n\x09'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array\x2C\n\x09'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray\x2C\n\x09'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array\x2C\n\x09'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array\x2C\n\x09'%URIError%': URIError\x2C\n\x09'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap\x2C\n\x09'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef\x2C\n\x09'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\x09try {\n\x09\x09null.error; // eslint-disable-line no-unused-expressions\n\x09} catch (e) {\n\x09\x09// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\x09\x09var errorProto = getProto(getProto(e));\n\x09\x09INTRINSICS['%Error.prototype%'] = errorProto;\n\x09}\n}\n\nvar doEval = function doEval(name) {\n\x09var value;\n\x09if (name === '%AsyncFunction%') {\n\x09\x09value = getEvalledConstructor('async function () {}');\n\x09} else if (name === '%GeneratorFunction%') {\n\x09\x09value = getEvalledConstructor('function* () {}');\n\x09} else if (name === '%AsyncGeneratorFunction%') {\n\x09\x09value = getEvalledConstructor('async function* () {}');\n\x09} else if (name === '%AsyncGenerator%') {\n\x09\x09var fn = doEval('%AsyncGeneratorFunction%');\n\x09\x09if (fn) {\n\x09\x09\x09value = fn.prototype;\n\x09\x09}\n\x09} else if (name === '%AsyncIteratorPrototype%') {\n\x09\x09var gen = doEval('%AsyncGenerator%');\n\x09\x09if (gen && getProto) {\n\x09\x09\x09value = getProto(gen.prototype);\n\x09\x09}\n\x09}\n\n\x09INTRINSICS[name] = value;\n\n\x09return value;\n};\n\nvar LEGACY_ALIASES = {\n\x09'%ArrayBufferPrototype%': ['ArrayBuffer'\x2C 'prototype']\x2C\n\x09'%ArrayPrototype%': ['Array'\x2C 'prototype']\x2C\n\x09'%ArrayProto_entries%': ['Array'\x2C 'prototype'\x2C 'entries']\x2C\n\x09'%ArrayProto_forEach%': ['Array'\x2C 'prototype'\x2C 'forEach']\x2C\n\x09'%ArrayProto_keys%': ['Array'\x2C 'prototype'\x2C 'keys']\x2C\n\x09'%ArrayProto_values%': ['Array'\x2C 'prototype'\x2C 'values']\x2C\n\x09'%AsyncFunctionPrototype%': ['AsyncFunction'\x2C 'prototype']\x2C\n\x09'%AsyncGenerator%': ['AsyncGeneratorFunction'\x2C 'prototype']\x2C\n\x09'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction'\x2C 'prototype'\x2C 'prototype']\x2C\n\x09'%BooleanPrototype%': ['Boolean'\x2C 'prototype']\x2C\n\x09'%DataViewPrototype%': ['DataView'\x2C 'prototype']\x2C\n\x09'%DatePrototype%': ['Date'\x2C 'prototype']\x2C\n\x09'%ErrorPrototype%': ['Error'\x2C 'prototype']\x2C\n\x09'%EvalErrorPrototype%': ['EvalError'\x2C 'prototype']\x2C\n\x09'%Float32ArrayPrototype%': ['Float32Array'\x2C 'prototype']\x2C\n\x09'%Float64ArrayPrototype%': ['Float64Array'\x2C 'prototype']\x2C\n\x09'%FunctionPrototype%': ['Function'\x2C 'prototype']\x2C\n\x09'%Generator%': ['GeneratorFunction'\x2C 'prototype']\x2C\n\x09'%GeneratorPrototype%': ['GeneratorFunction'\x2C 'prototype'\x2C 'prototype']\x2C\n\x09'%Int8ArrayPrototype%': ['Int8Array'\x2C 'prototype']\x2C\n\x09'%Int16ArrayPrototype%': ['Int16Array'\x2C 'prototype']\x2C\n\x09'%Int32ArrayPrototype%': ['Int32Array'\x2C 'prototype']\x2C\n\x09'%JSONParse%': ['JSON'\x2C 'parse']\x2C\n\x09'%JSONStringify%': ['JSON'\x2C 'stringify']\x2C\n\x09'%MapPrototype%': ['Map'\x2C 'prototype']\x2C\n\x09'%NumberPrototype%': ['Number'\x2C 'prototype']\x2C\n\x09'%ObjectPrototype%': ['Object'\x2C 'prototype']\x2C\n\x09'%ObjProto_toString%': ['Object'\x2C 'prototype'\x2C 'toString']\x2C\n\x09'%ObjProto_valueOf%': ['Object'\x2C 'prototype'\x2C 'valueOf']\x2C\n\x09'%PromisePrototype%': ['Promise'\x2C 'prototype']\x2C\n\x09'%PromiseProto_then%': ['Promise'\x2C 'prototype'\x2C 'then']\x2C\n\x09'%Promise_all%': ['Promise'\x2C 'all']\x2C\n\x09'%Promise_reject%': ['Promise'\x2C 'reject']\x2C\n\x09'%Promise_resolve%': ['Promise'\x2C 'resolve']\x2C\n\x09'%RangeErrorPrototype%': ['RangeError'\x2C 'prototype']\x2C\n\x09'%ReferenceErrorPrototype%': ['ReferenceError'\x2C 'prototype']\x2C\n\x09'%RegExpPrototype%': ['RegExp'\x2C 'prototype']\x2C\n\x09'%SetPrototype%': ['Set'\x2C 'prototype']\x2C\n\x09'%SharedArrayBufferPrototype%': ['SharedArrayBuffer'\x2C 'prototype']\x2C\n\x09'%StringPrototype%': ['String'\x2C 'prototype']\x2C\n\x09'%SymbolPrototype%': ['Symbol'\x2C 'prototype']\x2C\n\x09'%SyntaxErrorPrototype%': ['SyntaxError'\x2C 'prototype']\x2C\n\x09'%TypedArrayPrototype%': ['TypedArray'\x2C 'prototype']\x2C\n\x09'%TypeErrorPrototype%': ['TypeError'\x2C 'prototype']\x2C\n\x09'%Uint8ArrayPrototype%': ['Uint8Array'\x2C 'prototype']\x2C\n\x09'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray'\x2C 'prototype']\x2C\n\x09'%Uint16ArrayPrototype%': ['Uint16Array'\x2C 'prototype']\x2C\n\x09'%Uint32ArrayPrototype%': ['Uint32Array'\x2C 'prototype']\x2C\n\x09'%URIErrorPrototype%': ['URIError'\x2C 'prototype']\x2C\n\x09'%WeakMapPrototype%': ['WeakMap'\x2C 'prototype']\x2C\n\x09'%WeakSetPrototype%': ['WeakSet'\x2C 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call\x2C Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply\x2C Array.prototype.splice);\nvar $replace = bind.call(Function.call\x2C String.prototype.replace);\nvar $strSlice = bind.call(Function.call\x2C String.prototype.slice);\nvar $exec = bind.call(Function.call\x2C RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|(["'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\x09var first = $strSlice(string\x2C 0\x2C 1);\n\x09var last = $strSlice(string\x2C -1);\n\x09if (first === '%' && last !== '%') {\n\x09\x09throw new $SyntaxError('invalid intrinsic syntax\x2C expected closing `%`');\n\x09} else if (last === '%' && first !== '%') {\n\x09\x09throw new $SyntaxError('invalid intrinsic syntax\x2C expected opening `%`');\n\x09}\n\x09var result = [];\n\x09$replace(string\x2C rePropName\x2C function (match\x2C number\x2C quote\x2C subString) {\n\x09\x09result[result.length] = quote ? $replace(subString\x2C reEscapeChar\x2C '$1') : number || match;\n\x09});\n\x09return result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name\x2C allowMissing) {\n\x09var intrinsicName = name;\n\x09var alias;\n\x09if (hasOwn(LEGACY_ALIASES\x2C intrinsicName)) {\n\x09\x09alias = LEGACY_ALIASES[intrinsicName];\n\x09\x09intrinsicName = '%' + alias[0] + '%';\n\x09}\n\n\x09if (hasOwn(INTRINSICS\x2C intrinsicName)) {\n\x09\x09var value = INTRINSICS[intrinsicName];\n\x09\x09if (value === needsEval) {\n\x09\x09\x09value = doEval(intrinsicName);\n\x09\x09}\n\x09\x09if (typeof value === 'undefined' && !allowMissing) {\n\x09\x09\x09throw new $TypeError('intrinsic ' + name + ' exists\x2C but is not available. Please file an issue!');\n\x09\x09}\n\n\x09\x09return {\n\x09\x09\x09alias: alias\x2C\n\x09\x09\x09name: intrinsicName\x2C\n\x09\x09\x09value: value\n\x09\x09};\n\x09}\n\n\x09throw new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name\x2C allowMissing) {\n\x09if (typeof name !== 'string' || name.length === 0) {\n\x09\x09throw new $TypeError('intrinsic name must be a non-empty string');\n\x09}\n\x09if (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\x09\x09throw new $TypeError('"allowMissing" argument must be a boolean');\n\x09}\n\n\x09if ($exec(/^%?[^%]*%?$/\x2C name) === null) {\n\x09\x09throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\x09}\n\x09var parts = stringToPath(name);\n\x09var intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\x09var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%'\x2C allowMissing);\n\x09var intrinsicRealName = intrinsic.name;\n\x09var value = intrinsic.value;\n\x09var skipFurtherCaching = false;\n\n\x09var alias = intrinsic.alias;\n\x09if (alias) {\n\x09\x09intrinsicBaseName = alias[0];\n\x09\x09$spliceApply(parts\x2C $concat([0\x2C 1]\x2C alias));\n\x09}\n\n\x09for (var i = 1\x2C isOwn = true; i < parts.length; i += 1) {\n\x09\x09var part = parts[i];\n\x09\x09var first = $strSlice(part\x2C 0\x2C 1);\n\x09\x09var last = $strSlice(part\x2C -1);\n\x09\x09if (\n\x09\x09\x09(\n\x09\x09\x09\x09(first === '"' || first === "'" || first === '`')\n\x09\x09\x09\x09|| (last === '"' || last === "'" || last === '`')\n\x09\x09\x09)\n\x09\x09\x09&& first !== last\n\x09\x09) {\n\x09\x09\x09throw new $SyntaxError('property names with quotes must have matching quotes');\n\x09\x09}\n\x09\x09if (part === 'constructor' || !isOwn) {\n\x09\x09\x09skipFurtherCaching = true;\n\x09\x09}\n\n\x09\x09intrinsicBaseName += '.' + part;\n\x09\x09intrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\x09\x09if (hasOwn(INTRINSICS\x2C intrinsicRealName)) {\n\x09\x09\x09value = INTRINSICS[intrinsicRealName];\n\x09\x09} else if (value != null) {\n\x09\x09\x09if (!(part in value)) {\n\x09\x09\x09\x09if (!allowMissing) {\n\x09\x09\x09\x09\x09throw new $TypeError('base intrinsic for ' + name + ' exists\x2C but the property is not available.');\n\x09\x09\x09\x09}\n\x09\x09\x09\x09return void undefined;\n\x09\x09\x09}\n\x09\x09\x09if ($gOPD && (i + 1) >= parts.length) {\n\x09\x09\x09\x09var desc = $gOPD(value\x2C part);\n\x09\x09\x09\x09isOwn = !!desc;\n\n\x09\x09\x09\x09// By convention\x2C when a data property is converted to an accessor\n\x09\x09\x09\x09// property to emulate a data property that does not suffer from\n\x09\x09\x09\x09// the override mistake\x2C that accessor's getter is marked with\n\x09\x09\x09\x09// an `originalValue` property. Here\x2C when we detect this\x2C we\n\x09\x09\x09\x09// uphold the illusion by pretending to see that original data\n\x09\x09\x09\x09// property\x2C i.e.\x2C returning the value rather than the getter\n\x09\x09\x09\x09// itself.\n\x09\x09\x09\x09if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\x09\x09\x09\x09\x09value = desc.get;\n\x09\x09\x09\x09} else {\n\x09\x09\x09\x09\x09value = value[part];\n\x09\x09\x09\x09}\n\x09\x09\x09} else {\n\x09\x09\x09\x09isOwn = hasOwn(value\x2C part);\n\x09\x09\x09\x09value = value[part];\n\x09\x09\x09}\n\n\x09\x09\x09if (isOwn && !skipFurtherCaching) {\n\x09\x09\x09\x09INTRINSICS[intrinsicRealName] = value;\n\x09\x09\x09}\n\x09\x09}\n\x09}\n\x09return value;\n};\n
code-source-info,0x229f2666adc,184,0,13326,C0O0C4O13326,,
code-creation,JS,10,263291,0x229f266860c,1785, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:1:1,0x229f2666a50,~
code-source-info,0x229f266860c
code-creation,JS,10,263499,0x229f2669114,61, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:29:14,0x229f2666bc0,~
code-source-info,0x229f2669114,184,598,988,C0O598C5O714C9O753C11O775C26O885C34O892C40O918C44O923C56O954C60O976,,
code-creation,Eval,10,264705,0x229f266ac9c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-symbols\\index.js:1:1,0x229f266ab28,~
script-source,185,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-symbols\\index.js,'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\x09if (typeof origSymbol !== 'function') { return false; }\n\x09if (typeof Symbol !== 'function') { return false; }\n\x09if (typeof origSymbol('foo') !== 'symbol') { return false; }\n\x09if (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\x09return hasSymbolSham();\n};\n
code-source-info,0x229f266ac9c,185,0,420,C0O0C4O420,,
code-creation,JS,10,264781,0x229f266ad94,37, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-symbols\\index.js:1:1,0x229f266ac10,~
code-source-info,0x229f266ad94,185,0,420,C0O0C5O32C10O46C13O65C16O32C18O93C21O93C25O93C27O114C31O129C36O419,,
code-creation,Eval,10,265292,0x229f266b43c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-symbols\\shams.js:1:1,0x229f266b2e8,~
script-source,186,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-symbols\\shams.js,'use strict';\n\n/* eslint complexity: [2\x2C 18]\x2C max-statements: [2\x2C 33] */\nmodule.exports = function hasSymbols() {\n\x09if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\x09if (typeof Symbol.iterator === 'symbol') { return true; }\n\n\x09var obj = {};\n\x09var sym = Symbol('test');\n\x09var symObj = Object(sym);\n\x09if (typeof sym === 'string') { return false; }\n\n\x09if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\x09if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\x09// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\x09// if (sym instanceof Symbol) { return false; }\n\x09// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\x09// if (!(symObj instanceof Symbol)) { return false; }\n\n\x09// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\x09// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\x09var symVal = 42;\n\x09obj[sym] = symVal;\n\x09for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\x2C no-unreachable-loop\n\x09if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\x09if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\x09var syms = Object.getOwnPropertySymbols(obj);\n\x09if (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\x09if (!Object.prototype.propertyIsEnumerable.call(obj\x2C sym)) { return false; }\n\n\x09if (typeof Object.getOwnPropertyDescriptor === 'function') {\n\x09\x09var descriptor = Object.getOwnPropertyDescriptor(obj\x2C sym);\n\x09\x09if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\x09}\n\n\x09return true;\n};\n
code-source-info,0x229f266b43c,186,0,1761,C0O0C4O1761,,
code-creation,JS,10,265391,0x229f266b51c,10, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-symbols\\shams.js:1:1,0x229f266b3b0,~
code-source-info,0x229f266b51c,186,0,1761,C0O73C4O88C9O1760,,
code-creation,JS,10,265468,0x229f266b704,57,hasNativeSymbols C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-symbols\\index.js:6:43,0x229f266acd0,~
code-source-info,0x229f266b704,185,156,418,C0O162C6O202C7O215C8O219C15O255C16O268C17O272C23O283C31O317C32O330C33O334C40O345C48O375C49O388C50O393C53O400C56O416,,
code-creation,JS,10,265572,0x229f266b8ec,382,hasSymbols C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-symbols\\shams.js:4:37,0x229f266b470,~
code-source-info,0x229f266b8ec,186,109,1759,C0O115C7O158C11O165C19O205C20O218C21O222C25O240C33O265C34O277C35O292C37O307C44O307C49O337C53O337C58O351C64O382C65O395C66O400C70O411C75O421C80O430C85O430C93O440C98O465C99O478C100O482C104O493C109O503C114O512C119O512C127O525C132O550C133O563C134O1002C137O1007C139O1016C143O1039C156O1032C169O1046C170O1059C174O1027C178O1128C182O1146C190O1169C194O1176C199O1176C205O1185C211O1193C216O1202C217O1215C218O1220C222O1238C230O1276C234O1283C239O1283C245O1307C251O1315C256O1324C257O1337C258O1353C262O1360C267O1360C273O1398C280O1405C286O1418C292O1422C297O1433C298O1446C299O1451C303O1463C308O1473C313O1494C318O1494C326O1512C327O1525C328O1530C332O1548C340O1610C344O1617C349O1617C356O1670C363O1676C368O1701C378O1724C379O1737C380O1745C381O1757,,
code-creation,JS,11,266078,0x7ff62c50cac0,1368,#updateContext node:internal/url:813:17,0x22671c9f080,^
code-source-info,0x7ff62c50cac0,39,23478,24403,,,
code-creation,JS,11,266138,0x7ff62c5176c0,2048,getPathFromURLWin32 node:internal/url:1342:29,0x22671ca02c8,^
code-source-info,0x7ff62c5176c0,39,38323,39825,,,
code-creation,JS,11,266155,0x7ff62c50d040,316,URLContext node:internal/url:166:18,0x22671c9e2f0,^
code-source-info,0x7ff62c50d040,39,3721,4534,,,
code-creation,JS,11,266171,0x7ff62c50d1c0,112,URLContext node:internal/url:166:1,0x22671c9e298,^
code-source-info,0x7ff62c50d1c0,39,3704,3704,,,
code-creation,JS,11,266188,0x7ff62c50d280,216,URL node:internal/url:765:11,0x22671c9fbf0,^
code-source-info,0x7ff62c50d280,39,22292,30424,,,
code-creation,JS,11,266209,0x7ff62c50d380,640,markTransferMode node:internal/worker/js_transferable:84:26,0x22671c953a0,^
code-source-info,0x7ff62c50d380,26,2695,3075,,,
code-creation,Eval,10,266647,0x229f266d874,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-proto\\index.js:1:1,0x229f266d700,~
script-source,187,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-proto\\index.js,'use strict';\n\nvar test = {\n\x09foo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\x09return { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n
code-source-info,0x229f266d874,187,0,197,C0O0C4O197,,
code-creation,JS,10,266701,0x229f266d9ac,26, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-proto\\index.js:1:1,0x229f266d7e8,~
code-source-info,0x229f266d9ac,187,0,197,C0O0C5O26C9O26C11O55C14O55C16O64C20O79C25O196,,
code-creation,JS,10,266781,0x229f266db7c,45,hasProto C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-proto\\index.js:9:35,0x229f266d8a8,~
code-source-info,0x229f266db7c,187,98,195,C0O104C11O124C16O131C24O144C28O135C40O173C44O193,,
code-creation,Eval,10,268316,0x229f2671554,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\function-bind\\index.js:1:1,0x229f2671400,~
script-source,188,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\function-bind\\index.js,'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n
code-source-info,0x229f2671554,188,0,126,C0O0C4O126,,
code-creation,JS,10,268381,0x229f26715f4,34, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\function-bind\\index.js:1:1,0x229f26714c8,~
code-source-info,0x229f26715f4,188,0,126,C0O36C3O36C8O83C12O92C17O102C28O81C33O125,,
code-creation,Eval,10,269033,0x229f2672df4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\function-bind\\implementation.js:1:1,0x229f2672c30,~
script-source,189,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\function-bind\\implementation.js,'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a\x2C b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike\x2C offset) {\n    var arr = [];\n    for (var i = offset || 0\x2C j = 0; i < arrLike.length; i += 1\x2C j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr\x2C joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments\x2C 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this\x2C\n                concatty(args\x2C arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that\x2C\n            concatty(args\x2C arguments)\n        );\n\n    };\n\n    var boundLength = max(0\x2C target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder'\x2C 'return function (' + joiny(boundArgs\x2C '\x2C') + '){ return binder.apply(this\x2Carguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n
code-source-info,0x229f2672df4,189,0,2043,C0O0C4O2043,,
code-creation,JS,10,269137,0x229f2673064,66, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\function-bind\\implementation.js:1:1,0x229f2672d68,~
code-source-info,0x229f2673064,189,0,2043,C0O0C5O68C7O68C9O131C13O138C18O148C22O131C24O168C28O173C32O168C34O193C36O193C38O230C42O230C44O465C48O465C50O659C54O659C56O868C60O883C65O2042,,
code-creation,Eval,10,270003,0x229f26748d4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\hasown\\index.js:1:1,0x229f2674780,~
script-source,190,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\hasown\\index.js,'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {(o: {}\x2C p: PropertyKey) => p is keyof o} */\nmodule.exports = bind.call(call\x2C $hasOwn);\n
code-source-info,0x229f26748d4,190,0,234,C0O0C4O234,,
code-creation,JS,10,270045,0x229f2674984,53, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\hasown\\index.js:1:1,0x229f2674848,~
code-source-info,0x229f2674984,190,0,234,C0O26C4O35C9O45C14O65C18O72C23O82C28O109C31O109C36O213C41O213C47O206C52O233,,
code-creation,Eval,10,270790,0x229f26761ec,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\call-bind\\callBound.js:1:1,0x229f2676068,~
script-source,191,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\call-bind\\callBound.js,'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name\x2C allowMissing) {\n\x09var intrinsic = GetIntrinsic(name\x2C !!allowMissing);\n\x09if (typeof intrinsic === 'function' && $indexOf(name\x2C '.prototype.') > -1) {\n\x09\x09return callBind(intrinsic);\n\x09}\n\x09return intrinsic;\n};\n
code-source-info,0x229f26761ec,191,0,413,C0O0C4O413,,
code-creation,JS,10,270838,0x229f26762ec,53, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\call-bind\\callBound.js:1:1,0x229f2676160,~
code-source-info,0x229f26762ec,191,0,413,C0O0C5O34C8O34C12O34C14O76C17O76C21O76C23O107C32O116C37O107C41O107C43O160C47O175C52O412,,
code-creation,JS,13,270963,0x7ff62c50d640,1052,nextPart node:fs:2592:31,0x22671cad808,*
code-source-info,0x7ff62c50d640,55,70950,71201,C0O70950C39O70973C49O70977C89O70973C110O71010C337O71101C360O70987C363O70964C384O70973C448O71010C663O71101C688O70987C691O70964C707O71196C743O71173C754O70950C800O71010C867O70964C918O71010C974O70964,,
code-creation,Eval,10,271473,0x229f267711c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\call-bind\\index.js:1:1,0x229f2676f20,~
script-source,192,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\call-bind\\index.js,'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%'\x2C true) || bind.call($call\x2C $apply);\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%'\x2C true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\x09try {\n\x09\x09$defineProperty({}\x2C 'a'\x2C { value: 1 });\n\x09} catch (e) {\n\x09\x09// IE 8 has a broken defineProperty\n\x09\x09$defineProperty = null;\n\x09}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\x09if (typeof originalFunction !== 'function') {\n\x09\x09throw new $TypeError('a function is required');\n\x09}\n\x09var func = $reflectApply(bind\x2C $call\x2C arguments);\n\x09return setFunctionLength(\n\x09\x09func\x2C\n\x09\x091 + $max(0\x2C originalFunction.length - (arguments.length - 1))\x2C\n\x09\x09true\n\x09);\n};\n\nvar applyBind = function applyBind() {\n\x09return $reflectApply(bind\x2C $apply\x2C arguments);\n};\n\nif ($defineProperty) {\n\x09$defineProperty(module.exports\x2C 'apply'\x2C { value: applyBind });\n} else {\n\x09module.exports.apply = applyBind;\n}\n
code-source-info,0x229f267711c,192,0,1212,C0O0C4O1212,,
code-creation,JS,10,271561,0x229f2677354,207, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\call-bind\\index.js:1:1,0x229f2677090,~
code-source-info,0x229f2677354,192,0,1212,C0O0C5O26C8O26C12O26C14O71C17O71C22O121C25O121C29O121C31O171C34O171C38O171C40O213C43O213C47O213C49O269C52O269C56O269C58O332C63O332C73O378C84O378C90O332C92O422C97O422C103O480C106O480C110O480C112O509C119O541C129O541C147O636C151O666C155O681C159O1003C164O1078C168O1125C183O1152C187O1102C194O1183C201O1197C206O1211,,
code-creation,Eval,10,272421,0x229f2678dac,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\set-function-length\\index.js:1:1,0x229f2678c08,~
script-source,193,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\set-function-length\\index.js,'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $floor = GetIntrinsic('%Math.floor%');\n\nmodule.exports = function setFunctionLength(fn\x2C length) {\n\x09if (typeof fn !== 'function') {\n\x09\x09throw new $TypeError('`fn` is not a function');\n\x09}\n\x09if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\x09\x09throw new $TypeError('`length` must be a positive 32-bit integer');\n\x09}\n\n\x09var loose = arguments.length > 2 && !!arguments[2];\n\n\x09var functionLengthIsConfigurable = true;\n\x09var functionLengthIsWritable = true;\n\x09if ('length' in fn && gOPD) {\n\x09\x09var desc = gOPD(fn\x2C 'length');\n\x09\x09if (desc && !desc.configurable) {\n\x09\x09\x09functionLengthIsConfigurable = false;\n\x09\x09}\n\x09\x09if (desc && !desc.writable) {\n\x09\x09\x09functionLengthIsWritable = false;\n\x09\x09}\n\x09}\n\n\x09if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\x09\x09if (hasDescriptors) {\n\x09\x09\x09define(fn\x2C 'length'\x2C length\x2C true\x2C true);\n\x09\x09} else {\n\x09\x09\x09define(fn\x2C 'length'\x2C length);\n\x09\x09}\n\x09}\n\x09return fn;\n};\n
code-source-info,0x229f2678dac,193,0,1170,C0O0C4O1170,,
code-creation,JS,10,272497,0x229f2678ec4,72, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\set-function-length\\index.js:1:1,0x229f2678d20,~
code-source-info,0x229f2678ec4,193,0,1170,C0O0C5O34C8O34C13O73C16O73C20O73C22O127C25O127C30O162C33O127C35O177C38O177C42O177C44O212C47O212C51O212C53O254C56O254C60O254C62O285C66O300C71O1169,,
code-creation,JS,11,272644,0x7ff62c50dac0,1548,encodePathChars node:internal/url:1424:25,0x22671ca03d0,^
code-source-info,0x7ff62c50dac0,39,41575,42340,,,
code-creation,JS,11,272674,0x7ff62c50e100,784,URL node:internal/url:769:14,0x22671c9ef48,^
code-source-info,0x7ff62c50e100,39,22360,22707,,,
code-creation,JS,11,272704,0x7ff62c50e440,88,toString node:internal/url:847:11,0x22671c9f0d8,^
code-source-info,0x7ff62c50e440,39,24417,24458,,,
code-creation,JS,11,272720,0x7ff62c50e4c0,188,get hasSearch node:internal/url:200:16,0x22671c9e1a8,^
code-source-info,0x7ff62c50e4c0,39,4388,4452,,,
code-creation,JS,11,272734,0x7ff62c50e5c0,188,get hasHash node:internal/url:204:14,0x22671c9e220,^
code-source-info,0x7ff62c50e5c0,39,4469,4531,,,
code-creation,JS,11,272758,0x7ff62c517f00,508,get pathname node:internal/url:983:15,0x22671c9f808,^
code-source-info,0x7ff62c517f00,39,28208,28496,,,
code-creation,JS,11,272784,0x7ff62c518140,1256,isConditionalExportsMainSugar node:internal/modules/esm/resolve:544:39,0x229f2656c68,^
code-source-info,0x7ff62c518140,179,21744,22670,,,
code-creation,JS,11,272800,0x7ff62c518680,252,get protocol node:internal/url:894:15,0x22671c9f288,^
code-source-info,0x7ff62c518680,39,25674,25768,,,
code-creation,JS,11,272911,0x7ff62c51ff00,3104,resolvePackageTarget node:internal/modules/esm/resolve:470:30,0x229f2656c10,^
code-source-info,0x7ff62c51ff00,179,19127,21414,,,
code-creation,JS,11,272947,0x7ff62c520b40,2780,pathToFileURL node:internal/url:1439:23,0x22671ca0428,^
code-source-info,0x7ff62c520b40,39,42366,44367,,,
code-creation,JS,11,272963,0x7ff62c5187c0,160,getCjsConditions node:internal/modules/helpers:81:26,0x22671cb8218,^
code-source-info,0x7ff62c5187c0,64,2338,2445,,,
code-creation,Eval,10,273561,0x229f267bc5c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\define-data-property\\index.js:1:1,0x229f267ba90,~
script-source,194,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\define-data-property\\index.js,'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%'\x2C true);\nif ($defineProperty) {\n\x09try {\n\x09\x09$defineProperty({}\x2C 'a'\x2C { value: 1 });\n\x09} catch (e) {\n\x09\x09// IE 8 has a broken defineProperty\n\x09\x09$defineProperty = false;\n\x09}\n}\n\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar gopd = require('gopd');\n\n/** @type {(obj: Record<PropertyKey\x2C unknown>\x2C property: PropertyKey\x2C value: unknown\x2C nonEnumerable?: boolean | null\x2C nonWritable?: boolean | null\x2C nonConfigurable?: boolean | null\x2C loose?: boolean) => void} */\nmodule.exports = function defineDataProperty(\n\x09obj\x2C\n\x09property\x2C\n\x09value\n) {\n\x09if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\x09\x09throw new $TypeError('`obj` must be an object or a function`');\n\x09}\n\x09if (typeof property !== 'string' && typeof property !== 'symbol') {\n\x09\x09throw new $TypeError('`property` must be a string or a symbol`');\n\x09}\n\x09if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\x09\x09throw new $TypeError('`nonEnumerable`\x2C if provided\x2C must be a boolean or null');\n\x09}\n\x09if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\x09\x09throw new $TypeError('`nonWritable`\x2C if provided\x2C must be a boolean or null');\n\x09}\n\x09if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\x09\x09throw new $TypeError('`nonConfigurable`\x2C if provided\x2C must be a boolean or null');\n\x09}\n\x09if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\x09\x09throw new $TypeError('`loose`\x2C if provided\x2C must be a boolean');\n\x09}\n\n\x09var nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\x09var nonWritable = arguments.length > 4 ? arguments[4] : null;\n\x09var nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\x09var loose = arguments.length > 6 ? arguments[6] : false;\n\n\x09/* @type {false | TypedPropertyDescriptor<unknown>} */\n\x09var desc = !!gopd && gopd(obj\x2C property);\n\n\x09if ($defineProperty) {\n\x09\x09$defineProperty(obj\x2C property\x2C {\n\x09\x09\x09configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable\x2C\n\x09\x09\x09enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable\x2C\n\x09\x09\x09value: value\x2C\n\x09\x09\x09writable: nonWritable === null && desc ? desc.writable : !nonWritable\n\x09\x09});\n\x09} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\x09\x09// must fall back to [[Set]]\x2C and was not explicitly asked to make non-enumerable\x2C non-writable\x2C or non-configurable\n\x09\x09obj[property] = value; // eslint-disable-line no-param-reassign\n\x09} else {\n\x09\x09throw new $SyntaxError('This environment does not support defining a property as non-configurable\x2C non-writable\x2C or non-enumerable.');\n\x09}\n};\n
code-source-info,0x229f267bc5c,194,0,2838,C0O0C4O2838,,
code-creation,JS,10,273790,0x229f267bdd4,123, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\define-data-property\\index.js:1:1,0x229f267bbd0,~
code-source-info,0x229f267bdd4,194,0,2838,C0O0C5O44C8O44C13O79C17O103C20O103C25O152C34O178C39O152C41O225C48O257C61O257C79O352C80O368C86O402C89O402C93O402C95O450C98O450C102O450C104O491C107O491C111O491C113O720C117O735C122O2837,,
tick,0x7ffe2c1bf25f,274073,0,0x0,3,0x7ff62c507c67,0x7ff62c5120f7,0x7ff62c512728,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x229f2678ed4,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x229f267736d,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x229f26762fd,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x229f2662b04,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x229f26501e4,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x395cad7e6ff,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x395cad7bdde,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f037a4,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,Eval,10,274641,0x229f267d2a4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-property-descriptors\\index.js:1:1,0x229f267d130,~
script-source,195,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-property-descriptors\\index.js,'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%'\x2C true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\x09if ($defineProperty) {\n\x09\x09try {\n\x09\x09\x09$defineProperty({}\x2C 'a'\x2C { value: 1 });\n\x09\x09\x09return true;\n\x09\x09} catch (e) {\n\x09\x09\x09// IE 8 has a broken defineProperty\n\x09\x09\x09return false;\n\x09\x09}\n\x09}\n\x09return false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\x09// node v0.6 has a bug where array lengths can be Set but not Defined\n\x09if (!hasPropertyDescriptors()) {\n\x09\x09return null;\n\x09}\n\x09try {\n\x09\x09return $defineProperty([]\x2C 'length'\x2C { value: 1 }).length !== 1;\n\x09} catch (e) {\n\x09\x09// In Firefox 4-22\x2C defining length on an array throws an exception.\n\x09\x09return true;\n\x09}\n};\n\nmodule.exports = hasPropertyDescriptors;\n
code-source-info,0x229f267d2a4,195,0,817,C0O0C4O817,,
code-creation,JS,10,274722,0x229f267d404,50, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-property-descriptors\\index.js:1:1,0x229f267d218,~
code-source-info,0x229f267d404,195,0,817,C0O0C5O34C8O34C13O83C18O83C23O83C25O160C29O160C31O385C38O432C42O776C44O791C49O816,,
new,MemoryChunk,0x24b11cc0000,262144
new,MemoryChunk,0x36cd2900000,262144
new,MemoryChunk,0x1a47b640000,262144
new,MemoryChunk,0x470ce40000,262144
new,MemoryChunk,0x7ee0640000,262144
new,MemoryChunk,0x1d4493c0000,262144
new,MemoryChunk,0x33d0e180000,262144
new,MemoryChunk,0x27257940000,262144
new,MemoryChunk,0x299e2c00000,262144
new,MemoryChunk,0x2773cc80000,262144
code-creation,JS,11,275474,0x7ff62c521640,4468,resolvePackageTargetString node:internal/modules/esm/resolve:366:36,0x229f2656b60,^
code-source-info,0x7ff62c521640,179,15145,17941,,,
code-creation,JS,11,275498,0x7ff62c518880,88,get href node:internal/url:851:11,0x22671c9f130,^
code-source-info,0x7ff62c518880,39,24472,24513,,,
code-creation,JS,11,275517,0x7ff62c518900,440,get hostname node:internal/url:953:15,0x22671c9f638,^
code-source-info,0x7ff62c518900,39,27434,27711,,,
code-creation,JS,11,275533,0x7ff62c518b00,184,SideEffectFreeRegExpPrototypeSymbolReplace node:internal/util:781:52,0x22671c82858,^
code-source-info,0x7ff62c518b00,16,22366,22471,,,
code-creation,JS,11,275552,0x7ff62c518c00,804,fileURLToPath node:internal/url:1395:23,0x22671ca0378,^
code-source-info,0x7ff62c518c00,39,40392,40717,,,
code-creation,JS,10,275729,0x229f267df94,540,GetIntrinsic C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:270:39,0x229f2666d88,~
code-source-info,0x229f267df
code-creation,JS,10,275896,0x229f267e4ac,128,stringToPath C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:227:41,0x229f2666cb0,~
code-source-info,0x229f267e4ac,184,9464,9994,C0O9464C5O9488C18O9488C24O9525C32O9525C38O9549C40O9559C47O9575C52O9588C62O9594C67O9588C68O9670C70O9679C77O9696C82O9709C92O9715C97O9709C98O9800C100O9800C102O9805C112O9822C120O9805C125O9978C127O9992,,
code-creation,RegExp,3,276010,0x7ff62c4e6540,3452,[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|(["'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))
code-creation,JS,10,276046,0x229f267e66c,47, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:236:40,0x229f267e3e8,~
code-source-info,0x229f267e66c,184,9843,9974,C0O9881C3O9895C10O9905C28O9913C37O9955C41O9903C46O9973,,
code-creation,JS,10,276112,0x229f267e884,167,getBaseIntrinsic C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:243:49,0x229f2666d30,~
code-source-info,0x229f267e884,184,10066,10717,C0O10110C3O10129C9O10133C16O10176C21O10198C25O10217C29O10244C32O10237C38O10248C42O10260C48O10264C55O10315C60O10325C64O10344C66O10354C71O10374C74O10382C79O10411C87O10448C89O10467C97O10501C103O10508C109O10473C114O10467C115O10574C122O10593C128O10609C134O10634C140O10644C141O10650C149O10686C155O10693C161O10656C166O10650,,
code-creation,JS,10,276212,0x229f267ec94,42,hasPropertyDescriptors C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\has-property-descriptors\\index.js:7:61,0x229f267d2d8,~
code-source-info,0x229f267ec94,195,191,382,C0O197C7O231C20O231C25O274C26O286C38O345C39O358C40O367C41O380,,
code-creation,RegExp,3,276414,0x7ff62c4e7300,1072,^%?[^%]*%?$
code-creation,Eval,10,276925,0x1ffa74b3bc4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\gopd\\index.js:1:1,0x1ffa74b3a40,~
script-source,196,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\gopd\\index.js,'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%'\x2C true);\n\nif ($gOPD) {\n\x09try {\n\x09\x09$gOPD([]\x2C 'length');\n\x09} catch (e) {\n\x09\x09// IE 8 has a broken gOPD\n\x09\x09$gOPD = null;\n\x09}\n}\n\nmodule.exports = $gOPD;\n
code-source-info,0x1ffa74b3bc4,196,0,263,C0O0C4O263,,
code-creation,JS,10,276992,0x1ffa74b3c84,60, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\gopd\\index.js:1:1,0x1ffa74b3b38,~
code-source-info,0x1ffa74b3c84,196,0,263,C0O34C3O34C8O73C13O73C19O131C24O153C30O153C48O219C52O239C54O254C59O262,,
code-creation,JS,11,277381,0x7ff62c522800,3292,GetIntrinsic C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:270:39,0x229f2666d88,^
code-source-info,0x7ff62c522800,184,10758,13324,,,
code-creation,JS,11,277412,0x7ff62c518f80,748,finalizeEsmResolution node:internal/modules/cjs/loader:1158:31,0x22671cb7420,^
code-source-info,0x7ff62c518f80,63,37970,38535,,,
code-creation,JS,11,277429,0x7ff62c5192c0,244, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:236:40,0x229f267e3e8,^
code-source-info,0x7ff62c5192c0,184,9843,9974,,,
code-creation,JS,10,277572,0x1ffa74b542c,87,callBind C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\call-bind\\index.js:24:35,0x229f2677150,~
code-source-info,0x1ffa74b542c,192,700,984,C0O700C2O722C8O770C16O776C21O770C22O833C34O833C40O873C51O938C56O958C60O965C63O945C67O913C72O911C81O880C86O982,,
code-creation,JS,10,277651,0x1ffa74b561c,200,setFunctionLength C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\set-function-length\\index.js:11:44,0x229f2678de0,~
code-source-info,0x1ffa74b561c,193,328,1168,C0O328C2O344C8O378C16O384C21O378C22O430C29O471C36O485C44O501C51O516C56O532C64O538C69O532C70O627C77O634C84O652C89O694C91O732C93O739C98O752C105O761C107O782C113O782C119O804C121O822C127O841C129O885C133O903C139O918C141O961C147O997C151O1026C153O1037C157O1062C173O1062C180O1118C192O1118C197O1156C199O1166,,
code-creation,JS,10,277772,0x1ffa74b5adc,451,defineDataProperty C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\define-data-property\\index.js:23:45,0x229f267bc90,~
code-source-info,0x1ffa74b5adc
code-creation,Eval,10,278852,0x1ffa74b958c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\object-inspect\\index.js:1:1,0x1ffa74b9068,~
script-source,197,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\object-inspect\\index.js,var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype\x2C 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype\x2C 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie\x2C `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num\x2C str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/\x2C str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str\x2C intStr.length + 1);\n            return $replace.call(intStr\x2C sepRegex\x2C '$&_') + '.' + $replace.call($replace.call(dec\x2C /([0-9]{3})/g\x2C '$&_')\x2C /_$/\x2C '');\n        }\n    }\n    return $replace.call(str\x2C sepRegex\x2C '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj\x2C options\x2C depth\x2C seen) {\n    var opts = options || {};\n\n    if (has(opts\x2C 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option "quoteStyle" must be "single" or "double"');\n    }\n    if (\n        has(opts\x2C 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option "maxStringLength"\x2C if provided\x2C must be a positive integer\x2C Infinity\x2C or `null`');\n    }\n    var customInspect = has(opts\x2C 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option "customInspect"\x2C if provided\x2C must be `true`\x2C `false`\x2C or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts\x2C 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent\x2C 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option "indent" must be "\\\\t"\x2C an integer > 0\x2C or `null`');\n    }\n    if (has(opts\x2C 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option "numericSeparator"\x2C if provided\x2C must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj\x2C opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj\x2C str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj\x2C bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts\x2C depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen\x2C obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value\x2C from\x2C noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts\x2C 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value\x2C newOpts\x2C depth + 1\x2C seen);\n        }\n        return inspect_(value\x2C opts\x2C depth + 1\x2C seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines\x2C regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj\x2C inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys\x2C '\x2C ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj)\x2C /^(Symbol\\(.*\\))_[^)]*$/\x2C '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value)\x2C 'double'\x2C opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj\x2C inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs\x2C indent) + ']';\n        }\n        return '[ ' + $join.call(xs\x2C '\x2C ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj\x2C inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj\x2C 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause)\x2C parts)\x2C '\x2C ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts\x2C '\x2C ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj\x2C { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj\x2C function (value\x2C key) {\n                mapParts.push(inspect(key\x2C obj\x2C true) + ' => ' + inspect(value\x2C obj));\n            });\n        }\n        return collectionOf('Map'\x2C mapSize.call(obj)\x2C mapParts\x2C indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj\x2C function (value) {\n                setParts.push(inspect(value\x2C obj));\n            });\n        }\n        return collectionOf('Set'\x2C setSize.call(obj)\x2C setParts\x2C indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8\x2C sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (obj === global) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj\x2C inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj)\x2C 8\x2C -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([]\x2C stringTag || []\x2C protoTag || [])\x2C ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys\x2C indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys\x2C '\x2C ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s\x2C defaultStyle\x2C opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s)\x2C /"/g\x2C '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec\x2C so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj\x2C key) {\n    return hasOwn.call(obj\x2C key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f)\x2C /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs\x2C x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0\x2C l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround\x2C pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x\x2C weakMapHas);\n        try {\n            weakSetHas.call(x\x2C weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround\x2C pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround\x2C pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x\x2C weakSetHas);\n        try {\n            weakMapHas.call(x\x2C weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround\x2C pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str\x2C opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str\x2C 0\x2C opts.maxStringLength)\x2C opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str\x2C /(['\\\\])/g\x2C '\\\\$1')\x2C /[\\x00-\\x1f]/g\x2C lowbyte);\n    return wrapQuotes(s\x2C 'single'\x2C opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b'\x2C\n        9: 't'\x2C\n        10: 'n'\x2C\n        12: 'f'\x2C\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type\x2C size\x2C entries\x2C indent) {\n    var joinedEntries = indent ? indentedJoin(entries\x2C indent) : $join.call(entries\x2C '\x2C ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i]\x2C '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts\x2C depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1)\x2C ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent\x2C\n        prev: $join.call(Array(depth + 1)\x2C baseIndent)\n    };\n}\n\nfunction indentedJoin(xs\x2C indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs\x2C '\x2C' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj\x2C inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj\x2C i) ? inspect(obj[i]\x2C obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj\x2C key)) { continue; } // eslint-disable-line no-restricted-syntax\x2C no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax\x2C no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols\x2C which are stored as strings\x2C from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax\x2C no-continue\n        } else if ($test.call(/[^\\w$]/\x2C key)) {\n            xs.push(inspect(key\x2C obj) + ': ' + inspect(obj[key]\x2C obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key]\x2C obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj\x2C syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]]\x2C obj));\n            }\n        }\n    }\n    return xs;\n}\n
code-source-info,0x1ffa74b958c,197,0,18882,C0O0C4O18882,,
code-creation,JS,10,279421,0x1ffa74ba46c,981, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\object-inspect\\index.js:1:1,0x1ffa74b9500,~
code-source-info,0x1ffa74ba46c
code-creation,Eval,10,279902,0x1ffa74bb374,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\object-inspect\\util.inspect.js:1:1,0x1ffa74bb220,~
script-source,198,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\object-inspect\\util.inspect.js,module.exports = require('util').inspect;\n
code-source-info,0x1ffa74bb374,198,0,42,C0O0C4O42,,
code-creation,JS,10,279959,0x1ffa74bb404,18, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\object-inspect\\util.inspect.js:1:1,0x1ffa74bb2e8,~
code-source-info,0x1ffa74bb404,198,0,42,C0O0C3O17C8O32C12O15C17O41,,
code-creation,JS,10,280055,0x1ffa74bb66c,78,isSymbol C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\object-inspect\\index.js:284:18,0x1ffa74b9930,~
code-source-info,0x1ffa74bb66c,197,12344,12708,C0O12356C4O12389C14O12445C17O12434C20O12452C21O12463C27O12502C28O12514C29O12525C41O12565C43O12588C44O12601C48O12626C51O12638C56O12638C61O12657C62O12669C76O12693C77O12706,,
code-creation,JS,10,280127,0x1ffa74bb814,47,callBoundIntrinsic C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\call-bind\\callBound.js:9:45,0x229f2676220,~
code-source-info,0x1ffa74bb814,191,204,411,C0O244C5O265C7O244C13O281C23O320C31O350C36O360C39O367C43O387C44O392C46O409,,
code-creation,Eval,10,280713,0x1ffa74bcb74,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\utils.js:1:1,0x1ffa74bc970,~
script-source,199,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\utils.js,'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source\x2C options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target\x2C source\x2C options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype\x2C source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target\x2C source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target\x2C options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item\x2C i) {\n            if (has.call(target\x2C i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem\x2C item\x2C options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc\x2C key) {\n        var value = source[key];\n\n        if (has.call(acc\x2C key)) {\n            acc[key] = merge(acc[key]\x2C value\x2C options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }\x2C mergeTarget);\n};\n\nvar assign = function assignSingleSource(target\x2C source) {\n    return Object.keys(source).reduce(function (acc\x2C key) {\n        acc[key] = source[key];\n        return acc;\n    }\x2C target);\n};\n\nvar decode = function (str\x2C decoder\x2C charset) {\n    var strWithoutPlus = str.replace(/\\+/g\x2C ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws\x2C no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi\x2C unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str\x2C defaultEncoder\x2C charset\x2C kind\x2C format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi\x2C function ($0) {\n            return '%26%23' + parseInt($0.slice(2)\x2C 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2\x2C "before"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }\x2C prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj\x2C prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a\x2C b) {\n    return [].concat(a\x2C b);\n};\n\nvar maybeMap = function maybeMap(val\x2C fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject\x2C\n    assign: assign\x2C\n    combine: combine\x2C\n    compact: compact\x2C\n    decode: decode\x2C\n    encode: encode\x2C\n    isBuffer: isBuffer\x2C\n    isRegExp: isRegExp\x2C\n    maybeMap: maybeMap\x2C\n    merge: merge\n};\n
code-source-info,0x1ffa74bcb74,199,0,6823,C0O0C4O6823,,
code-creation,JS,10,280961,0x1ffa74bd224,179, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\utils.js:1:1,0x1ffa74bcae8,~
code-source-info,0x1ffa74bd224,199,0,6823,C0O0C5O29C8O29C12O29C14O62C18O69C23O79C27O62C29O109C33O115C37O109C39O140C44O317C47O140C49O342C53O342C55O803C59O803C61O1094C66O2722C71O2913C76O3310C81O5326C86O5952C91O6066C96O6274C101O6346C106O6574C113O6612C119O6639C125O6660C131O6682C137O6703C143O6723C149O6745C155O6769C161O6793C167O6814C173O6589C178O6822,,
code-creation,JS,10,281001,0x1ffa74bd3f4,86, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\utils.js:8:26,0x1ffa74bcba8,~
code-source-info,0x1ffa74bd3f4,199,150,317,C0O171C3O192C5O197C9O197C14O225C24O240C39O261C47O261C52O257C56O275C61O275C65O234C69O225C74O206C79O179C83O302C85O315,,
code-creation,Eval,10,285341,0x1ffa74bdbd4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\formats.js:1:1,0x1ffa74bda60,~
script-source,200,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\formats.js,'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738'\x2C\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986\x2C\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value\x2C percentTwenties\x2C '+');\n        }\x2C\n        RFC3986: function (value) {\n            return String(value);\n        }\n    }\x2C\n    RFC1738: Format.RFC1738\x2C\n    RFC3986: Format.RFC3986\n};\n
code-source-info,0x1ffa74bdbd4,200,0,476,C0O0C4O476,,
code-creation,JS,10,285403,0x1ffa74bdfac,96, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\formats.js:1:1,0x1ffa74bdb48,~
code-source-info,0x1ffa74bdfac,200,0,476,C0O0C5O29C9O36C14O46C18O29C20O77C25O77C27O99C32O152C37O193C45O218C50O237C58O346C72O436C80O465C90O167C95O475,,
code-creation,Eval,10,286285,0x1ffa74bfdf4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\parse.js:1:1,0x1ffa74bfbe0,~
script-source,201,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\parse.js,'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false\x2C\n    allowPrototypes: false\x2C\n    allowSparse: false\x2C\n    arrayLimit: 20\x2C\n    charset: 'utf-8'\x2C\n    charsetSentinel: false\x2C\n    comma: false\x2C\n    decoder: utils.decode\x2C\n    delimiter: '&'\x2C\n    depth: 5\x2C\n    ignoreQueryPrefix: false\x2C\n    interpretNumericEntities: false\x2C\n    parameterLimit: 1000\x2C\n    parseArrays: true\x2C\n    plainObjects: false\x2C\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g\x2C function ($0\x2C numberStr) {\n        return String.fromCharCode(parseInt(numberStr\x2C 10));\n    });\n};\n\nvar parseArrayValue = function (val\x2C options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf('\x2C') > -1) {\n        return val.split('\x2C');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1\x2C or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character\x2C such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark\x2C indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str\x2C options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/\x2C '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter\x2C limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key\x2C val;\n        if (pos === -1) {\n            key = options.decoder(part\x2C defaults.decoder\x2C charset\x2C 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0\x2C pos)\x2C defaults.decoder\x2C charset\x2C 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1)\x2C options)\x2C\n                function (encodedVal) {\n                    return options.decoder(encodedVal\x2C defaults.decoder\x2C charset\x2C 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj\x2C key)) {\n            obj[key] = utils.combine(obj[key]\x2C val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain\x2C val\x2C options\x2C valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val\x2C options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1\x2C -1) : root;\n            var index = parseInt(cleanRoot\x2C 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey\x2C val\x2C options\x2C valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g\x2C '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0\x2C segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects\x2C optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype\x2C parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype\x2C segment[1].slice(1\x2C -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder\x2C just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys\x2C val\x2C options\x2C valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8\x2C iso-8859-1\x2C or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots\x2C\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes\x2C\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse\x2C\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit\x2C\n        charset: charset\x2C\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel\x2C\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma\x2C\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder\x2C\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter\x2C\n        // eslint-disable-next-line no-implicit-coercion\x2C no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth\x2C\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true\x2C\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities\x2C\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit\x2C\n        parseArrays: opts.parseArrays !== false\x2C\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects\x2C\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str\x2C opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str\x2C options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key\x2C tempObj[key]\x2C options\x2C typeof str === 'string');\n        obj = utils.merge(obj\x2C newObj\x2C options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n
code-source-info,0x1ffa74bfdf4,201,0,9374,C0O0C4O9374,,
code-creation,JS,10,286575,0x2773cc8d3f4,113, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\parse.js:1:1,0x1ffa74bfd68,~
code-source-info,0x2773cc8d3f4,201,0,9374,C0O0C5O27C8O27C12O27C14O58C18O65C23O75C27O58C29O105C33O111C37O105C39O136C47O319C57O136C59O567C63O567C65O742C69O742C71O1279C73O1279C75O1486C77O1486C79O1550C83O1550C85O3700C89O3700C91O4844C95O4844C97O6377C101O6377C103O8601C107O8616C112O9373,,
code-creation,Eval,10,287591,0x2773cc8ec04,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\view.js:1:1,0x2773cc8ea20,~
script-source,202,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\view.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name\x2C options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.slice(1)\n    debug('require "%s"'\x2C mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module "' + mod + '" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup "%s"'\x2C name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root\x2C name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir\x2C file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options\x2C callback) {\n  debug('render "%s"'\x2C this.path);\n  this.engine(this.path\x2C options\x2C callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir\x2C file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir\x2C file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir\x2C basename(file\x2C ext)\x2C 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat\x2C maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat "%s"'\x2C path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n
code-source-info,0x2773cc8ec04,202,0,3325,C0O0C4O3325,,
code-creation,JS,10,287748,0x2773cc8eecc,140, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\view.js:1:1,0x2773cc8eb78,~
code-source-info,0x2773cc8eecc,202,0,3325,C0O0C20O238C26O238C34O254C38O238C40O283C46O283C51O309C57O309C61O309C63O386C67O381C69O415C73O410C75O444C79O439C81O469C85O464C87O494C91O489C93O543C95O558C99O1943C108O1960C112O2466C121O2483C125O2730C134O2748C139O3324,,
code-creation,JS,10,288051,0x2773cc8f9a4,11,get ReadStream node:fs:3195:17,0x22671cadd90,~
code-source-info,0x2773cc8f9a4,55,86857,86914,C0O86867C3O86867C6O86891C10O86909,,
code-creation,JS,10,288116,0x2773cc8facc,60,lazyLoadStreams node:fs:3051:25,0x22671cadc88,~
code-source-info,0x2773cc8facc,55,84290,84463,C0O84298C6O84322C12O84353C17O84325C23O84337C36O84391C41O84406C47O84425C52O84441C59O84462,,
code-creation,Eval,10,288517,0x2773cc915d4,5, node:internal/fs/streams:1:1,0x2773cc911d0,~
script-source,203,node:internal/fs/streams,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_SYSTEM_ERROR\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  deprecate\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n} = require('internal/validators');\x0d\nconst { errorOrDestroy } = require('internal/streams/destroy');\x0d\nconst fs = require('fs');\x0d\nconst { kRef\x2C kUnref\x2C FileHandle } = require('internal/fs/promises');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  copyObject\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  validatePath\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { Readable\x2C Writable\x2C finished } = require('stream');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst kIoDone = Symbol('kIoDone');\x0d\nconst kIsPerformingIO = Symbol('kIsPerformingIO');\x0d\n\x0d\nconst kFs = Symbol('kFs');\x0d\nconst kHandle = Symbol('kHandle');\x0d\n\x0d\nfunction _construct(callback) {\x0d\n  const stream = this;\x0d\n  if (typeof stream.fd === 'number') {\x0d\n    callback();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (stream.open !== openWriteFs && stream.open !== openReadFs) {\x0d\n    // Backwards compat for monkey patching open().\x0d\n    const orgEmit = stream.emit;\x0d\n    stream.emit = function(...args) {\x0d\n      if (args[0] === 'open') {\x0d\n        this.emit = orgEmit;\x0d\n        callback();\x0d\n        ReflectApply(orgEmit\x2C this\x2C args);\x0d\n      } else if (args[0] === 'error') {\x0d\n        this.emit = orgEmit;\x0d\n        callback(args[1]);\x0d\n      } else {\x0d\n        ReflectApply(orgEmit\x2C this\x2C args);\x0d\n      }\x0d\n    };\x0d\n    stream.open();\x0d\n  } else {\x0d\n    stream[kFs].open(stream.path\x2C stream.flags\x2C stream.mode\x2C (er\x2C fd) => {\x0d\n      if (er) {\x0d\n        callback(er);\x0d\n      } else {\x0d\n        stream.fd = fd;\x0d\n        callback();\x0d\n        stream.emit('open'\x2C stream.fd);\x0d\n        stream.emit('ready');\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// This generates an fs operations structure for a FileHandle\x0d\nconst FileHandleOperations = (handle) => {\x0d\n  return {\x0d\n    open: (path\x2C flags\x2C mode\x2C cb) => {\x0d\n      throw new ERR_METHOD_NOT_IMPLEMENTED('open()');\x0d\n    }\x2C\x0d\n    close: (fd\x2C cb) => {\x0d\n      handle[kUnref]();\x0d\n      PromisePrototypeThen(handle.close()\x2C\x0d\n                           () => cb()\x2C cb);\x0d\n    }\x2C\x0d\n    fsync: (fd\x2C cb) => {\x0d\n      PromisePrototypeThen(handle.sync()\x2C () => cb()\x2C cb);\x0d\n    }\x2C\x0d\n    read: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\x0d\n      PromisePrototypeThen(handle.read(buf\x2C offset\x2C length\x2C pos)\x2C\x0d\n                           (r) => cb(null\x2C r.bytesRead\x2C r.buffer)\x2C\x0d\n                           (err) => cb(err\x2C 0\x2C buf));\x0d\n    }\x2C\x0d\n    write: (fd\x2C buf\x2C offset\x2C length\x2C pos\x2C cb) => {\x0d\n      PromisePrototypeThen(handle.write(buf\x2C offset\x2C length\x2C pos)\x2C\x0d\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffer)\x2C\x0d\n                           (err) => cb(err\x2C 0\x2C buf));\x0d\n    }\x2C\x0d\n    writev: (fd\x2C buffers\x2C pos\x2C cb) => {\x0d\n      PromisePrototypeThen(handle.writev(buffers\x2C pos)\x2C\x0d\n                           (r) => cb(null\x2C r.bytesWritten\x2C r.buffers)\x2C\x0d\n                           (err) => cb(err\x2C 0\x2C buffers));\x0d\n    }\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nfunction close(stream\x2C err\x2C cb) {\x0d\n  if (!stream.fd) {\x0d\n    cb(err);\x0d\n  } else if (stream.flush) {\x0d\n    stream[kFs].fsync(stream.fd\x2C (flushErr) => {\x0d\n      _close(stream\x2C err || flushErr\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _close(stream\x2C err\x2C cb);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _close(stream\x2C err\x2C cb) {\x0d\n  stream[kFs].close(stream.fd\x2C (er) => {\x0d\n    cb(er || err);\x0d\n  });\x0d\n  stream.fd = null;\x0d\n}\x0d\n\x0d\nfunction importFd(stream\x2C options) {\x0d\n  if (typeof options.fd === 'number') {\x0d\n    // When fd is a raw descriptor\x2C we must keep our fingers crossed\x0d\n    // that the descriptor won't get closed\x2C or worse\x2C replaced with\x0d\n    // another one\x0d\n    // https://github.com/nodejs/node/issues/35862\x0d\n    stream[kFs] = options.fs || fs;\x0d\n    return options.fd;\x0d\n  } else if (typeof options.fd === 'object' &&\x0d\n             options.fd instanceof FileHandle) {\x0d\n    // When fd is a FileHandle we can listen for 'close' events\x0d\n    if (options.fs) {\x0d\n      // FileHandle is not supported with custom fs operations\x0d\n      throw new ERR_METHOD_NOT_IMPLEMENTED('FileHandle with fs');\x0d\n    }\x0d\n    stream[kHandle] = options.fd;\x0d\n    stream[kFs] = FileHandleOperations(stream[kHandle]);\x0d\n    stream[kHandle][kRef]();\x0d\n    options.fd.on('close'\x2C FunctionPrototypeBind(stream.close\x2C stream));\x0d\n    return options.fd.fd;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('options.fd'\x2C\x0d\n                                 ['number'\x2C 'FileHandle']\x2C options.fd);\x0d\n}\x0d\n\x0d\nfunction ReadStream(path\x2C options) {\x0d\n  if (!(this instanceof ReadStream))\x0d\n    return new ReadStream(path\x2C options);\x0d\n\x0d\n  // A little bit bigger buffer and water marks by default\x0d\n  options = copyObject(getOptions(options\x2C kEmptyObject));\x0d\n  if (options.highWaterMark === undefined)\x0d\n    options.highWaterMark = 64 * 1024;\x0d\n\x0d\n  if (options.autoDestroy === undefined) {\x0d\n    options.autoDestroy = false;\x0d\n  }\x0d\n\x0d\n  if (options.fd == null) {\x0d\n    this.fd = null;\x0d\n    this[kFs] = options.fs || fs;\x0d\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\x0d\n\x0d\n    // Path will be ignored when fd is specified\x2C so it can be falsy\x0d\n    this.path = toPathIfFileURL(path);\x0d\n    this.flags = options.flags === undefined ? 'r' : options.flags;\x0d\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\x0d\n\x0d\n    validatePath(this.path);\x0d\n  } else {\x0d\n    this.fd = getValidatedFd(importFd(this\x2C options));\x0d\n  }\x0d\n\x0d\n  options.autoDestroy = options.autoClose === undefined ?\x0d\n    true : options.autoClose;\x0d\n\x0d\n  validateFunction(this[kFs].read\x2C 'options.fs.read');\x0d\n\x0d\n  if (options.autoDestroy) {\x0d\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\x0d\n  }\x0d\n\x0d\n  this.start = options.start;\x0d\n  this.end = options.end;\x0d\n  this.pos = undefined;\x0d\n  this.bytesRead = 0;\x0d\n  this[kIsPerformingIO] = false;\x0d\n\x0d\n  if (this.start !== undefined) {\x0d\n    validateInteger(this.start\x2C 'start'\x2C 0);\x0d\n\x0d\n    this.pos = this.start;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (this.end === undefined) {\x0d\n    this.end = Infinity;\x0d\n  } else if (this.end !== Infinity) {\x0d\n    validateInteger(this.end\x2C 'end'\x2C 0);\x0d\n\x0d\n    if (this.start !== undefined && this.start > this.end) {\x0d\n      throw new ERR_OUT_OF_RANGE(\x0d\n        'start'\x2C\x0d\n        `<= "end" (here: ${this.end})`\x2C\x0d\n        this.start\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ReflectApply(Readable\x2C this\x2C [options]);\x0d\n}\x0d\nObjectSetPrototypeOf(ReadStream.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(ReadStream\x2C Readable);\x0d\n\x0d\nObjectDefineProperty(ReadStream.prototype\x2C 'autoClose'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this._readableState.autoDestroy;\x0d\n  }\x2C\x0d\n  set(val) {\x0d\n    this._readableState.autoDestroy = val;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst openReadFs = deprecate(function() {\x0d\n  // Noop.\x0d\n}\x2C 'ReadStream.prototype.open() is deprecated'\x2C 'DEP0135');\x0d\nReadStream.prototype.open = openReadFs;\x0d\n\x0d\nReadStream.prototype._construct = _construct;\x0d\n\x0d\nReadStream.prototype._read = function(n) {\x0d\n  n = this.pos !== undefined ?\x0d\n    MathMin(this.end - this.pos + 1\x2C n) :\x0d\n    MathMin(this.end - this.bytesRead + 1\x2C n);\x0d\n\x0d\n  if (n <= 0) {\x0d\n    this.push(null);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const buf = Buffer.allocUnsafeSlow(n);\x0d\n\x0d\n  this[kIsPerformingIO] = true;\x0d\n  this[kFs]\x0d\n    .read(this.fd\x2C buf\x2C 0\x2C n\x2C this.pos\x2C (er\x2C bytesRead\x2C buf) => {\x0d\n      this[kIsPerformingIO] = false;\x0d\n\x0d\n      // Tell ._destroy() that it's safe to close the fd now.\x0d\n      if (this.destroyed) {\x0d\n        this.emit(kIoDone\x2C er);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (er) {\x0d\n        errorOrDestroy(this\x2C er);\x0d\n      } else if (bytesRead > 0) {\x0d\n        if (this.pos !== undefined) {\x0d\n          this.pos += bytesRead;\x0d\n        }\x0d\n\x0d\n        this.bytesRead += bytesRead;\x0d\n\x0d\n        if (bytesRead !== buf.length) {\x0d\n          // Slow path. Shrink to fit.\x0d\n          // Copy instead of slice so that we don't retain\x0d\n          // large backing buffer for small reads.\x0d\n          const dst = Buffer.allocUnsafeSlow(bytesRead);\x0d\n          buf.copy(dst\x2C 0\x2C 0\x2C bytesRead);\x0d\n          buf = dst;\x0d\n        }\x0d\n\x0d\n        this.push(buf);\x0d\n      } else {\x0d\n        this.push(null);\x0d\n      }\x0d\n    });\x0d\n};\x0d\n\x0d\nReadStream.prototype._destroy = function(err\x2C cb) {\x0d\n  // Usually for async IO it is safe to close a file descriptor\x0d\n  // even when there are pending operations. However\x2C due to platform\x0d\n  // differences file IO is implemented using synchronous operations\x0d\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\x0d\n  // to close while used in a pending read or write operation. Wait for\x0d\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\x0d\n  if (this[kIsPerformingIO]) {\x0d\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\x0d\n  } else {\x0d\n    close(this\x2C err\x2C cb);\x0d\n  }\x0d\n};\x0d\n\x0d\nReadStream.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') finished(this\x2C cb);\x0d\n  this.destroy();\x0d\n};\x0d\n\x0d\nObjectDefineProperty(ReadStream.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this.fd === null; }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nfunction WriteStream(path\x2C options) {\x0d\n  if (!(this instanceof WriteStream))\x0d\n    return new WriteStream(path\x2C options);\x0d\n\x0d\n  options = copyObject(getOptions(options\x2C kEmptyObject));\x0d\n\x0d\n  // Only buffers are supported.\x0d\n  options.decodeStrings = true;\x0d\n\x0d\n  if (options.fd == null) {\x0d\n    this.fd = null;\x0d\n    this[kFs] = options.fs || fs;\x0d\n    validateFunction(this[kFs].open\x2C 'options.fs.open');\x0d\n\x0d\n    // Path will be ignored when fd is specified\x2C so it can be falsy\x0d\n    this.path = toPathIfFileURL(path);\x0d\n    this.flags = options.flags === undefined ? 'w' : options.flags;\x0d\n    this.mode = options.mode === undefined ? 0o666 : options.mode;\x0d\n\x0d\n    validatePath(this.path);\x0d\n  } else {\x0d\n    this.fd = getValidatedFd(importFd(this\x2C options));\x0d\n  }\x0d\n\x0d\n  options.autoDestroy = options.autoClose === undefined ?\x0d\n    true : options.autoClose;\x0d\n\x0d\n  if (!this[kFs].write && !this[kFs].writev) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.fs.write'\x2C 'function'\x2C\x0d\n                                   this[kFs].write);\x0d\n  }\x0d\n\x0d\n  if (this[kFs].write) {\x0d\n    validateFunction(this[kFs].write\x2C 'options.fs.write');\x0d\n  }\x0d\n\x0d\n  if (this[kFs].writev) {\x0d\n    validateFunction(this[kFs].writev\x2C 'options.fs.writev');\x0d\n  }\x0d\n\x0d\n  if (options.autoDestroy) {\x0d\n    validateFunction(this[kFs].close\x2C 'options.fs.close');\x0d\n  }\x0d\n\x0d\n  this.flush = options.flush;\x0d\n  if (this.flush == null) {\x0d\n    this.flush = false;\x0d\n  } else {\x0d\n    validateBoolean(this.flush\x2C 'options.flush');\x0d\n    validateFunction(this[kFs].fsync\x2C 'options.fs.fsync');\x0d\n  }\x0d\n\x0d\n  // It's enough to override either\x2C in which case only one will be used.\x0d\n  if (!this[kFs].write) {\x0d\n    this._write = null;\x0d\n  }\x0d\n  if (!this[kFs].writev) {\x0d\n    this._writev = null;\x0d\n  }\x0d\n\x0d\n  this.start = options.start;\x0d\n  this.pos = undefined;\x0d\n  this.bytesWritten = 0;\x0d\n  this[kIsPerformingIO] = false;\x0d\n\x0d\n  if (this.start !== undefined) {\x0d\n    validateInteger(this.start\x2C 'start'\x2C 0);\x0d\n\x0d\n    this.pos = this.start;\x0d\n  }\x0d\n\x0d\n  ReflectApply(Writable\x2C this\x2C [options]);\x0d\n\x0d\n  if (options.encoding)\x0d\n    this.setDefaultEncoding(options.encoding);\x0d\n}\x0d\nObjectSetPrototypeOf(WriteStream.prototype\x2C Writable.prototype);\x0d\nObjectSetPrototypeOf(WriteStream\x2C Writable);\x0d\n\x0d\nObjectDefineProperty(WriteStream.prototype\x2C 'autoClose'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this._writableState.autoDestroy;\x0d\n  }\x2C\x0d\n  set(val) {\x0d\n    this._writableState.autoDestroy = val;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst openWriteFs = deprecate(function() {\x0d\n  // Noop.\x0d\n}\x2C 'WriteStream.prototype.open() is deprecated'\x2C 'DEP0135');\x0d\nWriteStream.prototype.open = openWriteFs;\x0d\n\x0d\nWriteStream.prototype._construct = _construct;\x0d\n\x0d\nfunction writeAll(data\x2C size\x2C pos\x2C cb\x2C retries = 0) {\x0d\n  this[kFs].write(this.fd\x2C data\x2C 0\x2C size\x2C pos\x2C (er\x2C bytesWritten\x2C buffer) => {\x0d\n    // No data currently available and operation should be retried later.\x0d\n    if (er?.code === 'EAGAIN') {\x0d\n      er = null;\x0d\n      bytesWritten = 0;\x0d\n    }\x0d\n\x0d\n    if (this.destroyed || er) {\x0d\n      return cb(er || new ERR_STREAM_DESTROYED('write'));\x0d\n    }\x0d\n\x0d\n    this.bytesWritten += bytesWritten;\x0d\n\x0d\n    retries = bytesWritten ? 0 : retries + 1;\x0d\n    size -= bytesWritten;\x0d\n    pos += bytesWritten;\x0d\n\x0d\n    // Try writing non-zero number of bytes up to 5 times.\x0d\n    if (retries > 5) {\x0d\n      cb(new ERR_SYSTEM_ERROR('write failed'));\x0d\n    } else if (size) {\x0d\n      writeAll.call(this\x2C buffer.slice(bytesWritten)\x2C size\x2C pos\x2C cb\x2C retries);\x0d\n    } else {\x0d\n      cb();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction writevAll(chunks\x2C size\x2C pos\x2C cb\x2C retries = 0) {\x0d\n  this[kFs].writev(this.fd\x2C chunks\x2C this.pos\x2C (er\x2C bytesWritten\x2C buffers) => {\x0d\n    // No data currently available and operation should be retried later.\x0d\n    if (er?.code === 'EAGAIN') {\x0d\n      er = null;\x0d\n      bytesWritten = 0;\x0d\n    }\x0d\n\x0d\n    if (this.destroyed || er) {\x0d\n      return cb(er || new ERR_STREAM_DESTROYED('writev'));\x0d\n    }\x0d\n\x0d\n    this.bytesWritten += bytesWritten;\x0d\n\x0d\n    retries = bytesWritten ? 0 : retries + 1;\x0d\n    size -= bytesWritten;\x0d\n    pos += bytesWritten;\x0d\n\x0d\n    // Try writing non-zero number of bytes up to 5 times.\x0d\n    if (retries > 5) {\x0d\n      cb(new ERR_SYSTEM_ERROR('writev failed'));\x0d\n    } else if (size) {\x0d\n      writevAll.call(this\x2C [Buffer.concat(buffers).slice(bytesWritten)]\x2C size\x2C pos\x2C cb\x2C retries);\x0d\n    } else {\x0d\n      cb();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nWriteStream.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this[kIsPerformingIO] = true;\x0d\n  writeAll.call(this\x2C data\x2C data.length\x2C this.pos\x2C (er) => {\x0d\n    this[kIsPerformingIO] = false;\x0d\n    if (this.destroyed) {\x0d\n      // Tell ._destroy() that it's safe to close the fd now.\x0d\n      cb(er);\x0d\n      return this.emit(kIoDone\x2C er);\x0d\n    }\x0d\n\x0d\n    cb(er);\x0d\n  });\x0d\n\x0d\n  if (this.pos !== undefined)\x0d\n    this.pos += data.length;\x0d\n};\x0d\n\x0d\nWriteStream.prototype._writev = function(data\x2C cb) {\x0d\n  const len = data.length;\x0d\n  const chunks = new Array(len);\x0d\n  let size = 0;\x0d\n\x0d\n  for (let i = 0; i < len; i++) {\x0d\n    const chunk = data[i].chunk;\x0d\n\x0d\n    chunks[i] = chunk;\x0d\n    size += chunk.length;\x0d\n  }\x0d\n\x0d\n  this[kIsPerformingIO] = true;\x0d\n  writevAll.call(this\x2C chunks\x2C size\x2C this.pos\x2C (er) => {\x0d\n    this[kIsPerformingIO] = false;\x0d\n    if (this.destroyed) {\x0d\n      // Tell ._destroy() that it's safe to close the fd now.\x0d\n      cb(er);\x0d\n      return this.emit(kIoDone\x2C er);\x0d\n    }\x0d\n\x0d\n    cb(er);\x0d\n  });\x0d\n\x0d\n  if (this.pos !== undefined)\x0d\n    this.pos += size;\x0d\n};\x0d\n\x0d\nWriteStream.prototype._destroy = function(err\x2C cb) {\x0d\n  // Usually for async IO it is safe to close a file descriptor\x0d\n  // even when there are pending operations. However\x2C due to platform\x0d\n  // differences file IO is implemented using synchronous operations\x0d\n  // running in a thread pool. Therefore\x2C file descriptors are not safe\x0d\n  // to close while used in a pending read or write operation. Wait for\x0d\n  // any pending IO (kIsPerformingIO) to complete (kIoDone).\x0d\n  if (this[kIsPerformingIO]) {\x0d\n    this.once(kIoDone\x2C (er) => close(this\x2C err || er\x2C cb));\x0d\n  } else {\x0d\n    close(this\x2C err\x2C cb);\x0d\n  }\x0d\n};\x0d\n\x0d\nWriteStream.prototype.close = function(cb) {\x0d\n  if (cb) {\x0d\n    if (this.closed) {\x0d\n      process.nextTick(cb);\x0d\n      return;\x0d\n    }\x0d\n    this.on('close'\x2C cb);\x0d\n  }\x0d\n\x0d\n  // If we are not autoClosing\x2C we should call\x0d\n  // destroy on 'finish'.\x0d\n  if (!this.autoClose) {\x0d\n    this.on('finish'\x2C this.destroy);\x0d\n  }\x0d\n\x0d\n  // We use end() instead of destroy() because of\x0d\n  // https://github.com/nodejs/node/issues/2006\x0d\n  this.end();\x0d\n};\x0d\n\x0d\n// There is no shutdown() for files.\x0d\nWriteStream.prototype.destroySoon = WriteStream.prototype.end;\x0d\n\x0d\nObjectDefineProperty(WriteStream.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this.fd === null; }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  ReadStream\x2C\x0d\n  WriteStream\x2C\x0d\n};\x0d\n
code-source-info,0x2773cc915d4,203,0,15837,C0O0C4O15837,,
code-creation,JS,10,289244,0x2773cc92464,920, node:internal/fs/streams:1:1,0x2773cc91548,~
code-source-info,0x2773cc
tick,0x7ffe2c1bfab3,289363,0,0x0,3,0x7ff62c4c3ef2,0x7ff62c4c3cc7,0x2773cc8fad8,0x2773cc8f9a7,0x7ff64c39d1c7,0x7ff62c4c7571,0x7ff62c4c7774,0x7ff62c509740,0x7ff64c28ef5f,0x7ff62c509c7a,0x7ff62c50a051,0x7ff62c50a29f,0x7ff62c50f175,0x7ff62c50833e,0x7ff62c50850f,0x2773cc8ef05,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f037be,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,Eval,10,290349,0x2773cc976cc,5, node:internal/fs/promises:1:1,0x2773cc96138,~
script-source,204,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromiseReject\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  Uint8Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n} = constants;\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_STATE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  aggregateTwoErrors\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  lazyDOMException\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst EventEmitter = require('events');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst { kFSWatchStart\x2C watch } = require('internal/fs/watchers');\x0d\nconst nonNativeWatcher = require('internal/fs/recursive_watch');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\nconst kLocked = Symbol('kLocked');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst { Interface } = require('internal/readline/interface');\x0d\nconst {\x0d\n  kDeserialize\x2C kTransfer\x2C kTransferList\x2C markTransferMode\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\n// By the time the C++ land creates an error for a promise rejection (likely from a\x0d\n// libuv callback)\x2C there is already no JS frames on the stack. So we need to\x0d\n// wait until V8 resumes execution back to JS land before we have enough information\x0d\n// to re-capture the stack trace.\x0d\nfunction handleErrorFromBinding(error) {\x0d\n  ErrorCaptureStackTrace(error\x2C handleErrorFromBinding);\x0d\n  return PromiseReject(error);\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitter {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    markTransferMode(this\x2C false\x2C true);\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  readLines(options = undefined) {\x0d\n    return new Interface({\x0d\n      input: this.createReadStream(options)\x2C\x0d\n      crlfDelay: Infinity\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x2C\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  async [SymbolAsyncDispose]() {\x0d\n    return this.close();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('../webstreams/readablestream').ReadableStream\x0d\n   * } ReadableStream\x0d\n   * @param {{\x0d\n   *   type?: string;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadableStream}\x0d\n   */\x0d\n  readableWebStream(options = kEmptyObject) {\x0d\n    if (this[kFd] === -1)\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is closed');\x0d\n    if (this[kClosePromise])\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is closing');\x0d\n    if (this[kLocked])\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is locked');\x0d\n    this[kLocked] = true;\x0d\n\x0d\n    if (options.type !== undefined) {\x0d\n      validateString(options.type\x2C 'options.type');\x0d\n    }\x0d\n\x0d\n    let readable;\x0d\n\x0d\n    if (options.type !== 'bytes') {\x0d\n      const {\x0d\n        newReadableStreamFromStreamBase\x2C\x0d\n      } = require('internal/webstreams/adapters');\x0d\n      readable = newReadableStreamFromStreamBase(\x0d\n        this[kHandle]\x2C\x0d\n        undefined\x2C\x0d\n        { ondone: () => this[kUnref]() });\x0d\n    } else {\x0d\n      const {\x0d\n        ReadableStream\x2C\x0d\n      } = require('internal/webstreams/readablestream');\x0d\n\x0d\n      const readFn = FunctionPrototypeBind(this.read\x2C this);\x0d\n      const ondone = FunctionPrototypeBind(this[kUnref]\x2C this);\x0d\n\x0d\n      readable = new ReadableStream({\x0d\n        type: 'bytes'\x2C\x0d\n        autoAllocateChunkSize: 16384\x2C\x0d\n\x0d\n        async pull(controller) {\x0d\n          const view = controller.byobRequest.view;\x0d\n          const { bytesRead } = await readFn(view\x2C view.byteOffset\x2C view.byteLength);\x0d\n\x0d\n          if (bytesRead === 0) {\x0d\n            ondone();\x0d\n            controller.close();\x0d\n          }\x0d\n\x0d\n          controller.byobRequest.respond(bytesRead);\x0d\n        }\x2C\x0d\n\x0d\n        cancel() {\x0d\n          ondone();\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      readableStreamCancel\x2C\x0d\n    } = require('internal/webstreams/readablestream');\x0d\n    this[kRef]();\x0d\n    this.once('close'\x2C () => {\x0d\n      readableStreamCancel(readable);\x0d\n    });\x0d\n\x0d\n    return readable;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   flush?: boolean;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function handleFdClose(fileOpPromise\x2C closeFunc) {\x0d\n  return PromisePrototypeThen(\x0d\n    fileOpPromise\x2C\x0d\n    (result) => PromisePrototypeThen(closeFunc()\x2C () => result)\x2C\x0d\n    (opError) =>\x0d\n      PromisePrototypeThen(\x0d\n        closeFunc()\x2C\x0d\n        () => PromiseReject(opError)\x2C\x0d\n        (closeError) => PromiseReject(aggregateTwoErrors(closeError\x2C opError))\x2C\x0d\n      )\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function handleFdSync(fileOpPromise\x2C handle) {\x0d\n  return PromisePrototypeThen(\x0d\n    fileOpPromise\x2C\x0d\n    (result) => PromisePrototypeThen(\x0d\n      handle.sync()\x2C\x0d\n      () => result\x2C\x0d\n      (syncError) => PromiseReject(syncError)\x2C\x0d\n    )\x2C\x0d\n    (opError) => PromiseReject(opError)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x2C\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  const encoding = options?.encoding;\x0d\n  const decoder = encoding && new StringDecoder(encoding);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await PromisePrototypeThen(\x0d\n    binding.fstat(filehandle.fd\x2C false\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size = 0;\x0d\n  let length = 0;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n    length = encoding ? MathMin(size\x2C kReadFileBufferLength) : size;\x0d\n  }\x0d\n  if (length === 0) {\x0d\n    length = kReadFileUnknownBufferLength;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let totalRead = 0;\x0d\n  let buffer = Buffer.allocUnsafeSlow(length);\x0d\n  let result = '';\x0d\n  let offset = 0;\x0d\n  let buffers;\x0d\n  const chunkedRead = length > kReadFileBufferLength;\x0d\n\x0d\n  while (true) {\x0d\n    checkAborted(signal);\x0d\n\x0d\n    if (chunkedRead) {\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await PromisePrototypeThen(\x0d\n      binding.read(filehandle.fd\x2C buffer\x2C offset\x2C length\x2C -1\x2C kUsePromises)\x2C\x0d\n      undefined\x2C\x0d\n      handleErrorFromBinding\x2C\x0d\n    )) ?? 0;\x0d\n    totalRead += bytesRead;\x0d\n\x0d\n    if (bytesRead === 0 ||\x0d\n        totalRead === size ||\x0d\n        (bytesRead !== buffer.length && !chunkedRead)) {\x0d\n      const singleRead = bytesRead === totalRead;\x0d\n\x0d\n      const bytesToCheck = chunkedRead ? totalRead : bytesRead;\x0d\n\x0d\n      if (bytesToCheck !== buffer.length) {\x0d\n        buffer = buffer.subarray(0\x2C bytesToCheck);\x0d\n      }\x0d\n\x0d\n      if (!encoding) {\x0d\n        if (size === 0 && !singleRead) {\x0d\n          ArrayPrototypePush(buffers\x2C buffer);\x0d\n          return Buffer.concat(buffers\x2C totalRead);\x0d\n        }\x0d\n        return buffer;\x0d\n      }\x0d\n\x0d\n      if (singleRead) {\x0d\n        return buffer.toString(encoding);\x0d\n      }\x0d\n      result += decoder.end(buffer);\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    if (encoding) {\x0d\n      result += decoder.write(buffer);\x0d\n    } else if (size !== 0) {\x0d\n      offset = totalRead;\x0d\n    } else {\x0d\n      buffers ??= [];\x0d\n      // Unknown file size requires chunks.\x0d\n      ArrayPrototypePush(buffers\x2C buffer);\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                     pathModule.toNamespacedPath(dest)\x2C\x0d\n                     mode\x2C\x0d\n                     kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(await PromisePrototypeThen(\x0d\n    binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                           flagsNumber\x2C mode\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  ));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrParams\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrParams;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    // This is fh.read(params)\x0d\n    if (bufferOrParams !== undefined) {\x0d\n      validateObject(bufferOrParams\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n    }\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = bufferOrParams ?? kEmptyObject);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset !== null && typeof offset === 'object') {\x0d\n    // This is fh.read(buffer\x2C options)\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offset);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { __proto__: null\x2C bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null) {\x0d\n    position = -1;\x0d\n  } else {\x0d\n    validatePosition(position\x2C 'position'\x2C length);\x0d\n  }\x0d\n\x0d\n  const bytesRead = (await PromisePrototypeThen(\x0d\n    binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C position\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  )) || 0;\x0d\n\x0d\n  return { __proto__: null\x2C bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await PromisePrototypeThen(\x0d\n    binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  )) || 0;\x0d\n  return { __proto__: null\x2C bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { __proto__: null\x2C bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await PromisePrototypeThen(\x0d\n        binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                            length\x2C position\x2C kUsePromises)\x2C\x0d\n        undefined\x2C\x0d\n        handleErrorFromBinding\x2C\x0d\n      )) || 0;\x0d\n    return { __proto__: null\x2C bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await PromisePrototypeThen(\x0d\n    binding.writeString(handle.fd\x2C buffer\x2C offset\x2C length\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  )) || 0;\x0d\n  return { __proto__: null\x2C bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { __proto__: null\x2C bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await PromisePrototypeThen(\x0d\n    binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  )) || 0;\x0d\n  return { __proto__: null\x2C bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                   pathModule.toNamespacedPath(newPath)\x2C\x0d\n                   kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return handleFdClose(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.ftruncate(handle.fd\x2C len\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.rmdir(path\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.fdatasync(handle.fd\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.fsync(handle.fd\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x2C\x0d\n  } = options || kEmptyObject;\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                  parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                  kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function readdirRecursive(originalPath\x2C options) {\x0d\n  const result = [];\x0d\n  const queue = [\x0d\n    [\x0d\n      originalPath\x2C\x0d\n      await PromisePrototypeThen(\x0d\n        binding.readdir(\x0d\n          pathModule.toNamespacedPath(originalPath)\x2C\x0d\n          options.encoding\x2C\x0d\n          !!options.withFileTypes\x2C\x0d\n          kUsePromises\x2C\x0d\n        )\x2C\x0d\n        undefined\x2C\x0d\n        handleErrorFromBinding\x2C\x0d\n      )\x2C\x0d\n    ]\x2C\x0d\n  ];\x0d\n\x0d\n\x0d\n  if (options.withFileTypes) {\x0d\n    while (queue.length > 0) {\x0d\n      // If we want to implement BFS make this a `shift` call instead of `pop`\x0d\n      const { 0: path\x2C 1: readdir } = ArrayPrototypePop(queue);\x0d\n      for (const dirent of getDirents(path\x2C readdir)) {\x0d\n        ArrayPrototypePush(result\x2C dirent);\x0d\n        if (dirent.isDirectory()) {\x0d\n          const direntPath = pathModule.join(path\x2C dirent.name);\x0d\n          ArrayPrototypePush(queue\x2C [\x0d\n            direntPath\x2C\x0d\n            await PromisePrototypeThen(\x0d\n              binding.readdir(\x0d\n                direntPath\x2C\x0d\n                options.encoding\x2C\x0d\n                true\x2C\x0d\n                kUsePromises\x2C\x0d\n              )\x2C\x0d\n              undefined\x2C\x0d\n              handleErrorFromBinding\x2C\x0d\n            )\x2C\x0d\n          ]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    while (queue.length > 0) {\x0d\n      const { 0: path\x2C 1: readdir } = ArrayPrototypePop(queue);\x0d\n      for (const ent of readdir) {\x0d\n        const direntPath = pathModule.join(path\x2C ent);\x0d\n        const stat = binding.internalModuleStat(direntPath);\x0d\n        ArrayPrototypePush(\x0d\n          result\x2C\x0d\n          pathModule.relative(originalPath\x2C direntPath)\x2C\x0d\n        );\x0d\n        if (stat === 1) {\x0d\n          ArrayPrototypePush(queue\x2C [\x0d\n            direntPath\x2C\x0d\n            await PromisePrototypeThen(\x0d\n              binding.readdir(\x0d\n                pathModule.toNamespacedPath(direntPath)\x2C\x0d\n                options.encoding\x2C\x0d\n                false\x2C\x0d\n                kUsePromises\x2C\x0d\n              )\x2C\x0d\n              undefined\x2C\x0d\n              handleErrorFromBinding\x2C\x0d\n            )\x2C\x0d\n          ]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  if (options.recursive) {\x0d\n    return readdirRecursive(path\x2C options);\x0d\n  }\x0d\n  const result = await PromisePrototypeThen(\x0d\n    binding.readdir(\x0d\n      pathModule.toNamespacedPath(path)\x2C\x0d\n      options.encoding\x2C\x0d\n      !!options.withFileTypes\x2C\x0d\n      kUsePromises\x2C\x0d\n    )\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                     options.encoding\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  let type = (typeof type_ === 'string' ? type_ : null);\x0d\n  if (isWindows && type === null) {\x0d\n    try {\x0d\n      const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n      type = (await stat(absoluteTarget)).isDirectory() ? 'dir' : 'file';\x0d\n    } catch {\x0d\n      // Default to 'file' if path is invalid or file does not exist\x0d\n      type = 'file';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                    pathModule.toNamespacedPath(path)\x2C\x0d\n                    stringToSymlinkType(type)\x2C\x0d\n                    kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await PromisePrototypeThen(\x0d\n    binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await PromisePrototypeThen(\x0d\n    binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                  options.bigint\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await PromisePrototypeThen(\x0d\n    binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                 options.bigint\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function statfs(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await PromisePrototypeThen(\x0d\n    binding.statfs(pathModule.toNamespacedPath(path)\x2C\x0d\n                   options.bigint\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n  return getStatFsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.fchmod(handle.fd\x2C mode\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return handleFdClose(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                   toUnixTimestamp(atime)\x2C\x0d\n                   toUnixTimestamp(mtime)\x2C\x0d\n                   kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                    toUnixTimestamp(atime)\x2C\x0d\n                    toUnixTimestamp(mtime)\x2C\x0d\n                    kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.realpath(path\x2C options.encoding\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  prefix = getValidatedPath(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n\x0d\n  let path;\x0d\n  if (typeof prefix === 'string') {\x0d\n    path = `${prefix}XXXXXX`;\x0d\n  } else {\x0d\n    path = Buffer.concat([prefix\x2C Buffer.from('XXXXXX')]);\x0d\n  }\x0d\n\x0d\n  return await PromisePrototypeThen(\x0d\n    binding.mkdtemp(path\x2C options.encoding\x2C kUsePromises)\x2C\x0d\n    undefined\x2C\x0d\n    handleErrorFromBinding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n    mode: 0o666\x2C\x0d\n    flag: 'w'\x2C\x0d\n    flush: false\x2C\x0d\n  });\x0d\n  const flag = options.flag || 'w';\x0d\n  const flush = options.flush ?? false;\x0d\n\x0d\n  validateBoolean(flush\x2C 'options.flush');\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  let writeOp = writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  if (flush) {\x0d\n    writeOp = handleFdSync(writeOp\x2C fd);\x0d\n  }\x0d\n\x0d\n  return handleFdClose(writeOp\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return handleFdClose(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function* _watch(filename\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  if (options.recursive != null) {\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n\x0d\n    // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\x0d\n    // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\x0d\n    // e.g. Linux due to the limitations of inotify.\x0d\n    if (options.recursive && !isOSX && !isWindows) {\x0d\n      const watcher = new nonNativeWatcher.FSWatcher(options);\x0d\n      await watcher[kFSWatchStart](filename);\x0d\n      yield* watcher;\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  yield* watch(filename\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    statfs\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch: !isOSX && !isWindows ? _watch : watch\x2C\x0d\n    constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x2773cc976cc,204,0,34907,C0O0C4O34907,,
code-creation,JS,10,291592,0x2773cc9a55c,2030, node:internal/fs/promises:1:1,0x2773cc97640,~
code-source-info,0x2773cc9a55c
code-creation,JS,10,291744,0x2773cc9b0e4,19,FileHandle node:internal/fs/promises:143:39,0x2773cc99220,~
code-source-info,0x2773cc9b0e4,204,3862,10201,C0O3862C9O5591C18O10201,,
code-creation,Eval,10,292104,0x2773cc9cc14,5, node:internal/fs/rimraf:1:1,0x2773cc9c8a0,~
script-source,205,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      } else if (err.code === 'ENOENT') {\x0d\n        // The file is already gone.\x0d\n        return;\x0d\n      } else if (i === tries) {\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR') {\x0d\n      throw originalErr || err;\x0d\n    }\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          } else if (err.code === 'ENOENT') {\x0d\n            // The file is already gone.\x0d\n            return;\x0d\n          } else if (i === tries) {\x0d\n            throw err;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    throw originalErr || err;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x2773cc9cc14,205,0,7764,C0O0C4O7764,,
code-creation,JS,10,292420,0x2773cc9d264,409, node:internal/fs/rimraf:1:1,0x2773cc9cb88,~
code-source-info,0x2773cc9d264,205,0,7764,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O672C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O693C257O693C262O685C267O734C270O734C275O719C281O772C284O772C289O762C295O826C302O826C307O826C309O898C316O898C321O898C323O995C330O1004C333O987C335O1039C345O1039C347O1099C357O1099C359O1166C361O1166C363O1195C366O1202C371O1202C376O1195C378O7706C385O7725C391O7733C397O7749C403O7721C408O7763,,
code-creation,Eval,10,292761,0x2773cc9e834,5, node:internal/fs/dir:1:1,0x2773cc9e520,~
script-source,206,node:internal/fs/dir,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  PromiseReject\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst binding = internalBinding('fs');\x0d\nconst dirBinding = internalBinding('fs_dir');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_DIR_CLOSED\x2C\x0d\n    ERR_DIR_CONCURRENT_OPERATION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  getDirent\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedPath\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kDirHandle = Symbol('kDirHandle');\x0d\nconst kDirPath = Symbol('kDirPath');\x0d\nconst kDirBufferedEntries = Symbol('kDirBufferedEntries');\x0d\nconst kDirClosed = Symbol('kDirClosed');\x0d\nconst kDirOptions = Symbol('kDirOptions');\x0d\nconst kDirReadImpl = Symbol('kDirReadImpl');\x0d\nconst kDirReadPromisified = Symbol('kDirReadPromisified');\x0d\nconst kDirClosePromisified = Symbol('kDirClosePromisified');\x0d\nconst kDirOperationQueue = Symbol('kDirOperationQueue');\x0d\n\x0d\nclass Dir {\x0d\n  constructor(handle\x2C path\x2C options) {\x0d\n    if (handle == null) throw new ERR_MISSING_ARGS('handle');\x0d\n    this[kDirHandle] = handle;\x0d\n    this[kDirBufferedEntries] = [];\x0d\n    this[kDirPath] = path;\x0d\n    this[kDirClosed] = false;\x0d\n\x0d\n    // Either `null` or an Array of pending operations (= functions to be called\x0d\n    // once the current operation is done).\x0d\n    this[kDirOperationQueue] = null;\x0d\n\x0d\n    this[kDirOptions] = {\x0d\n      bufferSize: 32\x2C\x0d\n      ...getOptions(options\x2C {\x0d\n        encoding: 'utf8'\x2C\x0d\n      })\x2C\x0d\n    };\x0d\n\x0d\n    validateUint32(this[kDirOptions].bufferSize\x2C 'options.bufferSize'\x2C true);\x0d\n\x0d\n    this[kDirReadPromisified] = FunctionPrototypeBind(\x0d\n      internalUtil.promisify(this[kDirReadImpl])\x2C this\x2C false);\x0d\n    this[kDirClosePromisified] = FunctionPrototypeBind(\x0d\n      internalUtil.promisify(this.close)\x2C this);\x0d\n  }\x0d\n\x0d\n  get path() {\x0d\n    return this[kDirPath];\x0d\n  }\x0d\n\x0d\n  read(callback) {\x0d\n    return this[kDirReadImpl](true\x2C callback);\x0d\n  }\x0d\n\x0d\n  [kDirReadImpl](maybeSync\x2C callback) {\x0d\n    if (this[kDirClosed] === true) {\x0d\n      throw new ERR_DIR_CLOSED();\x0d\n    }\x0d\n\x0d\n    if (callback === undefined) {\x0d\n      return this[kDirReadPromisified]();\x0d\n    }\x0d\n\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    if (this[kDirOperationQueue] !== null) {\x0d\n      ArrayPrototypePush(this[kDirOperationQueue]\x2C () => {\x0d\n        this[kDirReadImpl](maybeSync\x2C callback);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (this[kDirBufferedEntries].length > 0) {\x0d\n      try {\x0d\n        const dirent = ArrayPrototypeShift(this[kDirBufferedEntries]);\x0d\n\x0d\n        if (this[kDirOptions].recursive && dirent.isDirectory()) {\x0d\n          this.readSyncRecursive(dirent);\x0d\n        }\x0d\n\x0d\n        if (maybeSync)\x0d\n          process.nextTick(callback\x2C null\x2C dirent);\x0d\n        else\x0d\n          callback(null\x2C dirent);\x0d\n        return;\x0d\n      } catch (error) {\x0d\n        return callback(error);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      process.nextTick(() => {\x0d\n        const queue = this[kDirOperationQueue];\x0d\n        this[kDirOperationQueue] = null;\x0d\n        for (const op of queue) op();\x0d\n      });\x0d\n\x0d\n      if (err || result === null) {\x0d\n        return callback(err\x2C result);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        this.processReadResult(this[kDirPath]\x2C result);\x0d\n        const dirent = ArrayPrototypeShift(this[kDirBufferedEntries]);\x0d\n        if (this[kDirOptions].recursive && dirent.isDirectory()) {\x0d\n          this.readSyncRecursive(dirent);\x0d\n        }\x0d\n        callback(null\x2C dirent);\x0d\n      } catch (error) {\x0d\n        callback(error);\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDirOperationQueue] = [];\x0d\n    this[kDirHandle].read(\x0d\n      this[kDirOptions].encoding\x2C\x0d\n      this[kDirOptions].bufferSize\x2C\x0d\n      req\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  processReadResult(path\x2C result) {\x0d\n    for (let i = 0; i < result.length; i += 2) {\x0d\n      ArrayPrototypePush(\x0d\n        this[kDirBufferedEntries]\x2C\x0d\n        getDirent(\x0d\n          path\x2C\x0d\n          result[i]\x2C\x0d\n          result[i + 1]\x2C\x0d\n        )\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  readSyncRecursive(dirent) {\x0d\n    const path = pathModule.join(dirent.path\x2C dirent.name);\x0d\n    const ctx = { path };\x0d\n    const handle = dirBinding.opendir(\x0d\n      pathModule.toNamespacedPath(path)\x2C\x0d\n      this[kDirOptions].encoding\x2C\x0d\n      undefined\x2C\x0d\n      ctx\x2C\x0d\n    );\x0d\n    handleErrorFromBinding(ctx);\x0d\n    const result = handle.read(\x0d\n      this[kDirOptions].encoding\x2C\x0d\n      this[kDirOptions].bufferSize\x2C\x0d\n      undefined\x2C\x0d\n      ctx\x2C\x0d\n    );\x0d\n\x0d\n    if (result) {\x0d\n      this.processReadResult(path\x2C result);\x0d\n    }\x0d\n\x0d\n    handle.close(undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n  }\x0d\n\x0d\n  readSync() {\x0d\n    if (this[kDirClosed] === true) {\x0d\n      throw new ERR_DIR_CLOSED();\x0d\n    }\x0d\n\x0d\n    if (this[kDirOperationQueue] !== null) {\x0d\n      throw new ERR_DIR_CONCURRENT_OPERATION();\x0d\n    }\x0d\n\x0d\n    if (this[kDirBufferedEntries].length > 0) {\x0d\n      const dirent = ArrayPrototypeShift(this[kDirBufferedEntries]);\x0d\n      if (this[kDirOptions].recursive && dirent.isDirectory()) {\x0d\n        this.readSyncRecursive(dirent);\x0d\n      }\x0d\n      return dirent;\x0d\n    }\x0d\n\x0d\n    const ctx = { path: this[kDirPath] };\x0d\n    const result = this[kDirHandle].read(\x0d\n      this[kDirOptions].encoding\x2C\x0d\n      this[kDirOptions].bufferSize\x2C\x0d\n      undefined\x2C\x0d\n      ctx\x2C\x0d\n    );\x0d\n    handleErrorFromBinding(ctx);\x0d\n\x0d\n    if (result === null) {\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    this.processReadResult(this[kDirPath]\x2C result);\x0d\n\x0d\n    const dirent = ArrayPrototypeShift(this[kDirBufferedEntries]);\x0d\n    if (this[kDirOptions].recursive && dirent.isDirectory()) {\x0d\n      this.readSyncRecursive(dirent);\x0d\n    }\x0d\n    return dirent;\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    // Promise\x0d\n    if (callback === undefined) {\x0d\n      if (this[kDirClosed] === true) {\x0d\n        return PromiseReject(new ERR_DIR_CLOSED());\x0d\n      }\x0d\n      return this[kDirClosePromisified]();\x0d\n    }\x0d\n\x0d\n    // callback\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    if (this[kDirClosed] === true) {\x0d\n      process.nextTick(callback\x2C new ERR_DIR_CLOSED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (this[kDirOperationQueue] !== null) {\x0d\n      ArrayPrototypePush(this[kDirOperationQueue]\x2C () => {\x0d\n        this.close(callback);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this[kDirClosed] = true;\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    this[kDirHandle].close(req);\x0d\n  }\x0d\n\x0d\n  closeSync() {\x0d\n    if (this[kDirClosed] === true) {\x0d\n      throw new ERR_DIR_CLOSED();\x0d\n    }\x0d\n\x0d\n    if (this[kDirOperationQueue] !== null) {\x0d\n      throw new ERR_DIR_CONCURRENT_OPERATION();\x0d\n    }\x0d\n\x0d\n    this[kDirClosed] = true;\x0d\n    const ctx = { path: this[kDirPath] };\x0d\n    const result = this[kDirHandle].close(undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  async* entries() {\x0d\n    try {\x0d\n      while (true) {\x0d\n        const result = await this[kDirReadPromisified]();\x0d\n        if (result === null) {\x0d\n          break;\x0d\n        }\x0d\n        yield result;\x0d\n      }\x0d\n    } finally {\x0d\n      await this[kDirClosePromisified]();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Dir.prototype\x2C SymbolAsyncIterator\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: Dir.prototype.entries\x2C\x0d\n  enumerable: false\x2C\x0d\n  writable: true\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nfunction opendir(path\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : callback;\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n  });\x0d\n\x0d\n  function opendirCallback(error\x2C handle) {\x0d\n    if (error) {\x0d\n      callback(error);\x0d\n    } else {\x0d\n      callback(null\x2C new Dir(handle\x2C path\x2C options));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = opendirCallback;\x0d\n\x0d\n  dirBinding.opendir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n    req\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction opendirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8' });\x0d\n\x0d\n  const handle = dirBinding.opendirSync(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n  );\x0d\n\x0d\n  return new Dir(handle\x2C path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n};\x0d\n
code-source-info,0x2773cc9e834,206,0,8409,C0O0C4O8409,,
code-creation,JS,10,293084,0x2773cc9f2fc,488, node:internal/fs/dir:1:1,0x2773cc9e7a8,~
code-source-info,0x2773cc9f2fc,206,0,8409,C0O0C100O28C106O51C112O75C118O101C123O126C129O144C134O155C139O216C142O216C146O216C148O250C151O250C156O293C159O293C163O293C165O431C168O431C173O339C178O346C184O367C190O402C196O470C202O519C205O519C209O519C211O636C214O636C219O557C225O571C231O586C237O607C243O720C246O720C251O678C257O699C263O774C266O774C270O774C272O814C275O814C279O814C281O863C284O863C288O863C290O914C293O914C297O914C299O957C302O957C306O957C308O1002C311O1002C315O1002C317O1055C320O1055C324O1055C326O1116C329O1116C333O1116C335O1176C338O1176C342O1176C364O2197C418O1209C420O7288C423O7313C428O7324C436O7381C441O7391C452O7288C457O8349C464O8371C470O8379C476O8391C482O8364C487O8408,,
code-creation,Eval,10,293477,0x2773cca18a4,5, node:internal/fs/watchers:1:1,0x2773cca1550,~
script-source,207,node:internal/fs/watchers,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  UVException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  createDeferredPromise\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  kFsStatsFieldsNumber\x2C\x0d\n  StatWatcher: _StatWatcher\x2C\x0d\n} = internalBinding('fs');\x0d\n\x0d\nconst { FSEvent } = internalBinding('fs_event_wrap');\x0d\nconst { UV_ENOSPC } = internalBinding('uv');\x0d\nconst { EventEmitter } = require('events');\x0d\n\x0d\nconst {\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n} = require('internal/fs/utils');\x0d\n\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { owner_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  Buffer: {\x0d\n    isEncoding\x2C\x0d\n  }\x2C\x0d\n} = require('buffer');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kOldStatus = Symbol('kOldStatus');\x0d\nconst kUseBigint = Symbol('kUseBigint');\x0d\n\x0d\nconst kFSWatchStart = Symbol('kFSWatchStart');\x0d\nconst kFSStatWatcherStart = Symbol('kFSStatWatcherStart');\x0d\nconst KFSStatWatcherRefCount = Symbol('KFSStatWatcherRefCount');\x0d\nconst KFSStatWatcherMaxRefCount = Symbol('KFSStatWatcherMaxRefCount');\x0d\nconst kFSStatWatcherAddOrCleanRef = Symbol('kFSStatWatcherAddOrCleanRef');\x0d\n\x0d\nfunction emitStop(self) {\x0d\n  self.emit('stop');\x0d\n}\x0d\n\x0d\nfunction StatWatcher(bigint) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._handle = null;\x0d\n  this[kOldStatus] = -1;\x0d\n  this[kUseBigint] = bigint;\x0d\n  this[KFSStatWatcherRefCount] = 1;\x0d\n  this[KFSStatWatcherMaxRefCount] = 1;\x0d\n}\x0d\nObjectSetPrototypeOf(StatWatcher.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(StatWatcher\x2C EventEmitter);\x0d\n\x0d\nfunction onchange(newStatus\x2C stats) {\x0d\n  const self = this[owner_symbol];\x0d\n  if (self[kOldStatus] === -1 &&\x0d\n      newStatus === -1 &&\x0d\n      stats[2/* new nlink */] === stats[16/* old nlink */]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  self[kOldStatus] = newStatus;\x0d\n  self.emit('change'\x2C getStatsFromBinding(stats)\x2C\x0d\n            getStatsFromBinding(stats\x2C kFsStatsFieldsNumber));\x0d\n}\x0d\n\x0d\n// At the moment if filename is undefined\x2C we\x0d\n// 1. Throw an Error if it's the first\x0d\n//    time Symbol('kFSStatWatcherStart') is called\x0d\n// 2. Return silently if Symbol('kFSStatWatcherStart') has already been called\x0d\n//    on a valid filename and the wrap has been initialized\x0d\n// This method is a noop if the watcher has already been started.\x0d\nStatWatcher.prototype[kFSStatWatcherStart] = function(filename\x2C\x0d\n                                                      persistent\x2C\x0d\n                                                      interval) {\x0d\n  if (this._handle !== null)\x0d\n    return;\x0d\n\x0d\n  this._handle = new _StatWatcher(this[kUseBigint]);\x0d\n  this._handle[owner_symbol] = this;\x0d\n  this._handle.onchange = onchange;\x0d\n  if (!persistent)\x0d\n    this.unref();\x0d\n\x0d\n  // uv_fs_poll is a little more powerful than ev_stat but we curb it for\x0d\n  // the sake of backwards compatibility.\x0d\n  this[kOldStatus] = -1;\x0d\n\x0d\n  filename = getValidatedPath(filename\x2C 'filename');\x0d\n  validateUint32(interval\x2C 'interval');\x0d\n  const err = this._handle.start(toNamespacedPath(filename)\x2C interval);\x0d\n  if (err) {\x0d\n    const error = new UVException({\x0d\n      errno: err\x2C\x0d\n      syscall: 'watch'\x2C\x0d\n      path: filename\x2C\x0d\n    });\x0d\n    error.filename = filename;\x0d\n    throw error;\x0d\n  }\x0d\n};\x0d\n\x0d\n// To maximize backward-compatibility for the end user\x2C\x0d\n// a no-op stub method has been added instead of\x0d\n// totally removing StatWatcher.prototype.start.\x0d\n// This should not be documented.\x0d\nStatWatcher.prototype.start = () => {};\x0d\n\x0d\n// FIXME(joyeecheung): this method is not documented while there is\x0d\n// another documented fs.unwatchFile(). The counterpart in\x0d\n// FSWatcher is .close()\x0d\n// This method is a noop if the watcher has not been started.\x0d\nStatWatcher.prototype.stop = function() {\x0d\n  if (this._handle === null)\x0d\n    return;\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this._handle.getAsyncId()\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitStop\x2C\x0d\n                             this);\x0d\n  this._handle.close();\x0d\n  this._handle = null;\x0d\n};\x0d\n\x0d\n// Clean up or add ref counters.\x0d\nStatWatcher.prototype[kFSStatWatcherAddOrCleanRef] = function(operate) {\x0d\n  if (operate === 'add') {\x0d\n    // Add a Ref\x0d\n    this[KFSStatWatcherRefCount]++;\x0d\n    this[KFSStatWatcherMaxRefCount]++;\x0d\n  } else if (operate === 'clean') {\x0d\n    // Clean up a single\x0d\n    this[KFSStatWatcherMaxRefCount]--;\x0d\n    this.unref();\x0d\n  } else if (operate === 'cleanAll') {\x0d\n    // Clean up all\x0d\n    this[KFSStatWatcherMaxRefCount] = 0;\x0d\n    this[KFSStatWatcherRefCount] = 0;\x0d\n    this._handle?.unref();\x0d\n  }\x0d\n};\x0d\n\x0d\nStatWatcher.prototype.ref = function() {\x0d\n  // Avoid refCount calling ref multiple times causing unref to have no effect.\x0d\n  if (this[KFSStatWatcherRefCount] === this[KFSStatWatcherMaxRefCount])\x0d\n    return this;\x0d\n  if (this._handle && this[KFSStatWatcherRefCount]++ === 0)\x0d\n    this._handle.ref();\x0d\n  return this;\x0d\n};\x0d\n\x0d\nStatWatcher.prototype.unref = function() {\x0d\n  // Avoid refCount calling unref multiple times causing ref to have no effect.\x0d\n  if (this[KFSStatWatcherRefCount] === 0) return this;\x0d\n  if (this._handle && --this[KFSStatWatcherRefCount] === 0)\x0d\n    this._handle.unref();\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction FSWatcher() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._handle = new FSEvent();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onchange = (status\x2C eventType\x2C filename) => {\x0d\n    // TODO(joyeecheung): we may check self._handle.initialized here\x0d\n    // and return if that is false. This allows us to avoid firing the event\x0d\n    // after the handle is closed\x2C and to fire both UV_RENAME and UV_CHANGE\x0d\n    // if they are set by libuv at the same time.\x0d\n    if (status < 0) {\x0d\n      if (this._handle !== null) {\x0d\n        // We don't use this.close() here to avoid firing the close event.\x0d\n        this._handle.close();\x0d\n        this._handle = null;  // Make the handle garbage collectable.\x0d\n      }\x0d\n      const error = new UVException({\x0d\n        errno: status\x2C\x0d\n        syscall: 'watch'\x2C\x0d\n        path: filename\x2C\x0d\n      });\x0d\n      error.filename = filename;\x0d\n      this.emit('error'\x2C error);\x0d\n    } else {\x0d\n      this.emit('change'\x2C eventType\x2C filename);\x0d\n    }\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(FSWatcher.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(FSWatcher\x2C EventEmitter);\x0d\n\x0d\n// At the moment if filename is undefined\x2C we\x0d\n// 1. Throw an Error if it's the first time Symbol('kFSWatchStart') is called\x0d\n// 2. Return silently if Symbol('kFSWatchStart') has already been called\x0d\n//    on a valid filename and the wrap has been initialized\x0d\n// 3. Return silently if the watcher has already been closed\x0d\n// This method is a noop if the watcher has already been started.\x0d\nFSWatcher.prototype[kFSWatchStart] = function(filename\x2C\x0d\n                                              persistent\x2C\x0d\n                                              recursive\x2C\x0d\n                                              encoding) {\x0d\n  if (this._handle === null) {  // closed\x0d\n    return;\x0d\n  }\x0d\n  assert(this._handle instanceof FSEvent\x2C 'handle must be a FSEvent');\x0d\n  if (this._handle.initialized) {  // already started\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  filename = getValidatedPath(filename\x2C 'filename');\x0d\n\x0d\n  const err = this._handle.start(toNamespacedPath(filename)\x2C\x0d\n                                 persistent\x2C\x0d\n                                 recursive\x2C\x0d\n                                 encoding);\x0d\n  if (err) {\x0d\n    const error = new UVException({\x0d\n      errno: err\x2C\x0d\n      syscall: 'watch'\x2C\x0d\n      path: filename\x2C\x0d\n      message: err === UV_ENOSPC ?\x0d\n        'System limit for number of file watchers reached' : ''\x2C\x0d\n    });\x0d\n    error.filename = filename;\x0d\n    throw error;\x0d\n  }\x0d\n};\x0d\n\x0d\n// To maximize backward-compatibility for the end user\x2C\x0d\n// a no-op stub method has been added instead of\x0d\n// totally removing FSWatcher.prototype.start.\x0d\n// This should not be documented.\x0d\nFSWatcher.prototype.start = () => {};\x0d\n\x0d\n// This method is a noop if the watcher has not been started or\x0d\n// has already been closed.\x0d\nFSWatcher.prototype.close = function() {\x0d\n  if (this._handle === null) {  // closed\x0d\n    return;\x0d\n  }\x0d\n  assert(this._handle instanceof FSEvent\x2C 'handle must be a FSEvent');\x0d\n  if (!this._handle.initialized) {  // not started\x0d\n    return;\x0d\n  }\x0d\n  this._handle.close();\x0d\n  this._handle = null;  // Make the handle garbage collectable.\x0d\n  process.nextTick(emitCloseNT\x2C this);\x0d\n};\x0d\n\x0d\nFSWatcher.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n  return this;\x0d\n};\x0d\n\x0d\nFSWatcher.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(FSEvent.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x2C\x0d\n});\x0d\n\x0d\nlet kResistStopPropagation;\x0d\n\x0d\nasync function* watch(filename\x2C options = kEmptyObject) {\x0d\n  const path = toNamespacedPath(getValidatedPath(filename));\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    persistent = true\x2C\x0d\n    recursive = false\x2C\x0d\n    encoding = 'utf8'\x2C\x0d\n    signal\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(persistent\x2C 'options.persistent');\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n\x0d\n  if (encoding && !isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n\x0d\n  const handle = new FSEvent();\x0d\n  let { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n  const oncancel = () => {\x0d\n    handle.close();\x0d\n    reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  };\x0d\n\x0d\n  try {\x0d\n    if (signal) {\x0d\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n      signal.addEventListener('abort'\x2C oncancel\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n    }\x0d\n    handle.onchange = (status\x2C eventType\x2C filename) => {\x0d\n      if (status < 0) {\x0d\n        const error = new UVException({\x0d\n          errno: status\x2C\x0d\n          syscall: 'watch'\x2C\x0d\n          path: filename\x2C\x0d\n        });\x0d\n        error.filename = filename;\x0d\n        handle.close();\x0d\n        reject(error);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      resolve({ eventType\x2C filename });\x0d\n    };\x0d\n\x0d\n    const err = handle.start(path\x2C persistent\x2C recursive\x2C encoding);\x0d\n    if (err) {\x0d\n      const error = new UVException({\x0d\n        errno: err\x2C\x0d\n        syscall: 'watch'\x2C\x0d\n        path: filename\x2C\x0d\n        message: err === UV_ENOSPC ?\x0d\n          'System limit for number of file watchers reached' : ''\x2C\x0d\n      });\x0d\n      error.filename = filename;\x0d\n      handle.close();\x0d\n      throw error;\x0d\n    }\x0d\n\x0d\n    while (!signal?.aborted) {\x0d\n      yield await promise;\x0d\n      ({ promise\x2C resolve\x2C reject } = createDeferredPromise());\x0d\n    }\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  } finally {\x0d\n    handle.close();\x0d\n    signal?.removeEventListener('abort'\x2C oncancel);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FSWatcher\x2C\x0d\n  StatWatcher\x2C\x0d\n  kFSWatchStart\x2C\x0d\n  kFSStatWatcherStart\x2C\x0d\n  kFSStatWatcherAddOrCleanRef\x2C\x0d\n  watch\x2C\x0d\n};\x0d\n
code-source-info,0x2773cca18a4,207,0,11649,C0O0C4O11649,,
code-creation,JS,10,293880,0x2773cca2554,751, node:internal/fs/watchers:1:1,0x2773cca1818,~
code-source-info,0x2773cca
code-creation,Eval,10,294291,0x2773cca49ac,5, node:internal/fs/recursive_watch:1:1,0x2773cca4580,~
script-source,208,node:internal/fs/recursive_watch,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  SafePromiseAllReturnVoid\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { EventEmitter } = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst { kFSWatchStart\x2C StatWatcher } = require('internal/fs/watchers');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst { validateBoolean\x2C validateAbortSignal } = require('internal/validators');\x0d\nconst {\x0d\n  basename: pathBasename\x2C\x0d\n  join: pathJoin\x2C\x0d\n  relative: pathRelative\x2C\x0d\n  resolve: pathResolve\x2C\x0d\n} = require('path');\x0d\n\x0d\nlet internalSync;\x0d\nlet internalPromises;\x0d\n\x0d\nfunction lazyLoadFsPromises() {\x0d\n  internalPromises ??= require('fs/promises');\x0d\n  return internalPromises;\x0d\n}\x0d\n\x0d\nfunction lazyLoadFsSync() {\x0d\n  internalSync ??= require('fs');\x0d\n  return internalSync;\x0d\n}\x0d\nlet kResistStopPropagation;\x0d\n\x0d\nasync function traverse(dir\x2C files = new SafeMap()\x2C symbolicLinks = new SafeSet()) {\x0d\n  const { opendir } = lazyLoadFsPromises();\x0d\n\x0d\n  const filenames = await opendir(dir);\x0d\n  const subdirectories = [];\x0d\n\x0d\n  for await (const file of filenames) {\x0d\n    const f = pathJoin(dir\x2C file.name);\x0d\n\x0d\n    files.set(f\x2C file);\x0d\n\x0d\n    // Do not follow symbolic links\x0d\n    if (file.isSymbolicLink()) {\x0d\n      symbolicLinks.add(f);\x0d\n    } else if (file.isDirectory()) {\x0d\n      ArrayPrototypePush(subdirectories\x2C traverse(f\x2C files));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  await SafePromiseAllReturnVoid(subdirectories);\x0d\n\x0d\n  return files;\x0d\n}\x0d\n\x0d\nclass FSWatcher extends EventEmitter {\x0d\n  #options = null;\x0d\n  #closed = false;\x0d\n  #files = new SafeMap();\x0d\n  #symbolicFiles = new SafeSet();\x0d\n  #rootPath = pathResolve();\x0d\n  #watchingFile = false;\x0d\n\x0d\n  constructor(options = kEmptyObject) {\x0d\n    super();\x0d\n\x0d\n    assert(typeof options === 'object');\x0d\n\x0d\n    const { persistent\x2C recursive\x2C signal\x2C encoding } = options;\x0d\n\x0d\n    // TODO(anonrig): Add non-recursive support to non-native-watcher for IBMi & AIX support.\x0d\n    if (recursive != null) {\x0d\n      validateBoolean(recursive\x2C 'options.recursive');\x0d\n    }\x0d\n\x0d\n    if (persistent != null) {\x0d\n      validateBoolean(persistent\x2C 'options.persistent');\x0d\n    }\x0d\n\x0d\n    if (signal != null) {\x0d\n      validateAbortSignal(signal\x2C 'options.signal');\x0d\n    }\x0d\n\x0d\n    if (encoding != null) {\x0d\n      // This is required since on macOS and Windows it throws ERR_INVALID_ARG_VALUE\x0d\n      if (typeof encoding !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'options.encoding');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this.#options = { persistent\x2C recursive\x2C signal\x2C encoding };\x0d\n  }\x0d\n\x0d\n  close() {\x0d\n    if (this.#closed) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const { unwatchFile } = lazyLoadFsSync();\x0d\n    this.#closed = true;\x0d\n\x0d\n    for (const file of this.#files.keys()) {\x0d\n      unwatchFile(file);\x0d\n    }\x0d\n\x0d\n    this.#files.clear();\x0d\n    this.#symbolicFiles.clear();\x0d\n    this.emit('close');\x0d\n  }\x0d\n\x0d\n  #unwatchFiles(file) {\x0d\n    const { unwatchFile } = lazyLoadFsSync();\x0d\n\x0d\n    this.#symbolicFiles.delete(file);\x0d\n\x0d\n    for (const filename of this.#files.keys()) {\x0d\n      if (StringPrototypeStartsWith(filename\x2C file)) {\x0d\n        unwatchFile(filename);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async #watchFolder(folder) {\x0d\n    const { opendir } = lazyLoadFsPromises();\x0d\n\x0d\n    try {\x0d\n      const files = await opendir(folder);\x0d\n\x0d\n      for await (const file of files) {\x0d\n        if (this.#closed) {\x0d\n          break;\x0d\n        }\x0d\n\x0d\n        const f = pathJoin(folder\x2C file.name);\x0d\n\x0d\n        if (!this.#files.has(f)) {\x0d\n          this.emit('change'\x2C 'rename'\x2C pathRelative(this.#rootPath\x2C f));\x0d\n\x0d\n          if (file.isSymbolicLink()) {\x0d\n            this.#symbolicFiles.add(f);\x0d\n          }\x0d\n\x0d\n          this.#files.set(f\x2C file);\x0d\n          if (file.isFile()) {\x0d\n            this.#watchFile(f);\x0d\n          } else if (file.isDirectory() && !file.isSymbolicLink()) {\x0d\n            await this.#watchFolder(f);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } catch (error) {\x0d\n      this.emit('error'\x2C error);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  #watchFile(file) {\x0d\n    if (this.#closed) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const { watchFile } = lazyLoadFsSync();\x0d\n    const existingStat = this.#files.get(file);\x0d\n\x0d\n    watchFile(file\x2C {\x0d\n      persistent: this.#options.persistent\x2C\x0d\n    }\x2C (currentStats\x2C previousStats) => {\x0d\n      if (existingStat && !existingStat.isDirectory() &&\x0d\n        currentStats.nlink !== 0 && existingStat.mtimeMs === currentStats.mtimeMs) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      this.#files.set(file\x2C currentStats);\x0d\n\x0d\n      if (currentStats.birthtimeMs === 0 && previousStats.birthtimeMs !== 0) {\x0d\n        // The file is now deleted\x0d\n        this.#files.delete(file);\x0d\n        this.emit('change'\x2C 'rename'\x2C pathRelative(this.#rootPath\x2C file));\x0d\n        this.#unwatchFiles(file);\x0d\n      } else if (file === this.#rootPath && this.#watchingFile) {\x0d\n        // This case will only be triggered when watching a file with fs.watch\x0d\n        this.emit('change'\x2C 'change'\x2C pathBasename(file));\x0d\n      } else if (this.#symbolicFiles.has(file)) {\x0d\n        // Stats from watchFile does not return correct value for currentStats.isSymbolicLink()\x0d\n        // Since it is only valid when using fs.lstat(). Therefore\x2C check the existing symbolic files.\x0d\n        this.emit('change'\x2C 'rename'\x2C pathRelative(this.#rootPath\x2C file));\x0d\n      } else if (currentStats.isDirectory()) {\x0d\n        this.#watchFolder(file);\x0d\n      } else {\x0d\n        // Watching a directory will trigger a change event for child files)\x0d\n        this.emit('change'\x2C 'change'\x2C pathRelative(this.#rootPath\x2C file));\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  [kFSWatchStart](filename) {\x0d\n    filename = pathResolve(getValidatedPath(filename));\x0d\n\x0d\n    try {\x0d\n      const file = lazyLoadFsSync().statSync(filename);\x0d\n\x0d\n      this.#rootPath = filename;\x0d\n      this.#closed = false;\x0d\n      this.#watchingFile = file.isFile();\x0d\n\x0d\n      if (file.isDirectory()) {\x0d\n        this.#files.set(filename\x2C file);\x0d\n\x0d\n        PromisePrototypeThen(\x0d\n          traverse(filename\x2C this.#files\x2C this.#symbolicFiles)\x2C\x0d\n          () => {\x0d\n            for (const f of this.#files.keys()) {\x0d\n              this.#watchFile(f);\x0d\n            }\x0d\n          }\x2C\x0d\n        );\x0d\n      } else {\x0d\n        this.#watchFile(filename);\x0d\n      }\x0d\n    } catch (error) {\x0d\n      if (error.code === 'ENOENT') {\x0d\n        error.filename = filename;\x0d\n        throw error;\x0d\n      }\x0d\n    }\x0d\n\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#files.forEach((file) => {\x0d\n      if (file instanceof StatWatcher) {\x0d\n        file.ref();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#files.forEach((file) => {\x0d\n      if (file instanceof StatWatcher) {\x0d\n        file.unref();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  [SymbolAsyncIterator]() {\x0d\n    const { signal } = this.#options;\x0d\n    const promiseExecutor = signal == null ?\x0d\n      (resolve) => {\x0d\n        this.once('change'\x2C (eventType\x2C filename) => {\x0d\n          resolve({ __proto__: null\x2C value: { eventType\x2C filename } });\x0d\n        });\x0d\n      } : (resolve\x2C reject) => {\x0d\n        const onAbort = () => reject(new AbortError(undefined\x2C { cause: signal.reason }));\x0d\n        if (signal.aborted) return onAbort();\x0d\n        kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n        signal.addEventListener('abort'\x2C onAbort\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n        this.once('change'\x2C (eventType\x2C filename) => {\x0d\n          signal.removeEventListener('abort'\x2C onAbort);\x0d\n          resolve({ __proto__: null\x2C value: { eventType\x2C filename } });\x0d\n        });\x0d\n      };\x0d\n    return {\x0d\n      next: () => (this.#closed ?\x0d\n        { __proto__: null\x2C done: true } :\x0d\n        new Promise(promiseExecutor))\x2C\x0d\n      [SymbolAsyncIterator]() { return this; }\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FSWatcher\x2C\x0d\n  kFSWatchStart\x2C\x0d\n};\x0d\n
code-source-info,0x2773cca49ac,208,0,7922,C0O0C4O7922,,
code-creation,JS,10,294592,0x2773cca5424,525, node:internal/fs/recursive_watch:1:1,0x2773cca4920,~
code-source-info,0x2773cca5424,208,0,7922,C0O0C96O28C102O51C108O80C114O92C120O117C126O129C132O141C138O171C144O238C150O238C155O221C160O273C166O273C170O273C172O376C178O376C183O313C189O335C194O342C200O434C206O434C211O413C217O504C223O504C228O473C233O488C239O563C245O563C250O546C256O639C262O639C267O598C273O615C279O783C285O783C290O693C296O716C302O739C308O765C314O807C315O807C317O826C318O826C320O1056C321O1056C433O1714C445O5732C465O6800C500O7866C507O7888C513O7902C519O7881C524O7921,,
code-creation,JS,10,294637,0x2773cca576c,87,FSWatcher node:internal/fs/recursive_watch:71:38,0x2773cca4e30,~
code-source-info,0x2773cca576c,208,1727,7862,C3O1743C12O1762C21O1781C28O1781C41O1816C48O1816C61O1846C68O1846C79O1880C86O7862,,
code-creation,Eval,10,295405,0x2773ccab3ac,5, node:internal/readline/interface:1:1,0x2773cca9f00,~
script-source,209,node:internal/readline/interface,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReverse\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  DateNow\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathCeil\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMaxApply\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolDispose\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SafeStringIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_USE_AFTER_CLOSE\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  getStringWidth\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  charLengthAt\x2C\x0d\n  charLengthLeft\x2C\x0d\n  commonPrefix\x2C\x0d\n  kSubstringSearch\x2C\x0d\n} = require('internal/readline/utils');\x0d\nlet emitKeypressEvents;\x0d\nlet kFirstEventParam;\x0d\nconst {\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n} = require('internal/readline/callbacks');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\n\x0d\nconst kHistorySize = 30;\x0d\nconst kMaxUndoRedoStackSize = 2048;\x0d\nconst kMincrlfDelay = 100;\x0d\n// \\r\\n\x2C \\n\x2C or \\r followed by something other than \\n\x0d\nconst lineEnding = /\\r?\\n|\\r(?!\\n)/g;\x0d\n\x0d\nconst kLineObjectStream = Symbol('line object stream');\x0d\nconst kQuestionCancel = Symbol('kQuestionCancel');\x0d\nconst kQuestion = Symbol('kQuestion');\x0d\n\x0d\n// GNU readline library - keyseq-timeout is 500ms (default)\x0d\nconst ESCAPE_CODE_TIMEOUT = 500;\x0d\n\x0d\n// Max length of the kill ring\x0d\nconst kMaxLengthOfKillRing = 32;\x0d\n\x0d\nconst kAddHistory = Symbol('_addHistory');\x0d\nconst kBeforeEdit = Symbol('_beforeEdit');\x0d\nconst kDecoder = Symbol('_decoder');\x0d\nconst kDeleteLeft = Symbol('_deleteLeft');\x0d\nconst kDeleteLineLeft = Symbol('_deleteLineLeft');\x0d\nconst kDeleteLineRight = Symbol('_deleteLineRight');\x0d\nconst kDeleteRight = Symbol('_deleteRight');\x0d\nconst kDeleteWordLeft = Symbol('_deleteWordLeft');\x0d\nconst kDeleteWordRight = Symbol('_deleteWordRight');\x0d\nconst kGetDisplayPos = Symbol('_getDisplayPos');\x0d\nconst kHistoryNext = Symbol('_historyNext');\x0d\nconst kHistoryPrev = Symbol('_historyPrev');\x0d\nconst kInsertString = Symbol('_insertString');\x0d\nconst kLine = Symbol('_line');\x0d\nconst kLine_buffer = Symbol('_line_buffer');\x0d\nconst kKillRing = Symbol('_killRing');\x0d\nconst kKillRingCursor = Symbol('_killRingCursor');\x0d\nconst kMoveCursor = Symbol('_moveCursor');\x0d\nconst kNormalWrite = Symbol('_normalWrite');\x0d\nconst kOldPrompt = Symbol('_oldPrompt');\x0d\nconst kOnLine = Symbol('_onLine');\x0d\nconst kPreviousKey = Symbol('_previousKey');\x0d\nconst kPrompt = Symbol('_prompt');\x0d\nconst kPushToKillRing = Symbol('_pushToKillRing');\x0d\nconst kPushToUndoStack = Symbol('_pushToUndoStack');\x0d\nconst kQuestionCallback = Symbol('_questionCallback');\x0d\nconst kRedo = Symbol('_redo');\x0d\nconst kRedoStack = Symbol('_redoStack');\x0d\nconst kRefreshLine = Symbol('_refreshLine');\x0d\nconst kSawKeyPress = Symbol('_sawKeyPress');\x0d\nconst kSawReturnAt = Symbol('_sawReturnAt');\x0d\nconst kSetRawMode = Symbol('_setRawMode');\x0d\nconst kTabComplete = Symbol('_tabComplete');\x0d\nconst kTabCompleter = Symbol('_tabCompleter');\x0d\nconst kTtyWrite = Symbol('_ttyWrite');\x0d\nconst kUndo = Symbol('_undo');\x0d\nconst kUndoStack = Symbol('_undoStack');\x0d\nconst kWordLeft = Symbol('_wordLeft');\x0d\nconst kWordRight = Symbol('_wordRight');\x0d\nconst kWriteToOutput = Symbol('_writeToOutput');\x0d\nconst kYank = Symbol('_yank');\x0d\nconst kYanking = Symbol('_yanking');\x0d\nconst kYankPop = Symbol('_yankPop');\x0d\n\x0d\nfunction InterfaceConstructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n  this[kSawReturnAt] = 0;\x0d\n  // TODO(BridgeAR): Document this property. The name is not ideal\x2C so we\x0d\n  // might want to expose an alias and document that instead.\x0d\n  this.isCompletionEnabled = true;\x0d\n  this[kSawKeyPress] = false;\x0d\n  this[kPreviousKey] = null;\x0d\n  this.escapeCodeTimeout = ESCAPE_CODE_TIMEOUT;\x0d\n  this.tabSize = 8;\x0d\n\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  let history;\x0d\n  let historySize;\x0d\n  let removeHistoryDuplicates = false;\x0d\n  let crlfDelay;\x0d\n  let prompt = '> ';\x0d\n  let signal;\x0d\n\x0d\n  if (input?.input) {\x0d\n    // An options object was given\x0d\n    output = input.output;\x0d\n    completer = input.completer;\x0d\n    terminal = input.terminal;\x0d\n    history = input.history;\x0d\n    historySize = input.historySize;\x0d\n    signal = input.signal;\x0d\n    if (input.tabSize !== undefined) {\x0d\n      validateUint32(input.tabSize\x2C 'tabSize'\x2C true);\x0d\n      this.tabSize = input.tabSize;\x0d\n    }\x0d\n    removeHistoryDuplicates = input.removeHistoryDuplicates;\x0d\n    if (input.prompt !== undefined) {\x0d\n      prompt = input.prompt;\x0d\n    }\x0d\n    if (input.escapeCodeTimeout !== undefined) {\x0d\n      if (NumberIsFinite(input.escapeCodeTimeout)) {\x0d\n        this.escapeCodeTimeout = input.escapeCodeTimeout;\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'input.escapeCodeTimeout'\x2C\x0d\n          this.escapeCodeTimeout\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (signal) {\x0d\n      validateAbortSignal(signal\x2C 'options.signal');\x0d\n    }\x0d\n\x0d\n    crlfDelay = input.crlfDelay;\x0d\n    input = input.input;\x0d\n  }\x0d\n\x0d\n  if (completer !== undefined && typeof completer !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('completer'\x2C completer);\x0d\n  }\x0d\n\x0d\n  if (history === undefined) {\x0d\n    history = [];\x0d\n  } else {\x0d\n    validateArray(history\x2C 'history');\x0d\n  }\x0d\n\x0d\n  if (historySize === undefined) {\x0d\n    historySize = kHistorySize;\x0d\n  }\x0d\n\x0d\n  validateNumber(historySize\x2C 'historySize'\x2C 0);\x0d\n\x0d\n  // Backwards compat; check the isTTY prop of the output stream\x0d\n  //  when `terminal` was not specified\x0d\n  if (terminal === undefined && !(output === null || output === undefined)) {\x0d\n    terminal = !!output.isTTY;\x0d\n  }\x0d\n\x0d\n  const self = this;\x0d\n\x0d\n  this.line = '';\x0d\n  this[kSubstringSearch] = null;\x0d\n  this.output = output;\x0d\n  this.input = input;\x0d\n  this[kUndoStack] = [];\x0d\n  this[kRedoStack] = [];\x0d\n  this.history = history;\x0d\n  this.historySize = historySize;\x0d\n\x0d\n  // The kill ring is a global list of blocks of text that were previously\x0d\n  // killed (deleted). If its size exceeds kMaxLengthOfKillRing\x2C the oldest\x0d\n  // element will be removed to make room for the latest deletion. With kill\x0d\n  // ring\x2C users are able to recall (yank) or cycle (yank pop) among previously\x0d\n  // killed texts\x2C quite similar to the behavior of Emacs.\x0d\n  this[kKillRing] = [];\x0d\n  this[kKillRingCursor] = 0;\x0d\n\x0d\n  this.removeHistoryDuplicates = !!removeHistoryDuplicates;\x0d\n  this.crlfDelay = crlfDelay ?\x0d\n    MathMax(kMincrlfDelay\x2C crlfDelay) :\x0d\n    kMincrlfDelay;\x0d\n  this.completer = completer;\x0d\n\x0d\n  this.setPrompt(prompt);\x0d\n\x0d\n  this.terminal = !!terminal;\x0d\n\x0d\n\x0d\n  function onerror(err) {\x0d\n    self.emit('error'\x2C err);\x0d\n  }\x0d\n\x0d\n  function ondata(data) {\x0d\n    self[kNormalWrite](data);\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    if (\x0d\n      typeof self[kLine_buffer] === 'string' &&\x0d\n        self[kLine_buffer].length > 0\x0d\n    ) {\x0d\n      self.emit('line'\x2C self[kLine_buffer]);\x0d\n    }\x0d\n    self.close();\x0d\n  }\x0d\n\x0d\n  function ontermend() {\x0d\n    if (typeof self.line === 'string' && self.line.length > 0) {\x0d\n      self.emit('line'\x2C self.line);\x0d\n    }\x0d\n    self.close();\x0d\n  }\x0d\n\x0d\n  function onkeypress(s\x2C key) {\x0d\n    self[kTtyWrite](s\x2C key);\x0d\n    if (key && key.sequence) {\x0d\n      // If the key.sequence is half of a surrogate pair\x0d\n      // (>= 0xd800 and <= 0xdfff)\x2C refresh the line so\x0d\n      // the character is displayed appropriately.\x0d\n      const ch = StringPrototypeCodePointAt(key.sequence\x2C 0);\x0d\n      if (ch >= 0xd800 && ch <= 0xdfff) self[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onresize() {\x0d\n    self[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  this[kLineObjectStream] = undefined;\x0d\n\x0d\n  input.on('error'\x2C onerror);\x0d\n\x0d\n  if (!this.terminal) {\x0d\n    function onSelfCloseWithoutTerminal() {\x0d\n      input.removeListener('data'\x2C ondata);\x0d\n      input.removeListener('error'\x2C onerror);\x0d\n      input.removeListener('end'\x2C onend);\x0d\n    }\x0d\n\x0d\n    input.on('data'\x2C ondata);\x0d\n    input.on('end'\x2C onend);\x0d\n    self.once('close'\x2C onSelfCloseWithoutTerminal);\x0d\n    this[kDecoder] = new StringDecoder('utf8');\x0d\n  } else {\x0d\n    function onSelfCloseWithTerminal() {\x0d\n      input.removeListener('keypress'\x2C onkeypress);\x0d\n      input.removeListener('error'\x2C onerror);\x0d\n      input.removeListener('end'\x2C ontermend);\x0d\n      if (output !== null && output !== undefined) {\x0d\n        output.removeListener('resize'\x2C onresize);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    emitKeypressEvents ??= require('internal/readline/emitKeypressEvents');\x0d\n    emitKeypressEvents(input\x2C this);\x0d\n\x0d\n    // `input` usually refers to stdin\x0d\n    input.on('keypress'\x2C onkeypress);\x0d\n    input.on('end'\x2C ontermend);\x0d\n\x0d\n    this[kSetRawMode](true);\x0d\n    this.terminal = true;\x0d\n\x0d\n    // Cursor position on the line.\x0d\n    this.cursor = 0;\x0d\n\x0d\n    this.historyIndex = -1;\x0d\n\x0d\n    if (output !== null && output !== undefined)\x0d\n      output.on('resize'\x2C onresize);\x0d\n\x0d\n    self.once('close'\x2C onSelfCloseWithTerminal);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    const onAborted = () => self.close();\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAborted);\x0d\n    } else {\x0d\n      const disposable = EventEmitter.addAbortListener(signal\x2C onAborted);\x0d\n      self.once('close'\x2C disposable[SymbolDispose]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Current line\x0d\n  this.line = '';\x0d\n\x0d\n  input.resume();\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(InterfaceConstructor.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(InterfaceConstructor\x2C EventEmitter);\x0d\n\x0d\nclass Interface extends InterfaceConstructor {\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n    super(input\x2C output\x2C completer\x2C terminal);\x0d\n  }\x0d\n  get columns() {\x0d\n    if (this.output && this.output.columns) return this.output.columns;\x0d\n    return Infinity;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Sets the prompt written to the output.\x0d\n   * @param {string} prompt\x0d\n   * @returns {void}\x0d\n   */\x0d\n  setPrompt(prompt) {\x0d\n    this[kPrompt] = prompt;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the current prompt used by `rl.prompt()`.\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getPrompt() {\x0d\n    return this[kPrompt];\x0d\n  }\x0d\n\x0d\n  [kSetRawMode](mode) {\x0d\n    const wasInRawMode = this.input.isRaw;\x0d\n\x0d\n    if (typeof this.input.setRawMode === 'function') {\x0d\n      this.input.setRawMode(mode);\x0d\n    }\x0d\n\x0d\n    return wasInRawMode;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Writes the configured `prompt` to a new line in `output`.\x0d\n   * @param {boolean} [preserveCursor]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  prompt(preserveCursor) {\x0d\n    if (this.paused) this.resume();\x0d\n    if (this.terminal && process.env.TERM !== 'dumb') {\x0d\n      if (!preserveCursor) this.cursor = 0;\x0d\n      this[kRefreshLine]();\x0d\n    } else {\x0d\n      this[kWriteToOutput](this[kPrompt]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kQuestion](query\x2C cb) {\x0d\n    if (this.closed) {\x0d\n      throw new ERR_USE_AFTER_CLOSE('readline');\x0d\n    }\x0d\n    if (this[kQuestionCallback]) {\x0d\n      this.prompt();\x0d\n    } else {\x0d\n      this[kOldPrompt] = this[kPrompt];\x0d\n      this.setPrompt(query);\x0d\n      this[kQuestionCallback] = cb;\x0d\n      this.prompt();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kOnLine](line) {\x0d\n    if (this[kQuestionCallback]) {\x0d\n      const cb = this[kQuestionCallback];\x0d\n      this[kQuestionCallback] = null;\x0d\n      this.setPrompt(this[kOldPrompt]);\x0d\n      cb(line);\x0d\n    } else {\x0d\n      this.emit('line'\x2C line);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kBeforeEdit](oldText\x2C oldCursor) {\x0d\n    this[kPushToUndoStack](oldText\x2C oldCursor);\x0d\n  }\x0d\n\x0d\n  [kQuestionCancel]() {\x0d\n    if (this[kQuestionCallback]) {\x0d\n      this[kQuestionCallback] = null;\x0d\n      this.setPrompt(this[kOldPrompt]);\x0d\n      this.clearLine();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kWriteToOutput](stringToWrite) {\x0d\n    validateString(stringToWrite\x2C 'stringToWrite');\x0d\n\x0d\n    if (this.output !== null && this.output !== undefined) {\x0d\n      this.output.write(stringToWrite);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kAddHistory]() {\x0d\n    if (this.line.length === 0) return '';\x0d\n\x0d\n    // If the history is disabled then return the line\x0d\n    if (this.historySize === 0) return this.line;\x0d\n\x0d\n    // If the trimmed line is empty then return the line\x0d\n    if (StringPrototypeTrim(this.line).length === 0) return this.line;\x0d\n\x0d\n    if (this.history.length === 0 || this.history[0] !== this.line) {\x0d\n      if (this.removeHistoryDuplicates) {\x0d\n        // Remove older history line if identical to new one\x0d\n        const dupIndex = ArrayPrototypeIndexOf(this.history\x2C this.line);\x0d\n        if (dupIndex !== -1) ArrayPrototypeSplice(this.history\x2C dupIndex\x2C 1);\x0d\n      }\x0d\n\x0d\n      ArrayPrototypeUnshift(this.history\x2C this.line);\x0d\n\x0d\n      // Only store so many\x0d\n      if (this.history.length > this.historySize)\x0d\n        ArrayPrototypePop(this.history);\x0d\n    }\x0d\n\x0d\n    this.historyIndex = -1;\x0d\n\x0d\n    // The listener could change the history object\x2C possibly\x0d\n    // to remove the last added entry if it is sensitive and should\x0d\n    // not be persisted in the history\x2C like a password\x0d\n    const line = this.history[0];\x0d\n\x0d\n    // Emit history event to notify listeners of update\x0d\n    this.emit('history'\x2C this.history);\x0d\n\x0d\n    return line;\x0d\n  }\x0d\n\x0d\n  [kRefreshLine]() {\x0d\n    // line length\x0d\n    const line = this[kPrompt] + this.line;\x0d\n    const dispPos = this[kGetDisplayPos](line);\x0d\n    const lineCols = dispPos.cols;\x0d\n    const lineRows = dispPos.rows;\x0d\n\x0d\n    // cursor position\x0d\n    const cursorPos = this.getCursorPos();\x0d\n\x0d\n    // First move to the bottom of the current line\x2C based on cursor pos\x0d\n    const prevRows = this.prevRows || 0;\x0d\n    if (prevRows > 0) {\x0d\n      moveCursor(this.output\x2C 0\x2C -prevRows);\x0d\n    }\x0d\n\x0d\n    // Cursor to left edge.\x0d\n    cursorTo(this.output\x2C 0);\x0d\n    // erase data\x0d\n    clearScreenDown(this.output);\x0d\n\x0d\n    // Write the prompt and the current buffer content.\x0d\n    this[kWriteToOutput](line);\x0d\n\x0d\n    // Force terminal to allocate a new line\x0d\n    if (lineCols === 0) {\x0d\n      this[kWriteToOutput](' ');\x0d\n    }\x0d\n\x0d\n    // Move cursor to original position.\x0d\n    cursorTo(this.output\x2C cursorPos.cols);\x0d\n\x0d\n    const diff = lineRows - cursorPos.rows;\x0d\n    if (diff > 0) {\x0d\n      moveCursor(this.output\x2C 0\x2C -diff);\x0d\n    }\x0d\n\x0d\n    this.prevRows = cursorPos.rows;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Closes the `readline.Interface` instance.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  close() {\x0d\n    if (this.closed) return;\x0d\n    this.pause();\x0d\n    if (this.terminal) {\x0d\n      this[kSetRawMode](false);\x0d\n    }\x0d\n    this.closed = true;\x0d\n    this.emit('close');\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Pauses the `input` stream.\x0d\n   * @returns {void | Interface}\x0d\n   */\x0d\n  pause() {\x0d\n    if (this.paused) return;\x0d\n    this.input.pause();\x0d\n    this.paused = true;\x0d\n    this.emit('pause');\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resumes the `input` stream if paused.\x0d\n   * @returns {void | Interface}\x0d\n   */\x0d\n  resume() {\x0d\n    if (!this.paused) return;\x0d\n    this.input.resume();\x0d\n    this.paused = false;\x0d\n    this.emit('resume');\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Writes either `data` or a `key` sequence identified by\x0d\n   * `key` to the `output`.\x0d\n   * @param {string} d\x0d\n   * @param {{\x0d\n   *   ctrl?: boolean;\x0d\n   *   meta?: boolean;\x0d\n   *   shift?: boolean;\x0d\n   *   name?: string;\x0d\n   *   }} [key]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  write(d\x2C key) {\x0d\n    if (this.paused) this.resume();\x0d\n    if (this.terminal) {\x0d\n      this[kTtyWrite](d\x2C key);\x0d\n    } else {\x0d\n      this[kNormalWrite](d);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kNormalWrite](b) {\x0d\n    if (b === undefined) {\x0d\n      return;\x0d\n    }\x0d\n    let string = this[kDecoder].write(b);\x0d\n    if (\x0d\n      this[kSawReturnAt] &&\x0d\n      DateNow() - this[kSawReturnAt] <= this.crlfDelay\x0d\n    ) {\x0d\n      if (StringPrototypeCodePointAt(string) === 10) string = StringPrototypeSlice(string\x2C 1);\x0d\n      this[kSawReturnAt] = 0;\x0d\n    }\x0d\n\x0d\n    // Run test() on the new string chunk\x2C not on the entire line buffer.\x0d\n    let newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\x0d\n    if (newPartContainsEnding !== null) {\x0d\n      if (this[kLine_buffer]) {\x0d\n        string = this[kLine_buffer] + string;\x0d\n        this[kLine_buffer] = null;\x0d\n        lineEnding.lastIndex = 0; // Start the search from the beginning of the string.\x0d\n        newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\x0d\n      }\x0d\n      this[kSawReturnAt] = StringPrototypeEndsWith(string\x2C '\\r') ?\x0d\n        DateNow() :\x0d\n        0;\x0d\n\x0d\n      const indexes = [0\x2C newPartContainsEnding.index\x2C lineEnding.lastIndex];\x0d\n      let nextMatch;\x0d\n      while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C string)) !== null) {\x0d\n        ArrayPrototypePush(indexes\x2C nextMatch.index\x2C lineEnding.lastIndex);\x0d\n      }\x0d\n      const lastIndex = indexes.length - 1;\x0d\n      // Either '' or (conceivably) the unfinished portion of the next line\x0d\n      this[kLine_buffer] = StringPrototypeSlice(string\x2C indexes[lastIndex]);\x0d\n      for (let i = 1; i < lastIndex; i += 2) {\x0d\n        this[kOnLine](StringPrototypeSlice(string\x2C indexes[i - 1]\x2C indexes[i]));\x0d\n      }\x0d\n    } else if (string) {\x0d\n      // No newlines this time\x2C save what we have for next time\x0d\n      if (this[kLine_buffer]) {\x0d\n        this[kLine_buffer] += string;\x0d\n      } else {\x0d\n        this[kLine_buffer] = string;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kInsertString](c) {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    if (this.cursor < this.line.length) {\x0d\n      const beg = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const end = StringPrototypeSlice(\x0d\n        this.line\x2C\x0d\n        this.cursor\x2C\x0d\n        this.line.length\x2C\x0d\n      );\x0d\n      this.line = beg + c + end;\x0d\n      this.cursor += c.length;\x0d\n      this[kRefreshLine]();\x0d\n    } else {\x0d\n      const oldPos = this.getCursorPos();\x0d\n      this.line += c;\x0d\n      this.cursor += c.length;\x0d\n      const newPos = this.getCursorPos();\x0d\n\x0d\n      if (oldPos.rows < newPos.rows) {\x0d\n        this[kRefreshLine]();\x0d\n      } else {\x0d\n        this[kWriteToOutput](c);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async [kTabComplete](lastKeypressWasTab) {\x0d\n    this.pause();\x0d\n    const string = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    let value;\x0d\n    try {\x0d\n      value = await this.completer(string);\x0d\n    } catch (err) {\x0d\n      this[kWriteToOutput](`Tab completion error: ${inspect(err)}`);\x0d\n      return;\x0d\n    } finally {\x0d\n      this.resume();\x0d\n    }\x0d\n    this[kTabCompleter](lastKeypressWasTab\x2C value);\x0d\n  }\x0d\n\x0d\n  [kTabCompleter](lastKeypressWasTab\x2C { 0: completions\x2C 1: completeOn }) {\x0d\n    // Result and the text that was completed.\x0d\n\x0d\n    if (!completions || completions.length === 0) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // If there is a common prefix to all matches\x2C then apply that portion.\x0d\n    const prefix = commonPrefix(\x0d\n      ArrayPrototypeFilter(completions\x2C (e) => e !== '')\x2C\x0d\n    );\x0d\n    if (StringPrototypeStartsWith(prefix\x2C completeOn) &&\x0d\n        prefix.length > completeOn.length) {\x0d\n      this[kInsertString](StringPrototypeSlice(prefix\x2C completeOn.length));\x0d\n      return;\x0d\n    } else if (!StringPrototypeStartsWith(completeOn\x2C prefix)) {\x0d\n      this.line = StringPrototypeSlice(this.line\x2C\x0d\n                                       0\x2C\x0d\n                                       this.cursor - completeOn.length) +\x0d\n                  prefix +\x0d\n                  StringPrototypeSlice(this.line\x2C\x0d\n                                       this.cursor\x2C\x0d\n                                       this.line.length);\x0d\n      this.cursor = this.cursor - completeOn.length + prefix.length;\x0d\n      this._refreshLine();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!lastKeypressWasTab) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n\x0d\n    // Apply/show completions.\x0d\n    const completionsWidth = ArrayPrototypeMap(completions\x2C (e) =>\x0d\n      getStringWidth(e)\x2C\x0d\n    );\x0d\n    const width = MathMaxApply(completionsWidth) + 2; // 2 space padding\x0d\n    let maxColumns = MathFloor(this.columns / width) || 1;\x0d\n    if (maxColumns === Infinity) {\x0d\n      maxColumns = 1;\x0d\n    }\x0d\n    let output = '\\r\\n';\x0d\n    let lineIndex = 0;\x0d\n    let whitespace = 0;\x0d\n    for (let i = 0; i < completions.length; i++) {\x0d\n      const completion = completions[i];\x0d\n      if (completion === '' || lineIndex === maxColumns) {\x0d\n        output += '\\r\\n';\x0d\n        lineIndex = 0;\x0d\n        whitespace = 0;\x0d\n      } else {\x0d\n        output += StringPrototypeRepeat(' '\x2C whitespace);\x0d\n      }\x0d\n      if (completion !== '') {\x0d\n        output += completion;\x0d\n        whitespace = width - completionsWidth[i];\x0d\n        lineIndex++;\x0d\n      } else {\x0d\n        output += '\\r\\n';\x0d\n      }\x0d\n    }\x0d\n    if (lineIndex !== 0) {\x0d\n      output += '\\r\\n\\r\\n';\x0d\n    }\x0d\n    this[kWriteToOutput](output);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kWordLeft]() {\x0d\n    if (this.cursor > 0) {\x0d\n      // Reverse the string and match a word near beginning\x0d\n      // to avoid quadratic time complexity\x0d\n      const leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const reversed = ArrayPrototypeJoin(\x0d\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\x0d\n        ''\x2C\x0d\n      );\x0d\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\x0d\n      this[kMoveCursor](-match[0].length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kWordRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      const match = RegExpPrototypeExec(/^(?:\\s+|[^\\w\\s]+|\\w+)\\s*/\x2C trailing);\x0d\n      this[kMoveCursor](match[0].length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteLeft]() {\x0d\n    if (this.cursor > 0 && this.line.length > 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // The number of UTF-16 units comprising the character to the left\x0d\n      const charSize = charLengthLeft(this.line\x2C this.cursor);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - charSize) +\x0d\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\x0d\n\x0d\n      this.cursor -= charSize;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // The number of UTF-16 units comprising the character to the left\x0d\n      const charSize = charLengthAt(this.line\x2C this.cursor);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\x0d\n        StringPrototypeSlice(\x0d\n          this.line\x2C\x0d\n          this.cursor + charSize\x2C\x0d\n          this.line.length\x2C\x0d\n        );\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteWordLeft]() {\x0d\n    if (this.cursor > 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // Reverse the string and match a word near beginning\x0d\n      // to avoid quadratic time complexity\x0d\n      let leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const reversed = ArrayPrototypeJoin(\x0d\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\x0d\n        ''\x2C\x0d\n      );\x0d\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\x0d\n      leading = StringPrototypeSlice(\x0d\n        leading\x2C\x0d\n        0\x2C\x0d\n        leading.length - match[0].length\x2C\x0d\n      );\x0d\n      this.line =\x0d\n        leading +\x0d\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\x0d\n      this.cursor = leading.length;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteWordRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      const match = RegExpPrototypeExec(/^(?:\\s+|\\W+|\\w+)\\s*/\x2C trailing);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\x0d\n        StringPrototypeSlice(trailing\x2C match[0].length);\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteLineLeft]() {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    const del = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    this.line = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n    this.cursor = 0;\x0d\n    this[kPushToKillRing](del);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kDeleteLineRight]() {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    const del = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n    this.line = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    this[kPushToKillRing](del);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kPushToKillRing](del) {\x0d\n    if (!del || del === this[kKillRing][0]) return;\x0d\n    ArrayPrototypeUnshift(this[kKillRing]\x2C del);\x0d\n    this[kKillRingCursor] = 0;\x0d\n    while (this[kKillRing].length > kMaxLengthOfKillRing)\x0d\n      ArrayPrototypePop(this[kKillRing]);\x0d\n  }\x0d\n\x0d\n  [kYank]() {\x0d\n    if (this[kKillRing].length > 0) {\x0d\n      this[kYanking] = true;\x0d\n      this[kInsertString](this[kKillRing][this[kKillRingCursor]]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kYankPop]() {\x0d\n    if (!this[kYanking]) {\x0d\n      return;\x0d\n    }\x0d\n    if (this[kKillRing].length > 1) {\x0d\n      const lastYank = this[kKillRing][this[kKillRingCursor]];\x0d\n      this[kKillRingCursor]++;\x0d\n      if (this[kKillRingCursor] >= this[kKillRing].length) {\x0d\n        this[kKillRingCursor] = 0;\x0d\n      }\x0d\n      const currentYank = this[kKillRing][this[kKillRingCursor]];\x0d\n      const head =\x0d\n            StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - lastYank.length);\x0d\n      const tail =\x0d\n            StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      this.line = head + currentYank + tail;\x0d\n      this.cursor = head.length + currentYank.length;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  clearLine() {\x0d\n    this[kMoveCursor](+Infinity);\x0d\n    this[kWriteToOutput]('\\r\\n');\x0d\n    this.line = '';\x0d\n    this.cursor = 0;\x0d\n    this.prevRows = 0;\x0d\n  }\x0d\n\x0d\n  [kLine]() {\x0d\n    const line = this[kAddHistory]();\x0d\n    this[kUndoStack] = [];\x0d\n    this[kRedoStack] = [];\x0d\n    this.clearLine();\x0d\n    this[kOnLine](line);\x0d\n  }\x0d\n\x0d\n  [kPushToUndoStack](text\x2C cursor) {\x0d\n    if (ArrayPrototypePush(this[kUndoStack]\x2C { text\x2C cursor }) >\x0d\n        kMaxUndoRedoStackSize) {\x0d\n      ArrayPrototypeShift(this[kUndoStack]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kUndo]() {\x0d\n    if (this[kUndoStack].length <= 0) return;\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      this[kRedoStack]\x2C\x0d\n      { text: this.line\x2C cursor: this.cursor }\x2C\x0d\n    );\x0d\n\x0d\n    const entry = ArrayPrototypePop(this[kUndoStack]);\x0d\n    this.line = entry.text;\x0d\n    this.cursor = entry.cursor;\x0d\n\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kRedo]() {\x0d\n    if (this[kRedoStack].length <= 0) return;\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      this[kUndoStack]\x2C\x0d\n      { text: this.line\x2C cursor: this.cursor }\x2C\x0d\n    );\x0d\n\x0d\n    const entry = ArrayPrototypePop(this[kRedoStack]);\x0d\n    this.line = entry.text;\x0d\n    this.cursor = entry.cursor;\x0d\n\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  // TODO(BridgeAR): Add underscores to the search part and a red background in\x0d\n  // case no match is found. This should only be the visual part and not the\x0d\n  // actual line content!\x0d\n  // TODO(BridgeAR): In case the substring based search is active and the end is\x0d\n  // reached\x2C show a comment how to search the history as before. E.g.\x2C using\x0d\n  // <ctrl> + N. Only show this after two/three UPs or DOWNs\x2C not on the first\x0d\n  // one.\x0d\n  [kHistoryNext]() {\x0d\n    if (this.historyIndex >= 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const search = this[kSubstringSearch] || '';\x0d\n      let index = this.historyIndex - 1;\x0d\n      while (\x0d\n        index >= 0 &&\x0d\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\x0d\n          this.line === this.history[index])\x0d\n      ) {\x0d\n        index--;\x0d\n      }\x0d\n      if (index === -1) {\x0d\n        this.line = search;\x0d\n      } else {\x0d\n        this.line = this.history[index];\x0d\n      }\x0d\n      this.historyIndex = index;\x0d\n      this.cursor = this.line.length; // Set cursor to end of line.\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kHistoryPrev]() {\x0d\n    if (this.historyIndex < this.history.length && this.history.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const search = this[kSubstringSearch] || '';\x0d\n      let index = this.historyIndex + 1;\x0d\n      while (\x0d\n        index < this.history.length &&\x0d\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\x0d\n          this.line === this.history[index])\x0d\n      ) {\x0d\n        index++;\x0d\n      }\x0d\n      if (index === this.history.length) {\x0d\n        this.line = search;\x0d\n      } else {\x0d\n        this.line = this.history[index];\x0d\n      }\x0d\n      this.historyIndex = index;\x0d\n      this.cursor = this.line.length; // Set cursor to end of line.\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Returns the last character's display position of the given string\x0d\n  [kGetDisplayPos](str) {\x0d\n    let offset = 0;\x0d\n    const col = this.columns;\x0d\n    let rows = 0;\x0d\n    str = stripVTControlCharacters(str);\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      if (char === '\\n') {\x0d\n        // Rows must be incremented by 1 even if offset = 0 or col = +Infinity.\x0d\n        rows += MathCeil(offset / col) || 1;\x0d\n        offset = 0;\x0d\n        continue;\x0d\n      }\x0d\n      // Tabs must be aligned by an offset of the tab size.\x0d\n      if (char === '\\t') {\x0d\n        offset += this.tabSize - (offset % this.tabSize);\x0d\n        continue;\x0d\n      }\x0d\n      const width = getStringWidth(char\x2C false /* stripVTControlCharacters */);\x0d\n      if (width === 0 || width === 1) {\x0d\n        offset += width;\x0d\n      } else {\x0d\n        // width === 2\x0d\n        if ((offset + 1) % col === 0) {\x0d\n          offset++;\x0d\n        }\x0d\n        offset += 2;\x0d\n      }\x0d\n    }\x0d\n    const cols = offset % col;\x0d\n    rows += (offset - cols) / col;\x0d\n    return { cols\x2C rows };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the real position of the cursor in relation\x0d\n   * to the input prompt + string.\x0d\n   * @returns {{\x0d\n   *   rows: number;\x0d\n   *   cols: number;\x0d\n   *   }}\x0d\n   */\x0d\n  getCursorPos() {\x0d\n    const strBeforeCursor =\x0d\n      this[kPrompt] + StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    return this[kGetDisplayPos](strBeforeCursor);\x0d\n  }\x0d\n\x0d\n  // This function moves cursor dx places to the right\x0d\n  // (-dx for left) and refreshes the line if it is needed.\x0d\n  [kMoveCursor](dx) {\x0d\n    if (dx === 0) {\x0d\n      return;\x0d\n    }\x0d\n    const oldPos = this.getCursorPos();\x0d\n    this.cursor += dx;\x0d\n\x0d\n    // Bounds check\x0d\n    if (this.cursor < 0) {\x0d\n      this.cursor = 0;\x0d\n    } else if (this.cursor > this.line.length) {\x0d\n      this.cursor = this.line.length;\x0d\n    }\x0d\n\x0d\n    const newPos = this.getCursorPos();\x0d\n\x0d\n    // Check if cursor stayed on the line.\x0d\n    if (oldPos.rows === newPos.rows) {\x0d\n      const diffWidth = newPos.cols - oldPos.cols;\x0d\n      moveCursor(this.output\x2C diffWidth\x2C 0);\x0d\n    } else {\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Handle a write from the tty\x0d\n  [kTtyWrite](s\x2C key) {\x0d\n    const previousKey = this[kPreviousKey];\x0d\n    key = key || kEmptyObject;\x0d\n    this[kPreviousKey] = key;\x0d\n\x0d\n    if (!key.meta || key.name !== 'y') {\x0d\n      // Reset yanking state unless we are doing yank pop.\x0d\n      this[kYanking] = false;\x0d\n    }\x0d\n\x0d\n    // Activate or deactivate substring search.\x0d\n    if (\x0d\n      (key.name === 'up' || key.name === 'down') &&\x0d\n      !key.ctrl &&\x0d\n      !key.meta &&\x0d\n      !key.shift\x0d\n    ) {\x0d\n      if (this[kSubstringSearch] === null) {\x0d\n        this[kSubstringSearch] = StringPrototypeSlice(\x0d\n          this.line\x2C\x0d\n          0\x2C\x0d\n          this.cursor\x2C\x0d\n        );\x0d\n      }\x0d\n    } else if (this[kSubstringSearch] !== null) {\x0d\n      this[kSubstringSearch] = null;\x0d\n      // Reset the index in case there's no match.\x0d\n      if (this.history.length === this.historyIndex) {\x0d\n        this.historyIndex = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Undo & Redo\x0d\n    if (typeof key.sequence === 'string') {\x0d\n      switch (StringPrototypeCodePointAt(key.sequence\x2C 0)) {\x0d\n        case 0x1f:\x0d\n          this[kUndo]();\x0d\n          return;\x0d\n        case 0x1e:\x0d\n          this[kRedo]();\x0d\n          return;\x0d\n        default:\x0d\n          break;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Ignore escape key\x2C fixes\x0d\n    // https://github.com/nodejs/node-v0.x-archive/issues/2876.\x0d\n    if (key.name === 'escape') return;\x0d\n\x0d\n    if (key.ctrl && key.shift) {\x0d\n      /* Control and shift pressed */\x0d\n      switch (key.name) {\x0d\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\x0d\n        // identical to <ctrl>-h. It should have a unique escape sequence.\x0d\n        case 'backspace':\x0d\n          this[kDeleteLineLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete':\x0d\n          this[kDeleteLineRight]();\x0d\n          break;\x0d\n      }\x0d\n    } else if (key.ctrl) {\x0d\n      /* Control key pressed */\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'c':\x0d\n          if (this.listenerCount('SIGINT') > 0) {\x0d\n            this.emit('SIGINT');\x0d\n          } else {\x0d\n            // This readline instance is finished\x0d\n            this.close();\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'h': // delete left\x0d\n          this[kDeleteLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'd': // delete right or EOF\x0d\n          if (this.cursor === 0 && this.line.length === 0) {\x0d\n            // This readline instance is finished\x0d\n            this.close();\x0d\n          } else if (this.cursor < this.line.length) {\x0d\n            this[kDeleteRight]();\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'u': // Delete from current to start of line\x0d\n          this[kDeleteLineLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'k': // Delete from current to end of line\x0d\n          this[kDeleteLineRight]();\x0d\n          break;\x0d\n\x0d\n        case 'a': // Go to the start of the line\x0d\n          this[kMoveCursor](-Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'e': // Go to the end of the line\x0d\n          this[kMoveCursor](+Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'b': // back one character\x0d\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'f': // Forward one character\x0d\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'l': // Clear the whole screen\x0d\n          cursorTo(this.output\x2C 0\x2C 0);\x0d\n          clearScreenDown(this.output);\x0d\n          this[kRefreshLine]();\x0d\n          break;\x0d\n\x0d\n        case 'n': // next history item\x0d\n          this[kHistoryNext]();\x0d\n          break;\x0d\n\x0d\n        case 'p': // Previous history item\x0d\n          this[kHistoryPrev]();\x0d\n          break;\x0d\n\x0d\n        case 'y': // Yank killed string\x0d\n          this[kYank]();\x0d\n          break;\x0d\n\x0d\n        case 'z':\x0d\n          if (process.platform === 'win32') break;\x0d\n          if (this.listenerCount('SIGTSTP') > 0) {\x0d\n            this.emit('SIGTSTP');\x0d\n          } else {\x0d\n            process.once('SIGCONT'\x2C () => {\x0d\n              // Don't raise events if stream has already been abandoned.\x0d\n              if (!this.paused) {\x0d\n                // Stream must be paused and resumed after SIGCONT to catch\x0d\n                // SIGINT\x2C SIGTSTP\x2C and EOF.\x0d\n                this.pause();\x0d\n                this.emit('SIGCONT');\x0d\n              }\x0d\n              // Explicitly re-enable "raw mode" and move the cursor to\x0d\n              // the correct position.\x0d\n              // See https://github.com/joyent/node/issues/3295.\x0d\n              this[kSetRawMode](true);\x0d\n              this[kRefreshLine]();\x0d\n            });\x0d\n            this[kSetRawMode](false);\x0d\n            process.kill(process.pid\x2C 'SIGTSTP');\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'w': // Delete backwards to a word boundary\x0d\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\x0d\n        // identical to <ctrl>-h. It should have a unique escape sequence.\x0d\n        // Falls through\x0d\n        case 'backspace':\x0d\n          this[kDeleteWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete': // Delete forward to a word boundary\x0d\n          this[kDeleteWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'left':\x0d\n          this[kWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'right':\x0d\n          this[kWordRight]();\x0d\n          break;\x0d\n      }\x0d\n    } else if (key.meta) {\x0d\n      /* Meta key pressed */\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'b': // backward word\x0d\n          this[kWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'f': // forward word\x0d\n          this[kWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'd': // delete forward word\x0d\n        case 'delete':\x0d\n          this[kDeleteWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'backspace': // Delete backwards to a word boundary\x0d\n          this[kDeleteWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'y': // Doing yank pop\x0d\n          this[kYankPop]();\x0d\n          break;\x0d\n      }\x0d\n    } else {\x0d\n      /* No modifier keys used */\x0d\n\x0d\n      // \\r bookkeeping is only relevant if a \\n comes right after.\x0d\n      if (this[kSawReturnAt] && key.name !== 'enter') this[kSawReturnAt] = 0;\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'return': // Carriage return\x2C i.e. \\r\x0d\n          this[kSawReturnAt] = DateNow();\x0d\n          this[kLine]();\x0d\n          break;\x0d\n\x0d\n        case 'enter':\x0d\n          // When key interval > crlfDelay\x0d\n          if (\x0d\n            this[kSawReturnAt] === 0 ||\x0d\n            DateNow() - this[kSawReturnAt] > this.crlfDelay\x0d\n          ) {\x0d\n            this[kLine]();\x0d\n          }\x0d\n          this[kSawReturnAt] = 0;\x0d\n          break;\x0d\n\x0d\n        case 'backspace':\x0d\n          this[kDeleteLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete':\x0d\n          this[kDeleteRight]();\x0d\n          break;\x0d\n\x0d\n        case 'left':\x0d\n          // Obtain the code point to the left\x0d\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'right':\x0d\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'home':\x0d\n          this[kMoveCursor](-Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'end':\x0d\n          this[kMoveCursor](+Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'up':\x0d\n          this[kHistoryPrev]();\x0d\n          break;\x0d\n\x0d\n        case 'down':\x0d\n          this[kHistoryNext]();\x0d\n          break;\x0d\n\x0d\n        case 'tab':\x0d\n          // If tab completion enabled\x2C do that...\x0d\n          if (\x0d\n            typeof this.completer === 'function' &&\x0d\n            this.isCompletionEnabled\x0d\n          ) {\x0d\n            const lastKeypressWasTab =\x0d\n              previousKey && previousKey.name === 'tab';\x0d\n            this[kTabComplete](lastKeypressWasTab);\x0d\n            break;\x0d\n          }\x0d\n        // falls through\x0d\n        default:\x0d\n          if (typeof s === 'string' && s) {\x0d\n            // Erase state of previous searches.\x0d\n            lineEnding.lastIndex = 0;\x0d\n            let nextMatch;\x0d\n            // Keep track of the end of the last match.\x0d\n            let lastIndex = 0;\x0d\n            while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C s)) !== null) {\x0d\n              this[kInsertString](StringPrototypeSlice(s\x2C lastIndex\x2C nextMatch.index));\x0d\n              ({ lastIndex } = lineEnding);\x0d\n              this[kLine]();\x0d\n              // Restore lastIndex as the call to kLine could have mutated it.\x0d\n              lineEnding.lastIndex = lastIndex;\x0d\n            }\x0d\n            // This ensures that the last line is written if it doesn't end in a newline.\x0d\n            // Note that the last line may be the first line\x2C in which case this still works.\x0d\n            this[kInsertString](StringPrototypeSlice(s\x2C lastIndex));\x0d\n          }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Creates an `AsyncIterator` object that iterates through\x0d\n   * each line in the input stream as a string.\x0d\n   * @typedef {{\x0d\n   *   [Symbol.asyncIterator]: () => InterfaceAsyncIterator\x2C\x0d\n   *   next: () => Promise<string>\x0d\n   * }} InterfaceAsyncIterator\x0d\n   * @returns {InterfaceAsyncIterator}\x0d\n   */\x0d\n  [SymbolAsyncIterator]() {\x0d\n    if (this[kLineObjectStream] === undefined) {\x0d\n      kFirstEventParam ??= require('internal/events/symbols').kFirstEventParam;\x0d\n      this[kLineObjectStream] = EventEmitter.on(\x0d\n        this\x2C 'line'\x2C {\x0d\n          close: ['close']\x2C\x0d\n          highWatermark: 1024\x2C\x0d\n          [kFirstEventParam]: true\x2C\x0d\n        });\x0d\n    }\x0d\n    return this[kLineObjectStream];\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Interface\x2C\x0d\n  InterfaceConstructor\x2C\x0d\n  kAddHistory\x2C\x0d\n  kDecoder\x2C\x0d\n  kDeleteLeft\x2C\x0d\n  kDeleteLineLeft\x2C\x0d\n  kDeleteLineRight\x2C\x0d\n  kDeleteRight\x2C\x0d\n  kDeleteWordLeft\x2C\x0d\n  kDeleteWordRight\x2C\x0d\n  kGetDisplayPos\x2C\x0d\n  kHistoryNext\x2C\x0d\n  kHistoryPrev\x2C\x0d\n  kInsertString\x2C\x0d\n  kLine\x2C\x0d\n  kLine_buffer\x2C\x0d\n  kMoveCursor\x2C\x0d\n  kNormalWrite\x2C\x0d\n  kOldPrompt\x2C\x0d\n  kOnLine\x2C\x0d\n  kPreviousKey\x2C\x0d\n  kPrompt\x2C\x0d\n  kQuestion\x2C\x0d\n  kQuestionCallback\x2C\x0d\n  kQuestionCancel\x2C\x0d\n  kRefreshLine\x2C\x0d\n  kSawKeyPress\x2C\x0d\n  kSawReturnAt\x2C\x0d\n  kSetRawMode\x2C\x0d\n  kTabComplete\x2C\x0d\n  kTabCompleter\x2C\x0d\n  kTtyWrite\x2C\x0d\n  kWordLeft\x2C\x0d\n  kWordRight\x2C\x0d\n  kWriteToOutput\x2C\x0d\n};\x0d\n
code-source-info,0x2773ccab3ac,209,0,40434,C0O0C4O40434,,
code-creation,JS,10,296868,0x2773ccae0ec,1908, node:internal/readline/interface:1:1,0x2773ccab320,~
code-source-info,0x2773ccae0ec
code-creation,Eval,10,297482,0x2773ccb03c4,5, node:internal/readline/utils:1:1,0x2773ccb01c0,~
script-source,210,node:internal/readline/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringFromCharCode\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kUTF16SurrogateThreshold = 0x10000; // 2 ** 16\x0d\nconst kEscape = '\\x1b';\x0d\nconst kSubstringSearch = Symbol('kSubstringSearch');\x0d\n\x0d\nfunction CSI(strings\x2C ...args) {\x0d\n  let ret = `${kEscape}[`;\x0d\n  for (let n = 0; n < strings.length; n++) {\x0d\n    ret += strings[n];\x0d\n    if (n < args.length)\x0d\n      ret += args[n];\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nCSI.kEscape = kEscape;\x0d\nCSI.kClearToLineBeginning = CSI`1K`;\x0d\nCSI.kClearToLineEnd = CSI`0K`;\x0d\nCSI.kClearLine = CSI`2K`;\x0d\nCSI.kClearScreenDown = CSI`0J`;\x0d\n\x0d\n// TODO(BridgeAR): Treat combined characters as single character\x2C i.e\x2C\x0d\n// 'a\\u0301' and '\\u0301a' (both have the same visual output).\x0d\n// Check Canonical_Combining_Class in\x0d\n// http://userguide.icu-project.org/strings/properties\x0d\nfunction charLengthLeft(str\x2C i) {\x0d\n  if (i <= 0)\x0d\n    return 0;\x0d\n  if ((i > 1 &&\x0d\n      StringPrototypeCodePointAt(str\x2C i - 2) >= kUTF16SurrogateThreshold) ||\x0d\n      StringPrototypeCodePointAt(str\x2C i - 1) >= kUTF16SurrogateThreshold) {\x0d\n    return 2;\x0d\n  }\x0d\n  return 1;\x0d\n}\x0d\n\x0d\nfunction charLengthAt(str\x2C i) {\x0d\n  if (str.length <= i) {\x0d\n    // Pretend to move to the right. This is necessary to autocomplete while\x0d\n    // moving to the right.\x0d\n    return 1;\x0d\n  }\x0d\n  return StringPrototypeCodePointAt(str\x2C i) >= kUTF16SurrogateThreshold ? 2 : 1;\x0d\n}\x0d\n\x0d\n/*\x0d\n  Some patterns seen in terminal key escape codes\x2C derived from combos seen\x0d\n  at http://www.midnight-commander.org/browser/lib/tty/key.c\x0d\n\x0d\n  ESC letter\x0d\n  ESC [ letter\x0d\n  ESC [ modifier letter\x0d\n  ESC [ 1 ; modifier letter\x0d\n  ESC [ num char\x0d\n  ESC [ num ; modifier char\x0d\n  ESC O letter\x0d\n  ESC O modifier letter\x0d\n  ESC O 1 ; modifier letter\x0d\n  ESC N letter\x0d\n  ESC [ [ num ; modifier char\x0d\n  ESC [ [ 1 ; modifier letter\x0d\n  ESC ESC [ num char\x0d\n  ESC ESC O letter\x0d\n\x0d\n  - char is usually ~ but $ and ^ also happen with rxvt\x0d\n  - modifier is 1 +\x0d\n                (shift     * 1) +\x0d\n                (left_alt  * 2) +\x0d\n                (ctrl      * 4) +\x0d\n                (right_alt * 8)\x0d\n  - two leading ESCs apparently mean the same as one leading ESC\x0d\n*/\x0d\nfunction* emitKeys(stream) {\x0d\n  while (true) {\x0d\n    let ch = yield;\x0d\n    let s = ch;\x0d\n    let escaped = false;\x0d\n    const key = {\x0d\n      sequence: null\x2C\x0d\n      name: undefined\x2C\x0d\n      ctrl: false\x2C\x0d\n      meta: false\x2C\x0d\n      shift: false\x2C\x0d\n    };\x0d\n\x0d\n    if (ch === kEscape) {\x0d\n      escaped = true;\x0d\n      s += (ch = yield);\x0d\n\x0d\n      if (ch === kEscape) {\x0d\n        s += (ch = yield);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (escaped && (ch === 'O' || ch === '[')) {\x0d\n      // ANSI escape sequence\x0d\n      let code = ch;\x0d\n      let modifier = 0;\x0d\n\x0d\n      if (ch === 'O') {\x0d\n        // ESC O letter\x0d\n        // ESC O modifier letter\x0d\n        s += (ch = yield);\x0d\n\x0d\n        if (ch >= '0' && ch <= '9') {\x0d\n          modifier = (ch >> 0) - 1;\x0d\n          s += (ch = yield);\x0d\n        }\x0d\n\x0d\n        code += ch;\x0d\n      } else if (ch === '[') {\x0d\n        // ESC [ letter\x0d\n        // ESC [ modifier letter\x0d\n        // ESC [ [ modifier letter\x0d\n        // ESC [ [ num char\x0d\n        s += (ch = yield);\x0d\n\x0d\n        if (ch === '[') {\x0d\n          // \\x1b[[A\x0d\n          //      ^--- escape codes might have a second bracket\x0d\n          code += ch;\x0d\n          s += (ch = yield);\x0d\n        }\x0d\n\x0d\n        /*\x0d\n         * Here and later we try to buffer just enough data to get\x0d\n         * a complete ascii sequence.\x0d\n         *\x0d\n         * We have basically two classes of ascii characters to process:\x0d\n         *\x0d\n         *\x0d\n         * 1. `\\x1b[24;5~` should be parsed as { code: '[24~'\x2C modifier: 5 }\x0d\n         *\x0d\n         * This particular example is featuring Ctrl+F12 in xterm.\x0d\n         *\x0d\n         *  - `;5` part is optional\x2C e.g. it could be `\\x1b[24~`\x0d\n         *  - first part can contain one or two digits\x0d\n         *  - there is also special case when there can be 3 digits\x0d\n         *    but without modifier. They are the case of paste bracket mode\x0d\n         *\x0d\n         * So the generic regexp is like /^(?:\\d\\d?(;\\d)?[~^$]|\\d{3}~)$/\x0d\n         *\x0d\n         *\x0d\n         * 2. `\\x1b[1;5H` should be parsed as { code: '[H'\x2C modifier: 5 }\x0d\n         *\x0d\n         * This particular example is featuring Ctrl+Home in xterm.\x0d\n         *\x0d\n         *  - `1;5` part is optional\x2C e.g. it could be `\\x1b[H`\x0d\n         *  - `1;` part is optional\x2C e.g. it could be `\\x1b[5H`\x0d\n         *\x0d\n         * So the generic regexp is like /^((\\d;)?\\d)?[A-Za-z]$/\x0d\n         *\x0d\n         */\x0d\n        const cmdStart = s.length - 1;\x0d\n\x0d\n        // Skip one or two leading digits\x0d\n        if (ch >= '0' && ch <= '9') {\x0d\n          s += (ch = yield);\x0d\n\x0d\n          if (ch >= '0' && ch <= '9') {\x0d\n            s += (ch = yield);\x0d\n\x0d\n            if (ch >= '0' && ch <= '9') {\x0d\n              s += (ch = yield);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n\x0d\n        // skip modifier\x0d\n        if (ch === ';') {\x0d\n          s += (ch = yield);\x0d\n\x0d\n          if (ch >= '0' && ch <= '9') {\x0d\n            s += yield;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        /*\x0d\n         * We buffered enough data\x2C now trying to extract code\x0d\n         * and modifier from it\x0d\n         */\x0d\n        const cmd = StringPrototypeSlice(s\x2C cmdStart);\x0d\n        let match;\x0d\n\x0d\n        if ((match = RegExpPrototypeExec(/^(?:(\\d\\d?)(?:;(\\d))?([~^$])|(\\d{3}~))$/\x2C cmd))) {\x0d\n          if (match[4]) {\x0d\n            code += match[4];\x0d\n          } else {\x0d\n            code += match[1] + match[3];\x0d\n            modifier = (match[2] || 1) - 1;\x0d\n          }\x0d\n        } else if (\x0d\n          (match = RegExpPrototypeExec(/^((\\d;)?(\\d))?([A-Za-z])$/\x2C cmd))\x0d\n        ) {\x0d\n          code += match[4];\x0d\n          modifier = (match[3] || 1) - 1;\x0d\n        } else {\x0d\n          code += cmd;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // Parse the key modifier\x0d\n      key.ctrl = !!(modifier & 4);\x0d\n      key.meta = !!(modifier & 10);\x0d\n      key.shift = !!(modifier & 1);\x0d\n      key.code = code;\x0d\n\x0d\n      // Parse the key itself\x0d\n      switch (code) {\x0d\n        /* xterm/gnome ESC [ letter (with modifier) */\x0d\n        case '[P': key.name = 'f1'; break;\x0d\n        case '[Q': key.name = 'f2'; break;\x0d\n        case '[R': key.name = 'f3'; break;\x0d\n        case '[S': key.name = 'f4'; break;\x0d\n\x0d\n        /* xterm/gnome ESC O letter (without modifier) */\x0d\n        case 'OP': key.name = 'f1'; break;\x0d\n        case 'OQ': key.name = 'f2'; break;\x0d\n        case 'OR': key.name = 'f3'; break;\x0d\n        case 'OS': key.name = 'f4'; break;\x0d\n\x0d\n        /* xterm/rxvt ESC [ number ~ */\x0d\n        case '[11~': key.name = 'f1'; break;\x0d\n        case '[12~': key.name = 'f2'; break;\x0d\n        case '[13~': key.name = 'f3'; break;\x0d\n        case '[14~': key.name = 'f4'; break;\x0d\n\x0d\n        /* paste bracket mode */\x0d\n        case '[200~': key.name = 'paste-start'; break;\x0d\n        case '[201~': key.name = 'paste-end'; break;\x0d\n\x0d\n        /* from Cygwin and used in libuv */\x0d\n        case '[[A': key.name = 'f1'; break;\x0d\n        case '[[B': key.name = 'f2'; break;\x0d\n        case '[[C': key.name = 'f3'; break;\x0d\n        case '[[D': key.name = 'f4'; break;\x0d\n        case '[[E': key.name = 'f5'; break;\x0d\n\x0d\n        /* common */\x0d\n        case '[15~': key.name = 'f5'; break;\x0d\n        case '[17~': key.name = 'f6'; break;\x0d\n        case '[18~': key.name = 'f7'; break;\x0d\n        case '[19~': key.name = 'f8'; break;\x0d\n        case '[20~': key.name = 'f9'; break;\x0d\n        case '[21~': key.name = 'f10'; break;\x0d\n        case '[23~': key.name = 'f11'; break;\x0d\n        case '[24~': key.name = 'f12'; break;\x0d\n\x0d\n        /* xterm ESC [ letter */\x0d\n        case '[A': key.name = 'up'; break;\x0d\n        case '[B': key.name = 'down'; break;\x0d\n        case '[C': key.name = 'right'; break;\x0d\n        case '[D': key.name = 'left'; break;\x0d\n        case '[E': key.name = 'clear'; break;\x0d\n        case '[F': key.name = 'end'; break;\x0d\n        case '[H': key.name = 'home'; break;\x0d\n\x0d\n        /* xterm/gnome ESC O letter */\x0d\n        case 'OA': key.name = 'up'; break;\x0d\n        case 'OB': key.name = 'down'; break;\x0d\n        case 'OC': key.name = 'right'; break;\x0d\n        case 'OD': key.name = 'left'; break;\x0d\n        case 'OE': key.name = 'clear'; break;\x0d\n        case 'OF': key.name = 'end'; break;\x0d\n        case 'OH': key.name = 'home'; break;\x0d\n\x0d\n        /* xterm/rxvt ESC [ number ~ */\x0d\n        case '[1~': key.name = 'home'; break;\x0d\n        case '[2~': key.name = 'insert'; break;\x0d\n        case '[3~': key.name = 'delete'; break;\x0d\n        case '[4~': key.name = 'end'; break;\x0d\n        case '[5~': key.name = 'pageup'; break;\x0d\n        case '[6~': key.name = 'pagedown'; break;\x0d\n\x0d\n        /* putty */\x0d\n        case '[[5~': key.name = 'pageup'; break;\x0d\n        case '[[6~': key.name = 'pagedown'; break;\x0d\n\x0d\n        /* rxvt */\x0d\n        case '[7~': key.name = 'home'; break;\x0d\n        case '[8~': key.name = 'end'; break;\x0d\n\x0d\n        /* rxvt keys with modifiers */\x0d\n        case '[a': key.name = 'up'; key.shift = true; break;\x0d\n        case '[b': key.name = 'down'; key.shift = true; break;\x0d\n        case '[c': key.name = 'right'; key.shift = true; break;\x0d\n        case '[d': key.name = 'left'; key.shift = true; break;\x0d\n        case '[e': key.name = 'clear'; key.shift = true; break;\x0d\n\x0d\n        case '[2$': key.name = 'insert'; key.shift = true; break;\x0d\n        case '[3$': key.name = 'delete'; key.shift = true; break;\x0d\n        case '[5$': key.name = 'pageup'; key.shift = true; break;\x0d\n        case '[6$': key.name = 'pagedown'; key.shift = true; break;\x0d\n        case '[7$': key.name = 'home'; key.shift = true; break;\x0d\n        case '[8$': key.name = 'end'; key.shift = true; break;\x0d\n\x0d\n        case 'Oa': key.name = 'up'; key.ctrl = true; break;\x0d\n        case 'Ob': key.name = 'down'; key.ctrl = true; break;\x0d\n        case 'Oc': key.name = 'right'; key.ctrl = true; break;\x0d\n        case 'Od': key.name = 'left'; key.ctrl = true; break;\x0d\n        case 'Oe': key.name = 'clear'; key.ctrl = true; break;\x0d\n\x0d\n        case '[2^': key.name = 'insert'; key.ctrl = true; break;\x0d\n        case '[3^': key.name = 'delete'; key.ctrl = true; break;\x0d\n        case '[5^': key.name = 'pageup'; key.ctrl = true; break;\x0d\n        case '[6^': key.name = 'pagedown'; key.ctrl = true; break;\x0d\n        case '[7^': key.name = 'home'; key.ctrl = true; break;\x0d\n        case '[8^': key.name = 'end'; key.ctrl = true; break;\x0d\n\x0d\n        /* misc. */\x0d\n        case '[Z': key.name = 'tab'; key.shift = true; break;\x0d\n        default: key.name = 'undefined'; break;\x0d\n      }\x0d\n    } else if (ch === '\\r') {\x0d\n      // carriage return\x0d\n      key.name = 'return';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\n') {\x0d\n      // Enter\x2C should have been called linefeed\x0d\n      key.name = 'enter';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\t') {\x0d\n      // tab\x0d\n      key.name = 'tab';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\b' || ch === '\\x7f') {\x0d\n      // backspace or ctrl+h\x0d\n      key.name = 'backspace';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === kEscape) {\x0d\n      // escape key\x0d\n      key.name = 'escape';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === ' ') {\x0d\n      key.name = 'space';\x0d\n      key.meta = escaped;\x0d\n    } else if (!escaped && ch <= '\\x1a') {\x0d\n      // ctrl+letter\x0d\n      key.name = StringFromCharCode(\x0d\n        StringPrototypeCharCodeAt(ch) + StringPrototypeCharCodeAt('a') - 1\x2C\x0d\n      );\x0d\n      key.ctrl = true;\x0d\n    } else if (RegExpPrototypeExec(/^[0-9A-Za-z]$/\x2C ch) !== null) {\x0d\n      // Letter\x2C number\x2C shift+letter\x0d\n      key.name = StringPrototypeToLowerCase(ch);\x0d\n      key.shift = RegExpPrototypeExec(/^[A-Z]$/\x2C ch) !== null;\x0d\n      key.meta = escaped;\x0d\n    } else if (escaped) {\x0d\n      // Escape sequence timeout\x0d\n      key.name = ch.length ? undefined : 'escape';\x0d\n      key.meta = true;\x0d\n    }\x0d\n\x0d\n    key.sequence = s;\x0d\n\x0d\n    if (s.length !== 0 && (key.name !== undefined || escaped)) {\x0d\n      /* Named character or sequence */\x0d\n      stream.emit('keypress'\x2C escaped ? undefined : s\x2C key);\x0d\n    } else if (charLengthAt(s\x2C 0) === s.length) {\x0d\n      /* Single unnamed character\x2C e.g. "." */\x0d\n      stream.emit('keypress'\x2C s\x2C key);\x0d\n    }\x0d\n    /* Unrecognized or broken escape sequence\x2C don't emit anything */\x0d\n  }\x0d\n}\x0d\n\x0d\n// This runs in O(n log n).\x0d\nfunction commonPrefix(strings) {\x0d\n  if (strings.length === 0) {\x0d\n    return '';\x0d\n  }\x0d\n  if (strings.length === 1) {\x0d\n    return strings[0];\x0d\n  }\x0d\n  const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(strings));\x0d\n  const min = sorted[0];\x0d\n  const max = sorted[sorted.length - 1];\x0d\n  for (let i = 0; i < min.length; i++) {\x0d\n    if (min[i] !== max[i]) {\x0d\n      return StringPrototypeSlice(min\x2C 0\x2C i);\x0d\n    }\x0d\n  }\x0d\n  return min;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  charLengthAt\x2C\x0d\n  charLengthLeft\x2C\x0d\n  commonPrefix\x2C\x0d\n  emitKeys\x2C\x0d\n  kSubstringSearch\x2C\x0d\n  CSI\x2C\x0d\n};\x0d\n
code-source-info,0x2773ccb03c4,210,0,12802,C0O0C4O12802,,
code-creation,JS,10,297941,0x2773ccb0834,237, node:internal/readline/utils:1:1,0x2773ccb0338,~
code-source-info,0x2773ccb0834,210,0,12802,C0O0C61O28C67O52C73O75C79O99C85O122C91O152C97O183C103O208C109O239C114O301C120O301C122O338C124O338C126O372C129O372C134O609C136O621C140O664C144O664C148O659C152O696C156O696C160O691C164O723C168O723C172O718C176O756C180O756C184O751C188O12683C195O12705C201O12722C207O12741C213O12758C219O12771C225O12792C231O12698C236O12801,,
code-creation,JS,10,298121,0x2773ccb0bfc,76,CSI node:internal/readline/utils:19:13,0x2773ccb03f8,~
code-source-info,0x2773ccb0bfc,210,415,605,C0O415C8O449C20O480C22O495C26O485C31O515C33O529C43O552C47O545C52O567C54O578C64O504C69O467C73O591C75O602,,
code-creation,Eval,10,298286,0x2773ccb2464,5, node:internal/readline/callbacks:1:1,0x2773ccb2270,~
script-source,211,node:internal/readline/callbacks,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberIsNaN\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_CURSOR_POS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  CSI\x2C\x0d\n} = require('internal/readline/utils');\x0d\n\x0d\nconst {\x0d\n  kClearLine\x2C\x0d\n  kClearScreenDown\x2C\x0d\n  kClearToLineBeginning\x2C\x0d\n  kClearToLineEnd\x2C\x0d\n} = CSI;\x0d\n\x0d\n\x0d\n/**\x0d\n * moves the cursor to the x and y coordinate on the given stream\x0d\n */\x0d\n\x0d\nfunction cursorTo(stream\x2C x\x2C y\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (typeof y === 'function') {\x0d\n    callback = y;\x0d\n    y = undefined;\x0d\n  }\x0d\n\x0d\n  if (NumberIsNaN(x)) throw new ERR_INVALID_ARG_VALUE('x'\x2C x);\x0d\n  if (NumberIsNaN(y)) throw new ERR_INVALID_ARG_VALUE('y'\x2C y);\x0d\n\x0d\n  if (stream == null || (typeof x !== 'number' && typeof y !== 'number')) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (typeof x !== 'number') throw new ERR_INVALID_CURSOR_POS();\x0d\n\x0d\n  const data = typeof y !== 'number' ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;\x0d\n  return stream.write(data\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * moves the cursor relative to its current location\x0d\n */\x0d\n\x0d\nfunction moveCursor(stream\x2C dx\x2C dy\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream == null || !(dx || dy)) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  let data = '';\x0d\n\x0d\n  if (dx < 0) {\x0d\n    data += CSI`${-dx}D`;\x0d\n  } else if (dx > 0) {\x0d\n    data += CSI`${dx}C`;\x0d\n  }\x0d\n\x0d\n  if (dy < 0) {\x0d\n    data += CSI`${-dy}A`;\x0d\n  } else if (dy > 0) {\x0d\n    data += CSI`${dy}B`;\x0d\n  }\x0d\n\x0d\n  return stream.write(data\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * clears the current line the cursor is on:\x0d\n *   -1 for left of the cursor\x0d\n *   +1 for right of the cursor\x0d\n *    0 for the entire line\x0d\n */\x0d\n\x0d\nfunction clearLine(stream\x2C dir\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream === null || stream === undefined) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const type =\x0d\n    dir < 0 ? kClearToLineBeginning : dir > 0 ? kClearToLineEnd : kClearLine;\x0d\n  return stream.write(type\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * clears the screen from the current position of the cursor down\x0d\n */\x0d\n\x0d\nfunction clearScreenDown(stream\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream === null || stream === undefined) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  return stream.write(kClearScreenDown\x2C callback);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n};\x0d\n
code-source-info,0x2773ccb2464,211,0,2886,C0O0C4O2886,,
code-creation,JS,10,298416,0x2773ccb2754,179, node:internal/readline/callbacks:1:1,0x2773ccb23d8,~
code-source-info,0x2773ccb2754,211,0,2886,C0O0C56O28C62O150C65O150C70O80C75O87C81O115C87O215C90O215C95O192C101O269C104O269C109O259C115O403C118O319C124O334C130O355C136O381C142O2800C149O2822C155O2836C161O2856C167O2869C173O2815C178O2885,,
code-creation,JS,10,298636,0x2773ccb3d74,282,promisify node:internal/util:406:19,0x22671c81140,~
code-source-info,0x2773ccb3d74,16,11584,13680,C0O11584C17O11648C25O11689C33O11713C38O11692C46O11751C57O11751C62O11796C69O11809C71O11808C76O11854C83O11862C87O11897C95O11897C100O11951C112O11983C119O12049C126O11958C131O12117C132O12285C139O12294C141O12293C144O12285C146O13067C157O13092C163O13092C168O13067C173O13130C185O13155C192O13217C199O13130C204O13309C214O13309C219O13380C226O13380C231O13423C233O13447C237O13428C242O13573C249O13610C255O13573C260O13456C265O13410C269O13630C276O13637C281O13677,,
code-creation,JS,10,298904,0x2773ccb5874,11,get WriteStream node:fs:3204:18,0x22671cade80,~
code-source-info,0x2773ccb5874,55,86992,87050,C0O87002C3O87002C6O87026C10O87045,,
code-creation,JS,10,298940,0x2773ccb597c,11,get FileReadStream node:fs:3215:21,0x22671cadf70,~
code-source-info,0x2773ccb597c,55,87268,87329,C0O87278C3O87278C6O87302C10O87324,,
code-creation,JS,10,298962,0x2773ccb5a84,11,get FileWriteStream node:fs:3224:22,0x22671cae070,~
code-source-info,0x2773ccb5a84,55,87419,87481,C0O87429C3O87429C6O87453C10O87476,,
code-creation,JS,10,299003,0x2773ccb5b74,28,get node:fs:3258:8,0x22671cae170,~
code-source-info,0x2773ccb5b74,55,88210,88306,C0O88222C14O88235C19O88266C23O88231C25O88283C27O88299,,
code-creation,Eval,10,299724,0x2773ccb6eec,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\utils.js:1:1,0x2773ccb6ce8,~
script-source,212,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\utils.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0\x2C 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten\x2C\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`\x2C for example "html" becomes "text/html".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type)\x2C params: {} };\n};\n\n/**\n * Normalize `types`\x2C for example "html" becomes "text/html".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition\x2C\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`\x2C `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @param {Number} index\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str\x2C index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0]\x2C quality: 1\x2C params: {}\x2C originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile "etag" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile "query parser" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile "proxy trust" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a\x2C i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split('\x2C')\n      .map(function (v) { return v.trim() })\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type\x2C charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function\x2C generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body\x2C encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body\x2C encoding)\n      : body\n\n    return etag(buf\x2C options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str\x2C {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n
code-source-info,0x2773ccb6eec,212,0,5955,C0O0C4O5955,,
code-creation,JS,10,299931,0x2773ccb7654,290, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\utils.js:1:1,0x2773ccb6e60,~
code-source-info,0x2773ccb7654,212,0,5955,C0O0C32O207C35O207C40O229C44O207C46O262C49O262C54O312C57O312C61O312C63O353C66O353C74O368C79O395C82O395C87O432C90O432C95O447C99O432C101O465C104O465C108O465C110O498C113O498C117O498C119O530C122O530C126O530C128O563C131O563C135O563C137O731C140O746C145O746C149O744C153O925C156O941C161O941C165O939C169O1086C176O1105C180O1445C183O1473C191O1481C197O1461C201O1693C208O1715C212O1971C219O1994C223O2361C226O2400C234O2408C240O2388C244O3249C251O3269C255O3760C262O3787C266O4367C273O4388C277O5004C284O5023C289O5954,,
code-creation,Eval,10,300787,0x2773ccb8804,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\safe-buffer\\index.js:1:1,0x2773ccb8690,~
script-source,213,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\safe-buffer\\index.js,/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src\x2C dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer\x2C exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg\x2C encodingOrOffset\x2C length) {\n  return Buffer(arg\x2C encodingOrOffset\x2C length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer\x2C SafeBuffer)\n\nSafeBuffer.from = function (arg\x2C encodingOrOffset\x2C length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg\x2C encodingOrOffset\x2C length)\n}\n\nSafeBuffer.alloc = function (size\x2C fill\x2C encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill\x2C encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n
code-source-info,0x2773ccb8804,213,0,1670,C0O0C4O1670,,
code-creation,JS,10,300875,0x2773ccb8c04,159, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\safe-buffer\\index.js:1:1,0x2773ccb8778,~
code-source-info,0x2773ccb8c04,213,0,1670,C0O0C15O142C18O142C22O142C24O173C27O180C31O173C33O328C36O339C45O354C54O370C63O392C69O413C71O428C77O492C80O492C85O521C87O536C91O679C95O686C103O700C108O686C113O677C117O747C120O747C125O778C129O794C133O983C137O1000C141O1338C145O1361C149O1497C153O1524C158O1669,,
code-creation,JS,10,301004,0x2773ccb915c,5,get node:buffer:1388:8,0x22671c91198,~
code-source-info,0x2773ccb915c,24,42113,42145,C0O42118C4O42143,,
code-creation,Eval,10,301219,0x2773ccb9c74,5, node:internal/file:1:1,0x2773ccb9a18,~
script-source,214,node:internal/file,'use strict';\x0d\n\x0d\nconst {\x0d\n  DateNow\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  kEmptyObject\x2C\x0d\n  toUSVString\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  inspect\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nclass File extends Blob {\x0d\n  /** @type {string} */\x0d\n  #name;\x0d\n\x0d\n  /** @type {number} */\x0d\n  #lastModified;\x0d\n\x0d\n  constructor(fileBits\x2C fileName\x2C options = kEmptyObject) {\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('fileBits'\x2C 'fileName');\x0d\n    }\x0d\n\x0d\n    super(fileBits\x2C options);\x0d\n\x0d\n    let { lastModified } = options ?? kEmptyObject;\x0d\n\x0d\n    if (lastModified !== undefined) {\x0d\n      // Using Number(...) will not throw an error for bigints.\x0d\n      lastModified = +lastModified;\x0d\n\x0d\n      if (NumberIsNaN(lastModified)) {\x0d\n        lastModified = 0;\x0d\n      }\x0d\n    } else {\x0d\n      lastModified = DateNow();\x0d\n    }\x0d\n\x0d\n    this.#name = toUSVString(fileName);\x0d\n    this.#lastModified = lastModified;\x0d\n  }\x0d\n\x0d\n  get name() {\x0d\n    return this.#name;\x0d\n  }\x0d\n\x0d\n  get lastModified() {\x0d\n    return this.#lastModified;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) {\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `File ${inspect({\x0d\n      size: this.size\x2C\x0d\n      type: this.type\x2C\x0d\n      name: this.#name\x2C\x0d\n      lastModified: this.#lastModified\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(File.prototype\x2C {\x0d\n  name: kEnumerableProperty\x2C\x0d\n  lastModified: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'File'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  File\x2C\x0d\n};\x0d\n
code-source-info,0x2773ccb9c74,214,0,1902,C0O0C4O1902,,
code-creation,JS,10,301317,0x2773ccba35c,261, node:internal/file:1:1,0x2773ccb9be8,~
code-source-info,0x2773ccba35c,214,0,1902,C0O0C23O28C29O40C35O56C40O83C45O145C48O145C53O134C58O278C61O278C66O206C71O219C76O243C82O260C88O361C91O361C96O325C101O332C107O417C110O417C115O403C151O473C168O1289C202O1681C214O1703C220O1741C226O1766C228O1786C237O1653C242O1869C249O1891C255O1884C260O1901,,
code-creation,JS,10,301347,0x2773ccba534,20,File node:internal/file:31:25,0x2773ccb9e40,~
code-source-info,0x2773ccba534,214,478,1649,C4O508C13O545C19O1649,,
code-creation,JS,10,301495,0x2773ccbac2c,45,copyProps C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\safe-buffer\\index.js:7:20,0x2773ccb8838,~
code-source-info,0x2773ccbac2c,213,260,327,C0O291C13O284C26O284C27O302C29O316C32O311C39O275C44O326,,
code-creation,Eval,10,302326,0x2773ccbd69c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\content-disposition\\index.js:1:1,0x2773ccbd3e8,~
script-source,215,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\content-disposition\\index.js,/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar basename = require('path').basename\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * RegExp to match non attr-char\x2C *after* encodeURIComponent (i.e. not including "%")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20"'()*\x2C/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = "\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token "=" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = "(" | ")" | "<" | ">" | "@"\n *               | "\x2C" | ";" | ":" | "\\" | <">\n *               | "/" | "[" | "]" | "?" | "="\n *               | "{" | "}" | SP | HT\n * quoted-string = ( <"> *(qdtext | quoted-pair ) <"> )\n * qdtext        = <any TEXT except <">>\n * quoted-pair   = "\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs\x2C but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR\x2C carriage return (13)>\n * LF            = <US-ASCII LF\x2C linefeed (10)>\n * SP            = <US-ASCII SP\x2C space (32)>\n * HT            = <US-ASCII HT\x2C horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*("(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  "'" [ language ] "'" value-chars\n * charset       = "UTF-8" / "ISO-8859-1" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / "!" / "#" / "$" / "%" / "&"\n *               / "+" / "-" / "^" / "_" / "`"\n *               / "{" / "}" / "~"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( "-" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = "%" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / "!" / "#" / "$" / "&" / "+" / "-" / "."\n *               / "^" / "_" / "`" / "|" / "~"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2\x2C3}(?:-[A-Za-z]{3}){0\x2C3}|[A-Za-z]{4\x2C8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = "inline" | "attachment" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = "filename" "=" value\n *                  | "filename*" "=" ext-value\n * disp-ext-parm    = token "=" value\n *                  | ext-token "=" ext-value\n * ext-token        = <the characters in token\x2C followed by "*">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @public\n */\n\nfunction contentDisposition (filename\x2C options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename\x2C opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type\x2C params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */\n\nfunction createparams (filename\x2C fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 5987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP\x2C pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = Buffer.from(binary\x2C 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP\x2C '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0\x2C -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1\x2C value.length - 2)\n        .replace(QESC_REGEXP\x2C '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type\x2C params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str\x2C hex) {\n  return String.fromCharCode(parseInt(hex\x2C 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '"' + str.replace(QUOTE_REGEXP\x2C '\\\\$1') + '"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP\x2C pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\n\nfunction ContentDisposition (type\x2C parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n
code-source-info,0x2773ccbd69c,215,0,10594,C0O0C4O10594,,
code-creation,JS,10,302677,0x2773ccbdbc4,193, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\content-disposition\\index.js:1:1,0x2773ccbd610,~
code-source-info,0x2773ccbdbc4,215,0,10594,C0O0C69O154C71O169C75O197C82O211C86O280C89O280C94O295C98O280C100O318C103O318C108O340C112O318C114O490C119O490C121O660C126O660C128O710C133O710C135O819C140O819C142O1015C147O1015C149O1181C154O1181C156O2212C161O2212C163O2434C168O2434C170O2479C175O2479C177O3271C182O3271C184O3881C189O3881C192O10593,,
code-creation,Eval,10,303466,0x2773ccbfa5c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\content-type\\index.js:1:1,0x2773ccbf878,~
script-source,216,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\content-type\\index.js,/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( ";" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token "=" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = "!" / "#" / "$" / "%" / "&" / "'" / "*"\n *               / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~"\n *               / DIGIT / ALPHA\n *               ; any VCHAR\x2C except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = "\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/ // eslint-disable-line no-control-regex\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = "\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type "/" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.slice(0\x2C index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value.charCodeAt(0) === 0x22 /* " */) {\n        // remove quotes\n        value = value.slice(1\x2C -1)\n\n        // remove escapes\n        if (value.indexOf('\\\\') !== -1) {\n          value = value.replace(QESC_REGEXP\x2C '$1')\n        }\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '"' + str.replace(QUOTE_REGEXP\x2C '\\\\$1') + '"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n
code-source-info,0x2773ccbfa5c,216,0,5002,C0O0C4O5002,,
code-creation,JS,10,303635,0x2773ccbfcfc,89, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\content-type\\index.js:1:1,0x2773ccbf9d0,~
code-source-info,0x2773ccbfcfc,216,0,5002,C0O0C33O691C38O691C40O912C45O912C47O1011C52O1011C54O1205C59O1205C61O1374C66O1374C68O1540C73O1540C75O1641C77O1656C81O1665C83O1679C88O5001,,
code-creation,JS,11,303936,0x7ff62c519400,680,containsNamespace C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:29:28,0x3e8c8735d98,^
code-source-info,0x7ff62c519400,137,374,666,,,
code-creation,JS,11,303968,0x7ff62c519700,728,stringToPath C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:227:41,0x229f2666cb0,^
code-source-info,0x7ff62c519700,184,9464,9994,,,
code-creation,JS,11,303991,0x7ff62c519a00,884,getBaseIntrinsic C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\get-intrinsic\\index.js:243:49,0x229f2666d30,^
code-source-info,0x7ff62c519a00,184,10066,10717,,,
code-creation,JS,11,304010,0x7ff62c519dc0,260,lazyAbortController node:util:84:29,0x22671ca6be8,^
code-source-info,0x7ff62c519dc0,48,2521,2616,,,
code-creation,JS,11,304031,0x7ff62c519f00,600, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\utils.js:8:26,0x1ffa74bcba8,^
code-source-info,0x7ff62c519f00,199,150,317,,,
code-creation,JS,11,304074,0x7ff62c51a180,348,set node:internal/util:610:17,0x22671c81df0,^
code-source-info,0x7ff62c51a180,16,17702,17839,,,
code-creation,JS,11,304091,0x7ff62c51a300,580,get node:internal/util:621:17,0x22671c81e48,^
code-source-info,0x7ff62c51a300,16,17959,18150,,,
code-creation,JS,11,304107,0x7ff62c51a580,476,copyProps C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\safe-buffer\\index.js:7:20,0x2773ccb8838,^
code-source-info,0x7ff62c51a580,213,260,327,,,
tick,0x7ff6acc0fdab,304887,0,0x0,5,0x7ff62c516d57,0x7ff62c5134eb,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2773ccb76ae,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f037d0,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,Eval,10,305499,0x299e2c0783c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\send\\index.js:1:1,0x299e2c07488,~
script-source,217,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\send\\index.js,/*!\n * send\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar debug = require('debug')('send')\nvar deprecate = require('depd')('send')\nvar destroy = require('destroy')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar etag = require('etag')\nvar fresh = require('fresh')\nvar fs = require('fs')\nvar mime = require('mime')\nvar ms = require('ms')\nvar onFinished = require('on-finished')\nvar parseRange = require('range-parser')\nvar path = require('path')\nvar statuses = require('statuses')\nvar Stream = require('stream')\nvar util = require('util')\n\n/**\n * Path function references.\n * @private\n */\n\nvar extname = path.extname\nvar join = path.join\nvar normalize = path.normalize\nvar resolve = path.resolve\nvar sep = path.sep\n\n/**\n * Regular expression for identifying a bytes Range header.\n * @private\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\n\n/**\n * Maximum value allowed for the max age.\n * @private\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\n\n/**\n * Regular expression to match a path with a directory up component.\n * @private\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = send\nmodule.exports.mime = mime\n\n/**\n * Return a `SendStream` for `req` and `path`.\n *\n * @param {object} req\n * @param {string} path\n * @param {object} [options]\n * @return {SendStream}\n * @public\n */\n\nfunction send (req\x2C path\x2C options) {\n  return new SendStream(req\x2C path\x2C options)\n}\n\n/**\n * Initialize a `SendStream` with the given `path`.\n *\n * @param {Request} req\n * @param {String} path\n * @param {object} [options]\n * @private\n */\n\nfunction SendStream (req\x2C path\x2C options) {\n  Stream.call(this)\n\n  var opts = options || {}\n\n  this.options = opts\n  this.path = path\n  this.req = req\n\n  this._acceptRanges = opts.acceptRanges !== undefined\n    ? Boolean(opts.acceptRanges)\n    : true\n\n  this._cacheControl = opts.cacheControl !== undefined\n    ? Boolean(opts.cacheControl)\n    : true\n\n  this._etag = opts.etag !== undefined\n    ? Boolean(opts.etag)\n    : true\n\n  this._dotfiles = opts.dotfiles !== undefined\n    ? opts.dotfiles\n    : 'ignore'\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be "allow"\x2C "deny"\x2C or "ignore"')\n  }\n\n  this._hidden = Boolean(opts.hidden)\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\n  }\n\n  // legacy support\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined\n  }\n\n  this._extensions = opts.extensions !== undefined\n    ? normalizeList(opts.extensions\x2C 'extensions option')\n    : []\n\n  this._immutable = opts.immutable !== undefined\n    ? Boolean(opts.immutable)\n    : false\n\n  this._index = opts.index !== undefined\n    ? normalizeList(opts.index\x2C 'index option')\n    : ['index.html']\n\n  this._lastModified = opts.lastModified !== undefined\n    ? Boolean(opts.lastModified)\n    : true\n\n  this._maxage = opts.maxAge || opts.maxage\n  this._maxage = typeof this._maxage === 'string'\n    ? ms(this._maxage)\n    : Number(this._maxage)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0\x2C this._maxage)\x2C MAX_MAXAGE)\n    : 0\n\n  this._root = opts.root\n    ? resolve(opts.root)\n    : null\n\n  if (!this._root && opts.from) {\n    this.from(opts.from)\n  }\n}\n\n/**\n * Inherits from `Stream`.\n */\n\nutil.inherits(SendStream\x2C Stream)\n\n/**\n * Enable or disable etag generation.\n *\n * @param {Boolean} val\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.etag = deprecate.function(function etag (val) {\n  this._etag = Boolean(val)\n  debug('etag %s'\x2C this._etag)\n  return this\n}\x2C 'send.etag: pass etag as option')\n\n/**\n * Enable or disable "hidden" (dot) files.\n *\n * @param {Boolean} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\n  this._hidden = Boolean(val)\n  this._dotfiles = undefined\n  debug('hidden %s'\x2C this._hidden)\n  return this\n}\x2C 'send.hidden: use dotfiles option')\n\n/**\n * Set index `paths`\x2C set to a falsy\n * value to disable index support.\n *\n * @param {String|Boolean|Array} paths\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.index = deprecate.function(function index (paths) {\n  var index = !paths ? [] : normalizeList(paths\x2C 'paths argument')\n  debug('index %o'\x2C paths)\n  this._index = index\n  return this\n}\x2C 'send.index: pass index as option')\n\n/**\n * Set root `path`.\n *\n * @param {String} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.root = function root (path) {\n  this._root = resolve(String(path))\n  debug('root %s'\x2C this._root)\n  return this\n}\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root\x2C\n  'send.from: pass root as option')\n\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root\x2C\n  'send.root: pass root as option')\n\n/**\n * Set max-age to `maxAge`.\n *\n * @param {Number} maxAge\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\n  this._maxage = typeof maxAge === 'string'\n    ? ms(maxAge)\n    : Number(maxAge)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0\x2C this._maxage)\x2C MAX_MAXAGE)\n    : 0\n  debug('max-age %d'\x2C this._maxage)\n  return this\n}\x2C 'send.maxage: pass maxAge as option')\n\n/**\n * Emit error with `status`.\n *\n * @param {number} status\n * @param {Error} [err]\n * @private\n */\n\nSendStream.prototype.error = function error (status\x2C err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this\x2C 'error')) {\n    return this.emit('error'\x2C createHttpError(status\x2C err))\n  }\n\n  var res = this.res\n  var msg = statuses.message[status] || String(status)\n  var doc = createHtmlDocument('Error'\x2C escapeHtml(msg))\n\n  // clear existing headers\n  clearHeaders(res)\n\n  // add error headers\n  if (err && err.headers) {\n    setHeaders(res\x2C err.headers)\n  }\n\n  // send basic response\n  res.statusCode = status\n  res.setHeader('Content-Type'\x2C 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length'\x2C Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy'\x2C "default-src 'none'")\n  res.setHeader('X-Content-Type-Options'\x2C 'nosniff')\n  res.end(doc)\n}\n\n/**\n * Check if the pathname ends with "/".\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\n  return this.path[this.path.length - 1] === '/'\n}\n\n/**\n * Check if this is a conditional GET request.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\n  return this.req.headers['if-match'] ||\n    this.req.headers['if-unmodified-since'] ||\n    this.req.headers['if-none-match'] ||\n    this.req.headers['if-modified-since']\n}\n\n/**\n * Check if the request preconditions failed.\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\n  var req = this.req\n  var res = this.res\n\n  // if-match\n  var match = req.headers['if-match']\n  if (match) {\n    var etag = res.getHeader('ETag')\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\n    }))\n  }\n\n  // if-unmodified-since\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\n    return isNaN(lastModified) || lastModified > unmodifiedSince\n  }\n\n  return false\n}\n\n/**\n * Strip various content header fields for a change in entity.\n *\n * @private\n */\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\n  var res = this.res\n\n  res.removeHeader('Content-Encoding')\n  res.removeHeader('Content-Language')\n  res.removeHeader('Content-Length')\n  res.removeHeader('Content-Range')\n  res.removeHeader('Content-Type')\n}\n\n/**\n * Respond with 304 not modified.\n *\n * @api private\n */\n\nSendStream.prototype.notModified = function notModified () {\n  var res = this.res\n  debug('not modified')\n  this.removeContentHeaderFields()\n  res.statusCode = 304\n  res.end()\n}\n\n/**\n * Raise error that headers already sent.\n *\n * @api private\n */\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\n  var err = new Error('Can\\'t set headers after they are sent.')\n  debug('headers already sent')\n  this.error(500\x2C err)\n}\n\n/**\n * Check if the request is cacheable\x2C aka\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5\x2C6}).\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isCachable = function isCachable () {\n  var statusCode = this.res.statusCode\n  return (statusCode >= 200 && statusCode < 300) ||\n    statusCode === 304\n}\n\n/**\n * Handle stat() error.\n *\n * @param {Error} error\n * @private\n */\n\nSendStream.prototype.onStatError = function onStatError (error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404\x2C error)\n      break\n    default:\n      this.error(500\x2C error)\n      break\n  }\n}\n\n/**\n * Check if the cache is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isFresh = function isFresh () {\n  return fresh(this.req.headers\x2C {\n    etag: this.res.getHeader('ETag')\x2C\n    'last-modified': this.res.getHeader('Last-Modified')\n  })\n}\n\n/**\n * Check if the range is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\n  var ifRange = this.req.headers['if-range']\n\n  if (!ifRange) {\n    return true\n  }\n\n  // if-range as etag\n  if (ifRange.indexOf('"') !== -1) {\n    var etag = this.res.getHeader('ETag')\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\n  }\n\n  // if-range as modified date\n  var lastModified = this.res.getHeader('Last-Modified')\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\n}\n\n/**\n * Redirect to path.\n *\n * @param {string} path\n * @private\n */\n\nSendStream.prototype.redirect = function redirect (path) {\n  var res = this.res\n\n  if (hasListeners(this\x2C 'directory')) {\n    this.emit('directory'\x2C res\x2C path)\n    return\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403)\n    return\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\n  var doc = createHtmlDocument('Redirecting'\x2C 'Redirecting to <a href="' + escapeHtml(loc) + '">' +\n    escapeHtml(loc) + '</a>')\n\n  // redirect\n  res.statusCode = 301\n  res.setHeader('Content-Type'\x2C 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length'\x2C Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy'\x2C "default-src 'none'")\n  res.setHeader('X-Content-Type-Options'\x2C 'nosniff')\n  res.setHeader('Location'\x2C loc)\n  res.end(doc)\n}\n\n/**\n * Pipe to `res.\n *\n * @param {Stream} res\n * @return {Stream} res\n * @api public\n */\n\nSendStream.prototype.pipe = function pipe (res) {\n  // root path\n  var root = this._root\n\n  // references\n  this.res = res\n\n  // decode the path\n  var path = decode(this.path)\n  if (path === -1) {\n    this.error(400)\n    return res\n  }\n\n  // null byte(s)\n  if (~path.indexOf('\\0')) {\n    this.error(400)\n    return res\n  }\n\n  var parts\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path)\n    }\n\n    // malicious path\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path "%s"'\x2C path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = path.split(sep)\n\n    // join / normalize from optional root dir\n    path = normalize(join(root\x2C path))\n  } else {\n    // ".." is malicious without "root"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path "%s"'\x2C path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = normalize(path).split(sep)\n\n    // resolve the path\n    path = resolve(path)\n  }\n\n  // dotfile handling\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles\n\n    // legacy support\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.'\n        ? (this._hidden ? 'allow' : 'ignore')\n        : 'allow'\n    }\n\n    debug('%s dotfile "%s"'\x2C access\x2C path)\n    switch (access) {\n      case 'allow':\n        break\n      case 'deny':\n        this.error(403)\n        return res\n      case 'ignore':\n      default:\n        this.error(404)\n        return res\n    }\n  }\n\n  // index file support\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path)\n    return res\n  }\n\n  this.sendFile(path)\n  return res\n}\n\n/**\n * Transfer `path`.\n *\n * @param {String} path\n * @api public\n */\n\nSendStream.prototype.send = function send (path\x2C stat) {\n  var len = stat.size\n  var options = this.options\n  var opts = {}\n  var res = this.res\n  var req = this.req\n  var ranges = req.headers.range\n  var offset = options.start || 0\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent()\n    return\n  }\n\n  debug('pipe "%s"'\x2C path)\n\n  // set header fields\n  this.setHeader(path\x2C stat)\n\n  // set content-type\n  this.type(path)\n\n  // conditional GET support\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412)\n      return\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified()\n      return\n    }\n  }\n\n  // adjust len to start/end options\n  len = Math.max(0\x2C len - offset)\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1\n    if (len > bytes) len = bytes\n  }\n\n  // Range support\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len\x2C ranges\x2C {\n      combine: true\n    })\n\n    // If-Range support\n    if (!this.isRangeFresh()) {\n      debug('range stale')\n      ranges = -2\n    }\n\n    // unsatisfiable\n    if (ranges === -1) {\n      debug('range unsatisfiable')\n\n      // Content-Range\n      res.setHeader('Content-Range'\x2C contentRange('bytes'\x2C len))\n\n      // 416 Requested Range Not Satisfiable\n      return this.error(416\x2C {\n        headers: { 'Content-Range': res.getHeader('Content-Range') }\n      })\n    }\n\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j'\x2C ranges)\n\n      // Content-Range\n      res.statusCode = 206\n      res.setHeader('Content-Range'\x2C contentRange('bytes'\x2C len\x2C ranges[0]))\n\n      // adjust for requested range\n      offset += ranges[0].start\n      len = ranges[0].end - ranges[0].start + 1\n    }\n  }\n\n  // clone options\n  for (var prop in options) {\n    opts[prop] = options[prop]\n  }\n\n  // set read options\n  opts.start = offset\n  opts.end = Math.max(offset\x2C offset + len - 1)\n\n  // content-length\n  res.setHeader('Content-Length'\x2C len)\n\n  // HEAD support\n  if (req.method === 'HEAD') {\n    res.end()\n    return\n  }\n\n  this.stream(path\x2C opts)\n}\n\n/**\n * Transfer file for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendFile = function sendFile (path) {\n  var i = 0\n  var self = this\n\n  debug('stat "%s"'\x2C path)\n  fs.stat(path\x2C function onstat (err\x2C stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found\x2C check extensions\n      return next(err)\n    }\n    if (err) return self.onStatError(err)\n    if (stat.isDirectory()) return self.redirect(path)\n    self.emit('file'\x2C path\x2C stat)\n    self.send(path\x2C stat)\n  })\n\n  function next (err) {\n    if (self._extensions.length <= i) {\n      return err\n        ? self.onStatError(err)\n        : self.error(404)\n    }\n\n    var p = path + '.' + self._extensions[i++]\n\n    debug('stat "%s"'\x2C p)\n    fs.stat(p\x2C function (err\x2C stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file'\x2C p\x2C stat)\n      self.send(p\x2C stat)\n    })\n  }\n}\n\n/**\n * Transfer index for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendIndex = function sendIndex (path) {\n  var i = -1\n  var self = this\n\n  function next (err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err)\n      return self.error(404)\n    }\n\n    var p = join(path\x2C self._index[i])\n\n    debug('stat "%s"'\x2C p)\n    fs.stat(p\x2C function (err\x2C stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file'\x2C p\x2C stat)\n      self.send(p\x2C stat)\n    })\n  }\n\n  next()\n}\n\n/**\n * Stream `path` to the response.\n *\n * @param {String} path\n * @param {Object} options\n * @api private\n */\n\nSendStream.prototype.stream = function stream (path\x2C options) {\n  var self = this\n  var res = this.res\n\n  // pipe\n  var stream = fs.createReadStream(path\x2C options)\n  this.emit('stream'\x2C stream)\n  stream.pipe(res)\n\n  // cleanup\n  function cleanup () {\n    destroy(stream\x2C true)\n  }\n\n  // response finished\x2C cleanup\n  onFinished(res\x2C cleanup)\n\n  // error handling\n  stream.on('error'\x2C function onerror (err) {\n    // clean up stream early\n    cleanup()\n\n    // error\n    self.onStatError(err)\n  })\n\n  // end\n  stream.on('end'\x2C function onend () {\n    self.emit('end')\n  })\n}\n\n/**\n * Set content-type based on `path`\n * if it hasn't been explicitly set.\n *\n * @param {String} path\n * @api private\n */\n\nSendStream.prototype.type = function type (path) {\n  var res = this.res\n\n  if (res.getHeader('Content-Type')) return\n\n  var type = mime.lookup(path)\n\n  if (!type) {\n    debug('no content-type')\n    return\n  }\n\n  var charset = mime.charsets.lookup(type)\n\n  debug('content-type %s'\x2C type)\n  res.setHeader('Content-Type'\x2C type + (charset ? '; charset=' + charset : ''))\n}\n\n/**\n * Set response header fields\x2C most\n * fields may be pre-defined.\n *\n * @param {String} path\n * @param {Object} stat\n * @api private\n */\n\nSendStream.prototype.setHeader = function setHeader (path\x2C stat) {\n  var res = this.res\n\n  this.emit('headers'\x2C res\x2C path\x2C stat)\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges')\n    res.setHeader('Accept-Ranges'\x2C 'bytes')\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public\x2C max-age=' + Math.floor(this._maxage / 1000)\n\n    if (this._immutable) {\n      cacheControl += '\x2C immutable'\n    }\n\n    debug('cache-control %s'\x2C cacheControl)\n    res.setHeader('Cache-Control'\x2C cacheControl)\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString()\n    debug('modified %s'\x2C modified)\n    res.setHeader('Last-Modified'\x2C modified)\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat)\n    debug('etag %s'\x2C val)\n    res.setHeader('ETag'\x2C val)\n  }\n}\n\n/**\n * Clear all headers from a response.\n *\n * @param {object} res\n * @private\n */\n\nfunction clearHeaders (res) {\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i])\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n *\n * @param {string} str\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Determine if path parts contain a dotfile.\n *\n * @api private\n */\n\nfunction containsDotFile (parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i]\n    if (part.length > 1 && part[0] === '.') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a Content-Range header.\n *\n * @param {string} type\n * @param {number} size\n * @param {array} [range]\n */\n\nfunction contentRange (type\x2C size\x2C range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title\x2C body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang="en">\\n' +\n    '<head>\\n' +\n    '<meta charset="utf-8">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a HttpError object from simple arguments.\n *\n * @param {number} status\n * @param {Error|object} err\n * @private\n */\n\nfunction createHttpError (status\x2C err) {\n  if (!err) {\n    return createError(status)\n  }\n\n  return err instanceof Error\n    ? createError(status\x2C err\x2C { expose: false })\n    : createError(status\x2C err)\n}\n\n/**\n * decodeURIComponent.\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {String} path\n * @api private\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * Get the header names on a respnse.\n *\n * @param {object} res\n * @returns {array[string]}\n * @private\n */\n\nfunction getHeaderNames (res) {\n  return typeof res.getHeaderNames !== 'function'\n    ? Object.keys(res._headers || {})\n    : res.getHeaderNames()\n}\n\n/**\n * Determine if emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction hasListeners (emitter\x2C type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Normalize the index option into an array.\n *\n * @param {boolean|string|array} val\n * @param {string} name\n * @private\n */\n\nfunction normalizeList (val\x2C name) {\n  var list = [].concat(val || [])\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false')\n    }\n  }\n\n  return list\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0\x2C len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* \x2C */\n        if (start !== end) {\n          list.push(str.substring(start\x2C end))\n        }\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  if (start !== end) {\n    list.push(str.substring(start\x2C end))\n  }\n\n  return list\n}\n\n/**\n * Set an object of headers on a response.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res\x2C headers) {\n  var keys = Object.keys(headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key\x2C headers[key])\n  }\n}\n
code-source-info,0x299e2c0783c,217,0,23502,C0O0C4O23502,,
code-creation,JS,10,306192,0x299e2c08aa4,891, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\send\\index.js:1:1,0x299e2c077b0,~
code-source-info,0x299e2c08aa
code-creation,JS,10,306620,0x299e2c09ab4,75,reportModuleNotFoundToWatchMode node:internal/modules/cjs/loader:239:41,0x22671cb6800,~
code-source-info,0x299e2c09ab4,63,7096,7299,C0O7096C9O7124C16O7128C26O7169C32O7182C37O7190C51O7214C54O7232C59O7214C68O7190C74O7298,,
code-creation,Eval,10,307381,0x299e2c0ae44,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:1:1,0x299e2c0ac40,~
script-source,218,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js,/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports\x2C statuses.codes\x2C module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    var type = typeof arg\n    if (type === 'object' && arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n    } else if (type === 'number' && i === 0) {\n      status = arg\n    } else if (type === 'string') {\n      msg = arg\n    } else if (type === 'object') {\n      props = arg\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses.message[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses.message[status])\n    Error.captureStackTrace(err\x2C createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError\x2C Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError\x2C name\x2C code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err\x2C ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err\x2C ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err\x2C 'message'\x2C {\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: msg\x2C\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err\x2C 'name'\x2C {\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: className\x2C\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError\x2C HttpError)\n  nameFunc(ClientError\x2C className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError\x2C name\x2C code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err\x2C ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err\x2C ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err\x2C 'message'\x2C {\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: msg\x2C\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err\x2C 'name'\x2C {\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: className\x2C\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError\x2C HttpError)\n  nameFunc(ServerError\x2C className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function\x2C if possible.\n * @private\n */\n\nfunction nameFunc (func\x2C name) {\n  var desc = Object.getOwnPropertyDescriptor(func\x2C 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func\x2C 'name'\x2C desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports\x2C codes\x2C HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses.message[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError\x2C name\x2C code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError\x2C name\x2C code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n
code-source-info,0x299e2c0ae44,218,0,6391,C0O0C4O6391,,
code-creation,JS,10,307588,0x299e2c0b33c,180, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:1:1,0x299e2c0adb8,~
code-source-info,0x299e2c0b33c,218,0,6391,C0O0C56O197C59O197C67O212C71O197C73O249C76O249C80O249C82O290C85O290C89O290C91O325C94O325C98O325C100O364C103O364C107O364C109O428C111O443C115O464C120O484C123O482C127O520C132O575C137O583C142O542C146O540C150O670C158O688C163O702C168O710C173O636C179O6390,,
code-creation,JS,13,307685,0x7ff62c51a780,260,isWindowsDeviceRoot node:path:60:29,0x22671c9a870,*
code-source-info,0x7ff62c51a780,34,1991,2136,C0O1991C39O2016C78O2044C105O2084C124O2133C203O1991,,
code-creation,Eval,10,308637,0x299e2c0cd3c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\inherits\\inherits.js:1:1,0x299e2c0cbb8,~
script-source,219,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\inherits\\inherits.js,try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n
code-source-info,0x299e2c0cd3c,219,0,250,C0O0C4O250,,
code-creation,JS,10,308706,0x299e2c0ce04,58, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\inherits\\inherits.js:1:1,0x299e2c0ccb0,~
code-source-info,0x299e2c0ce04,219,0,250,C3O19C6O19C11O83C19O108C21O108C22O142C26O135C43O197C46O214C50O212C57O249,,
code-creation,Eval,10,309208,0x299e2c0d98c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\toidentifier\\index.js:1:1,0x299e2c0d838,~
script-source,220,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\toidentifier\\index.js,/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0\x2C 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi\x2C '')\n}\n
code-source-info,0x299e2c0d98c,220,0,504,C0O0C4O504,,
code-creation,JS,10,309250,0x299e2c0da94,13, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\toidentifier\\index.js:1:1,0x299e2c0d900,~
code-source-info,0x299e2c0da94,220,0,504,C0O0C5O142C7O157C12O503,,
code-creation,JS,10,309296,0x299e2c0dc24,20,createHttpErrorConstructor C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:112:37,0x299e2c0af28,~
code-source-info,0x299e2c0dc24,218,2523,2668,C0O2523C5O2620C8O2640C12O2620C17O2650C19O2666,,
code-creation,JS,10,309368,0x299e2c0de3c,139,inherits node:util:241:18,0x22671ca73f8,~
code-source-info,0x299e2c0de3c,48,6207,6847,C0O6232C8O6278C24O6284C29O6278C30O6341C38O6397C54O6403C59O6397C60O6484C66O6516C77O6626C84O6522C89O6516C90O6646C98O6667C105O6719C112O6646C117O6786C122O6812C127O6833C132O6786C138O6846,,
code-creation,JS,10,309423,0x299e2c0e164,14,createIsHttpErrorFunction C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:175:36,0x299e2c0b028,~
code-source-info,0x299e2c0e164,218,3874,4211,C0O3874C9O3890C13O4209,,
code-creation,JS,10,309459,0x299e2c0e344,30,populateConstructorExports C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:258:37,0x299e2c0b180,~
code-source-info,0x299e2c0e344,218,5705,6223,C0O5705C13O5743C23O5743C29O6222,,
code-creation,JS,10,309503,0x299e2c0e46c,124,forEachCode C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:259:38,0x299e2c0e290,~
code-source-info,0x299e2c0e46c,218,5772,6220,C0O5814C10O5836C17O5843C21O5814C26O5856C31O5864C56O5907C70O5919C76O5979C78O6009C92O6021C98O6081C100O6098C104O6153C109O6167C113O6185C118O6199C123O6219,,
code-creation,JS,10,309543,0x299e2c0e66c,65,toIdentifier C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\toidentifier\\index.js:24:23,0x299e2c0d9c0,~
code-source-info,0x299e2c0e66c,220,320,503,C0O346C8O346C14O361C24O362C30O458C38O459C44O472C58O473C64O501,,
code-creation,JS,10,309580,0x299e2c0e7c4,44, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\toidentifier\\index.js:27:19,0x299e2c0e590,~
code-source-info,0x299e2c0e7c4,220,375,452,C0O404C10O404C17O415C22O416C27O438C35O438C40O430C43O446,,
code-creation,JS,10,309791,0x299e2c0e98c,37,codeClass C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:38:20,0x299e2c0ae78,~
code-source-info,0x299e2c0e98c,218,802,863,C0O815C8O829C13O843C20O844C28O854C32O822C36O861,,
code-creation,RegExp,3,309845,0x7ff62c4e7780,832,[^ _0-9a-z]
code-creation,JS,10,309944,0x299e2c0f114,99,createClientErrorConstructor C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:127:39,0x299e2c0afa8,~
code-source-info,0x299e2c0f114,218,2773,3762,C0O2773C15O2817C20O2817C24O2817C26O3552C34O3552C39O3587C50O3587C55O3623C58O3635C65O3652C69O3661C72O3673C79O3694C83O3703C86O3715C92O3732C96O3742C98O3760,,
code-creation,JS,10,309985,0x299e2c0f2ac,31,toClassName C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:285:22,0x299e2c0b200,~
code-source-info,0x299e2c0f2ac,218,6311,6390,C0O6334C8O6334C16O6345C23O6368C30O6388,,
code-creation,JS,10,310034,0x299e2c0f45c,58,nameFunc C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:244:19,0x299e2c0b128,~
code-source-info,0x299e2c0f45c,218,5391,5574,C0O5419C4O5426C12O5426C19O5468C21O5485C27O5505C29O5516C33O5527C37O5534C51O5534C57O5573,,
code-creation,JS,11,310178,0x7ff62c51a8c0,656,createClientErrorConstructor C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:127:39,0x299e2c0afa8,^
code-source-info,0x7ff62c51a8c0,218,2773,3762,,,
code-creation,JS,11,310200,0x7ff62c51ab80,236, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\toidentifier\\index.js:27:19,0x299e2c0e590,^
code-source-info,0x7ff62c51ab80,220,375,452,,,
code-creation,JS,11,310218,0x7ff62c51acc0,364,toIdentifier C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\toidentifier\\index.js:24:23,0x299e2c0d9c0,^
code-source-info,0x7ff62c51acc0,220,320,503,,,
code-creation,JS,11,310235,0x7ff62c51ae80,224,codeClass C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:38:20,0x299e2c0ae78,^
code-source-info,0x7ff62c51ae80,218,802,863,,,
code-creation,JS,11,310257,0x7ff62c51af80,536,forEachCode C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:259:38,0x299e2c0e290,^
code-source-info,0x7ff62c51af80,218,5772,6220,,,
code-creation,JS,11,310282,0x7ff62c51b1c0,1000,inherits node:util:241:18,0x22671ca73f8,^
code-source-info,0x7ff62c51b1c0,48,6207,6847,,,
code-creation,JS,11,310297,0x7ff62c51b600,176,toClassName C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:285:22,0x299e2c0b200,^
code-source-info,0x7ff62c51b600,218,6311,6390,,,
code-creation,JS,11,310314,0x7ff62c51b700,328,nameFunc C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:244:19,0x299e2c0b128,^
code-source-info,0x7ff62c51b700,218,5391,5574,,,
code-creation,JS,10,310561,0x299e2c11744,99,createServerErrorConstructor C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:196:39,0x299e2c0b0a8,~
code-source-info,0x299e2c11744,218,4316,5306,C0O4316C15O4360C20O4360C24O4360C26O5095C34O5095C39O5130C50O5130C55O5166C58O5178C65O5195C69O5204C72O5216C79O5237C83O5246C86O5258C92O5275C96O5286C98O5304,,
code-creation,Eval,10,312215,0x299e2c13cac,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\destroy\\index.js:1:1,0x299e2c13a78,~
script-source,221,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\destroy\\index.js,/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\nvar Zlib = require('zlib')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy the given stream\x2C and optionally suppress any future `error` events.\n *\n * @param {object} stream\n * @param {boolean} suppress\n * @public\n */\n\nfunction destroy (stream\x2C suppress) {\n  if (isFsReadStream(stream)) {\n    destroyReadStream(stream)\n  } else if (isZlibStream(stream)) {\n    destroyZlibStream(stream)\n  } else if (hasDestroy(stream)) {\n    stream.destroy()\n  }\n\n  if (isEventEmitter(stream) && suppress) {\n    stream.removeAllListeners('error')\n    stream.addListener('error'\x2C noop)\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream (stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open'\x2C onOpenClose)\n  }\n}\n\n/**\n * Close a Zlib stream.\n *\n * Zlib streams below Node.js 4.5.5 have a buggy implementation\n * of .close() when zlib encountered an error.\n *\n * @param {object} stream\n * @private\n */\n\nfunction closeZlibStream (stream) {\n  if (stream._hadError === true) {\n    var prop = stream._binding === null\n      ? '_binding'\n      : '_handle'\n\n    stream[prop] = {\n      close: function () { this[prop] = null }\n    }\n  }\n\n  stream.close()\n}\n\n/**\n * Destroy a Zlib stream.\n *\n * Zlib streams don't have a destroy function in Node.js 6. On top of that\n * simply calling destroy on a zlib stream in Node.js 8+ will result in a\n * memory leak. So until that is fixed\x2C we need to call both close AND destroy.\n *\n * PR to fix memory leak: https://github.com/nodejs/node/pull/23734\n *\n * In Node.js 6+8\x2C it's important that destroy is called before close as the\n * stream would otherwise emit the error 'zlib binding closed'.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyZlibStream (stream) {\n  if (typeof stream.destroy === 'function') {\n    // node.js core bug work-around\n    // istanbul ignore if: node.js 0.8\n    if (stream._binding) {\n      // node.js < 0.10.0\n      stream.destroy()\n      if (stream._processing) {\n        stream._needDrain = true\n        stream.once('drain'\x2C onDrainClearBinding)\n      } else {\n        stream._binding.clear()\n      }\n    } else if (stream._destroy && stream._destroy !== Stream.Transform.prototype._destroy) {\n      // node.js >= 12\x2C ^11.1.0\x2C ^10.15.1\n      stream.destroy()\n    } else if (stream._destroy && typeof stream.close === 'function') {\n      // node.js 7\x2C 8\n      stream.destroyed = true\n      stream.close()\n    } else {\n      // fallback\n      // istanbul ignore next\n      stream.destroy()\n    }\n  } else if (typeof stream.close === 'function') {\n    // node.js < 8 fallback\n    closeZlibStream(stream)\n  }\n}\n\n/**\n * Determine if stream has destroy.\n * @private\n */\n\nfunction hasDestroy (stream) {\n  return stream instanceof Stream &&\n    typeof stream.destroy === 'function'\n}\n\n/**\n * Determine if val is EventEmitter.\n * @private\n */\n\nfunction isEventEmitter (val) {\n  return val instanceof EventEmitter\n}\n\n/**\n * Determine if stream is fs.ReadStream stream.\n * @private\n */\n\nfunction isFsReadStream (stream) {\n  return stream instanceof ReadStream\n}\n\n/**\n * Determine if stream is Zlib stream.\n * @private\n */\n\nfunction isZlibStream (stream) {\n  return stream instanceof Zlib.Gzip ||\n    stream instanceof Zlib.Gunzip ||\n    stream instanceof Zlib.Deflate ||\n    stream instanceof Zlib.DeflateRaw ||\n    stream instanceof Zlib.Inflate ||\n    stream instanceof Zlib.InflateRaw ||\n    stream instanceof Zlib.Unzip\n}\n\n/**\n * No-op function.\n * @private\n */\n\nfunction noop () {}\n\n/**\n * On drain handler to clear binding.\n * @private\n */\n\n// istanbul ignore next: node.js 0.8\nfunction onDrainClearBinding () {\n  this._binding.clear()\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose () {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n
code-source-info,0x299e2c13cac,221,0,4258,C0O0C4O4258,,
code-creation,JS,10,312374,0x299e2c141ac,124, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\destroy\\index.js:1:1,0x299e2c13c20,~
code-source-info,0x299e2c141ac,221,0,4258,C0O0C70O201C73O201C78O218C82O201C84O249C87O249C92O262C96O249C98O287C101O287C105O287C107O316C110O316C114O316C116O372C118O387C123O4257,,
code-creation,JS,10,312538,0x299e2c1499c,5,get node:stream:116:6,0x3ba13656b58,~
code-source-info,0x299e2c1499c,89,4231,4262,C0O4241C4O4257,,
code-creation,Eval,10,313239,0x299e2c1909c,5, node:zlib:1:1,0x299e2c17c48,~
script-source,222,node:zlib,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBuffer\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathMaxApply\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BROTLI_INVALID_PARAM\x2C\x0d\n    ERR_BUFFER_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_ZLIB_INITIALIZATION_FAILED\x2C\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst { Transform\x2C finished } = require('stream');\x0d\nconst {\x0d\n  deprecate\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isUint8Array\x2C\x0d\n} = require('internal/util/types');\x0d\nconst binding = internalBinding('zlib');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  Buffer\x2C\x0d\n  kMaxLength\x2C\x0d\n} = require('buffer');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateNumber\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kFlushFlag = Symbol('kFlushFlag');\x0d\nconst kError = Symbol('kError');\x0d\n\x0d\nconst constants = internalBinding('constants').zlib;\x0d\nconst {\x0d\n  // Zlib flush levels\x0d\n  Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH\x2C\x0d\n  // Zlib option values\x0d\n  Z_MIN_CHUNK\x2C Z_MIN_WINDOWBITS\x2C Z_MAX_WINDOWBITS\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C\x0d\n  Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_CHUNK\x2C Z_DEFAULT_COMPRESSION\x2C\x0d\n  Z_DEFAULT_STRATEGY\x2C Z_DEFAULT_WINDOWBITS\x2C Z_DEFAULT_MEMLEVEL\x2C Z_FIXED\x2C\x0d\n  // Node's compression stream modes (node_zlib_mode)\x0d\n  DEFLATE\x2C DEFLATERAW\x2C INFLATE\x2C INFLATERAW\x2C GZIP\x2C GUNZIP\x2C UNZIP\x2C\x0d\n  BROTLI_DECODE\x2C BROTLI_ENCODE\x2C\x0d\n  // Brotli operations (~flush levels)\x0d\n  BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_FLUSH\x2C\x0d\n  BROTLI_OPERATION_FINISH\x2C BROTLI_OPERATION_EMIT_METADATA\x2C\x0d\n} = constants;\x0d\n\x0d\n// Translation table for return codes.\x0d\nconst codes = {\x0d\n  Z_OK: constants.Z_OK\x2C\x0d\n  Z_STREAM_END: constants.Z_STREAM_END\x2C\x0d\n  Z_NEED_DICT: constants.Z_NEED_DICT\x2C\x0d\n  Z_ERRNO: constants.Z_ERRNO\x2C\x0d\n  Z_STREAM_ERROR: constants.Z_STREAM_ERROR\x2C\x0d\n  Z_DATA_ERROR: constants.Z_DATA_ERROR\x2C\x0d\n  Z_MEM_ERROR: constants.Z_MEM_ERROR\x2C\x0d\n  Z_BUF_ERROR: constants.Z_BUF_ERROR\x2C\x0d\n  Z_VERSION_ERROR: constants.Z_VERSION_ERROR\x2C\x0d\n};\x0d\n\x0d\nfor (const ckey of ObjectKeys(codes)) {\x0d\n  codes[codes[ckey]] = ckey;\x0d\n}\x0d\n\x0d\nfunction zlibBuffer(engine\x2C buffer\x2C callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  // Streams do not support non-Uint8Array ArrayBufferViews yet. Convert it to a\x0d\n  // Buffer without copying.\x0d\n  if (isArrayBufferView(buffer) && !isUint8Array(buffer)) {\x0d\n    buffer = Buffer.from(buffer.buffer\x2C buffer.byteOffset\x2C buffer.byteLength);\x0d\n  } else if (isAnyArrayBuffer(buffer)) {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  }\x0d\n  engine.buffers = null;\x0d\n  engine.nread = 0;\x0d\n  engine.cb = callback;\x0d\n  engine.on('data'\x2C zlibBufferOnData);\x0d\n  engine.on('error'\x2C zlibBufferOnError);\x0d\n  engine.on('end'\x2C zlibBufferOnEnd);\x0d\n  engine.end(buffer);\x0d\n}\x0d\n\x0d\nfunction zlibBufferOnData(chunk) {\x0d\n  if (!this.buffers)\x0d\n    this.buffers = [chunk];\x0d\n  else\x0d\n    ArrayPrototypePush(this.buffers\x2C chunk);\x0d\n  this.nread += chunk.length;\x0d\n  if (this.nread > this._maxOutputLength) {\x0d\n    this.close();\x0d\n    this.removeAllListeners('end');\x0d\n    this.cb(new ERR_BUFFER_TOO_LARGE(this._maxOutputLength));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction zlibBufferOnError(err) {\x0d\n  this.removeAllListeners('end');\x0d\n  this.cb(err);\x0d\n}\x0d\n\x0d\nfunction zlibBufferOnEnd() {\x0d\n  let buf;\x0d\n  if (this.nread === 0) {\x0d\n    buf = Buffer.alloc(0);\x0d\n  } else {\x0d\n    const bufs = this.buffers;\x0d\n    buf = (bufs.length === 1 ? bufs[0] : Buffer.concat(bufs\x2C this.nread));\x0d\n  }\x0d\n  this.close();\x0d\n  if (this._info)\x0d\n    this.cb(null\x2C { buffer: buf\x2C engine: this });\x0d\n  else\x0d\n    this.cb(null\x2C buf);\x0d\n}\x0d\n\x0d\nfunction zlibBufferSync(engine\x2C buffer) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    if (isAnyArrayBuffer(buffer)) {\x0d\n      buffer = Buffer.from(buffer);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'buffer'\x2C\x0d\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\x0d\n        buffer\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  buffer = processChunkSync(engine\x2C buffer\x2C engine._finishFlushFlag);\x0d\n  if (engine._info)\x0d\n    return { buffer\x2C engine };\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction zlibOnError(message\x2C errno\x2C code) {\x0d\n  const self = this[owner_symbol];\x0d\n  // There is no way to cleanly recover.\x0d\n  // Continuing only obscures problems.\x0d\n\x0d\n  const error = genericNodeError(message\x2C { errno\x2C code });\x0d\n  error.errno = errno;\x0d\n  error.code = code;\x0d\n  self.destroy(error);\x0d\n  self[kError] = error;\x0d\n}\x0d\n\x0d\n// 1. Returns false for undefined and NaN\x0d\n// 2. Returns true for finite numbers\x0d\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\x0d\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers\x0d\nconst checkFiniteNumber = hideStackFrames((number\x2C name) => {\x0d\n  // Common case\x0d\n  if (number === undefined) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (NumberIsFinite(number)) {\x0d\n    return true; // Is a valid number\x0d\n  }\x0d\n\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  validateNumber.withoutStackTrace(number\x2C name);\x0d\n\x0d\n  // Infinite numbers\x0d\n  throw new ERR_OUT_OF_RANGE.HideStackFramesError(name\x2C 'a finite number'\x2C number);\x0d\n});\x0d\n\x0d\n// 1. Returns def for number when it's undefined or NaN\x0d\n// 2. Returns number for finite numbers >= lower and <= upper\x0d\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\x0d\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers or numbers > upper or < lower\x0d\nconst checkRangesOrGetDefault = hideStackFrames(\x0d\n  (number\x2C name\x2C lower\x2C upper\x2C def) => {\x0d\n    if (!checkFiniteNumber.withoutStackTrace(number\x2C name)) {\x0d\n      return def;\x0d\n    }\x0d\n    if (number < lower || number > upper) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError(name\x2C\x0d\n                                                      `>= ${lower} and <= ${upper}`\x2C number);\x0d\n    }\x0d\n    return number;\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst FLUSH_BOUND = [\x0d\n  [ Z_NO_FLUSH\x2C Z_BLOCK ]\x2C\x0d\n  [ BROTLI_OPERATION_PROCESS\x2C BROTLI_OPERATION_EMIT_METADATA ]\x2C\x0d\n];\x0d\nconst FLUSH_BOUND_IDX_NORMAL = 0;\x0d\nconst FLUSH_BOUND_IDX_BROTLI = 1;\x0d\n\x0d\n// The base class for all Zlib-style streams.\x0d\nfunction ZlibBase(opts\x2C mode\x2C handle\x2C { flush\x2C finishFlush\x2C fullFlush }) {\x0d\n  let chunkSize = Z_DEFAULT_CHUNK;\x0d\n  let maxOutputLength = kMaxLength;\x0d\n  // The ZlibBase class is not exported to user land\x2C the mode should only be\x0d\n  // passed in by us.\x0d\n  assert(typeof mode === 'number');\x0d\n  assert(mode >= DEFLATE && mode <= BROTLI_ENCODE);\x0d\n\x0d\n  let flushBoundIdx;\x0d\n  if (mode !== BROTLI_ENCODE && mode !== BROTLI_DECODE) {\x0d\n    flushBoundIdx = FLUSH_BOUND_IDX_NORMAL;\x0d\n  } else {\x0d\n    flushBoundIdx = FLUSH_BOUND_IDX_BROTLI;\x0d\n  }\x0d\n\x0d\n  if (opts) {\x0d\n    chunkSize = opts.chunkSize;\x0d\n    if (!checkFiniteNumber(chunkSize\x2C 'options.chunkSize')) {\x0d\n      chunkSize = Z_DEFAULT_CHUNK;\x0d\n    } else if (chunkSize < Z_MIN_CHUNK) {\x0d\n      throw new ERR_OUT_OF_RANGE('options.chunkSize'\x2C\x0d\n                                 `>= ${Z_MIN_CHUNK}`\x2C chunkSize);\x0d\n    }\x0d\n\x0d\n    flush = checkRangesOrGetDefault(\x0d\n      opts.flush\x2C 'options.flush'\x2C\x0d\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C flush);\x0d\n\x0d\n    finishFlush = checkRangesOrGetDefault(\x0d\n      opts.finishFlush\x2C 'options.finishFlush'\x2C\x0d\n      FLUSH_BOUND[flushBoundIdx][0]\x2C FLUSH_BOUND[flushBoundIdx][1]\x2C\x0d\n      finishFlush);\x0d\n\x0d\n    maxOutputLength = checkRangesOrGetDefault(\x0d\n      opts.maxOutputLength\x2C 'options.maxOutputLength'\x2C\x0d\n      1\x2C kMaxLength\x2C kMaxLength);\x0d\n\x0d\n    if (opts.encoding || opts.objectMode || opts.writableObjectMode) {\x0d\n      opts = { ...opts };\x0d\n      opts.encoding = null;\x0d\n      opts.objectMode = false;\x0d\n      opts.writableObjectMode = false;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ReflectApply(Transform\x2C this\x2C [{ autoDestroy: true\x2C ...opts }]);\x0d\n  this[kError] = null;\x0d\n  this.bytesWritten = 0;\x0d\n  this._handle = handle;\x0d\n  handle[owner_symbol] = this;\x0d\n  // Used by processCallback() and zlibOnError()\x0d\n  handle.onerror = zlibOnError;\x0d\n  this._outBuffer = Buffer.allocUnsafe(chunkSize);\x0d\n  this._outOffset = 0;\x0d\n\x0d\n  this._chunkSize = chunkSize;\x0d\n  this._defaultFlushFlag = flush;\x0d\n  this._finishFlushFlag = finishFlush;\x0d\n  this._defaultFullFlushFlag = fullFlush;\x0d\n  this._info = opts && opts.info;\x0d\n  this._maxOutputLength = maxOutputLength;\x0d\n}\x0d\nObjectSetPrototypeOf(ZlibBase.prototype\x2C Transform.prototype);\x0d\nObjectSetPrototypeOf(ZlibBase\x2C Transform);\x0d\n\x0d\nObjectDefineProperty(ZlibBase.prototype\x2C '_closed'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return !this._handle;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// `bytesRead` made sense as a name when looking from the zlib engine's\x0d\n// perspective\x2C but it is inconsistent with all other streams exposed by Node.js\x0d\n// that have this concept\x2C where it stands for the number of bytes read\x0d\n// *from* the stream (that is\x2C net.Socket/tls.Socket & file system streams).\x0d\nObjectDefineProperty(ZlibBase.prototype\x2C 'bytesRead'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this.bytesWritten;\x0d\n  }\x2C 'zlib.bytesRead is deprecated and will change its meaning in the ' +\x0d\n     'future. Use zlib.bytesWritten instead.'\x2C 'DEP0108')\x2C\x0d\n  set: deprecate(function(value) {\x0d\n    this.bytesWritten = value;\x0d\n  }\x2C 'Setting zlib.bytesRead is deprecated. ' +\x0d\n     'This feature will be removed in the future.'\x2C 'DEP0108')\x2C\x0d\n});\x0d\n\x0d\nZlibBase.prototype.reset = function() {\x0d\n  if (!this._handle)\x0d\n    assert(false\x2C 'zlib binding closed');\x0d\n  return this._handle.reset();\x0d\n};\x0d\n\x0d\n// This is the _flush function called by the transform class\x2C\x0d\n// internally\x2C when the last chunk has been written.\x0d\nZlibBase.prototype._flush = function(callback) {\x0d\n  this._transform(Buffer.alloc(0)\x2C ''\x2C callback);\x0d\n};\x0d\n\x0d\n// Force Transform compat behavior.\x0d\nZlibBase.prototype._final = function(callback) {\x0d\n  callback();\x0d\n};\x0d\n\x0d\n// If a flush is scheduled while another flush is still pending\x2C a way to figure\x0d\n// out which one is the "stronger" flush is needed.\x0d\n// This is currently only used to figure out which flush flag to use for the\x0d\n// last chunk.\x0d\n// Roughly\x2C the following holds:\x0d\n// Z_NO_FLUSH (< Z_TREES) < Z_BLOCK < Z_PARTIAL_FLUSH <\x0d\n//     Z_SYNC_FLUSH < Z_FULL_FLUSH < Z_FINISH\x0d\nconst flushiness = [];\x0d\nlet i = 0;\x0d\nconst kFlushFlagList = [Z_NO_FLUSH\x2C Z_BLOCK\x2C Z_PARTIAL_FLUSH\x2C\x0d\n                        Z_SYNC_FLUSH\x2C Z_FULL_FLUSH\x2C Z_FINISH];\x0d\nfor (const flushFlag of kFlushFlagList) {\x0d\n  flushiness[flushFlag] = i++;\x0d\n}\x0d\n\x0d\nfunction maxFlush(a\x2C b) {\x0d\n  return flushiness[a] > flushiness[b] ? a : b;\x0d\n}\x0d\n\x0d\n// Set up a list of 'special' buffers that can be written using .write()\x0d\n// from the .flush() code as a way of introducing flushing operations into the\x0d\n// write sequence.\x0d\nconst kFlushBuffers = [];\x0d\n{\x0d\n  const dummyArrayBuffer = new ArrayBuffer();\x0d\n  for (const flushFlag of kFlushFlagList) {\x0d\n    kFlushBuffers[flushFlag] = Buffer.from(dummyArrayBuffer);\x0d\n    kFlushBuffers[flushFlag][kFlushFlag] = flushFlag;\x0d\n  }\x0d\n}\x0d\n\x0d\nZlibBase.prototype.flush = function(kind\x2C callback) {\x0d\n  if (typeof kind === 'function' || (kind === undefined && !callback)) {\x0d\n    callback = kind;\x0d\n    kind = this._defaultFullFlushFlag;\x0d\n  }\x0d\n\x0d\n  if (this.writableFinished) {\x0d\n    if (callback)\x0d\n      process.nextTick(callback);\x0d\n  } else if (this.writableEnded) {\x0d\n    if (callback)\x0d\n      this.once('end'\x2C callback);\x0d\n  } else {\x0d\n    this.write(kFlushBuffers[kind]\x2C ''\x2C callback);\x0d\n  }\x0d\n};\x0d\n\x0d\nZlibBase.prototype.close = function(callback) {\x0d\n  if (callback) finished(this\x2C callback);\x0d\n  this.destroy();\x0d\n};\x0d\n\x0d\nZlibBase.prototype._destroy = function(err\x2C callback) {\x0d\n  _close(this);\x0d\n  callback(err);\x0d\n};\x0d\n\x0d\nZlibBase.prototype._transform = function(chunk\x2C encoding\x2C cb) {\x0d\n  let flushFlag = this._defaultFlushFlag;\x0d\n  // We use a 'fake' zero-length chunk to carry information about flushes from\x0d\n  // the public API to the actual stream implementation.\x0d\n  if (typeof chunk[kFlushFlag] === 'number') {\x0d\n    flushFlag = chunk[kFlushFlag];\x0d\n  }\x0d\n\x0d\n  // For the last chunk\x2C also apply `_finishFlushFlag`.\x0d\n  if (this.writableEnded && this.writableLength === chunk.byteLength) {\x0d\n    flushFlag = maxFlush(flushFlag\x2C this._finishFlushFlag);\x0d\n  }\x0d\n  processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\x0d\n};\x0d\n\x0d\nZlibBase.prototype._processChunk = function(chunk\x2C flushFlag\x2C cb) {\x0d\n  // _processChunk() is left for backwards compatibility\x0d\n  if (typeof cb === 'function')\x0d\n    processChunk(this\x2C chunk\x2C flushFlag\x2C cb);\x0d\n  else\x0d\n    return processChunkSync(this\x2C chunk\x2C flushFlag);\x0d\n};\x0d\n\x0d\nfunction processChunkSync(self\x2C chunk\x2C flushFlag) {\x0d\n  let availInBefore = chunk.byteLength;\x0d\n  let availOutBefore = self._chunkSize - self._outOffset;\x0d\n  let inOff = 0;\x0d\n  let availOutAfter;\x0d\n  let availInAfter;\x0d\n\x0d\n  let buffers = null;\x0d\n  let nread = 0;\x0d\n  let inputRead = 0;\x0d\n  const state = self._writeState;\x0d\n  const handle = self._handle;\x0d\n  let buffer = self._outBuffer;\x0d\n  let offset = self._outOffset;\x0d\n  const chunkSize = self._chunkSize;\x0d\n\x0d\n  let error;\x0d\n  self.on('error'\x2C function onError(er) {\x0d\n    error = er;\x0d\n  });\x0d\n\x0d\n  while (true) {\x0d\n    handle.writeSync(flushFlag\x2C\x0d\n                     chunk\x2C // in\x0d\n                     inOff\x2C // in_off\x0d\n                     availInBefore\x2C // in_len\x0d\n                     buffer\x2C // out\x0d\n                     offset\x2C // out_off\x0d\n                     availOutBefore); // out_len\x0d\n    if (error)\x0d\n      throw error;\x0d\n    else if (self[kError])\x0d\n      throw self[kError];\x0d\n\x0d\n    availOutAfter = state[0];\x0d\n    availInAfter = state[1];\x0d\n\x0d\n    const inDelta = (availInBefore - availInAfter);\x0d\n    inputRead += inDelta;\x0d\n\x0d\n    const have = availOutBefore - availOutAfter;\x0d\n    if (have > 0) {\x0d\n      const out = buffer.slice(offset\x2C offset + have);\x0d\n      offset += have;\x0d\n      if (!buffers)\x0d\n        buffers = [out];\x0d\n      else\x0d\n        ArrayPrototypePush(buffers\x2C out);\x0d\n      nread += out.byteLength;\x0d\n\x0d\n      if (nread > self._maxOutputLength) {\x0d\n        _close(self);\x0d\n        throw new ERR_BUFFER_TOO_LARGE(self._maxOutputLength);\x0d\n      }\x0d\n\x0d\n    } else {\x0d\n      assert(have === 0\x2C 'have should not go down');\x0d\n    }\x0d\n\x0d\n    // Exhausted the output buffer\x2C or used all the input create a new one.\x0d\n    if (availOutAfter === 0 || offset >= chunkSize) {\x0d\n      availOutBefore = chunkSize;\x0d\n      offset = 0;\x0d\n      buffer = Buffer.allocUnsafe(chunkSize);\x0d\n    }\x0d\n\x0d\n    if (availOutAfter === 0) {\x0d\n      // Not actually done. Need to reprocess.\x0d\n      // Also\x2C update the availInBefore to the availInAfter value\x2C\x0d\n      // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\x0d\n      // it'll have the correct byte counts.\x0d\n      inOff += inDelta;\x0d\n      availInBefore = availInAfter;\x0d\n    } else {\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  self.bytesWritten = inputRead;\x0d\n  _close(self);\x0d\n\x0d\n  if (nread === 0)\x0d\n    return Buffer.alloc(0);\x0d\n\x0d\n  return (buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C nread));\x0d\n}\x0d\n\x0d\nfunction processChunk(self\x2C chunk\x2C flushFlag\x2C cb) {\x0d\n  const handle = self._handle;\x0d\n  if (!handle) return process.nextTick(cb);\x0d\n\x0d\n  handle.buffer = chunk;\x0d\n  handle.cb = cb;\x0d\n  handle.availOutBefore = self._chunkSize - self._outOffset;\x0d\n  handle.availInBefore = chunk.byteLength;\x0d\n  handle.inOff = 0;\x0d\n  handle.flushFlag = flushFlag;\x0d\n\x0d\n  handle.write(flushFlag\x2C\x0d\n               chunk\x2C // in\x0d\n               0\x2C // in_off\x0d\n               handle.availInBefore\x2C // in_len\x0d\n               self._outBuffer\x2C // out\x0d\n               self._outOffset\x2C // out_off\x0d\n               handle.availOutBefore); // out_len\x0d\n}\x0d\n\x0d\nfunction processCallback() {\x0d\n  // This callback's context (`this`) is the `_handle` (ZCtx) object. It is\x0d\n  // important to null out the values once they are no longer needed since\x0d\n  // `_handle` can stay in memory long after the buffer is needed.\x0d\n  const handle = this;\x0d\n  const self = this[owner_symbol];\x0d\n  const state = self._writeState;\x0d\n\x0d\n  if (self.destroyed) {\x0d\n    this.buffer = null;\x0d\n    this.cb();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const availOutAfter = state[0];\x0d\n  const availInAfter = state[1];\x0d\n\x0d\n  const inDelta = handle.availInBefore - availInAfter;\x0d\n  self.bytesWritten += inDelta;\x0d\n\x0d\n  const have = handle.availOutBefore - availOutAfter;\x0d\n  if (have > 0) {\x0d\n    const out = self._outBuffer.slice(self._outOffset\x2C self._outOffset + have);\x0d\n    self._outOffset += have;\x0d\n    self.push(out);\x0d\n  } else {\x0d\n    assert(have === 0\x2C 'have should not go down');\x0d\n  }\x0d\n\x0d\n  if (self.destroyed) {\x0d\n    this.cb();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Exhausted the output buffer\x2C or used all the input create a new one.\x0d\n  if (availOutAfter === 0 || self._outOffset >= self._chunkSize) {\x0d\n    handle.availOutBefore = self._chunkSize;\x0d\n    self._outOffset = 0;\x0d\n    self._outBuffer = Buffer.allocUnsafe(self._chunkSize);\x0d\n  }\x0d\n\x0d\n  if (availOutAfter === 0) {\x0d\n    // Not actually done. Need to reprocess.\x0d\n    // Also\x2C update the availInBefore to the availInAfter value\x2C\x0d\n    // so that if we have to hit it a third (fourth\x2C etc.) time\x2C\x0d\n    // it'll have the correct byte counts.\x0d\n    handle.inOff += inDelta;\x0d\n    handle.availInBefore = availInAfter;\x0d\n\x0d\n    this.write(handle.flushFlag\x2C\x0d\n               this.buffer\x2C // in\x0d\n               handle.inOff\x2C // in_off\x0d\n               handle.availInBefore\x2C // in_len\x0d\n               self._outBuffer\x2C // out\x0d\n               self._outOffset\x2C // out_off\x0d\n               self._chunkSize); // out_len\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (availInAfter > 0) {\x0d\n    // If we have more input that should be written\x2C but we also have output\x0d\n    // space available\x2C that means that the compression library was not\x0d\n    // interested in receiving more data\x2C and in particular that the input\x0d\n    // stream has ended early.\x0d\n    // This applies to streams where we don't check data past the end of\x0d\n    // what was consumed; that is\x2C everything except Gunzip/Unzip.\x0d\n    self.push(null);\x0d\n  }\x0d\n\x0d\n  // Finished with the chunk.\x0d\n  this.buffer = null;\x0d\n  this.cb();\x0d\n}\x0d\n\x0d\nfunction _close(engine) {\x0d\n  // Caller may invoke .close after a zlib error (which will null _handle).\x0d\n  if (!engine._handle)\x0d\n    return;\x0d\n\x0d\n  engine._handle.close();\x0d\n  engine._handle = null;\x0d\n}\x0d\n\x0d\nconst zlibDefaultOpts = {\x0d\n  flush: Z_NO_FLUSH\x2C\x0d\n  finishFlush: Z_FINISH\x2C\x0d\n  fullFlush: Z_FULL_FLUSH\x2C\x0d\n};\x0d\n// Base class for all streams actually backed by zlib and using zlib-specific\x0d\n// parameters.\x0d\nfunction Zlib(opts\x2C mode) {\x0d\n  let windowBits = Z_DEFAULT_WINDOWBITS;\x0d\n  let level = Z_DEFAULT_COMPRESSION;\x0d\n  let memLevel = Z_DEFAULT_MEMLEVEL;\x0d\n  let strategy = Z_DEFAULT_STRATEGY;\x0d\n  let dictionary;\x0d\n\x0d\n  if (opts) {\x0d\n    // windowBits is special. On the compression side\x2C 0 is an invalid value.\x0d\n    // But on the decompression side\x2C a value of 0 for windowBits tells zlib\x0d\n    // to use the window size in the zlib header of the compressed stream.\x0d\n    if ((opts.windowBits == null || opts.windowBits === 0) &&\x0d\n        (mode === INFLATE ||\x0d\n         mode === GUNZIP ||\x0d\n         mode === UNZIP)) {\x0d\n      windowBits = 0;\x0d\n    } else {\x0d\n      // `{ windowBits: 8 }` is valid for deflate but not gzip.\x0d\n      const min = Z_MIN_WINDOWBITS + (mode === GZIP ? 1 : 0);\x0d\n      windowBits = checkRangesOrGetDefault(\x0d\n        opts.windowBits\x2C 'options.windowBits'\x2C\x0d\n        min\x2C Z_MAX_WINDOWBITS\x2C Z_DEFAULT_WINDOWBITS);\x0d\n    }\x0d\n\x0d\n    level = checkRangesOrGetDefault(\x0d\n      opts.level\x2C 'options.level'\x2C\x0d\n      Z_MIN_LEVEL\x2C Z_MAX_LEVEL\x2C Z_DEFAULT_COMPRESSION);\x0d\n\x0d\n    memLevel = checkRangesOrGetDefault(\x0d\n      opts.memLevel\x2C 'options.memLevel'\x2C\x0d\n      Z_MIN_MEMLEVEL\x2C Z_MAX_MEMLEVEL\x2C Z_DEFAULT_MEMLEVEL);\x0d\n\x0d\n    strategy = checkRangesOrGetDefault(\x0d\n      opts.strategy\x2C 'options.strategy'\x2C\x0d\n      Z_DEFAULT_STRATEGY\x2C Z_FIXED\x2C Z_DEFAULT_STRATEGY);\x0d\n\x0d\n    dictionary = opts.dictionary;\x0d\n    if (dictionary !== undefined && !isArrayBufferView(dictionary)) {\x0d\n      if (isAnyArrayBuffer(dictionary)) {\x0d\n        dictionary = Buffer.from(dictionary);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'options.dictionary'\x2C\x0d\n          ['Buffer'\x2C 'TypedArray'\x2C 'DataView'\x2C 'ArrayBuffer']\x2C\x0d\n          dictionary\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const handle = new binding.Zlib(mode);\x0d\n  // Ideally\x2C we could let ZlibBase() set up _writeState. I haven't been able\x0d\n  // to come up with a good solution that doesn't break our internal API\x2C\x0d\n  // and with it all supported npm versions at the time of writing.\x0d\n  this._writeState = new Uint32Array(2);\x0d\n  handle.init(windowBits\x2C\x0d\n              level\x2C\x0d\n              memLevel\x2C\x0d\n              strategy\x2C\x0d\n              this._writeState\x2C\x0d\n              processCallback\x2C\x0d\n              dictionary);\x0d\n\x0d\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C zlibDefaultOpts]);\x0d\n\x0d\n  this._level = level;\x0d\n  this._strategy = strategy;\x0d\n}\x0d\nObjectSetPrototypeOf(Zlib.prototype\x2C ZlibBase.prototype);\x0d\nObjectSetPrototypeOf(Zlib\x2C ZlibBase);\x0d\n\x0d\n// This callback is used by `.params()` to wait until a full flush happened\x0d\n// before adjusting the parameters. In particular\x2C the call to the native\x0d\n// `params()` function should not happen while a write is currently in progress\x0d\n// on the threadpool.\x0d\nfunction paramsAfterFlushCallback(level\x2C strategy\x2C callback) {\x0d\n  assert(this._handle\x2C 'zlib binding closed');\x0d\n  this._handle.params(level\x2C strategy);\x0d\n  if (!this.destroyed) {\x0d\n    this._level = level;\x0d\n    this._strategy = strategy;\x0d\n    if (callback) callback();\x0d\n  }\x0d\n}\x0d\n\x0d\nZlib.prototype.params = function params(level\x2C strategy\x2C callback) {\x0d\n  checkRangesOrGetDefault(level\x2C 'level'\x2C Z_MIN_LEVEL\x2C Z_MAX_LEVEL);\x0d\n  checkRangesOrGetDefault(strategy\x2C 'strategy'\x2C Z_DEFAULT_STRATEGY\x2C Z_FIXED);\x0d\n\x0d\n  if (this._level !== level || this._strategy !== strategy) {\x0d\n    this.flush(Z_SYNC_FLUSH\x2C\x0d\n               FunctionPrototypeBind(paramsAfterFlushCallback\x2C this\x2C\x0d\n                                     level\x2C strategy\x2C callback));\x0d\n  } else {\x0d\n    process.nextTick(callback);\x0d\n  }\x0d\n};\x0d\n\x0d\n// generic zlib\x0d\n// minimal 2-byte header\x0d\nfunction Deflate(opts) {\x0d\n  if (!(this instanceof Deflate))\x0d\n    return new Deflate(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATE]);\x0d\n}\x0d\nObjectSetPrototypeOf(Deflate.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Deflate\x2C Zlib);\x0d\n\x0d\nfunction Inflate(opts) {\x0d\n  if (!(this instanceof Inflate))\x0d\n    return new Inflate(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATE]);\x0d\n}\x0d\nObjectSetPrototypeOf(Inflate.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Inflate\x2C Zlib);\x0d\n\x0d\nfunction Gzip(opts) {\x0d\n  if (!(this instanceof Gzip))\x0d\n    return new Gzip(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GZIP]);\x0d\n}\x0d\nObjectSetPrototypeOf(Gzip.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Gzip\x2C Zlib);\x0d\n\x0d\nfunction Gunzip(opts) {\x0d\n  if (!(this instanceof Gunzip))\x0d\n    return new Gunzip(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C GUNZIP]);\x0d\n}\x0d\nObjectSetPrototypeOf(Gunzip.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Gunzip\x2C Zlib);\x0d\n\x0d\nfunction DeflateRaw(opts) {\x0d\n  if (opts && opts.windowBits === 8) opts.windowBits = 9;\x0d\n  if (!(this instanceof DeflateRaw))\x0d\n    return new DeflateRaw(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C DEFLATERAW]);\x0d\n}\x0d\nObjectSetPrototypeOf(DeflateRaw.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(DeflateRaw\x2C Zlib);\x0d\n\x0d\nfunction InflateRaw(opts) {\x0d\n  if (!(this instanceof InflateRaw))\x0d\n    return new InflateRaw(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C INFLATERAW]);\x0d\n}\x0d\nObjectSetPrototypeOf(InflateRaw.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(InflateRaw\x2C Zlib);\x0d\n\x0d\nfunction Unzip(opts) {\x0d\n  if (!(this instanceof Unzip))\x0d\n    return new Unzip(opts);\x0d\n  ReflectApply(Zlib\x2C this\x2C [opts\x2C UNZIP]);\x0d\n}\x0d\nObjectSetPrototypeOf(Unzip.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Unzip\x2C Zlib);\x0d\n\x0d\nfunction createConvenienceMethod(ctor\x2C sync) {\x0d\n  if (sync) {\x0d\n    return function syncBufferWrapper(buffer\x2C opts) {\x0d\n      return zlibBufferSync(new ctor(opts)\x2C buffer);\x0d\n    };\x0d\n  }\x0d\n  return function asyncBufferWrapper(buffer\x2C opts\x2C callback) {\x0d\n    if (typeof opts === 'function') {\x0d\n      callback = opts;\x0d\n      opts = {};\x0d\n    }\x0d\n    return zlibBuffer(new ctor(opts)\x2C buffer\x2C callback);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst kMaxBrotliParam = MathMaxApply(ArrayPrototypeMap(\x0d\n  ObjectKeys(constants)\x2C\x0d\n  (key) => (StringPrototypeStartsWith(key\x2C 'BROTLI_PARAM_') ?\x0d\n    constants[key] :\x0d\n    0)\x2C\x0d\n));\x0d\n\x0d\nconst brotliInitParamsArray = new Uint32Array(kMaxBrotliParam + 1);\x0d\n\x0d\nconst brotliDefaultOpts = {\x0d\n  flush: BROTLI_OPERATION_PROCESS\x2C\x0d\n  finishFlush: BROTLI_OPERATION_FINISH\x2C\x0d\n  fullFlush: BROTLI_OPERATION_FLUSH\x2C\x0d\n};\x0d\nfunction Brotli(opts\x2C mode) {\x0d\n  assert(mode === BROTLI_DECODE || mode === BROTLI_ENCODE);\x0d\n\x0d\n  TypedArrayPrototypeFill(brotliInitParamsArray\x2C -1);\x0d\n  if (opts?.params) {\x0d\n    ArrayPrototypeForEach(ObjectKeys(opts.params)\x2C (origKey) => {\x0d\n      const key = +origKey;\x0d\n      if (NumberIsNaN(key) || key < 0 || key > kMaxBrotliParam ||\x0d\n          (brotliInitParamsArray[key] | 0) !== -1) {\x0d\n        throw new ERR_BROTLI_INVALID_PARAM(origKey);\x0d\n      }\x0d\n\x0d\n      const value = opts.params[origKey];\x0d\n      if (typeof value !== 'number' && typeof value !== 'boolean') {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.params[key]'\x2C\x0d\n                                       'number'\x2C opts.params[origKey]);\x0d\n      }\x0d\n      brotliInitParamsArray[key] = value;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  const handle = mode === BROTLI_DECODE ?\x0d\n    new binding.BrotliDecoder(mode) : new binding.BrotliEncoder(mode);\x0d\n\x0d\n  this._writeState = new Uint32Array(2);\x0d\n  // TODO(addaleax): Sometimes we generate better error codes in C++ land\x2C\x0d\n  // e.g. ERR_BROTLI_PARAM_SET_FAILED -- it's hard to access them with\x0d\n  // the current bindings setup\x2C though.\x0d\n  if (!handle.init(brotliInitParamsArray\x2C\x0d\n                   this._writeState\x2C\x0d\n                   processCallback)) {\x0d\n    throw new ERR_ZLIB_INITIALIZATION_FAILED();\x0d\n  }\x0d\n\x0d\n  ReflectApply(ZlibBase\x2C this\x2C [opts\x2C mode\x2C handle\x2C brotliDefaultOpts]);\x0d\n}\x0d\nObjectSetPrototypeOf(Brotli.prototype\x2C Zlib.prototype);\x0d\nObjectSetPrototypeOf(Brotli\x2C Zlib);\x0d\n\x0d\nfunction BrotliCompress(opts) {\x0d\n  if (!(this instanceof BrotliCompress))\x0d\n    return new BrotliCompress(opts);\x0d\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_ENCODE]);\x0d\n}\x0d\nObjectSetPrototypeOf(BrotliCompress.prototype\x2C Brotli.prototype);\x0d\nObjectSetPrototypeOf(BrotliCompress\x2C Brotli);\x0d\n\x0d\nfunction BrotliDecompress(opts) {\x0d\n  if (!(this instanceof BrotliDecompress))\x0d\n    return new BrotliDecompress(opts);\x0d\n  ReflectApply(Brotli\x2C this\x2C [opts\x2C BROTLI_DECODE]);\x0d\n}\x0d\nObjectSetPrototypeOf(BrotliDecompress.prototype\x2C Brotli.prototype);\x0d\nObjectSetPrototypeOf(BrotliDecompress\x2C Brotli);\x0d\n\x0d\n\x0d\nfunction createProperty(ctor) {\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: function(options) {\x0d\n      return new ctor(options);\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(binding.Zlib.prototype\x2C 'jsref'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x2C\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  Deflate\x2C\x0d\n  Inflate\x2C\x0d\n  Gzip\x2C\x0d\n  Gunzip\x2C\x0d\n  DeflateRaw\x2C\x0d\n  InflateRaw\x2C\x0d\n  Unzip\x2C\x0d\n  BrotliCompress\x2C\x0d\n  BrotliDecompress\x2C\x0d\n\x0d\n  // Convenience methods.\x0d\n  // compress/decompress a string or buffer in one step.\x0d\n  deflate: createConvenienceMethod(Deflate\x2C false)\x2C\x0d\n  deflateSync: createConvenienceMethod(Deflate\x2C true)\x2C\x0d\n  gzip: createConvenienceMethod(Gzip\x2C false)\x2C\x0d\n  gzipSync: createConvenienceMethod(Gzip\x2C true)\x2C\x0d\n  deflateRaw: createConvenienceMethod(DeflateRaw\x2C false)\x2C\x0d\n  deflateRawSync: createConvenienceMethod(DeflateRaw\x2C true)\x2C\x0d\n  unzip: createConvenienceMethod(Unzip\x2C false)\x2C\x0d\n  unzipSync: createConvenienceMethod(Unzip\x2C true)\x2C\x0d\n  inflate: createConvenienceMethod(Inflate\x2C false)\x2C\x0d\n  inflateSync: createConvenienceMethod(Inflate\x2C true)\x2C\x0d\n  gunzip: createConvenienceMethod(Gunzip\x2C false)\x2C\x0d\n  gunzipSync: createConvenienceMethod(Gunzip\x2C true)\x2C\x0d\n  inflateRaw: createConvenienceMethod(InflateRaw\x2C false)\x2C\x0d\n  inflateRawSync: createConvenienceMethod(InflateRaw\x2C true)\x2C\x0d\n  brotliCompress: createConvenienceMethod(BrotliCompress\x2C false)\x2C\x0d\n  brotliCompressSync: createConvenienceMethod(BrotliCompress\x2C true)\x2C\x0d\n  brotliDecompress: createConvenienceMethod(BrotliDecompress\x2C false)\x2C\x0d\n  brotliDecompressSync: createConvenienceMethod(BrotliDecompress\x2C true)\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  createDeflate: createProperty(Deflate)\x2C\x0d\n  createInflate: createProperty(Inflate)\x2C\x0d\n  createDeflateRaw: createProperty(DeflateRaw)\x2C\x0d\n  createInflateRaw: createProperty(InflateRaw)\x2C\x0d\n  createGzip: createProperty(Gzip)\x2C\x0d\n  createGunzip: createProperty(Gunzip)\x2C\x0d\n  createUnzip: createProperty(Unzip)\x2C\x0d\n  createBrotliCompress: createProperty(BrotliCompress)\x2C\x0d\n  createBrotliDecompress: createProperty(BrotliDecompress)\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  codes: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: ObjectFreeze(codes)\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// These should be considered deprecated\x0d\n// expose all the zlib constants\x0d\nfor (const bkey of ObjectKeys(constants)) {\x0d\n  if (StringPrototypeStartsWith(bkey\x2C 'BROTLI')) continue;\x0d\n  ObjectDefineProperty(module.exports\x2C bkey\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C value: constants[bkey]\x2C writable: false\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x299e2c1909c,222,0,30591,C0O0C4O30591,,
code-creation,JS,10,314437,0x299e2c1b004,4112, node:zlib:1:1,0x299e2c19010,~
code-source-info,0x299e2c1b004,222,0,30591,C0O0C360O1183C365O1199C371O1225C376O1247C382O1270C388O1296C393O1313C399O1332C405O1348C410O1375C415O1400C420O1417C426O1432C431O1457C437O1474C443O1504C448O1515C454O1543C460O1794C464O1794C470O1595C476O1602C482O1633C488O1660C494O1687C500O1710C506O1751C512O1772C517O1855C521O1855C527O1831C533O1842C539O1902C543O1902C549O1886C554O2002C558O2002C564O1940C570O1962C576O1983C582O2051C586O2051C590O2051C592O2092C596O2092C600O2092C602O2160C606O2160C612O2132C618O2143C624O2205C628O2205C634O2236C640O2188C646O2300C650O2300C656O2258C662O2279C668O2354C672O2354C676O2354C678O2392C682O2392C686O2392C688O2431C692O2431C698O2459C702O2431C704O3142C708O2502C713O2514C718O2523C723O2540C729O2554C734O2568C739O2606C745O2619C751O2637C757O2655C763O2668C769O2684C775O2700C781O2716C787O2733C793O2759C799O2779C805O2801C811O2821C817O2888C823O2897C829O2909C835O2918C841O2930C847O2936C853O2944C859O2954C865O2969C871O3027C876O3053C882O3080C888O3105C894O3210C904O3231C916O3264C928O3304C940O3339C952O3377C964O3420C976O3460C988O3499C1000O3542C1011O3585C1015O3585C1042O3577C1073O3577C1076O3609C1078O3620C1085O3628C1089O3566C1161O6176C1167O6176C1171O6176C1173O6876C1179O6876C1183O6876C1185O7285C1205O7292C1215O7304C1240O7320C1250O7346C1262O7285C1264O7416C1265O7416C1267O7451C1269O7451C1271O9619C1275O9649C1285O9670C1291O9619C1296O9683C1304O9683C1309O9729C1313O9759C1329O9850C1337O9729C1342O10205C1346O10235C1362O10333C1374O10460C1383O10333C1396O10530C1408O10637C1420O10530C1438O10205C1448O10712C1452O10721C1462O10737C1470O10973C1474O10982C1484O10999C1492O11117C1496O11126C1506O11143C1514O11574C1518O11574C1520O11587C1523O11614C1537O11615C1551O11627C1565O11636C1579O11678C1593O11692C1607O11706C1618O11742C1647O11729C1690O11729C1693O11763C1699O11774C1713O11785C1721O11718C1805O12075C1809O12075C1811O12110C1813O12110C1825O12156C1854O12143C1897O12143C1900O12179C1908O12213C1918O12213C1928O12204C1936O12242C1942O12255C1956O12279C1964O12132C2048O12303C2052O12312C2062O12328C2070O12752C2074O12761C2084O12777C2092O12869C2096O12878C2106O12897C2114O12967C2118O12976C2128O12997C2136O13551C2140O13560C2150O13584C2158O19415C2169O19427C2179O19455C2189O19479C2199O19415C2201O21980C2205O22006C2219O22026C2225O21980C2235O22039C2243O22039C2253O22614C2257O22619C2271O22636C2279O23305C2283O23334C2297O23350C2307O23305C2317O23363C2325O23363C2335O23544C2339O23573C2353O23589C2363O23544C2373O23602C2381O23602C2391O23771C2395O23797C2409O23813C2419O23771C2429O23826C2437O23826C2447O24000C2451O24028C2465O24044C2475O24000C2485O24057C2493O24057C2503O24308C2507O24340C2521O24356C2531O24308C2541O24369C2549O24369C2559O24565C2563O24597C2577O24613C2587O24565C2597O24626C2605O24626C2615O24802C2619O24829C2633O24845C2643O24802C2653O24858C2661O24858C2671O25326C2679O25361C2695O25339C2707O25326C2715O25326C2717O25516C2723O25548C2733O25516C2743O25516C2745O25583C2756O25595C2766O25637C2776O25676C2786O25583C2788O27079C2792O27107C2806O27123C2816O27079C2826O27136C2834O27136C2844O27345C2848O27381C2862O27399C2872O27345C2882O27412C2890O27412C2900O27637C2904O27675C2918O27693C2928O27637C2938O27706C2946O27706C2956O28110C2960O28139C2970O28144C2993O28189C3005O28230C3017O28110C3027O28281C3038O28303C3048O28315C3058O28327C3068O28336C3078O28347C3088O28362C3098O28377C3108O28387C3118O28406C3133O28523C3158O28580C3183O28629C3208O28680C3233O28732C3258O28795C3283O28848C3308O28901C3333O28951C3358O29008C3383O29059C3408O29114C3433O29168C3458O29231C3483O29293C3508O29364C3533O29432C3558O29507C3578O28296C3586O29593C3609O29622C3629O29665C3649O29711C3669O29760C3689O29803C3709O29842C3729O29882C3749O29930C3769O29989C3785O30037C3796O30122C3814O30149C3823O30230C3849O29563C3859O30360C3867O30360C3906O30352C3949O30352C3952O30388C3960O30392C3972O30435C3974O30476C3984O30485C3999O30555C4016O30448C4026O30341C4111O30590,,
code-creation,JS,10,315213,0x299e2c1f3ec,135,fromArrayBuffer node:buffer:480:25,0x22671c8ece0,~
code-source-info,0x299e2c1f3ec,24,14354,15056,C0O14421C4O14458C9O14491C11O14504C15O14522C20O14526C26O14558C29O14606C36O14617C40O14636C41O14650C46O14660C56O14666C61O14660C62O14711C66O14744C73O14829C75O14838C79O14852C80O14863C85O14877C87O14888C92O14910C102O14916C107O14910C110O14977C113O15006C129O15013C134O15053,,
code-creation,JS,10,315392,0x299e2c2051c,29, node:zlib:806:3,0x299e2c1a0f0,~
code-source-info,0x299e2c2051c,222,25387,25476,C0O25397C8O25397C17O25452C22O25461C28O25476,,
code-creation,JS,10,315580,0x299e2c22f7c,23,createConvenienceMethod node:zlib:789:33,0x299e2c19838,~
code-source-info,0x299e2c22f7c,222,24928,25298,C0O24928C9O24946C13O24963C17O25074C18O25083C22O25295,,
code-creation,JS,10,315668,0x299e2c23574,25,createProperty node:zlib:874:24,0x299e2c199c8,~
code-source-info,0x299e2c23574,222,27782,27954,C0O27782C9O27794C14O27885C24O27951,,
code-creation,Eval,10,318072,0x299e2c26394,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\etag\\index.js:1:1,0x299e2c261e0,~
script-source,223,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\etag\\index.js,/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity\x2C 'utf8')\n    .digest('base64')\n    .substring(0\x2C 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity\x2C 'utf8')\n    : entity.length\n\n  return '"' + len.toString(16) + '-' + hash + '"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity\x2C options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string\x2C Buffer\x2C or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '"' + size + '-' + mtime + '"'\n}\n
code-source-info,0x299e2c26394,223,0,2479,C0O0C4O2479,,
code-creation,JS,10,318247,0x299e2c265cc,74, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\etag\\index.js:1:1,0x299e2c26308,~
code-source-info,0x299e2c265cc,223,0,2479,C0O0C28O139C30O154C34O220C37O220C41O220C43O250C46O250C51O263C55O250C57O328C61O335C66O345C70O328C73O2478,,
code-creation,Eval,10,318768,0x299e2c2852c,5, node:crypto:1:1,0x299e2c28248,~
script-source,224,node:crypto,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Note: In 0.8 and before\x2C crypto functions all defaulted to using\x0d\n// binary-encoded strings rather than buffers.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  assertCrypto\x2C\x0d\n  deprecate\x2C\x0d\n} = require('internal/util');\x0d\nassertCrypto();\x0d\n\x0d\nconst {\x0d\n  ERR_CRYPTO_FIPS_FORCED\x2C\x0d\n  ERR_WORKER_UNSUPPORTED_OPERATION\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst constants = internalBinding('constants').crypto;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  getFipsCrypto\x2C\x0d\n  setFipsCrypto\x2C\x0d\n  timingSafeEqual\x2C\x0d\n} = internalBinding('crypto');\x0d\nconst {\x0d\n  checkPrime\x2C\x0d\n  checkPrimeSync\x2C\x0d\n  generatePrime\x2C\x0d\n  generatePrimeSync\x2C\x0d\n  randomBytes\x2C\x0d\n  randomFill\x2C\x0d\n  randomFillSync\x2C\x0d\n  randomInt\x2C\x0d\n  randomUUID\x2C\x0d\n} = require('internal/crypto/random');\x0d\nconst {\x0d\n  pbkdf2\x2C\x0d\n  pbkdf2Sync\x2C\x0d\n} = require('internal/crypto/pbkdf2');\x0d\nconst {\x0d\n  scrypt\x2C\x0d\n  scryptSync\x2C\x0d\n} = require('internal/crypto/scrypt');\x0d\nconst {\x0d\n  hkdf\x2C\x0d\n  hkdfSync\x2C\x0d\n} = require('internal/crypto/hkdf');\x0d\nconst {\x0d\n  generateKeyPair\x2C\x0d\n  generateKeyPairSync\x2C\x0d\n  generateKey\x2C\x0d\n  generateKeySync\x2C\x0d\n} = require('internal/crypto/keygen');\x0d\nconst {\x0d\n  createSecretKey\x2C\x0d\n  createPublicKey\x2C\x0d\n  createPrivateKey\x2C\x0d\n  KeyObject\x2C\x0d\n} = require('internal/crypto/keys');\x0d\nconst {\x0d\n  DiffieHellman\x2C\x0d\n  DiffieHellmanGroup\x2C\x0d\n  ECDH\x2C\x0d\n  diffieHellman\x2C\x0d\n} = require('internal/crypto/diffiehellman');\x0d\nconst {\x0d\n  Cipher\x2C\x0d\n  Cipheriv\x2C\x0d\n  Decipher\x2C\x0d\n  Decipheriv\x2C\x0d\n  privateDecrypt\x2C\x0d\n  privateEncrypt\x2C\x0d\n  publicDecrypt\x2C\x0d\n  publicEncrypt\x2C\x0d\n  getCipherInfo\x2C\x0d\n} = require('internal/crypto/cipher');\x0d\nconst {\x0d\n  Sign\x2C\x0d\n  signOneShot\x2C\x0d\n  Verify\x2C\x0d\n  verifyOneShot\x2C\x0d\n} = require('internal/crypto/sig');\x0d\nconst {\x0d\n  Hash\x2C\x0d\n  Hmac\x2C\x0d\n} = require('internal/crypto/hash');\x0d\nconst {\x0d\n  X509Certificate\x2C\x0d\n} = require('internal/crypto/x509');\x0d\nconst {\x0d\n  getCiphers\x2C\x0d\n  getCurves\x2C\x0d\n  getHashes\x2C\x0d\n  setEngine\x2C\x0d\n  secureHeapUsed\x2C\x0d\n} = require('internal/crypto/util');\x0d\nconst Certificate = require('internal/crypto/certificate');\x0d\n\x0d\nlet webcrypto;\x0d\nfunction lazyWebCrypto() {\x0d\n  webcrypto ??= require('internal/crypto/webcrypto');\x0d\n  return webcrypto;\x0d\n}\x0d\n\x0d\nlet ownsProcessState;\x0d\nfunction lazyOwnsProcessState() {\x0d\n  ownsProcessState ??= require('internal/worker').ownsProcessState;\x0d\n  return ownsProcessState;\x0d\n}\x0d\n\x0d\n// These helper functions are needed because the constructors can\x0d\n// use new\x2C in which case V8 cannot inline the recursive constructor call\x0d\nfunction createHash(algorithm\x2C options) {\x0d\n  return new Hash(algorithm\x2C options);\x0d\n}\x0d\n\x0d\nfunction createCipher(cipher\x2C password\x2C options) {\x0d\n  return new Cipher(cipher\x2C password\x2C options);\x0d\n}\x0d\n\x0d\nfunction createCipheriv(cipher\x2C key\x2C iv\x2C options) {\x0d\n  return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\x0d\n}\x0d\n\x0d\nfunction createDecipher(cipher\x2C password\x2C options) {\x0d\n  return new Decipher(cipher\x2C password\x2C options);\x0d\n}\x0d\n\x0d\nfunction createDecipheriv(cipher\x2C key\x2C iv\x2C options) {\x0d\n  return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\x0d\n}\x0d\n\x0d\nfunction createDiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\x0d\n  return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\x0d\n}\x0d\n\x0d\nfunction createDiffieHellmanGroup(name) {\x0d\n  return new DiffieHellmanGroup(name);\x0d\n}\x0d\n\x0d\nfunction createECDH(curve) {\x0d\n  return new ECDH(curve);\x0d\n}\x0d\n\x0d\nfunction createHmac(hmac\x2C key\x2C options) {\x0d\n  return new Hmac(hmac\x2C key\x2C options);\x0d\n}\x0d\n\x0d\nfunction createSign(algorithm\x2C options) {\x0d\n  return new Sign(algorithm\x2C options);\x0d\n}\x0d\n\x0d\nfunction createVerify(algorithm\x2C options) {\x0d\n  return new Verify(algorithm\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  // Methods\x0d\n  checkPrime\x2C\x0d\n  checkPrimeSync\x2C\x0d\n  createCipheriv\x2C\x0d\n  createDecipheriv\x2C\x0d\n  createDiffieHellman\x2C\x0d\n  createDiffieHellmanGroup\x2C\x0d\n  createECDH\x2C\x0d\n  createHash\x2C\x0d\n  createHmac\x2C\x0d\n  createPrivateKey\x2C\x0d\n  createPublicKey\x2C\x0d\n  createSecretKey\x2C\x0d\n  createSign\x2C\x0d\n  createVerify\x2C\x0d\n  diffieHellman\x2C\x0d\n  generatePrime\x2C\x0d\n  generatePrimeSync\x2C\x0d\n  getCiphers\x2C\x0d\n  getCipherInfo\x2C\x0d\n  getCurves\x2C\x0d\n  getDiffieHellman: createDiffieHellmanGroup\x2C\x0d\n  getHashes\x2C\x0d\n  hkdf\x2C\x0d\n  hkdfSync\x2C\x0d\n  pbkdf2\x2C\x0d\n  pbkdf2Sync\x2C\x0d\n  generateKeyPair\x2C\x0d\n  generateKeyPairSync\x2C\x0d\n  generateKey\x2C\x0d\n  generateKeySync\x2C\x0d\n  privateDecrypt\x2C\x0d\n  privateEncrypt\x2C\x0d\n  publicDecrypt\x2C\x0d\n  publicEncrypt\x2C\x0d\n  randomBytes\x2C\x0d\n  randomFill\x2C\x0d\n  randomFillSync\x2C\x0d\n  randomInt\x2C\x0d\n  randomUUID\x2C\x0d\n  scrypt\x2C\x0d\n  scryptSync\x2C\x0d\n  sign: signOneShot\x2C\x0d\n  setEngine\x2C\x0d\n  timingSafeEqual\x2C\x0d\n  getFips\x2C\x0d\n  setFips\x2C\x0d\n  verify: verifyOneShot\x2C\x0d\n\x0d\n  // Classes\x0d\n  Certificate\x2C\x0d\n  Cipher\x2C\x0d\n  Cipheriv\x2C\x0d\n  Decipher\x2C\x0d\n  Decipheriv\x2C\x0d\n  DiffieHellman\x2C\x0d\n  DiffieHellmanGroup\x2C\x0d\n  ECDH\x2C\x0d\n  Hash\x2C\x0d\n  Hmac\x2C\x0d\n  KeyObject\x2C\x0d\n  Sign\x2C\x0d\n  Verify\x2C\x0d\n  X509Certificate\x2C\x0d\n  secureHeapUsed\x2C\x0d\n};\x0d\n\x0d\nfunction getFips() {\x0d\n  return getOptionValue('--force-fips') ? 1 : getFipsCrypto();\x0d\n}\x0d\n\x0d\nfunction setFips(val) {\x0d\n  if (getOptionValue('--force-fips')) {\x0d\n    if (val) return;\x0d\n    throw new ERR_CRYPTO_FIPS_FORCED();\x0d\n  } else {\x0d\n    if (!lazyOwnsProcessState()) {\x0d\n      throw new ERR_WORKER_UNSUPPORTED_OPERATION('Calling crypto.setFips()');\x0d\n    }\x0d\n    setFipsCrypto(val);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRandomValues(array) {\x0d\n  return lazyWebCrypto().crypto.getRandomValues(array);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(constants\x2C 'defaultCipherList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const value = getOptionValue('--tls-cipher-list');\x0d\n    ObjectDefineProperty(this\x2C 'defaultCipherList'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      value\x2C\x0d\n    });\x0d\n    return value;\x0d\n  }\x2C\x0d\n  set(val) {\x0d\n    ObjectDefineProperty(this\x2C 'defaultCipherList'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: val\x2C\x0d\n    });\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n});\x0d\n\x0d\nfunction getRandomBytesAlias(key) {\x0d\n  return {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      let value;\x0d\n      if (getOptionValue('--pending-deprecation')) {\x0d\n        value = deprecate(\x0d\n          randomBytes\x2C\x0d\n          `crypto.${key} is deprecated.`\x2C\x0d\n          'DEP0115');\x0d\n      } else {\x0d\n        value = randomBytes;\x0d\n      }\x0d\n      ObjectDefineProperty(\x0d\n        this\x2C\x0d\n        key\x2C\x0d\n        {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          writable: true\x2C\x0d\n          value: value\x2C\x0d\n        }\x2C\x0d\n      );\x0d\n      return value;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      ObjectDefineProperty(\x0d\n        this\x2C\x0d\n        key\x2C\x0d\n        {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: true\x2C\x0d\n          configurable: true\x2C\x0d\n          writable: true\x2C\x0d\n          value\x2C\x0d\n        }\x2C\x0d\n      );\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  createCipher: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: deprecate(createCipher\x2C\x0d\n                     'crypto.createCipher is deprecated.'\x2C 'DEP0106')\x2C\x0d\n  }\x2C\x0d\n  createDecipher: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: deprecate(createDecipher\x2C\x0d\n                     'crypto.createDecipher is deprecated.'\x2C 'DEP0106')\x2C\x0d\n  }\x2C\x0d\n  // crypto.fips is deprecated. DEP0093. Use crypto.getFips()/crypto.setFips()\x0d\n  fips: {\x0d\n    __proto__: null\x2C\x0d\n    get: getFips\x2C\x0d\n    set: setFips\x2C\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  webcrypto: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return lazyWebCrypto().crypto; }\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n\x0d\n  subtle: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return lazyWebCrypto().crypto.subtle; }\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n\x0d\n  getRandomValues: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: () => getRandomValues\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Aliases for randomBytes are deprecated.\x0d\n  // The ecosystem needs those to exist for backwards compatibility.\x0d\n  prng: getRandomBytesAlias('prng')\x2C\x0d\n  pseudoRandomBytes: getRandomBytesAlias('pseudoRandomBytes')\x2C\x0d\n  rng: getRandomBytesAlias('rng')\x2C\x0d\n});\x0d\n
code-source-info,0x299e2c2852c,224,0,9218,C0O0C4O9218,,
code-creation,JS,10,319334,0x299e2c29944,1648, node:crypto:1:1,0x299e2c284a0,~
code-source-info,0x299e2c
tick,0x7ff6abda59a0,319792,0,0x0,0,0x7ff62c4c3ef2,0x7ff62c509eb5,0x7ff62c50a29f,0x7ff62c50f175,0x7ff62c50833e,0x7ff62c50850f,0x299e2c265f1,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x299e2c08b51,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2773ccb76ae,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f037d0,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,JS,10,319913,0x299e2c2a61c,19,assertCrypto node:internal/util:205:22,0xfca8d3fb68,~
code-source-info,0x299e2c2a61c,16,5639,5695,C0O5647C6O5666C11O5672C16O5666C18O5694,,
code-creation,Eval,10,320706,0x299e2c3c644,5, node:internal/crypto/random:1:1,0x299e2c3c0b0,~
script-source,225,node:internal/crypto/random,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayBufferPrototypeGetByteLength\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigInt\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  DataView\x2C\x0d\n  DataViewPrototypeGetUint8\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  NumberPrototypeToString\x2C\x0d\n  StringFromCharCodeApply\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  RandomBytesJob\x2C\x0d\n  RandomPrimeJob\x2C\x0d\n  CheckPrimeJob\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n  secureBuffer\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer\x2C kMaxLength } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_OPERATION_FAILED\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateNumber\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isTypedArray\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst { FastBuffer } = require('internal/buffer');\x0d\n\x0d\nconst kMaxInt32 = 2 ** 31 - 1;\x0d\nconst kMaxPossibleLength = MathMin(kMaxLength\x2C kMaxInt32);\x0d\n\x0d\nfunction assertOffset(offset\x2C elementSize\x2C length) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  offset *= elementSize;\x0d\n\x0d\n  const maxLength = MathMin(length\x2C kMaxPossibleLength);\x0d\n  if (NumberIsNaN(offset) || offset > maxLength || offset < 0) {\x0d\n    throw new ERR_OUT_OF_RANGE('offset'\x2C `>= 0 && <= ${maxLength}`\x2C offset);\x0d\n  }\x0d\n\x0d\n  return offset >>> 0;  // Convert to uint32.\x0d\n}\x0d\n\x0d\nfunction assertSize(size\x2C elementSize\x2C offset\x2C length) {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  size *= elementSize;\x0d\n\x0d\n  if (NumberIsNaN(size) || size > kMaxPossibleLength || size < 0) {\x0d\n    throw new ERR_OUT_OF_RANGE('size'\x2C\x0d\n                               `>= 0 && <= ${kMaxPossibleLength}`\x2C size);\x0d\n  }\x0d\n\x0d\n  if (size + offset > length) {\x0d\n    throw new ERR_OUT_OF_RANGE('size + offset'\x2C `<= ${length}`\x2C size + offset);\x0d\n  }\x0d\n\x0d\n  return size >>> 0;  // Convert to uint32.\x0d\n}\x0d\n\x0d\nfunction randomBytes(size\x2C callback) {\x0d\n  size = assertSize(size\x2C 1\x2C 0\x2C Infinity);\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  const buf = new FastBuffer(size);\x0d\n\x0d\n  if (callback === undefined) {\x0d\n    randomFillSync(buf.buffer\x2C 0\x2C size);\x0d\n    return buf;\x0d\n  }\x0d\n\x0d\n  // Keep the callback as a regular function so this is propagated.\x0d\n  randomFill(buf.buffer\x2C 0\x2C size\x2C function(error) {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction randomFillSync(buf\x2C offset = 0\x2C size) {\x0d\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'buf'\x2C\x0d\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n      buf);\x0d\n  }\x0d\n\x0d\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\x0d\n\x0d\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\x0d\n\x0d\n  if (size === undefined) {\x0d\n    size = buf.byteLength - offset;\x0d\n  } else {\x0d\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  if (size === 0)\x0d\n    return buf;\x0d\n\x0d\n  const job = new RandomBytesJob(\x0d\n    kCryptoJobSync\x2C\x0d\n    buf\x2C\x0d\n    offset\x2C\x0d\n    size);\x0d\n\x0d\n  const err = job.run()[0];\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nfunction randomFill(buf\x2C offset\x2C size\x2C callback) {\x0d\n  if (!isAnyArrayBuffer(buf) && !isArrayBufferView(buf)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'buf'\x2C\x0d\n      ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n      buf);\x0d\n  }\x0d\n\x0d\n  const elementSize = buf.BYTES_PER_ELEMENT || 1;\x0d\n\x0d\n  if (typeof offset === 'function') {\x0d\n    callback = offset;\x0d\n    offset = 0;\x0d\n    // Size is a length here\x2C assertSize() call turns it into a number of bytes\x0d\n    size = buf.length;\x0d\n  } else if (typeof size === 'function') {\x0d\n    callback = size;\x0d\n    size = buf.length - offset;\x0d\n  } else {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  offset = assertOffset(offset\x2C elementSize\x2C buf.byteLength);\x0d\n\x0d\n  if (size === undefined) {\x0d\n    size = buf.byteLength - offset;\x0d\n  } else {\x0d\n    size = assertSize(size\x2C elementSize\x2C offset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  if (size === 0) {\x0d\n    callback(null\x2C buf);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const job = new RandomBytesJob(\x0d\n    kCryptoJobAsync\x2C\x0d\n    buf\x2C\x0d\n    offset\x2C\x0d\n    size);\x0d\n  job.ondone = FunctionPrototypeBind(onJobDone\x2C job\x2C buf\x2C callback);\x0d\n  job.run();\x0d\n}\x0d\n\x0d\n// Largest integer we can read from a buffer.\x0d\n// e.g.: Buffer.from("ff".repeat(6)\x2C "hex").readUIntBE(0\x2C 6);\x0d\nconst RAND_MAX = 0xFFFF_FFFF_FFFF;\x0d\n\x0d\n// Cache random data to use in randomInt. The cache size must be evenly\x0d\n// divisible by 6 because each attempt to obtain a random int uses 6 bytes.\x0d\nconst randomCache = new FastBuffer(6 * 1024);\x0d\nlet randomCacheOffset = randomCache.length;\x0d\nlet asyncCacheFillInProgress = false;\x0d\nconst asyncCachePendingTasks = [];\x0d\n\x0d\n// Generates an integer in [min\x2C max) range where min is inclusive and max is\x0d\n// exclusive.\x0d\nfunction randomInt(min\x2C max\x2C callback) {\x0d\n  // Detect optional min syntax\x0d\n  // randomInt(max)\x0d\n  // randomInt(max\x2C callback)\x0d\n  const minNotSpecified = typeof max === 'undefined' ||\x0d\n    typeof max === 'function';\x0d\n\x0d\n  if (minNotSpecified) {\x0d\n    callback = max;\x0d\n    max = min;\x0d\n    min = 0;\x0d\n  }\x0d\n\x0d\n  const isSync = typeof callback === 'undefined';\x0d\n  if (!isSync) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n  if (!NumberIsSafeInteger(min)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('min'\x2C 'a safe integer'\x2C min);\x0d\n  }\x0d\n  if (!NumberIsSafeInteger(max)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('max'\x2C 'a safe integer'\x2C max);\x0d\n  }\x0d\n  if (max <= min) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      'max'\x2C `greater than the value of "min" (${min})`\x2C max\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  // First we generate a random int between [0..range)\x0d\n  const range = max - min;\x0d\n\x0d\n  if (!(range <= RAND_MAX)) {\x0d\n    throw new ERR_OUT_OF_RANGE(`max${minNotSpecified ? '' : ' - min'}`\x2C\x0d\n                               `<= ${RAND_MAX}`\x2C range);\x0d\n  }\x0d\n\x0d\n  // For (x % range) to produce an unbiased value greater than or equal to 0 and\x0d\n  // less than range\x2C x must be drawn randomly from the set of integers greater\x0d\n  // than or equal to 0 and less than randLimit.\x0d\n  const randLimit = RAND_MAX - (RAND_MAX % range);\x0d\n\x0d\n  // If we don't have a callback\x2C or if there is still data in the cache\x2C we can\x0d\n  // do this synchronously\x2C which is super fast.\x0d\n  while (isSync || (randomCacheOffset < randomCache.length)) {\x0d\n    if (randomCacheOffset === randomCache.length) {\x0d\n      // This might block the thread for a bit\x2C but we are in sync mode.\x0d\n      randomFillSync(randomCache);\x0d\n      randomCacheOffset = 0;\x0d\n    }\x0d\n\x0d\n    const x = randomCache.readUIntBE(randomCacheOffset\x2C 6);\x0d\n    randomCacheOffset += 6;\x0d\n\x0d\n    if (x < randLimit) {\x0d\n      const n = (x % range) + min;\x0d\n      if (isSync) return n;\x0d\n      process.nextTick(callback\x2C undefined\x2C n);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // At this point\x2C we are in async mode with no data in the cache. We cannot\x0d\n  // simply refill the cache\x2C because another async call to randomInt might\x0d\n  // already be doing that. Instead\x2C queue this call for when the cache has\x0d\n  // been refilled.\x0d\n  ArrayPrototypePush(asyncCachePendingTasks\x2C { min\x2C max\x2C callback });\x0d\n  asyncRefillRandomIntCache();\x0d\n}\x0d\n\x0d\nfunction asyncRefillRandomIntCache() {\x0d\n  if (asyncCacheFillInProgress)\x0d\n    return;\x0d\n\x0d\n  asyncCacheFillInProgress = true;\x0d\n  randomFill(randomCache\x2C (err) => {\x0d\n    asyncCacheFillInProgress = false;\x0d\n\x0d\n    const tasks = asyncCachePendingTasks;\x0d\n    const errorReceiver = err && ArrayPrototypeShift(tasks);\x0d\n    if (!err)\x0d\n      randomCacheOffset = 0;\x0d\n\x0d\n    // Restart all pending tasks. If an error occurred\x2C we only notify a single\x0d\n    // callback (errorReceiver) about it. This way\x2C every async call to\x0d\n    // randomInt has a chance of being successful\x2C and it avoids complex\x0d\n    // exception handling here.\x0d\n    ArrayPrototypeForEach(ArrayPrototypeSplice(tasks\x2C 0)\x2C (task) => {\x0d\n      randomInt(task.min\x2C task.max\x2C task.callback);\x0d\n    });\x0d\n\x0d\n    // This is the only call that might throw\x2C and is therefore done at the end.\x0d\n    if (errorReceiver)\x0d\n      errorReceiver.callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction onJobDone(buf\x2C callback\x2C error) {\x0d\n  if (error) return FunctionPrototypeCall(callback\x2C this\x2C error);\x0d\n  FunctionPrototypeCall(callback\x2C this\x2C null\x2C buf);\x0d\n}\x0d\n\x0d\n// Really just the Web Crypto API alternative\x0d\n// to require('crypto').randomFillSync() with an\x0d\n// additional limitation that the input buffer is\x0d\n// not allowed to exceed 65536 bytes\x2C and can only\x0d\n// be an integer-type TypedArray.\x0d\nfunction getRandomValues(data) {\x0d\n  if (!isTypedArray(data) ||\x0d\n      isFloat32Array(data) ||\x0d\n      isFloat64Array(data)) {\x0d\n    // Ordinarily this would be an ERR_INVALID_ARG_TYPE. However\x2C\x0d\n    // the Web Crypto API and web platform tests expect this to\x0d\n    // be a DOMException with type TypeMismatchError.\x0d\n    throw lazyDOMException(\x0d\n      'The data argument must be an integer-type TypedArray'\x2C\x0d\n      'TypeMismatchError');\x0d\n  }\x0d\n  if (data.byteLength > 65536) {\x0d\n    throw lazyDOMException(\x0d\n      'The requested length exceeds 65\x2C536 bytes'\x2C\x0d\n      'QuotaExceededError');\x0d\n  }\x0d\n  randomFillSync(data\x2C 0);\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// Implements an RFC 4122 version 4 random UUID.\x0d\n// To improve performance\x2C random data is generated in batches\x0d\n// large enough to cover kBatchSize UUID's at a time. The uuidData\x0d\n// buffer is reused. Each call to randomUUID() consumes 16 bytes\x0d\n// from the buffer.\x0d\n\x0d\nconst kBatchSize = 128;\x0d\nlet uuidData;\x0d\nlet uuidNotBuffered;\x0d\nlet uuidBatch = 0;\x0d\n\x0d\nlet hexBytesCache;\x0d\nfunction getHexBytes() {\x0d\n  if (hexBytesCache === undefined) {\x0d\n    hexBytesCache = new Array(256);\x0d\n    for (let i = 0; i < hexBytesCache.length; i++) {\x0d\n      const hex = NumberPrototypeToString(i\x2C 16);\x0d\n      hexBytesCache[i] = StringPrototypePadStart(hex\x2C 2\x2C '0');\x0d\n    }\x0d\n  }\x0d\n  return hexBytesCache;\x0d\n}\x0d\n\x0d\nfunction serializeUUID(buf\x2C offset = 0) {\x0d\n  const kHexBytes = getHexBytes();\x0d\n  // xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\x0d\n  return kHexBytes[buf[offset]] +\x0d\n    kHexBytes[buf[offset + 1]] +\x0d\n    kHexBytes[buf[offset + 2]] +\x0d\n    kHexBytes[buf[offset + 3]] +\x0d\n    '-' +\x0d\n    kHexBytes[buf[offset + 4]] +\x0d\n    kHexBytes[buf[offset + 5]] +\x0d\n    '-' +\x0d\n    kHexBytes[(buf[offset + 6] & 0x0f) | 0x40] +\x0d\n    kHexBytes[buf[offset + 7]] +\x0d\n    '-' +\x0d\n    kHexBytes[(buf[offset + 8] & 0x3f) | 0x80] +\x0d\n    kHexBytes[buf[offset + 9]] +\x0d\n    '-' +\x0d\n    kHexBytes[buf[offset + 10]] +\x0d\n    kHexBytes[buf[offset + 11]] +\x0d\n    kHexBytes[buf[offset + 12]] +\x0d\n    kHexBytes[buf[offset + 13]] +\x0d\n    kHexBytes[buf[offset + 14]] +\x0d\n    kHexBytes[buf[offset + 15]];\x0d\n}\x0d\n\x0d\nfunction getBufferedUUID() {\x0d\n  uuidData ??= secureBuffer(16 * kBatchSize);\x0d\n  if (uuidData === undefined)\x0d\n    throw new ERR_OPERATION_FAILED('Out of memory');\x0d\n\x0d\n  if (uuidBatch === 0) randomFillSync(uuidData);\x0d\n  uuidBatch = (uuidBatch + 1) % kBatchSize;\x0d\n  return serializeUUID(uuidData\x2C uuidBatch * 16);\x0d\n}\x0d\n\x0d\nfunction getUnbufferedUUID() {\x0d\n  uuidNotBuffered ??= secureBuffer(16);\x0d\n  if (uuidNotBuffered === undefined)\x0d\n    throw new ERR_OPERATION_FAILED('Out of memory');\x0d\n  randomFillSync(uuidNotBuffered);\x0d\n  return serializeUUID(uuidNotBuffered);\x0d\n}\x0d\n\x0d\nfunction randomUUID(options) {\x0d\n  if (options !== undefined)\x0d\n    validateObject(options\x2C 'options');\x0d\n  const {\x0d\n    disableEntropyCache = false\x2C\x0d\n  } = options || kEmptyObject;\x0d\n\x0d\n  validateBoolean(disableEntropyCache\x2C 'options.disableEntropyCache');\x0d\n\x0d\n  return disableEntropyCache ? getUnbufferedUUID() : getBufferedUUID();\x0d\n}\x0d\n\x0d\nfunction createRandomPrimeJob(type\x2C size\x2C options) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    safe = false\x2C\x0d\n    bigint = false\x2C\x0d\n  } = options;\x0d\n  let {\x0d\n    add\x2C\x0d\n    rem\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(safe\x2C 'options.safe');\x0d\n  validateBoolean(bigint\x2C 'options.bigint');\x0d\n\x0d\n  if (add !== undefined) {\x0d\n    if (typeof add === 'bigint') {\x0d\n      add = unsignedBigIntToBuffer(add\x2C 'options.add');\x0d\n    } else if (!isAnyArrayBuffer(add) && !isArrayBufferView(add)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.add'\x2C\x0d\n        [\x0d\n          'ArrayBuffer'\x2C\x0d\n          'TypedArray'\x2C\x0d\n          'Buffer'\x2C\x0d\n          'DataView'\x2C\x0d\n          'bigint'\x2C\x0d\n        ]\x2C\x0d\n        add);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (rem !== undefined) {\x0d\n    if (typeof rem === 'bigint') {\x0d\n      rem = unsignedBigIntToBuffer(rem\x2C 'options.rem');\x0d\n    } else if (!isAnyArrayBuffer(rem) && !isArrayBufferView(rem)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.rem'\x2C\x0d\n        [\x0d\n          'ArrayBuffer'\x2C\x0d\n          'TypedArray'\x2C\x0d\n          'Buffer'\x2C\x0d\n          'DataView'\x2C\x0d\n          'bigint'\x2C\x0d\n        ]\x2C\x0d\n        rem);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const job = new RandomPrimeJob(type\x2C size\x2C safe\x2C add\x2C rem);\x0d\n  job.result = bigint ? arrayBufferToUnsignedBigInt : (p) => p;\x0d\n  return job;\x0d\n}\x0d\n\x0d\nfunction generatePrime(size\x2C options\x2C callback) {\x0d\n  validateInt32(size\x2C 'size'\x2C 1);\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const job = createRandomPrimeJob(kCryptoJobAsync\x2C size\x2C options);\x0d\n  job.ondone = (err\x2C prime) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    callback(\x0d\n      undefined\x2C\x0d\n      job.result(prime));\x0d\n  };\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction generatePrimeSync(size\x2C options = kEmptyObject) {\x0d\n  validateInt32(size\x2C 'size'\x2C 1);\x0d\n\x0d\n  const job = createRandomPrimeJob(kCryptoJobSync\x2C size\x2C options);\x0d\n  const { 0: err\x2C 1: prime } = job.run();\x0d\n  if (err)\x0d\n    throw err;\x0d\n  return job.result(prime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * 48 is the ASCII code for '0'\x2C 97 is the ASCII code for 'a'.\x0d\n * @param {number} number An integer between 0 and 15.\x0d\n * @returns {number} corresponding to the ASCII code of the hex representation\x0d\n *                   of the parameter.\x0d\n */\x0d\nconst numberToHexCharCode = (number) => (number < 10 ? 48 : 87) + number;\x0d\n\x0d\n/**\x0d\n * @param {ArrayBuffer} buf An ArrayBuffer.\x0d\n * @return {bigint}\x0d\n */\x0d\nfunction arrayBufferToUnsignedBigInt(buf) {\x0d\n  const length = ArrayBufferPrototypeGetByteLength(buf);\x0d\n  const chars = Array(length * 2);\x0d\n  const view = new DataView(buf);\x0d\n\x0d\n  for (let i = 0; i < length; i++) {\x0d\n    const val = DataViewPrototypeGetUint8(view\x2C i);\x0d\n    chars[2 * i] = numberToHexCharCode(val >> 4);\x0d\n    chars[2 * i + 1] = numberToHexCharCode(val & 0xf);\x0d\n  }\x0d\n\x0d\n  return BigInt(`0x${StringFromCharCodeApply(chars)}`);\x0d\n}\x0d\n\x0d\nfunction unsignedBigIntToBuffer(bigint\x2C name) {\x0d\n  if (bigint < 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 0'\x2C bigint);\x0d\n  }\x0d\n\x0d\n  const hex = BigIntPrototypeToString(bigint\x2C 16);\x0d\n  const padded = StringPrototypePadStart(hex\x2C hex.length + (hex.length % 2)\x2C 0);\x0d\n  return Buffer.from(padded\x2C 'hex');\x0d\n}\x0d\n\x0d\nfunction checkPrime(candidate\x2C options = kEmptyObject\x2C callback) {\x0d\n  if (typeof candidate === 'bigint')\x0d\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\x0d\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'candidate'\x2C\x0d\n      [\x0d\n        'ArrayBuffer'\x2C\x0d\n        'TypedArray'\x2C\x0d\n        'Buffer'\x2C\x0d\n        'DataView'\x2C\x0d\n        'bigint'\x2C\x0d\n      ]\x2C\x0d\n      candidate\x2C\x0d\n    );\x0d\n  }\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const {\x0d\n    checks = 0\x2C\x0d\n  } = options;\x0d\n\x0d\n  // The checks option is unsigned but must fit into a signed C int for OpenSSL.\x0d\n  validateInt32(checks\x2C 'options.checks'\x2C 0);\x0d\n\x0d\n  const job = new CheckPrimeJob(kCryptoJobAsync\x2C candidate\x2C checks);\x0d\n  job.ondone = callback;\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction checkPrimeSync(candidate\x2C options = kEmptyObject) {\x0d\n  if (typeof candidate === 'bigint')\x0d\n    candidate = unsignedBigIntToBuffer(candidate\x2C 'candidate');\x0d\n  if (!isAnyArrayBuffer(candidate) && !isArrayBufferView(candidate)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'candidate'\x2C\x0d\n      [\x0d\n        'ArrayBuffer'\x2C\x0d\n        'TypedArray'\x2C\x0d\n        'Buffer'\x2C\x0d\n        'DataView'\x2C\x0d\n        'bigint'\x2C\x0d\n      ]\x2C\x0d\n      candidate\x2C\x0d\n    );\x0d\n  }\x0d\n  validateObject(options\x2C 'options');\x0d\n  const {\x0d\n    checks = 0\x2C\x0d\n  } = options;\x0d\n\x0d\n  // The checks option is unsigned but must fit into a signed C int for OpenSSL.\x0d\n  validateInt32(checks\x2C 'options.checks'\x2C 0);\x0d\n\x0d\n  const job = new CheckPrimeJob(kCryptoJobSync\x2C candidate\x2C checks);\x0d\n  const { 0: err\x2C 1: result } = job.run();\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  checkPrime\x2C\x0d\n  checkPrimeSync\x2C\x0d\n  randomBytes\x2C\x0d\n  randomFill\x2C\x0d\n  randomFillSync\x2C\x0d\n  randomInt\x2C\x0d\n  getRandomValues\x2C\x0d\n  randomUUID\x2C\x0d\n  generatePrime\x2C\x0d\n  generatePrimeSync\x2C\x0d\n};\x0d\n
code-source-info,0x299e2c3c644,225,0,16859,C0O0C4O16859,,
code-creation,JS,10,321599,0x299e2c3d1f4,750, node:internal/crypto/random:1:1,0x299e2c3c5b8,~
code-source-info,0x299e2c3d1f
code-creation,Eval,10,321996,0x299e2c3e47c,5, node:internal/crypto/pbkdf2:1:1,0x299e2c3e248,~
script-source,226,node:internal/crypto/pbkdf2,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  PBKDF2Job\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  normalizeHashName\x2C\x0d\n  kKeyObject\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nfunction pbkdf2(password\x2C salt\x2C iterations\x2C keylen\x2C digest\x2C callback) {\x0d\n  if (typeof digest === 'function') {\x0d\n    callback = digest;\x0d\n    digest = undefined;\x0d\n  }\x0d\n\x0d\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\x0d\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\x0d\n\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const job = new PBKDF2Job(\x0d\n    kCryptoJobAsync\x2C\x0d\n    password\x2C\x0d\n    salt\x2C\x0d\n    iterations\x2C\x0d\n    keylen\x2C\x0d\n    digest);\x0d\n\x0d\n  job.ondone = (err\x2C result) => {\x0d\n    if (err !== undefined)\x0d\n      return FunctionPrototypeCall(callback\x2C job\x2C err);\x0d\n    const buf = Buffer.from(result);\x0d\n    return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\x0d\n  };\x0d\n\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction pbkdf2Sync(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\x0d\n  ({ password\x2C salt\x2C iterations\x2C keylen\x2C digest } =\x0d\n    check(password\x2C salt\x2C iterations\x2C keylen\x2C digest));\x0d\n\x0d\n  const job = new PBKDF2Job(\x0d\n    kCryptoJobSync\x2C\x0d\n    password\x2C\x0d\n    salt\x2C\x0d\n    iterations\x2C\x0d\n    keylen\x2C\x0d\n    digest);\x0d\n\x0d\n  const { 0: err\x2C 1: result } = job.run();\x0d\n  if (err !== undefined)\x0d\n    throw err;\x0d\n\x0d\n  return Buffer.from(result);\x0d\n}\x0d\n\x0d\nfunction check(password\x2C salt\x2C iterations\x2C keylen\x2C digest) {\x0d\n  validateString(digest\x2C 'digest');\x0d\n\x0d\n  password = getArrayBufferOrView(password\x2C 'password');\x0d\n  salt = getArrayBufferOrView(salt\x2C 'salt');\x0d\n  // OpenSSL uses a signed int to represent these values\x2C so we are restricted\x0d\n  // to the 31-bit range here (which is plenty).\x0d\n  validateInt32(iterations\x2C 'iterations'\x2C 1);\x0d\n  validateInt32(keylen\x2C 'keylen'\x2C 0);\x0d\n\x0d\n  return { password\x2C salt\x2C iterations\x2C keylen\x2C digest };\x0d\n}\x0d\n\x0d\nconst pbkdf2Promise = promisify(pbkdf2);\x0d\nasync function pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length) {\x0d\n  const { iterations\x2C hash\x2C salt } = algorithm;\x0d\n  if (iterations === 0)\x0d\n    throw lazyDOMException(\x0d\n      'iterations cannot be zero'\x2C\x0d\n      'OperationError');\x0d\n\x0d\n  const raw = baseKey[kKeyObject].export();\x0d\n\x0d\n  if (length === 0)\x0d\n    throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\x0d\n  if (length === null)\x0d\n    throw lazyDOMException('length cannot be null'\x2C 'OperationError');\x0d\n  if (length % 8) {\x0d\n    throw lazyDOMException(\x0d\n      'length must be a multiple of 8'\x2C\x0d\n      'OperationError');\x0d\n  }\x0d\n\x0d\n  let result;\x0d\n  try {\x0d\n    result = await pbkdf2Promise(\x0d\n      raw\x2C salt\x2C iterations\x2C length / 8\x2C normalizeHashName(hash.name)\x2C\x0d\n    );\x0d\n  } catch (err) {\x0d\n    throw lazyDOMException(\x0d\n      'The operation failed for an operation-specific reason'\x2C\x0d\n      { name: 'OperationError'\x2C cause: err });\x0d\n  }\x0d\n\x0d\n  return result.buffer;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  pbkdf2\x2C\x0d\n  pbkdf2Sync\x2C\x0d\n  pbkdf2DeriveBits\x2C\x0d\n};\x0d\n
code-source-info,0x299e2c3e47c,226,0,3149,C0O0C4O3149,,
code-creation,JS,10,322152,0x299e2c3e77c,219, node:internal/crypto/pbkdf2:1:1,0x299e2c3e3f0,~
code-source-info,0x299e2c3e77c,226,0,3149,C0O0C65O28C71O91C74O91C79O80C85O179C88O179C93O124C99O138C105O158C111O280C114O280C119O220C125O241C131O259C137O390C140O390C145O326C151O351C157O373C163O474C166O474C171O437C177O458C182O2132C186O2132C188O3078C195O3100C201O3111C207O3126C213O3093C218O3148,,
new,MemoryChunk,0x3b844340000,262144
code-creation,Eval,10,322711,0x3b844341cac,5, node:internal/crypto/util:1:1,0x3b844341818,~
script-source,227,node:internal/crypto/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ArrayBufferPrototypeGetByteLength\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigInt\x2C\x0d\n  DataViewPrototypeGetBuffer\x2C\x0d\n  DataViewPrototypeGetByteLength\x2C\x0d\n  DataViewPrototypeGetByteOffset\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Number\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  Promise\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeGetBuffer\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeGetByteOffset\x2C\x0d\n  TypedArrayPrototypeSlice\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getCiphers: _getCiphers\x2C\x0d\n  getCurves: _getCurves\x2C\x0d\n  getHashes: _getHashes\x2C\x0d\n  setEngine: _setEngine\x2C\x0d\n  secureHeapUsed: _secureHeapUsed\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst {\x0d\n  crypto: {\x0d\n    ENGINE_METHOD_ALL\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('constants');\x0d\n\x0d\nconst normalizeHashName = require('internal/crypto/hashnames');\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED\x2C\x0d\n    ERR_CRYPTO_ENGINE_UNKNOWN\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  cachedResult\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isDataView\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kKeyObject = Symbol('kKeyObject');\x0d\n\x0d\n// This is here because many functions accepted binary strings without\x0d\n// any explicit encoding in older versions of node\x2C and we don't want\x0d\n// to break them unnecessarily.\x0d\nfunction toBuf(val\x2C encoding) {\x0d\n  if (typeof val === 'string') {\x0d\n    if (encoding === 'buffer')\x0d\n      encoding = 'utf8';\x0d\n    return Buffer.from(val\x2C encoding);\x0d\n  }\x0d\n  return val;\x0d\n}\x0d\n\x0d\nconst getCiphers = cachedResult(() => filterDuplicateStrings(_getCiphers()));\x0d\nconst getHashes = cachedResult(() => filterDuplicateStrings(_getHashes()));\x0d\nconst getCurves = cachedResult(() => filterDuplicateStrings(_getCurves()));\x0d\n\x0d\nfunction setEngine(id\x2C flags) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (flags)\x0d\n    validateNumber(flags\x2C 'flags');\x0d\n  flags = flags >>> 0;\x0d\n\x0d\n  // Use provided engine for everything by default\x0d\n  if (flags === 0)\x0d\n    flags = ENGINE_METHOD_ALL;\x0d\n\x0d\n  if (typeof _setEngine !== 'function')\x0d\n    throw new ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED();\x0d\n  if (!_setEngine(id\x2C flags))\x0d\n    throw new ERR_CRYPTO_ENGINE_UNKNOWN(id);\x0d\n}\x0d\n\x0d\nconst getArrayBufferOrView = hideStackFrames((buffer\x2C name\x2C encoding) => {\x0d\n  if (isAnyArrayBuffer(buffer))\x0d\n    return buffer;\x0d\n  if (typeof buffer === 'string') {\x0d\n    if (encoding === 'buffer')\x0d\n      encoding = 'utf8';\x0d\n    return Buffer.from(buffer\x2C encoding);\x0d\n  }\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(\x0d\n      name\x2C\x0d\n      [\x0d\n        'string'\x2C\x0d\n        'ArrayBuffer'\x2C\x0d\n        'Buffer'\x2C\x0d\n        'TypedArray'\x2C\x0d\n        'DataView'\x2C\x0d\n      ]\x2C\x0d\n      buffer\x2C\x0d\n    );\x0d\n  }\x0d\n  return buffer;\x0d\n});\x0d\n\x0d\n// The maximum buffer size that we'll support in the WebCrypto impl\x0d\nconst kMaxBufferLength = (2 ** 31) - 1;\x0d\n\x0d\n// The EC named curves that we currently support via the Web Crypto API.\x0d\nconst kNamedCurveAliases = {\x0d\n  'P-256': 'prime256v1'\x2C\x0d\n  'P-384': 'secp384r1'\x2C\x0d\n  'P-521': 'secp521r1'\x2C\x0d\n};\x0d\n\x0d\nconst kAesKeyLengths = [128\x2C 192\x2C 256];\x0d\n\x0d\n// These are the only hash algorithms we currently support via\x0d\n// the Web Crypto API.\x0d\nconst kHashTypes = [\x0d\n  'SHA-1'\x2C\x0d\n  'SHA-256'\x2C\x0d\n  'SHA-384'\x2C\x0d\n  'SHA-512'\x2C\x0d\n];\x0d\n\x0d\nconst kSupportedAlgorithms = {\x0d\n  'digest': {\x0d\n    'SHA-1': null\x2C\x0d\n    'SHA-256': null\x2C\x0d\n    'SHA-384': null\x2C\x0d\n    'SHA-512': null\x2C\x0d\n  }\x2C\x0d\n  'generateKey': {\x0d\n    'RSASSA-PKCS1-v1_5': 'RsaHashedKeyGenParams'\x2C\x0d\n    'RSA-PSS': 'RsaHashedKeyGenParams'\x2C\x0d\n    'RSA-OAEP': 'RsaHashedKeyGenParams'\x2C\x0d\n    'ECDSA': 'EcKeyGenParams'\x2C\x0d\n    'ECDH': 'EcKeyGenParams'\x2C\x0d\n    'AES-CTR': 'AesKeyGenParams'\x2C\x0d\n    'AES-CBC': 'AesKeyGenParams'\x2C\x0d\n    'AES-GCM': 'AesKeyGenParams'\x2C\x0d\n    'AES-KW': 'AesKeyGenParams'\x2C\x0d\n    'HMAC': 'HmacKeyGenParams'\x2C\x0d\n    'X25519': null\x2C\x0d\n    'Ed25519': null\x2C\x0d\n    'X448': null\x2C\x0d\n    'Ed448': null\x2C\x0d\n  }\x2C\x0d\n  'sign': {\x0d\n    'RSASSA-PKCS1-v1_5': null\x2C\x0d\n    'RSA-PSS': 'RsaPssParams'\x2C\x0d\n    'ECDSA': 'EcdsaParams'\x2C\x0d\n    'HMAC': null\x2C\x0d\n    'Ed25519': null\x2C\x0d\n    'Ed448': 'Ed448Params'\x2C\x0d\n  }\x2C\x0d\n  'verify': {\x0d\n    'RSASSA-PKCS1-v1_5': null\x2C\x0d\n    'RSA-PSS': 'RsaPssParams'\x2C\x0d\n    'ECDSA': 'EcdsaParams'\x2C\x0d\n    'HMAC': null\x2C\x0d\n    'Ed25519': null\x2C\x0d\n    'Ed448': 'Ed448Params'\x2C\x0d\n  }\x2C\x0d\n  'importKey': {\x0d\n    'RSASSA-PKCS1-v1_5': 'RsaHashedImportParams'\x2C\x0d\n    'RSA-PSS': 'RsaHashedImportParams'\x2C\x0d\n    'RSA-OAEP': 'RsaHashedImportParams'\x2C\x0d\n    'ECDSA': 'EcKeyImportParams'\x2C\x0d\n    'ECDH': 'EcKeyImportParams'\x2C\x0d\n    'HMAC': 'HmacImportParams'\x2C\x0d\n    'HKDF': null\x2C\x0d\n    'PBKDF2': null\x2C\x0d\n    'AES-CTR': null\x2C\x0d\n    'AES-CBC': null\x2C\x0d\n    'AES-GCM': null\x2C\x0d\n    'AES-KW': null\x2C\x0d\n    'Ed25519': null\x2C\x0d\n    'X25519': null\x2C\x0d\n    'Ed448': null\x2C\x0d\n    'X448': null\x2C\x0d\n  }\x2C\x0d\n  'deriveBits': {\x0d\n    'HKDF': 'HkdfParams'\x2C\x0d\n    'PBKDF2': 'Pbkdf2Params'\x2C\x0d\n    'ECDH': 'EcdhKeyDeriveParams'\x2C\x0d\n    'X25519': 'EcdhKeyDeriveParams'\x2C\x0d\n    'X448': 'EcdhKeyDeriveParams'\x2C\x0d\n  }\x2C\x0d\n  'encrypt': {\x0d\n    'RSA-OAEP': 'RsaOaepParams'\x2C\x0d\n    'AES-CBC': 'AesCbcParams'\x2C\x0d\n    'AES-GCM': 'AesGcmParams'\x2C\x0d\n    'AES-CTR': 'AesCtrParams'\x2C\x0d\n  }\x2C\x0d\n  'decrypt': {\x0d\n    'RSA-OAEP': 'RsaOaepParams'\x2C\x0d\n    'AES-CBC': 'AesCbcParams'\x2C\x0d\n    'AES-GCM': 'AesGcmParams'\x2C\x0d\n    'AES-CTR': 'AesCtrParams'\x2C\x0d\n  }\x2C\x0d\n  'get key length': {\x0d\n    'AES-CBC': 'AesDerivedKeyParams'\x2C\x0d\n    'AES-CTR': 'AesDerivedKeyParams'\x2C\x0d\n    'AES-GCM': 'AesDerivedKeyParams'\x2C\x0d\n    'AES-KW': 'AesDerivedKeyParams'\x2C\x0d\n    'HMAC': 'HmacImportParams'\x2C\x0d\n    'HKDF': null\x2C\x0d\n    'PBKDF2': null\x2C\x0d\n  }\x2C\x0d\n  'wrapKey': {\x0d\n    'AES-KW': null\x2C\x0d\n  }\x2C\x0d\n  'unwrapKey': {\x0d\n    'AES-KW': null\x2C\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst simpleAlgorithmDictionaries = {\x0d\n  AesGcmParams: { iv: 'BufferSource'\x2C additionalData: 'BufferSource' }\x2C\x0d\n  RsaHashedKeyGenParams: { hash: 'HashAlgorithmIdentifier' }\x2C\x0d\n  EcKeyGenParams: {}\x2C\x0d\n  HmacKeyGenParams: { hash: 'HashAlgorithmIdentifier' }\x2C\x0d\n  RsaPssParams: {}\x2C\x0d\n  EcdsaParams: { hash: 'HashAlgorithmIdentifier' }\x2C\x0d\n  HmacImportParams: { hash: 'HashAlgorithmIdentifier' }\x2C\x0d\n  HkdfParams: {\x0d\n    hash: 'HashAlgorithmIdentifier'\x2C\x0d\n    salt: 'BufferSource'\x2C\x0d\n    info: 'BufferSource'\x2C\x0d\n  }\x2C\x0d\n  Ed448Params: { context: 'BufferSource' }\x2C\x0d\n  Pbkdf2Params: { hash: 'HashAlgorithmIdentifier'\x2C salt: 'BufferSource' }\x2C\x0d\n  RsaOaepParams: { label: 'BufferSource' }\x2C\x0d\n  RsaHashedImportParams: { hash: 'HashAlgorithmIdentifier' }\x2C\x0d\n  EcKeyImportParams: {}\x2C\x0d\n};\x0d\n\x0d\nfunction validateMaxBufferLength(data\x2C name) {\x0d\n  if (data.byteLength > kMaxBufferLength) {\x0d\n    throw lazyDOMException(\x0d\n      `${name} must be less than ${kMaxBufferLength + 1} bits`\x2C\x0d\n      'OperationError');\x0d\n  }\x0d\n}\x0d\n\x0d\nlet webidl;\x0d\n\x0d\n// https://w3c.github.io/webcrypto/#algorithm-normalization-normalize-an-algorithm\x0d\n// adapted for Node.js from Deno's implementation\x0d\n// https://github.com/denoland/deno/blob/v1.29.1/ext/crypto/00_crypto.js#L195\x0d\nfunction normalizeAlgorithm(algorithm\x2C op) {\x0d\n  if (typeof algorithm === 'string')\x0d\n    return normalizeAlgorithm({ name: algorithm }\x2C op);\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n\x0d\n  // 1.\x0d\n  const registeredAlgorithms = kSupportedAlgorithms[op];\x0d\n  // 2. 3.\x0d\n  const initialAlg = webidl.converters.Algorithm(algorithm\x2C {\x0d\n    prefix: 'Failed to normalize algorithm'\x2C\x0d\n    context: 'passed algorithm'\x2C\x0d\n  });\x0d\n  // 4.\x0d\n  let algName = initialAlg.name;\x0d\n\x0d\n  // 5.\x0d\n  let desiredType;\x0d\n  for (const key in registeredAlgorithms) {\x0d\n    if (!ObjectPrototypeHasOwnProperty(registeredAlgorithms\x2C key)) {\x0d\n      continue;\x0d\n    }\x0d\n    if (\x0d\n      StringPrototypeToUpperCase(key) === StringPrototypeToUpperCase(algName)\x0d\n    ) {\x0d\n      algName = key;\x0d\n      desiredType = registeredAlgorithms[key];\x0d\n    }\x0d\n  }\x0d\n  if (desiredType === undefined)\x0d\n    throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\x0d\n\x0d\n  // Fast path everything below if the registered dictionary is null\x0d\n  if (desiredType === null)\x0d\n    return { name: algName };\x0d\n\x0d\n  // 6.\x0d\n  const normalizedAlgorithm = webidl.converters[desiredType](algorithm\x2C {\x0d\n    prefix: 'Failed to normalize algorithm'\x2C\x0d\n    context: 'passed algorithm'\x2C\x0d\n  });\x0d\n  // 7.\x0d\n  normalizedAlgorithm.name = algName;\x0d\n\x0d\n  // 9.\x0d\n  const dict = simpleAlgorithmDictionaries[desiredType];\x0d\n  // 10.\x0d\n  const dictKeys = dict ? ObjectKeys(dict) : [];\x0d\n  for (let i = 0; i < dictKeys.length; i++) {\x0d\n    const member = dictKeys[i];\x0d\n    if (!ObjectPrototypeHasOwnProperty(dict\x2C member))\x0d\n      continue;\x0d\n    const idlType = dict[member];\x0d\n    const idlValue = normalizedAlgorithm[member];\x0d\n    // 3.\x0d\n    if (idlType === 'BufferSource' && idlValue) {\x0d\n      const isView = ArrayBufferIsView(idlValue);\x0d\n      normalizedAlgorithm[member] = TypedArrayPrototypeSlice(\x0d\n        new Uint8Array(\x0d\n          isView ? getDataViewOrTypedArrayBuffer(idlValue) : idlValue\x2C\x0d\n          isView ? getDataViewOrTypedArrayByteOffset(idlValue) : 0\x2C\x0d\n          isView ? getDataViewOrTypedArrayByteLength(idlValue) : ArrayBufferPrototypeGetByteLength(idlValue)\x2C\x0d\n        )\x2C\x0d\n      );\x0d\n    } else if (idlType === 'HashAlgorithmIdentifier') {\x0d\n      normalizedAlgorithm[member] = normalizeAlgorithm(idlValue\x2C 'digest');\x0d\n    } else if (idlType === 'AlgorithmIdentifier') {\x0d\n      // This extension point is not used by any supported algorithm (yet?)\x0d\n      throw lazyDOMException('Not implemented.'\x2C 'NotSupportedError');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return normalizedAlgorithm;\x0d\n}\x0d\n\x0d\nfunction getDataViewOrTypedArrayBuffer(V) {\x0d\n  return isDataView(V) ?\x0d\n    DataViewPrototypeGetBuffer(V) : TypedArrayPrototypeGetBuffer(V);\x0d\n}\x0d\n\x0d\nfunction getDataViewOrTypedArrayByteOffset(V) {\x0d\n  return isDataView(V) ?\x0d\n    DataViewPrototypeGetByteOffset(V) : TypedArrayPrototypeGetByteOffset(V);\x0d\n}\x0d\n\x0d\nfunction getDataViewOrTypedArrayByteLength(V) {\x0d\n  return isDataView(V) ?\x0d\n    DataViewPrototypeGetByteLength(V) : TypedArrayPrototypeGetByteLength(V);\x0d\n}\x0d\n\x0d\nfunction hasAnyNotIn(set\x2C checks) {\x0d\n  for (const s of set)\x0d\n    if (!ArrayPrototypeIncludes(checks\x2C s))\x0d\n      return true;\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction validateBitLength(length\x2C name\x2C required = false) {\x0d\n  if (length !== undefined || required) {\x0d\n    validateNumber(length\x2C name);\x0d\n    if (length < 0)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C '> 0');\x0d\n    if (length % 8) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        name\x2C\x0d\n        length\x2C\x0d\n        'must be a multiple of 8');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateByteLength(buf\x2C name\x2C target) {\x0d\n  if (buf.byteLength !== target) {\x0d\n    throw lazyDOMException(\x0d\n      `${name} must contain exactly ${target} bytes`\x2C\x0d\n      'OperationError');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateByteSource = hideStackFrames((val\x2C name) => {\x0d\n  val = toBuf(val);\x0d\n\x0d\n  if (isAnyArrayBuffer(val) || isArrayBufferView(val))\x0d\n    return val;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(\x0d\n    name\x2C\x0d\n    [\x0d\n      'string'\x2C\x0d\n      'ArrayBuffer'\x2C\x0d\n      'TypedArray'\x2C\x0d\n      'DataView'\x2C\x0d\n      'Buffer'\x2C\x0d\n    ]\x2C\x0d\n    val);\x0d\n});\x0d\n\x0d\nfunction onDone(resolve\x2C reject\x2C err\x2C result) {\x0d\n  if (err) {\x0d\n    return reject(lazyDOMException(\x0d\n      'The operation failed for an operation-specific reason'\x2C\x0d\n      { name: 'OperationError'\x2C cause: err }));\x0d\n  }\x0d\n  resolve(result);\x0d\n}\x0d\n\x0d\nfunction jobPromise(getJob) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    try {\x0d\n      const job = getJob();\x0d\n      job.ondone = FunctionPrototypeBind(onDone\x2C job\x2C resolve\x2C reject);\x0d\n      job.run();\x0d\n    } catch (err) {\x0d\n      onDone(resolve\x2C reject\x2C err);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n// In WebCrypto\x2C the publicExponent option in RSA is represented as a\x0d\n// WebIDL "BigInteger"... that is\x2C a Uint8Array that allows an arbitrary\x0d\n// number of leading zero bits. Our conventional APIs for reading\x0d\n// an unsigned int from a Buffer are not adequate. The implementation\x0d\n// here is adapted from the chromium implementation here:\x0d\n// https://github.com/chromium/chromium/blob/HEAD/third_party/blink/public/platform/web_crypto_algorithm_params.h\x2C but ported to JavaScript\x0d\n// Returns undefined if the conversion was unsuccessful.\x0d\nfunction bigIntArrayToUnsignedInt(input) {\x0d\n  let result = 0;\x0d\n\x0d\n  for (let n = 0; n < input.length; ++n) {\x0d\n    const n_reversed = input.length - n - 1;\x0d\n    if (n_reversed >= 4 && input[n])\x0d\n      return;  // Too large\x0d\n    result |= input[n] << 8 * n_reversed;\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction bigIntArrayToUnsignedBigInt(input) {\x0d\n  let result = 0n;\x0d\n\x0d\n  for (let n = 0; n < input.length; ++n) {\x0d\n    const n_reversed = input.length - n - 1;\x0d\n    result |= BigInt(input[n]) << 8n * BigInt(n_reversed);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction getStringOption(options\x2C key) {\x0d\n  let value;\x0d\n  if (options && (value = options[key]) != null)\x0d\n    validateString(value\x2C `options.${key}`);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nfunction getUsagesUnion(usageSet\x2C ...usages) {\x0d\n  const newset = [];\x0d\n  for (let n = 0; n < usages.length; n++) {\x0d\n    if (usageSet.has(usages[n]))\x0d\n      ArrayPrototypePush(newset\x2C usages[n]);\x0d\n  }\x0d\n  return newset;\x0d\n}\x0d\n\x0d\nfunction getBlockSize(name) {\x0d\n  switch (name) {\x0d\n    case 'SHA-1': return 512;\x0d\n    case 'SHA-256': return 512;\x0d\n    case 'SHA-384': return 1024;\x0d\n    case 'SHA-512': return 1024;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kKeyOps = {\x0d\n  sign: 1\x2C\x0d\n  verify: 2\x2C\x0d\n  encrypt: 3\x2C\x0d\n  decrypt: 4\x2C\x0d\n  wrapKey: 5\x2C\x0d\n  unwrapKey: 6\x2C\x0d\n  deriveKey: 7\x2C\x0d\n  deriveBits: 8\x2C\x0d\n};\x0d\n\x0d\nfunction validateKeyOps(keyOps\x2C usagesSet) {\x0d\n  if (keyOps === undefined) return;\x0d\n  validateArray(keyOps\x2C 'keyData.key_ops');\x0d\n  let flags = 0;\x0d\n  for (let n = 0; n < keyOps.length; n++) {\x0d\n    const op = keyOps[n];\x0d\n    const op_flag = kKeyOps[op];\x0d\n    // Skipping unknown key ops\x0d\n    if (op_flag === undefined)\x0d\n      continue;\x0d\n    // Have we seen it already? if so\x2C error\x0d\n    if (flags & (1 << op_flag))\x0d\n      throw lazyDOMException('Duplicate key operation'\x2C 'DataError');\x0d\n    flags |= (1 << op_flag);\x0d\n\x0d\n    // TODO(@jasnell): RFC7517 section 4.3 strong recommends validating\x0d\n    // key usage combinations. Specifically\x2C it says that unrelated key\x0d\n    // ops SHOULD NOT be used together. We're not yet validating that here.\x0d\n  }\x0d\n\x0d\n  if (usagesSet !== undefined) {\x0d\n    for (const use of usagesSet) {\x0d\n      if (!ArrayPrototypeIncludes(keyOps\x2C use)) {\x0d\n        throw lazyDOMException(\x0d\n          'Key operations and usage mismatch'\x2C\x0d\n          'DataError');\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction secureHeapUsed() {\x0d\n  const val = _secureHeapUsed();\x0d\n  if (val === undefined)\x0d\n    return { total: 0\x2C used: 0\x2C utilization: 0\x2C min: 0 };\x0d\n  const used = Number(_secureHeapUsed());\x0d\n  const total = Number(getOptionValue('--secure-heap'));\x0d\n  const min = Number(getOptionValue('--secure-heap-min'));\x0d\n  const utilization = used / total;\x0d\n  return { total\x2C used\x2C utilization\x2C min };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getArrayBufferOrView\x2C\x0d\n  getCiphers\x2C\x0d\n  getCurves\x2C\x0d\n  getDataViewOrTypedArrayBuffer\x2C\x0d\n  getHashes\x2C\x0d\n  kHandle\x2C\x0d\n  kKeyObject\x2C\x0d\n  setEngine\x2C\x0d\n  toBuf\x2C\x0d\n\x0d\n  kHashTypes\x2C\x0d\n  kNamedCurveAliases\x2C\x0d\n  kAesKeyLengths\x2C\x0d\n  normalizeAlgorithm\x2C\x0d\n  normalizeHashName\x2C\x0d\n  hasAnyNotIn\x2C\x0d\n  validateBitLength\x2C\x0d\n  validateByteLength\x2C\x0d\n  validateByteSource\x2C\x0d\n  validateKeyOps\x2C\x0d\n  jobPromise\x2C\x0d\n  validateMaxBufferLength\x2C\x0d\n  bigIntArrayToUnsignedBigInt\x2C\x0d\n  bigIntArrayToUnsignedInt\x2C\x0d\n  getBlockSize\x2C\x0d\n  getStringOption\x2C\x0d\n  getUsagesUnion\x2C\x0d\n  secureHeapUsed\x2C\x0d\n};\x0d\n
code-source-info,0x3b844341cac,227,0,15592,C0O0C4O15592,,
code-creation,JS,10,323405,0x3b844343504,933, node:internal/crypto/util:1:1,0x3b844341c20,~
code-source-info,0x3b
code-creation,Eval,10,323757,0x3b844344694,5, node:internal/crypto/hashnames:1:1,0x3b844344510,~
script-source,228,node:internal/crypto/hashnames,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectKeys\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kHashContextNode = 1;\x0d\nconst kHashContextWebCrypto = 2;\x0d\nconst kHashContextJwkRsa = 3;\x0d\nconst kHashContextJwkRsaPss = 4;\x0d\nconst kHashContextJwkRsaOaep = 5;\x0d\nconst kHashContextJwkHmac = 6;\x0d\n\x0d\n// WebCrypto and JWK use a bunch of different names for the\x0d\n// standard set of SHA-* digest algorithms... which is ... fun.\x0d\n// Here we provide a utility for mapping between them in order\x0d\n// make it easier in the code.\x0d\n\x0d\nconst kHashNames = {\x0d\n  sha1: {\x0d\n    [kHashContextNode]: 'sha1'\x2C\x0d\n    [kHashContextWebCrypto]: 'SHA-1'\x2C\x0d\n    [kHashContextJwkRsa]: 'RS1'\x2C\x0d\n    [kHashContextJwkRsaPss]: 'PS1'\x2C\x0d\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP'\x2C\x0d\n    [kHashContextJwkHmac]: 'HS1'\x2C\x0d\n  }\x2C\x0d\n  sha256: {\x0d\n    [kHashContextNode]: 'sha256'\x2C\x0d\n    [kHashContextWebCrypto]: 'SHA-256'\x2C\x0d\n    [kHashContextJwkRsa]: 'RS256'\x2C\x0d\n    [kHashContextJwkRsaPss]: 'PS256'\x2C\x0d\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-256'\x2C\x0d\n    [kHashContextJwkHmac]: 'HS256'\x2C\x0d\n  }\x2C\x0d\n  sha384: {\x0d\n    [kHashContextNode]: 'sha384'\x2C\x0d\n    [kHashContextWebCrypto]: 'SHA-384'\x2C\x0d\n    [kHashContextJwkRsa]: 'RS384'\x2C\x0d\n    [kHashContextJwkRsaPss]: 'PS384'\x2C\x0d\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-384'\x2C\x0d\n    [kHashContextJwkHmac]: 'HS384'\x2C\x0d\n  }\x2C\x0d\n  sha512: {\x0d\n    [kHashContextNode]: 'sha512'\x2C\x0d\n    [kHashContextWebCrypto]: 'SHA-512'\x2C\x0d\n    [kHashContextJwkRsa]: 'RS512'\x2C\x0d\n    [kHashContextJwkRsaPss]: 'PS512'\x2C\x0d\n    [kHashContextJwkRsaOaep]: 'RSA-OAEP-512'\x2C\x0d\n    [kHashContextJwkHmac]: 'HS512'\x2C\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n{\x0d\n  // Index the aliases\x0d\n  const keys = ObjectKeys(kHashNames);\x0d\n  for (let n = 0; n < keys.length; n++) {\x0d\n    const contexts = ObjectKeys(kHashNames[keys[n]]);\x0d\n    for (let i = 0; i < contexts.length; i++) {\x0d\n      const alias =\x0d\n        StringPrototypeToLowerCase(kHashNames[keys[n]][contexts[i]]);\x0d\n      if (kHashNames[alias] === undefined)\x0d\n        kHashNames[alias] = kHashNames[keys[n]];\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction normalizeHashName(name\x2C context = kHashContextNode) {\x0d\n  if (typeof name !== 'string')\x0d\n    return name;\x0d\n  name = StringPrototypeToLowerCase(name);\x0d\n  const alias = kHashNames[name] && kHashNames[name][context];\x0d\n  return alias || name;\x0d\n}\x0d\n\x0d\nnormalizeHashName.kContextNode = kHashContextNode;\x0d\nnormalizeHashName.kContextWebCrypto = kHashContextWebCrypto;\x0d\nnormalizeHashName.kContextJwkRsa = kHashContextJwkRsa;\x0d\nnormalizeHashName.kContextJwkRsaPss = kHashContextJwkRsaPss;\x0d\nnormalizeHashName.kContextJwkRsaOaep = kHashContextJwkRsaOaep;\x0d\nnormalizeHashName.kContextJwkHmac = kHashContextJwkHmac;\x0d\n\x0d\nmodule.exports = normalizeHashName;\x0d\n
code-source-info,0x3b844344694,228,0,2604,C0O0C4O2604,,
code-creation,JS,10,323877,0x3b84434496c,532, node:internal/crypto/hashnames:1:1,0x3b844344608,~
code-source-info,0x3b84434496c,228,0,2604,C0O0C19O28C24O43C30O117C32O117C34O151C37O182C40O216C43O251C46O283C49O532C54O543C61O551C65O570C72O584C76O608C83O623C87O644C94O657C98O681C105O694C109O719C116O737C120O759C131O783C138O791C142O810C149O826C153O850C160O867C164O888C171O903C175O927C182O942C186O967C193O989C197O1011C208O1037C215O1045C219O1064C226O1080C230O1104C237O1121C241O1142C248O1157C252O1181C259O1196C263O1221C270O1243C274O1265C285O1291C292O1299C296O1318C303O1334C307O1358C314O1375C318O1396C325O1411C329O1435C336O1450C340O1475C347O1497C351O1519C364O532C366O1583C369O1583C374O1623C376O1635C380O1628C385O1672C390O1698C393O1693C397O1672C402O1723C404O1739C408O1728C413O1784C421O1826C424O1821C430O1839C433O1830C437O1784C442O1853C447O1867C452O1899C460O1934C463O1929C466O1917C470O1748C475O1710C479O1644C484O1610C488O2211C490O2242C494O2263C496O2299C500O2325C502O2358C506O2381C508O2417C512O2443C514O2480C518O2507C520O2541C524O2567C526O2582C531O2603,,
code-creation,JS,10,324396,0x3b8443457f4,20,cachedResult node:internal/util:293:22,0xfca8d3fd20,~
code-source-info,0x3b8443457f4,16,8475,8617,C0O8475C12O8489C13O8489C15O8500C19O8614,,
code-creation,Eval,10,324732,0x3b844348f14,5, node:internal/crypto/scrypt:1:1,0x3b844348ce0,~
script-source,229,node:internal/crypto/scrypt,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  ScryptJob\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateInt32\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_SCRYPT_INVALID_PARAMETER\x2C\x0d\n    ERR_CRYPTO_SCRYPT_NOT_SUPPORTED\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst defaults = {\x0d\n  N: 16384\x2C\x0d\n  r: 8\x2C\x0d\n  p: 1\x2C\x0d\n  maxmem: 32 << 20\x2C  // 32 MiB\x2C matches SCRYPT_MAX_MEM.\x0d\n};\x0d\n\x0d\nfunction scrypt(password\x2C salt\x2C keylen\x2C options\x2C callback = defaults) {\x0d\n  if (callback === defaults) {\x0d\n    callback = options;\x0d\n    options = defaults;\x0d\n  }\x0d\n\x0d\n  options = check(password\x2C salt\x2C keylen\x2C options);\x0d\n  const { N\x2C r\x2C p\x2C maxmem } = options;\x0d\n  ({ password\x2C salt\x2C keylen } = options);\x0d\n\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const job = new ScryptJob(\x0d\n    kCryptoJobAsync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\x0d\n\x0d\n  job.ondone = (error\x2C result) => {\x0d\n    if (error !== undefined)\x0d\n      return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    const buf = Buffer.from(result);\x0d\n    return FunctionPrototypeCall(callback\x2C job\x2C null\x2C buf);\x0d\n  };\x0d\n\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction scryptSync(password\x2C salt\x2C keylen\x2C options = defaults) {\x0d\n  options = check(password\x2C salt\x2C keylen\x2C options);\x0d\n  const { N\x2C r\x2C p\x2C maxmem } = options;\x0d\n  ({ password\x2C salt\x2C keylen } = options);\x0d\n  const job = new ScryptJob(\x0d\n    kCryptoJobSync\x2C password\x2C salt\x2C N\x2C r\x2C p\x2C maxmem\x2C keylen);\x0d\n  const { 0: err\x2C 1: result } = job.run();\x0d\n\x0d\n  if (err !== undefined)\x0d\n    throw err;\x0d\n\x0d\n  return Buffer.from(result);\x0d\n}\x0d\n\x0d\nfunction check(password\x2C salt\x2C keylen\x2C options) {\x0d\n  if (ScryptJob === undefined)\x0d\n    throw new ERR_CRYPTO_SCRYPT_NOT_SUPPORTED();\x0d\n\x0d\n  password = getArrayBufferOrView(password\x2C 'password');\x0d\n  salt = getArrayBufferOrView(salt\x2C 'salt');\x0d\n  validateInt32(keylen\x2C 'keylen'\x2C 0);\x0d\n\x0d\n  let { N\x2C r\x2C p\x2C maxmem } = defaults;\x0d\n  if (options && options !== defaults) {\x0d\n    const has_N = options.N !== undefined;\x0d\n    if (has_N) {\x0d\n      N = options.N;\x0d\n      validateUint32(N\x2C 'N');\x0d\n    }\x0d\n    if (options.cost !== undefined) {\x0d\n      if (has_N) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\x0d\n      N = options.cost;\x0d\n      validateUint32(N\x2C 'cost');\x0d\n    }\x0d\n    const has_r = (options.r !== undefined);\x0d\n    if (has_r) {\x0d\n      r = options.r;\x0d\n      validateUint32(r\x2C 'r');\x0d\n    }\x0d\n    if (options.blockSize !== undefined) {\x0d\n      if (has_r) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\x0d\n      r = options.blockSize;\x0d\n      validateUint32(r\x2C 'blockSize');\x0d\n    }\x0d\n    const has_p = options.p !== undefined;\x0d\n    if (has_p) {\x0d\n      p = options.p;\x0d\n      validateUint32(p\x2C 'p');\x0d\n    }\x0d\n    if (options.parallelization !== undefined) {\x0d\n      if (has_p) throw new ERR_CRYPTO_SCRYPT_INVALID_PARAMETER();\x0d\n      p = options.parallelization;\x0d\n      validateUint32(p\x2C 'parallelization');\x0d\n    }\x0d\n    if (options.maxmem !== undefined) {\x0d\n      maxmem = options.maxmem;\x0d\n      validateInteger(maxmem\x2C 'maxmem'\x2C 0);\x0d\n    }\x0d\n    if (N === 0) N = defaults.N;\x0d\n    if (r === 0) r = defaults.r;\x0d\n    if (p === 0) p = defaults.p;\x0d\n    if (maxmem === 0) maxmem = defaults.maxmem;\x0d\n  }\x0d\n\x0d\n  return { password\x2C salt\x2C keylen\x2C N\x2C r\x2C p\x2C maxmem };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  scrypt\x2C\x0d\n  scryptSync\x2C\x0d\n};\x0d\n
code-source-info,0x3b844348f14,229,0,3466,C0O0C4O3466,,
code-creation,JS,10,324895,0x3b8443491fc,208, node:internal/crypto/scrypt:1:1,0x3b844348e88,~
code-source-info,0x3b8443491fc,229,0,3466,C0O0C60O28C66O91C69O91C74O80C80O179C83O179C88O124C94O138C100O158C106O300C109O300C114O220C120O241C126O261C132O279C138O446C141O446C146O353C151O360C157O402C163O515C166O515C171O488C177O568C181O568C183O3416C190O3438C196O3449C202O3431C207O3465,,
code-creation,Eval,10,325100,0x3b844349f6c,5, node:internal/crypto/hkdf:1:1,0x3b844349cb8,~
script-source,230,node:internal/crypto/hkdf,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  HKDFJob\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { kMaxLength } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  normalizeHashName\x2C\x0d\n  toBuf\x2C\x0d\n  validateByteSource\x2C\x0d\n  kKeyObject\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  createSecretKey\x2C\x0d\n  isKeyObject\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst validateParameters = hideStackFrames((hash\x2C key\x2C salt\x2C info\x2C length) => {\x0d\n  validateString.withoutStackTrace(hash\x2C 'digest');\x0d\n  key = prepareKey(key);\x0d\n  salt = validateByteSource.withoutStackTrace(salt\x2C 'salt');\x0d\n  info = validateByteSource.withoutStackTrace(info\x2C 'info');\x0d\n\x0d\n  validateInteger.withoutStackTrace(length\x2C 'length'\x2C 0\x2C kMaxLength);\x0d\n\x0d\n  if (info.byteLength > 1024) {\x0d\n    throw new ERR_OUT_OF_RANGE.HideStackFramesError(\x0d\n      'info'\x2C\x0d\n      'must not contain more than 1024 bytes'\x2C\x0d\n      info.byteLength);\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    hash\x2C\x0d\n    key\x2C\x0d\n    salt\x2C\x0d\n    info\x2C\x0d\n    length\x2C\x0d\n  };\x0d\n});\x0d\n\x0d\nfunction prepareKey(key) {\x0d\n  if (isKeyObject(key))\x0d\n    return key;\x0d\n\x0d\n  if (isAnyArrayBuffer(key))\x0d\n    return createSecretKey(key);\x0d\n\x0d\n  key = toBuf(key);\x0d\n\x0d\n  if (!isArrayBufferView(key)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'ikm'\x2C\x0d\n      [\x0d\n        'string'\x2C\x0d\n        'SecretKeyObject'\x2C\x0d\n        'ArrayBuffer'\x2C\x0d\n        'TypedArray'\x2C\x0d\n        'DataView'\x2C\x0d\n        'Buffer'\x2C\x0d\n      ]\x2C\x0d\n      key);\x0d\n  }\x0d\n\x0d\n  return createSecretKey(key);\x0d\n}\x0d\n\x0d\nfunction hkdf(hash\x2C key\x2C salt\x2C info\x2C length\x2C callback) {\x0d\n  ({\x0d\n    hash\x2C\x0d\n    key\x2C\x0d\n    salt\x2C\x0d\n    info\x2C\x0d\n    length\x2C\x0d\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\x0d\n\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const job = new HKDFJob(kCryptoJobAsync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\x0d\n\x0d\n  job.ondone = (error\x2C bits) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C bits);\x0d\n  };\x0d\n\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction hkdfSync(hash\x2C key\x2C salt\x2C info\x2C length) {\x0d\n  ({\x0d\n    hash\x2C\x0d\n    key\x2C\x0d\n    salt\x2C\x0d\n    info\x2C\x0d\n    length\x2C\x0d\n  } = validateParameters(hash\x2C key\x2C salt\x2C info\x2C length));\x0d\n\x0d\n  const job = new HKDFJob(kCryptoJobSync\x2C hash\x2C key\x2C salt\x2C info\x2C length);\x0d\n  const { 0: err\x2C 1: bits } = job.run();\x0d\n  if (err !== undefined)\x0d\n    throw err;\x0d\n\x0d\n  return bits;\x0d\n}\x0d\n\x0d\nconst hkdfPromise = promisify(hkdf);\x0d\nasync function hkdfDeriveBits(algorithm\x2C baseKey\x2C length) {\x0d\n  const { hash\x2C salt\x2C info } = algorithm;\x0d\n\x0d\n  if (length === 0)\x0d\n    throw lazyDOMException('length cannot be zero'\x2C 'OperationError');\x0d\n  if (length === null)\x0d\n    throw lazyDOMException('length cannot be null'\x2C 'OperationError');\x0d\n  if (length % 8) {\x0d\n    throw lazyDOMException(\x0d\n      'length must be a multiple of 8'\x2C\x0d\n      'OperationError');\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return await hkdfPromise(\x0d\n      normalizeHashName(hash.name)\x2C baseKey[kKeyObject]\x2C salt\x2C info\x2C length / 8\x2C\x0d\n    );\x0d\n  } catch (err) {\x0d\n    throw lazyDOMException(\x0d\n      'The operation failed for an operation-specific reason'\x2C\x0d\n      { name: 'OperationError'\x2C cause: err });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  hkdf\x2C\x0d\n  hkdfSync\x2C\x0d\n  hkdfDeriveBits\x2C\x0d\n};\x0d\n
code-source-info,0x3b844349f6c,230,0,3569,C0O0C4O3569,,
code-creation,JS,10,325350,0x3b84434a32c,330, node:internal/crypto/hkdf:1:1,0x3b844349ee0,~
code-source-info,0x3b84434a32c,230,0,3569,C0O0C89O28C95O136C98O136C103O83C109O95C115O115C121O239C124O239C129O177C135O198C141O218C147O297C150O297C155O282C161O402C164O402C169O330C175O352C181O362C187O385C193O487C196O487C201O449C207O469C213O571C216O571C221O534C227O555C232O656C235O656C240O611C246O632C252O792C255O792C260O709C265O716C271O743C277O770C282O850C287O850C291O850C293O2767C297O2767C299O3504C306O3526C312O3535C318O3548C324O3519C329O3568,,
code-creation,Eval,10,326050,0x3b84434cd6c,5, node:internal/crypto/keys:1:1,0x3b84434c7d0,~
script-source,231,node:internal/crypto/keys,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  KeyObjectHandle\x2C\x0d\n  createNativeKeyObjectClass\x2C\x0d\n  kKeyTypeSecret\x2C\x0d\n  kKeyTypePublic\x2C\x0d\n  kKeyTypePrivate\x2C\x0d\n  kKeyFormatPEM\x2C\x0d\n  kKeyFormatDER\x2C\x0d\n  kKeyFormatJWK\x2C\x0d\n  kKeyEncodingPKCS1\x2C\x0d\n  kKeyEncodingPKCS8\x2C\x0d\n  kKeyEncodingSPKI\x2C\x0d\n  kKeyEncodingSEC1\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS\x2C\x0d\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\x0d\n    ERR_CRYPTO_INVALID_JWK\x2C\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  kHandle\x2C\x0d\n  kKeyObject\x2C\x0d\n  getArrayBufferOrView\x2C\x0d\n  bigIntArrayToUnsignedBigInt\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  markTransferMode\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst kAlgorithm = Symbol('kAlgorithm');\x0d\nconst kExtractable = Symbol('kExtractable');\x0d\nconst kKeyType = Symbol('kKeyType');\x0d\nconst kKeyUsages = Symbol('kKeyUsages');\x0d\n\x0d\n// Key input contexts.\x0d\nconst kConsumePublic = 0;\x0d\nconst kConsumePrivate = 1;\x0d\nconst kCreatePublic = 2;\x0d\nconst kCreatePrivate = 3;\x0d\n\x0d\nconst encodingNames = [];\x0d\nfor (const m of [[kKeyEncodingPKCS1\x2C 'pkcs1']\x2C [kKeyEncodingPKCS8\x2C 'pkcs8']\x2C\x0d\n                 [kKeyEncodingSPKI\x2C 'spki']\x2C [kKeyEncodingSEC1\x2C 'sec1']])\x0d\n  encodingNames[m[0]] = m[1];\x0d\n\x0d\n// Creating the KeyObject class is a little complicated due to inheritance\x0d\n// and the fact that KeyObjects should be transferrable between threads\x2C\x0d\n// which requires the KeyObject base class to be implemented in C++.\x0d\n// The creation requires a callback to make sure that the NativeKeyObject\x0d\n// base class cannot exist without the other KeyObject implementations.\x0d\nconst {\x0d\n  0: KeyObject\x2C\x0d\n  1: SecretKeyObject\x2C\x0d\n  2: PublicKeyObject\x2C\x0d\n  3: PrivateKeyObject\x2C\x0d\n} = createNativeKeyObjectClass((NativeKeyObject) => {\x0d\n  // Publicly visible KeyObject class.\x0d\n  class KeyObject extends NativeKeyObject {\x0d\n    constructor(type\x2C handle) {\x0d\n      if (type !== 'secret' && type !== 'public' && type !== 'private')\x0d\n        throw new ERR_INVALID_ARG_VALUE('type'\x2C type);\x0d\n      if (typeof handle !== 'object' || !(handle instanceof KeyObjectHandle))\x0d\n        throw new ERR_INVALID_ARG_TYPE('handle'\x2C 'object'\x2C handle);\x0d\n\x0d\n      super(handle);\x0d\n\x0d\n      this[kKeyType] = type;\x0d\n\x0d\n      ObjectDefineProperty(this\x2C kHandle\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: handle\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: false\x2C\x0d\n        writable: false\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    get type() {\x0d\n      return this[kKeyType];\x0d\n    }\x0d\n\x0d\n    static from(key) {\x0d\n      if (!isCryptoKey(key))\x0d\n        throw new ERR_INVALID_ARG_TYPE('key'\x2C 'CryptoKey'\x2C key);\x0d\n      return key[kKeyObject];\x0d\n    }\x0d\n\x0d\n    equals(otherKeyObject) {\x0d\n      if (!isKeyObject(otherKeyObject)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'otherKeyObject'\x2C 'KeyObject'\x2C otherKeyObject);\x0d\n      }\x0d\n\x0d\n      return otherKeyObject.type === this.type &&\x0d\n        this[kHandle].equals(otherKeyObject[kHandle]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperties(KeyObject.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'KeyObject'\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  class SecretKeyObject extends KeyObject {\x0d\n    constructor(handle) {\x0d\n      super('secret'\x2C handle);\x0d\n    }\x0d\n\x0d\n    get symmetricKeySize() {\x0d\n      return this[kHandle].getSymmetricKeySize();\x0d\n    }\x0d\n\x0d\n    export(options) {\x0d\n      if (options !== undefined) {\x0d\n        validateObject(options\x2C 'options');\x0d\n        validateOneOf(\x0d\n          options.format\x2C 'options.format'\x2C [undefined\x2C 'buffer'\x2C 'jwk']);\x0d\n        if (options.format === 'jwk') {\x0d\n          return this[kHandle].exportJwk({}\x2C false);\x0d\n        }\x0d\n      }\x0d\n      return this[kHandle].export();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const kAsymmetricKeyType = Symbol('kAsymmetricKeyType');\x0d\n  const kAsymmetricKeyDetails = Symbol('kAsymmetricKeyDetails');\x0d\n\x0d\n  function normalizeKeyDetails(details = {}) {\x0d\n    if (details.publicExponent !== undefined) {\x0d\n      return {\x0d\n        ...details\x2C\x0d\n        publicExponent:\x0d\n          bigIntArrayToUnsignedBigInt(new Uint8Array(details.publicExponent))\x2C\x0d\n      };\x0d\n    }\x0d\n    return details;\x0d\n  }\x0d\n\x0d\n  class AsymmetricKeyObject extends KeyObject {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(type\x2C handle) {\x0d\n      super(type\x2C handle);\x0d\n    }\x0d\n\x0d\n    get asymmetricKeyType() {\x0d\n      return this[kAsymmetricKeyType] ||\x0d\n             (this[kAsymmetricKeyType] = this[kHandle].getAsymmetricKeyType());\x0d\n    }\x0d\n\x0d\n    get asymmetricKeyDetails() {\x0d\n      switch (this.asymmetricKeyType) {\x0d\n        case 'rsa':\x0d\n        case 'rsa-pss':\x0d\n        case 'dsa':\x0d\n        case 'ec':\x0d\n          return this[kAsymmetricKeyDetails] ||\x0d\n             (this[kAsymmetricKeyDetails] = normalizeKeyDetails(\x0d\n               this[kHandle].keyDetail({})\x2C\x0d\n             ));\x0d\n        default:\x0d\n          return {};\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  class PublicKeyObject extends AsymmetricKeyObject {\x0d\n    constructor(handle) {\x0d\n      super('public'\x2C handle);\x0d\n    }\x0d\n\x0d\n    export(options) {\x0d\n      if (options && options.format === 'jwk') {\x0d\n        return this[kHandle].exportJwk({}\x2C false);\x0d\n      }\x0d\n      const {\x0d\n        format\x2C\x0d\n        type\x2C\x0d\n      } = parsePublicKeyEncoding(options\x2C this.asymmetricKeyType);\x0d\n      return this[kHandle].export(format\x2C type);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  class PrivateKeyObject extends AsymmetricKeyObject {\x0d\n    constructor(handle) {\x0d\n      super('private'\x2C handle);\x0d\n    }\x0d\n\x0d\n    export(options) {\x0d\n      if (options && options.format === 'jwk') {\x0d\n        if (options.passphrase !== undefined) {\x0d\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\x0d\n            'jwk'\x2C 'does not support encryption');\x0d\n        }\x0d\n        return this[kHandle].exportJwk({}\x2C false);\x0d\n      }\x0d\n      const {\x0d\n        format\x2C\x0d\n        type\x2C\x0d\n        cipher\x2C\x0d\n        passphrase\x2C\x0d\n      } = parsePrivateKeyEncoding(options\x2C this.asymmetricKeyType);\x0d\n      return this[kHandle].export(format\x2C type\x2C cipher\x2C passphrase);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [KeyObject\x2C SecretKeyObject\x2C PublicKeyObject\x2C PrivateKeyObject];\x0d\n});\x0d\n\x0d\nfunction parseKeyFormat(formatStr\x2C defaultFormat\x2C optionName) {\x0d\n  if (formatStr === undefined && defaultFormat !== undefined)\x0d\n    return defaultFormat;\x0d\n  else if (formatStr === 'pem')\x0d\n    return kKeyFormatPEM;\x0d\n  else if (formatStr === 'der')\x0d\n    return kKeyFormatDER;\x0d\n  else if (formatStr === 'jwk')\x0d\n    return kKeyFormatJWK;\x0d\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C formatStr);\x0d\n}\x0d\n\x0d\nfunction parseKeyType(typeStr\x2C required\x2C keyType\x2C isPublic\x2C optionName) {\x0d\n  if (typeStr === undefined && !required) {\x0d\n    return undefined;\x0d\n  } else if (typeStr === 'pkcs1') {\x0d\n    if (keyType !== undefined && keyType !== 'rsa') {\x0d\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\x0d\n        typeStr\x2C 'can only be used for RSA keys');\x0d\n    }\x0d\n    return kKeyEncodingPKCS1;\x0d\n  } else if (typeStr === 'spki' && isPublic !== false) {\x0d\n    return kKeyEncodingSPKI;\x0d\n  } else if (typeStr === 'pkcs8' && isPublic !== true) {\x0d\n    return kKeyEncodingPKCS8;\x0d\n  } else if (typeStr === 'sec1' && isPublic !== true) {\x0d\n    if (keyType !== undefined && keyType !== 'ec') {\x0d\n      throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\x0d\n        typeStr\x2C 'can only be used for EC keys');\x0d\n    }\x0d\n    return kKeyEncodingSEC1;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE(optionName\x2C typeStr);\x0d\n}\x0d\n\x0d\nfunction option(name\x2C objName) {\x0d\n  return objName === undefined ?\x0d\n    `options.${name}` : `options.${objName}.${name}`;\x0d\n}\x0d\n\x0d\nfunction parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName) {\x0d\n  const { format: formatStr\x2C type: typeStr } = enc;\x0d\n\x0d\n  const isInput = keyType === undefined;\x0d\n  const format = parseKeyFormat(formatStr\x2C\x0d\n                                isInput ? kKeyFormatPEM : undefined\x2C\x0d\n                                option('format'\x2C objName));\x0d\n\x0d\n  const isRequired = (!isInput ||\x0d\n                      format === kKeyFormatDER) &&\x0d\n                      format !== kKeyFormatJWK;\x0d\n  const type = parseKeyType(typeStr\x2C\x0d\n                            isRequired\x2C\x0d\n                            keyType\x2C\x0d\n                            isPublic\x2C\x0d\n                            option('type'\x2C objName));\x0d\n  return { format\x2C type };\x0d\n}\x0d\n\x0d\nfunction isStringOrBuffer(val) {\x0d\n  return typeof val === 'string' ||\x0d\n         isArrayBufferView(val) ||\x0d\n         isAnyArrayBuffer(val);\x0d\n}\x0d\n\x0d\nfunction parseKeyEncoding(enc\x2C keyType\x2C isPublic\x2C objName) {\x0d\n  validateObject(enc\x2C 'options');\x0d\n\x0d\n  const isInput = keyType === undefined;\x0d\n\x0d\n  const {\x0d\n    format\x2C\x0d\n    type\x2C\x0d\n  } = parseKeyFormatAndType(enc\x2C keyType\x2C isPublic\x2C objName);\x0d\n\x0d\n  let cipher\x2C passphrase\x2C encoding;\x0d\n  if (isPublic !== true) {\x0d\n    ({ cipher\x2C passphrase\x2C encoding } = enc);\x0d\n\x0d\n    if (!isInput) {\x0d\n      if (cipher != null) {\x0d\n        if (typeof cipher !== 'string')\x0d\n          throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\x0d\n        if (format === kKeyFormatDER &&\x0d\n            (type === kKeyEncodingPKCS1 ||\x0d\n             type === kKeyEncodingSEC1)) {\x0d\n          throw new ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS(\x0d\n            encodingNames[type]\x2C 'does not support encryption');\x0d\n        }\x0d\n      } else if (passphrase !== undefined) {\x0d\n        throw new ERR_INVALID_ARG_VALUE(option('cipher'\x2C objName)\x2C cipher);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if ((isInput && passphrase !== undefined &&\x0d\n         !isStringOrBuffer(passphrase)) ||\x0d\n        (!isInput && cipher != null && !isStringOrBuffer(passphrase))) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(option('passphrase'\x2C objName)\x2C\x0d\n                                      passphrase);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (passphrase !== undefined)\x0d\n    passphrase = getArrayBufferOrView(passphrase\x2C 'key.passphrase'\x2C encoding);\x0d\n\x0d\n  return { format\x2C type\x2C cipher\x2C passphrase };\x0d\n}\x0d\n\x0d\n// Parses the public key encoding based on an object. keyType must be undefined\x0d\n// when this is used to parse an input encoding and must be a valid key type if\x0d\n// used to parse an output encoding.\x0d\nfunction parsePublicKeyEncoding(enc\x2C keyType\x2C objName) {\x0d\n  return parseKeyEncoding(enc\x2C keyType\x2C keyType ? true : undefined\x2C objName);\x0d\n}\x0d\n\x0d\n// Parses the private key encoding based on an object. keyType must be undefined\x0d\n// when this is used to parse an input encoding and must be a valid key type if\x0d\n// used to parse an output encoding.\x0d\nfunction parsePrivateKeyEncoding(enc\x2C keyType\x2C objName) {\x0d\n  return parseKeyEncoding(enc\x2C keyType\x2C false\x2C objName);\x0d\n}\x0d\n\x0d\nfunction getKeyObjectHandle(key\x2C ctx) {\x0d\n  if (ctx === kCreatePrivate) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'key'\x2C\x0d\n      ['string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      key\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (key.type !== 'private') {\x0d\n    if (ctx === kConsumePrivate || ctx === kCreatePublic)\x0d\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'private');\x0d\n    if (key.type !== 'public') {\x0d\n      throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C\x0d\n                                                   'private or public');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return key[kHandle];\x0d\n}\x0d\n\x0d\nfunction getKeyTypes(allowKeyObject\x2C bufferOnly = false) {\x0d\n  const types = [\x0d\n    'ArrayBuffer'\x2C\x0d\n    'Buffer'\x2C\x0d\n    'TypedArray'\x2C\x0d\n    'DataView'\x2C\x0d\n    'string'\x2C // Only if bufferOnly == false\x0d\n    'KeyObject'\x2C // Only if allowKeyObject == true && bufferOnly == false\x0d\n    'CryptoKey'\x2C // Only if allowKeyObject == true && bufferOnly == false\x0d\n  ];\x0d\n  if (bufferOnly) {\x0d\n    return ArrayPrototypeSlice(types\x2C 0\x2C 4);\x0d\n  } else if (!allowKeyObject) {\x0d\n    return ArrayPrototypeSlice(types\x2C 0\x2C 5);\x0d\n  }\x0d\n  return types;\x0d\n}\x0d\n\x0d\nfunction getKeyObjectHandleFromJwk(key\x2C ctx) {\x0d\n  validateObject(key\x2C 'key');\x0d\n  validateOneOf(\x0d\n    key.kty\x2C 'key.kty'\x2C ['RSA'\x2C 'EC'\x2C 'OKP']);\x0d\n  const isPublic = ctx === kConsumePublic || ctx === kCreatePublic;\x0d\n\x0d\n  if (key.kty === 'OKP') {\x0d\n    validateString(key.crv\x2C 'key.crv');\x0d\n    validateOneOf(\x0d\n      key.crv\x2C 'key.crv'\x2C ['Ed25519'\x2C 'Ed448'\x2C 'X25519'\x2C 'X448']);\x0d\n    validateString(key.x\x2C 'key.x');\x0d\n\x0d\n    if (!isPublic)\x0d\n      validateString(key.d\x2C 'key.d');\x0d\n\x0d\n    let keyData;\x0d\n    if (isPublic)\x0d\n      keyData = Buffer.from(key.x\x2C 'base64');\x0d\n    else\x0d\n      keyData = Buffer.from(key.d\x2C 'base64');\x0d\n\x0d\n    switch (key.crv) {\x0d\n      case 'Ed25519':\x0d\n      case 'X25519':\x0d\n        if (keyData.byteLength !== 32) {\x0d\n          throw new ERR_CRYPTO_INVALID_JWK();\x0d\n        }\x0d\n        break;\x0d\n      case 'Ed448':\x0d\n        if (keyData.byteLength !== 57) {\x0d\n          throw new ERR_CRYPTO_INVALID_JWK();\x0d\n        }\x0d\n        break;\x0d\n      case 'X448':\x0d\n        if (keyData.byteLength !== 56) {\x0d\n          throw new ERR_CRYPTO_INVALID_JWK();\x0d\n        }\x0d\n        break;\x0d\n    }\x0d\n\x0d\n    const handle = new KeyObjectHandle();\x0d\n\x0d\n    const keyType = isPublic ? kKeyTypePublic : kKeyTypePrivate;\x0d\n    if (!handle.initEDRaw(key.crv\x2C keyData\x2C keyType)) {\x0d\n      throw new ERR_CRYPTO_INVALID_JWK();\x0d\n    }\x0d\n\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (key.kty === 'EC') {\x0d\n    validateString(key.crv\x2C 'key.crv');\x0d\n    validateOneOf(\x0d\n      key.crv\x2C 'key.crv'\x2C ['P-256'\x2C 'secp256k1'\x2C 'P-384'\x2C 'P-521']);\x0d\n    validateString(key.x\x2C 'key.x');\x0d\n    validateString(key.y\x2C 'key.y');\x0d\n\x0d\n    const jwk = {\x0d\n      kty: key.kty\x2C\x0d\n      crv: key.crv\x2C\x0d\n      x: key.x\x2C\x0d\n      y: key.y\x2C\x0d\n    };\x0d\n\x0d\n    if (!isPublic) {\x0d\n      validateString(key.d\x2C 'key.d');\x0d\n      jwk.d = key.d;\x0d\n    }\x0d\n\x0d\n    const handle = new KeyObjectHandle();\x0d\n    const type = handle.initJwk(jwk\x2C jwk.crv);\x0d\n    if (type === undefined)\x0d\n      throw new ERR_CRYPTO_INVALID_JWK();\x0d\n\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  // RSA\x0d\n  validateString(key.n\x2C 'key.n');\x0d\n  validateString(key.e\x2C 'key.e');\x0d\n\x0d\n  const jwk = {\x0d\n    kty: key.kty\x2C\x0d\n    n: key.n\x2C\x0d\n    e: key.e\x2C\x0d\n  };\x0d\n\x0d\n  if (!isPublic) {\x0d\n    validateString(key.d\x2C 'key.d');\x0d\n    validateString(key.p\x2C 'key.p');\x0d\n    validateString(key.q\x2C 'key.q');\x0d\n    validateString(key.dp\x2C 'key.dp');\x0d\n    validateString(key.dq\x2C 'key.dq');\x0d\n    validateString(key.qi\x2C 'key.qi');\x0d\n    jwk.d = key.d;\x0d\n    jwk.p = key.p;\x0d\n    jwk.q = key.q;\x0d\n    jwk.dp = key.dp;\x0d\n    jwk.dq = key.dq;\x0d\n    jwk.qi = key.qi;\x0d\n  }\x0d\n\x0d\n  const handle = new KeyObjectHandle();\x0d\n  const type = handle.initJwk(jwk);\x0d\n  if (type === undefined)\x0d\n    throw new ERR_CRYPTO_INVALID_JWK();\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction prepareAsymmetricKey(key\x2C ctx) {\x0d\n  if (isKeyObject(key)) {\x0d\n    // Best case: A key object\x2C as simple as that.\x0d\n    return { data: getKeyObjectHandle(key\x2C ctx) };\x0d\n  } else if (isCryptoKey(key)) {\x0d\n    return { data: getKeyObjectHandle(key[kKeyObject]\x2C ctx) };\x0d\n  } else if (isStringOrBuffer(key)) {\x0d\n    // Expect PEM by default\x2C mostly for backward compatibility.\x0d\n    return { format: kKeyFormatPEM\x2C data: getArrayBufferOrView(key\x2C 'key') };\x0d\n  } else if (typeof key === 'object') {\x0d\n    const { key: data\x2C encoding\x2C format } = key;\x0d\n\x0d\n    // The 'key' property can be a KeyObject as well to allow specifying\x0d\n    // additional options such as padding along with the key.\x0d\n    if (isKeyObject(data))\x0d\n      return { data: getKeyObjectHandle(data\x2C ctx) };\x0d\n    else if (isCryptoKey(data))\x0d\n      return { data: getKeyObjectHandle(data[kKeyObject]\x2C ctx) };\x0d\n    else if (format === 'jwk') {\x0d\n      validateObject(data\x2C 'key.key');\x0d\n      return { data: getKeyObjectHandleFromJwk(data\x2C ctx)\x2C format: 'jwk' };\x0d\n    }\x0d\n\x0d\n    // Either PEM or DER using PKCS#1 or SPKI.\x0d\n    if (!isStringOrBuffer(data)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'key.key'\x2C\x0d\n        getKeyTypes(ctx !== kCreatePrivate)\x2C\x0d\n        data);\x0d\n    }\x0d\n\x0d\n    const isPublic =\x0d\n      (ctx === kConsumePrivate || ctx === kCreatePrivate) ? false : undefined;\x0d\n    return {\x0d\n      data: getArrayBufferOrView(data\x2C 'key'\x2C encoding)\x2C\x0d\n      ...parseKeyEncoding(key\x2C undefined\x2C isPublic)\x2C\x0d\n    };\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'key'\x2C\x0d\n    getKeyTypes(ctx !== kCreatePrivate)\x2C\x0d\n    key);\x0d\n}\x0d\n\x0d\nfunction preparePrivateKey(key) {\x0d\n  return prepareAsymmetricKey(key\x2C kConsumePrivate);\x0d\n}\x0d\n\x0d\nfunction preparePublicOrPrivateKey(key) {\x0d\n  return prepareAsymmetricKey(key\x2C kConsumePublic);\x0d\n}\x0d\n\x0d\nfunction prepareSecretKey(key\x2C encoding\x2C bufferOnly = false) {\x0d\n  if (!bufferOnly) {\x0d\n    if (isKeyObject(key)) {\x0d\n      if (key.type !== 'secret')\x0d\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\x0d\n      return key[kHandle];\x0d\n    } else if (isCryptoKey(key)) {\x0d\n      if (key.type !== 'secret')\x0d\n        throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(key.type\x2C 'secret');\x0d\n      return key[kKeyObject][kHandle];\x0d\n    }\x0d\n  }\x0d\n  if (typeof key !== 'string' &&\x0d\n      !isArrayBufferView(key) &&\x0d\n      !isAnyArrayBuffer(key)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'key'\x2C\x0d\n      getKeyTypes(!bufferOnly\x2C bufferOnly)\x2C\x0d\n      key);\x0d\n  }\x0d\n  return getArrayBufferOrView(key\x2C 'key'\x2C encoding);\x0d\n}\x0d\n\x0d\nfunction createSecretKey(key\x2C encoding) {\x0d\n  key = prepareSecretKey(key\x2C encoding\x2C true);\x0d\n  const handle = new KeyObjectHandle();\x0d\n  handle.init(kKeyTypeSecret\x2C key);\x0d\n  return new SecretKeyObject(handle);\x0d\n}\x0d\n\x0d\nfunction createPublicKey(key) {\x0d\n  const { format\x2C type\x2C data\x2C passphrase } =\x0d\n    prepareAsymmetricKey(key\x2C kCreatePublic);\x0d\n  let handle;\x0d\n  if (format === 'jwk') {\x0d\n    handle = data;\x0d\n  } else {\x0d\n    handle = new KeyObjectHandle();\x0d\n    handle.init(kKeyTypePublic\x2C data\x2C format\x2C type\x2C passphrase);\x0d\n  }\x0d\n  return new PublicKeyObject(handle);\x0d\n}\x0d\n\x0d\nfunction createPrivateKey(key) {\x0d\n  const { format\x2C type\x2C data\x2C passphrase } =\x0d\n    prepareAsymmetricKey(key\x2C kCreatePrivate);\x0d\n  let handle;\x0d\n  if (format === 'jwk') {\x0d\n    handle = data;\x0d\n  } else {\x0d\n    handle = new KeyObjectHandle();\x0d\n    handle.init(kKeyTypePrivate\x2C data\x2C format\x2C type\x2C passphrase);\x0d\n  }\x0d\n  return new PrivateKeyObject(handle);\x0d\n}\x0d\n\x0d\nfunction isKeyObject(obj) {\x0d\n  return obj != null && obj[kKeyType] !== undefined;\x0d\n}\x0d\n\x0d\n// Our implementation of CryptoKey is a simple wrapper around a KeyObject\x0d\n// that adapts it to the standard interface.\x0d\n// TODO(@jasnell): Embedder environments like electron may have issues\x0d\n// here similar to other things like URL. A chromium provided CryptoKey\x0d\n// will not be recognized as a Node.js CryptoKey\x2C and vice versa. It\x0d\n// would be fantastic if we could find a way of making those interop.\x0d\nclass CryptoKey {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `CryptoKey ${inspect({\x0d\n      type: this.type\x2C\x0d\n      extractable: this.extractable\x2C\x0d\n      algorithm: this.algorithm\x2C\x0d\n      usages: this.usages\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  get type() {\x0d\n    if (!(this instanceof CryptoKey))\x0d\n      throw new ERR_INVALID_THIS('CryptoKey');\x0d\n    return this[kKeyObject].type;\x0d\n  }\x0d\n\x0d\n  get extractable() {\x0d\n    if (!(this instanceof CryptoKey))\x0d\n      throw new ERR_INVALID_THIS('CryptoKey');\x0d\n    return this[kExtractable];\x0d\n  }\x0d\n\x0d\n  get algorithm() {\x0d\n    if (!(this instanceof CryptoKey))\x0d\n      throw new ERR_INVALID_THIS('CryptoKey');\x0d\n    return this[kAlgorithm];\x0d\n  }\x0d\n\x0d\n  get usages() {\x0d\n    if (!(this instanceof CryptoKey))\x0d\n      throw new ERR_INVALID_THIS('CryptoKey');\x0d\n    return ArrayFrom(this[kKeyUsages]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(CryptoKey.prototype\x2C {\x0d\n  type: kEnumerableProperty\x2C\x0d\n  extractable: kEnumerableProperty\x2C\x0d\n  algorithm: kEnumerableProperty\x2C\x0d\n  usages: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'CryptoKey'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// All internal code must use new InternalCryptoKey to create\x0d\n// CryptoKey instances. The CryptoKey class is exposed to end\x0d\n// user code but is not permitted to be constructed directly.\x0d\n// Using markTransferMode also allows the CryptoKey to be\x0d\n// cloned to Workers.\x0d\nclass InternalCryptoKey {\x0d\n  constructor(\x0d\n    keyObject\x2C\x0d\n    algorithm\x2C\x0d\n    keyUsages\x2C\x0d\n    extractable) {\x0d\n    markTransferMode(this\x2C true\x2C false);\x0d\n    // Using symbol properties here currently instead of private\x0d\n    // properties because (for now) the performance penalty of\x0d\n    // private fields is still too high.\x0d\n    this[kKeyObject] = keyObject;\x0d\n    this[kAlgorithm] = algorithm;\x0d\n    this[kExtractable] = extractable;\x0d\n    this[kKeyUsages] = keyUsages;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const keyObject = this[kKeyObject];\x0d\n    const algorithm = this.algorithm;\x0d\n    const extractable = this.extractable;\x0d\n    const usages = this.usages;\x0d\n\x0d\n    return {\x0d\n      data: {\x0d\n        keyObject\x2C\x0d\n        algorithm\x2C\x0d\n        usages\x2C\x0d\n        extractable\x2C\x0d\n      }\x2C\x0d\n      deserializeInfo: 'internal/crypto/keys:InternalCryptoKey'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ keyObject\x2C algorithm\x2C usages\x2C extractable }) {\x0d\n    this[kKeyObject] = keyObject;\x0d\n    this[kAlgorithm] = algorithm;\x0d\n    this[kKeyUsages] = usages;\x0d\n    this[kExtractable] = extractable;\x0d\n  }\x0d\n}\x0d\nInternalCryptoKey.prototype.constructor = CryptoKey;\x0d\nObjectSetPrototypeOf(InternalCryptoKey.prototype\x2C CryptoKey.prototype);\x0d\n\x0d\nfunction isCryptoKey(obj) {\x0d\n  return obj != null && obj[kKeyObject] !== undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  // Public API.\x0d\n  createSecretKey\x2C\x0d\n  createPublicKey\x2C\x0d\n  createPrivateKey\x2C\x0d\n  KeyObject\x2C\x0d\n  CryptoKey\x2C\x0d\n  InternalCryptoKey\x2C\x0d\n\x0d\n  // These are designed for internal use only and should not be exposed.\x0d\n  parsePublicKeyEncoding\x2C\x0d\n  parsePrivateKeyEncoding\x2C\x0d\n  parseKeyEncoding\x2C\x0d\n  preparePrivateKey\x2C\x0d\n  preparePublicOrPrivateKey\x2C\x0d\n  prepareSecretKey\x2C\x0d\n  SecretKeyObject\x2C\x0d\n  PublicKeyObject\x2C\x0d\n  PrivateKeyObject\x2C\x0d\n  isKeyObject\x2C\x0d\n  isCryptoKey\x2C\x0d\n};\x0d\n
code-source-info,0x3b84434cd6c,231,0,22131,C0O0C4O22131,,
code-creation,JS,10,326940,0x3b84434e5e4,1307, node:internal/crypto/keys:1:1,0x3b84434cce0,~
code-source-info,0x3b84434e5e
code-creation,JS,10,327373,0x3b84435035c,284, node:internal/crypto/keys:100:32,0x3b84434d480,~
code-source-info,0x3b84435035c,231,2430,6706,C0O2430C17O2520C54O3630C61O3663C75O3682C79O3702C88O3630C93O3832C125O4403C135O4403C139O4403C141O4466C149O4466C153O4466C155O4822C187O5559C214O5996C241O6632C250O6640C259O6651C268O6668C277O6685C283O6703,,
code-creation,Eval,10,327826,0x3b844354614,5, node:internal/crypto/keygen:1:1,0x3b8443541f0,~
script-source,232,node:internal/crypto/keygen,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  DhKeyPairGenJob\x2C\x0d\n  DsaKeyPairGenJob\x2C\x0d\n  EcKeyPairGenJob\x2C\x0d\n  NidKeyPairGenJob\x2C\x0d\n  RsaKeyPairGenJob\x2C\x0d\n  SecretKeyGenJob\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n  kKeyVariantRSA_PSS\x2C\x0d\n  kKeyVariantRSA_SSA_PKCS1_v1_5\x2C\x0d\n  EVP_PKEY_ED25519\x2C\x0d\n  EVP_PKEY_ED448\x2C\x0d\n  EVP_PKEY_X25519\x2C\x0d\n  EVP_PKEY_X448\x2C\x0d\n  OPENSSL_EC_NAMED_CURVE\x2C\x0d\n  OPENSSL_EC_EXPLICIT_CURVE\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  PublicKeyObject\x2C\x0d\n  PrivateKeyObject\x2C\x0d\n  SecretKeyObject\x2C\x0d\n  parsePublicKeyEncoding\x2C\x0d\n  parsePrivateKeyEncoding\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  kAesKeyLengths\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  customPromisifyArgs\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateString\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateInt32\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_MISSING_OPTION\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\nfunction isJwk(obj) {\x0d\n  return obj != null && obj.kty !== undefined;\x0d\n}\x0d\n\x0d\nfunction wrapKey(key\x2C ctor) {\x0d\n  if (typeof key === 'string' ||\x0d\n      isArrayBufferView(key) ||\x0d\n      isJwk(key))\x0d\n    return key;\x0d\n  return new ctor(key);\x0d\n}\x0d\n\x0d\nfunction generateKeyPair(type\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const job = createJob(kCryptoJobAsync\x2C type\x2C options);\x0d\n\x0d\n  job.ondone = (error\x2C result) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    // If no encoding was chosen\x2C return key objects instead.\x0d\n    let { 0: pubkey\x2C 1: privkey } = result;\x0d\n    pubkey = wrapKey(pubkey\x2C PublicKeyObject);\x0d\n    privkey = wrapKey(privkey\x2C PrivateKeyObject);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C pubkey\x2C privkey);\x0d\n  };\x0d\n\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nObjectDefineProperty(generateKeyPair\x2C customPromisifyArgs\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['publicKey'\x2C 'privateKey']\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\nfunction generateKeyPairSync(type\x2C options) {\x0d\n  return handleError(createJob(kCryptoJobSync\x2C type\x2C options).run());\x0d\n}\x0d\n\x0d\nfunction handleError(ret) {\x0d\n  if (ret == null)\x0d\n    return; // async\x0d\n\x0d\n  const { 0: err\x2C 1: keys } = ret;\x0d\n  if (err !== undefined)\x0d\n    throw err;\x0d\n\x0d\n  const { 0: publicKey\x2C 1: privateKey } = keys;\x0d\n\x0d\n  // If no encoding was chosen\x2C return key objects instead.\x0d\n  return {\x0d\n    publicKey: wrapKey(publicKey\x2C PublicKeyObject)\x2C\x0d\n    privateKey: wrapKey(privateKey\x2C PrivateKeyObject)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction parseKeyEncoding(keyType\x2C options = kEmptyObject) {\x0d\n  const { publicKeyEncoding\x2C privateKeyEncoding } = options;\x0d\n\x0d\n  let publicFormat\x2C publicType;\x0d\n  if (publicKeyEncoding == null) {\x0d\n    publicFormat = publicType = undefined;\x0d\n  } else if (typeof publicKeyEncoding === 'object') {\x0d\n    ({\x0d\n      format: publicFormat\x2C\x0d\n      type: publicType\x2C\x0d\n    } = parsePublicKeyEncoding(publicKeyEncoding\x2C keyType\x2C\x0d\n                               'publicKeyEncoding'));\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options.publicKeyEncoding'\x2C\x0d\n                                    publicKeyEncoding);\x0d\n  }\x0d\n\x0d\n  let privateFormat\x2C privateType\x2C cipher\x2C passphrase;\x0d\n  if (privateKeyEncoding == null) {\x0d\n    privateFormat = privateType = undefined;\x0d\n  } else if (typeof privateKeyEncoding === 'object') {\x0d\n    ({\x0d\n      format: privateFormat\x2C\x0d\n      type: privateType\x2C\x0d\n      cipher\x2C\x0d\n      passphrase\x2C\x0d\n    } = parsePrivateKeyEncoding(privateKeyEncoding\x2C keyType\x2C\x0d\n                                'privateKeyEncoding'));\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options.privateKeyEncoding'\x2C\x0d\n                                    privateKeyEncoding);\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    publicFormat\x2C\x0d\n    publicType\x2C\x0d\n    privateFormat\x2C\x0d\n    privateType\x2C\x0d\n    cipher\x2C\x0d\n    passphrase\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction createJob(mode\x2C type\x2C options) {\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  const encoding = new SafeArrayIterator(parseKeyEncoding(type\x2C options));\x0d\n\x0d\n  if (options !== undefined)\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  switch (type) {\x0d\n    case 'rsa':\x0d\n    case 'rsa-pss':\x0d\n    {\x0d\n      validateObject(options\x2C 'options');\x0d\n      const { modulusLength } = options;\x0d\n      validateUint32(modulusLength\x2C 'options.modulusLength');\x0d\n\x0d\n      let { publicExponent } = options;\x0d\n      if (publicExponent == null) {\x0d\n        publicExponent = 0x10001;\x0d\n      } else {\x0d\n        validateUint32(publicExponent\x2C 'options.publicExponent');\x0d\n      }\x0d\n\x0d\n      if (type === 'rsa') {\x0d\n        return new RsaKeyPairGenJob(\x0d\n          mode\x2C\x0d\n          kKeyVariantRSA_SSA_PKCS1_v1_5\x2C  // Used also for RSA-OAEP\x0d\n          modulusLength\x2C\x0d\n          publicExponent\x2C\x0d\n          ...encoding);\x0d\n      }\x0d\n\x0d\n      const {\x0d\n        hash\x2C mgf1Hash\x2C hashAlgorithm\x2C mgf1HashAlgorithm\x2C saltLength\x2C\x0d\n      } = options;\x0d\n\x0d\n      if (saltLength !== undefined)\x0d\n        validateInt32(saltLength\x2C 'options.saltLength'\x2C 0);\x0d\n      if (hashAlgorithm !== undefined)\x0d\n        validateString(hashAlgorithm\x2C 'options.hashAlgorithm');\x0d\n      if (mgf1HashAlgorithm !== undefined)\x0d\n        validateString(mgf1HashAlgorithm\x2C 'options.mgf1HashAlgorithm');\x0d\n      if (hash !== undefined) {\x0d\n        process.emitWarning(\x0d\n          '"options.hash" is deprecated\x2C ' +\x0d\n          'use "options.hashAlgorithm" instead.'\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0154');\x0d\n        validateString(hash\x2C 'options.hash');\x0d\n        if (hashAlgorithm && hash !== hashAlgorithm) {\x0d\n          throw new ERR_INVALID_ARG_VALUE('options.hash'\x2C hash);\x0d\n        }\x0d\n      }\x0d\n      if (mgf1Hash !== undefined) {\x0d\n        process.emitWarning(\x0d\n          '"options.mgf1Hash" is deprecated\x2C ' +\x0d\n          'use "options.mgf1HashAlgorithm" instead.'\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0154');\x0d\n        validateString(mgf1Hash\x2C 'options.mgf1Hash');\x0d\n        if (mgf1HashAlgorithm && mgf1Hash !== mgf1HashAlgorithm) {\x0d\n          throw new ERR_INVALID_ARG_VALUE('options.mgf1Hash'\x2C mgf1Hash);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return new RsaKeyPairGenJob(\x0d\n        mode\x2C\x0d\n        kKeyVariantRSA_PSS\x2C\x0d\n        modulusLength\x2C\x0d\n        publicExponent\x2C\x0d\n        hashAlgorithm || hash\x2C\x0d\n        mgf1HashAlgorithm || mgf1Hash\x2C\x0d\n        saltLength\x2C\x0d\n        ...encoding);\x0d\n    }\x0d\n    case 'dsa':\x0d\n    {\x0d\n      validateObject(options\x2C 'options');\x0d\n      const { modulusLength } = options;\x0d\n      validateUint32(modulusLength\x2C 'options.modulusLength');\x0d\n\x0d\n      let { divisorLength } = options;\x0d\n      if (divisorLength == null) {\x0d\n        divisorLength = -1;\x0d\n      } else\x0d\n        validateInt32(divisorLength\x2C 'options.divisorLength'\x2C 0);\x0d\n\x0d\n      return new DsaKeyPairGenJob(\x0d\n        mode\x2C\x0d\n        modulusLength\x2C\x0d\n        divisorLength\x2C\x0d\n        ...encoding);\x0d\n    }\x0d\n    case 'ec':\x0d\n    {\x0d\n      validateObject(options\x2C 'options');\x0d\n      const { namedCurve } = options;\x0d\n      validateString(namedCurve\x2C 'options.namedCurve');\x0d\n      let { paramEncoding } = options;\x0d\n      if (paramEncoding == null || paramEncoding === 'named')\x0d\n        paramEncoding = OPENSSL_EC_NAMED_CURVE;\x0d\n      else if (paramEncoding === 'explicit')\x0d\n        paramEncoding = OPENSSL_EC_EXPLICIT_CURVE;\x0d\n      else\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.paramEncoding'\x2C paramEncoding);\x0d\n\x0d\n      return new EcKeyPairGenJob(\x0d\n        mode\x2C\x0d\n        namedCurve\x2C\x0d\n        paramEncoding\x2C\x0d\n        ...encoding);\x0d\n    }\x0d\n    case 'ed25519':\x0d\n    case 'ed448':\x0d\n    case 'x25519':\x0d\n    case 'x448':\x0d\n    {\x0d\n      let id;\x0d\n      switch (type) {\x0d\n        case 'ed25519':\x0d\n          id = EVP_PKEY_ED25519;\x0d\n          break;\x0d\n        case 'ed448':\x0d\n          id = EVP_PKEY_ED448;\x0d\n          break;\x0d\n        case 'x25519':\x0d\n          id = EVP_PKEY_X25519;\x0d\n          break;\x0d\n        case 'x448':\x0d\n          id = EVP_PKEY_X448;\x0d\n          break;\x0d\n      }\x0d\n      return new NidKeyPairGenJob(mode\x2C id\x2C ...encoding);\x0d\n    }\x0d\n    case 'dh':\x0d\n    {\x0d\n      validateObject(options\x2C 'options');\x0d\n      const { group\x2C primeLength\x2C prime\x2C generator } = options;\x0d\n      if (group != null) {\x0d\n        if (prime != null)\x0d\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'prime');\x0d\n        if (primeLength != null)\x0d\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'primeLength');\x0d\n        if (generator != null)\x0d\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('group'\x2C 'generator');\x0d\n\x0d\n        validateString(group\x2C 'options.group');\x0d\n\x0d\n        return new DhKeyPairGenJob(mode\x2C group\x2C ...encoding);\x0d\n      }\x0d\n\x0d\n      if (prime != null) {\x0d\n        if (primeLength != null)\x0d\n          throw new ERR_INCOMPATIBLE_OPTION_PAIR('prime'\x2C 'primeLength');\x0d\n\x0d\n        validateBuffer(prime\x2C 'options.prime');\x0d\n      } else if (primeLength != null) {\x0d\n        validateInt32(primeLength\x2C 'options.primeLength'\x2C 0);\x0d\n      } else {\x0d\n        throw new ERR_MISSING_OPTION(\x0d\n          'At least one of the group\x2C prime\x2C or primeLength options');\x0d\n      }\x0d\n\x0d\n      if (generator != null) {\x0d\n        validateInt32(generator\x2C 'options.generator'\x2C 0);\x0d\n      }\x0d\n      return new DhKeyPairGenJob(\x0d\n        mode\x2C\x0d\n        prime != null ? prime : primeLength\x2C\x0d\n        generator == null ? 2 : generator\x2C\x0d\n        ...encoding);\x0d\n    }\x0d\n    default:\x0d\n      // Fall through\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_VALUE('type'\x2C type\x2C 'must be a supported key type');\x0d\n}\x0d\n\x0d\n// Symmetric Key Generation\x0d\n\x0d\nfunction generateKeyJob(mode\x2C keyType\x2C options) {\x0d\n  validateString(keyType\x2C 'type');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { length } = options;\x0d\n  switch (keyType) {\x0d\n    case 'hmac':\x0d\n      validateInteger(length\x2C 'options.length'\x2C 8\x2C 2 ** 31 - 1);\x0d\n      break;\x0d\n    case 'aes':\x0d\n      validateOneOf(length\x2C 'options.length'\x2C kAesKeyLengths);\x0d\n      break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'type'\x2C\x0d\n        keyType\x2C\x0d\n        'must be a supported key type');\x0d\n  }\x0d\n\x0d\n  return new SecretKeyGenJob(mode\x2C length);\x0d\n}\x0d\n\x0d\nfunction handleGenerateKeyError(ret) {\x0d\n  if (ret === undefined)\x0d\n    return; // async\x0d\n\x0d\n  const { 0: err\x2C 1: key } = ret;\x0d\n  if (err !== undefined)\x0d\n    throw err;\x0d\n\x0d\n  return wrapKey(key\x2C SecretKeyObject);\x0d\n}\x0d\n\x0d\nfunction generateKey(type\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const job = generateKeyJob(kCryptoJobAsync\x2C type\x2C options);\x0d\n\x0d\n  job.ondone = (error\x2C key) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C wrapKey(key\x2C SecretKeyObject));\x0d\n  };\x0d\n\x0d\n  handleGenerateKeyError(job.run());\x0d\n}\x0d\n\x0d\nfunction generateKeySync(type\x2C options) {\x0d\n  return handleGenerateKeyError(\x0d\n    generateKeyJob(kCryptoJobSync\x2C type\x2C options).run());\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  generateKeyPair\x2C\x0d\n  generateKeyPairSync\x2C\x0d\n  generateKey\x2C\x0d\n  generateKeySync\x2C\x0d\n};\x0d\n
code-source-info,0x3b844354614,232,0,11121,C0O0C4O11121,,
code-creation,JS,10,328304,0x3b844354d2c,528, node:internal/crypto/keygen:1:1,0x3b844354588,~
code-source-info,0x3b844354d2c,232,0,11121,C0O0C182O28C188O54C193O79C199O486C202O486C207O130C213O150C219O171C225O191C231O212C237O233C243O253C249O273C255O292C261O315C267O349C273O370C279O389C285O409C291O427C297O454C303O645C306O645C311O527C317O547C323O568C329O588C335O615C341O713C344O713C349O692C355O803C358O803C363O760C368O784C374O998C377O998C382O843C388O864C394O883C400O902C406O922C412O941C418O959C424O977C430O1152C433O1152C438O1051C443O1058C449O1093C455O1121C461O1213C464O1213C469O1191C475O2185C486O2147C491O11017C498O11039C504O11059C510O11083C516O11099C522O11032C527O11120,,
code-creation,Eval,10,328731,0x3b8443565d4,5, node:internal/crypto/diffiehellman:1:1,0x3b844356210,~
script-source,233,node:internal/crypto/diffiehellman,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferPrototypeSlice\x2C\x0d\n  MathCeil\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  DiffieHellman: _DiffieHellman\x2C\x0d\n  DiffieHellmanGroup: _DiffieHellmanGroup\x2C\x0d\n  ECDH: _ECDH\x2C\x0d\n  ECDHBitsJob\x2C\x0d\n  ECDHConvertKey: _ECDHConvertKey\x2C\x0d\n  statelessDH\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_ECDH_INVALID_FORMAT\x2C\x0d\n    ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY\x2C\x0d\n    ERR_CRYPTO_INCOMPATIBLE_KEY\x2C\x0d\n    ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  KeyObject\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  jobPromise\x2C\x0d\n  toBuf\x2C\x0d\n  kHandle\x2C\x0d\n  kKeyObject\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  crypto: {\x0d\n    POINT_CONVERSION_COMPRESSED\x2C\x0d\n    POINT_CONVERSION_HYBRID\x2C\x0d\n    POINT_CONVERSION_UNCOMPRESSED\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('constants');\x0d\n\x0d\nconst DH_GENERATOR = 2;\x0d\n\x0d\nfunction DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding) {\x0d\n  if (!(this instanceof DiffieHellman))\x0d\n    return new DiffieHellman(sizeOrKey\x2C keyEncoding\x2C generator\x2C genEncoding);\x0d\n\x0d\n  if (typeof sizeOrKey !== 'number' &&\x0d\n      typeof sizeOrKey !== 'string' &&\x0d\n      !isArrayBufferView(sizeOrKey) &&\x0d\n      !isAnyArrayBuffer(sizeOrKey)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'sizeOrKey'\x2C\x0d\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      sizeOrKey\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  // Sizes < 0 don't make sense but they _are_ accepted (and subsequently\x0d\n  // rejected with ERR_OSSL_BN_BITS_TOO_SMALL) by OpenSSL. The glue code\x0d\n  // in node_crypto.cc accepts values that are IsInt32() for that reason\x0d\n  // and that's why we do that here too.\x0d\n  if (typeof sizeOrKey === 'number')\x0d\n    validateInt32(sizeOrKey\x2C 'sizeOrKey');\x0d\n\x0d\n  if (keyEncoding && !Buffer.isEncoding(keyEncoding) &&\x0d\n      keyEncoding !== 'buffer') {\x0d\n    genEncoding = generator;\x0d\n    generator = keyEncoding;\x0d\n    keyEncoding = false;\x0d\n  }\x0d\n\x0d\n  if (typeof sizeOrKey !== 'number')\x0d\n    sizeOrKey = toBuf(sizeOrKey\x2C keyEncoding);\x0d\n\x0d\n  if (!generator) {\x0d\n    generator = DH_GENERATOR;\x0d\n  } else if (typeof generator === 'number') {\x0d\n    validateInt32(generator\x2C 'generator');\x0d\n  } else if (typeof generator === 'string') {\x0d\n    generator = toBuf(generator\x2C genEncoding);\x0d\n  } else if (!isArrayBufferView(generator) && !isAnyArrayBuffer(generator)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'generator'\x2C\x0d\n      ['number'\x2C 'string'\x2C 'ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      generator\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n\x0d\n  this[kHandle] = new _DiffieHellman(sizeOrKey\x2C generator);\x0d\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: this[kHandle].verifyError\x2C\x0d\n    writable: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction DiffieHellmanGroup(name) {\x0d\n  if (!(this instanceof DiffieHellmanGroup))\x0d\n    return new DiffieHellmanGroup(name);\x0d\n  this[kHandle] = new _DiffieHellmanGroup(name);\x0d\n  ObjectDefineProperty(this\x2C 'verifyError'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: this[kHandle].verifyError\x2C\x0d\n    writable: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.generateKeys =\x0d\n    DiffieHellman.prototype.generateKeys =\x0d\n    dhGenerateKeys;\x0d\n\x0d\nfunction dhGenerateKeys(encoding) {\x0d\n  const keys = this[kHandle].generateKeys();\x0d\n  return encode(keys\x2C encoding);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.computeSecret =\x0d\n    DiffieHellman.prototype.computeSecret =\x0d\n    dhComputeSecret;\x0d\n\x0d\nfunction dhComputeSecret(key\x2C inEnc\x2C outEnc) {\x0d\n  key = getArrayBufferOrView(key\x2C 'key'\x2C inEnc);\x0d\n  const ret = this[kHandle].computeSecret(key);\x0d\n  if (typeof ret === 'string')\x0d\n    throw new ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY();\x0d\n  return encode(ret\x2C outEnc);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.getPrime =\x0d\n    DiffieHellman.prototype.getPrime =\x0d\n    dhGetPrime;\x0d\n\x0d\nfunction dhGetPrime(encoding) {\x0d\n  const prime = this[kHandle].getPrime();\x0d\n  return encode(prime\x2C encoding);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.getGenerator =\x0d\n    DiffieHellman.prototype.getGenerator =\x0d\n    dhGetGenerator;\x0d\n\x0d\nfunction dhGetGenerator(encoding) {\x0d\n  const generator = this[kHandle].getGenerator();\x0d\n  return encode(generator\x2C encoding);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.getPublicKey =\x0d\n    DiffieHellman.prototype.getPublicKey =\x0d\n    dhGetPublicKey;\x0d\n\x0d\nfunction dhGetPublicKey(encoding) {\x0d\n  const key = this[kHandle].getPublicKey();\x0d\n  return encode(key\x2C encoding);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellmanGroup.prototype.getPrivateKey =\x0d\n    DiffieHellman.prototype.getPrivateKey =\x0d\n    dhGetPrivateKey;\x0d\n\x0d\nfunction dhGetPrivateKey(encoding) {\x0d\n  const key = this[kHandle].getPrivateKey();\x0d\n  return encode(key\x2C encoding);\x0d\n}\x0d\n\x0d\n\x0d\nDiffieHellman.prototype.setPublicKey = function setPublicKey(key\x2C encoding) {\x0d\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\x0d\n  this[kHandle].setPublicKey(key);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nDiffieHellman.prototype.setPrivateKey = function setPrivateKey(key\x2C encoding) {\x0d\n  key = getArrayBufferOrView(key\x2C 'key'\x2C encoding);\x0d\n  this[kHandle].setPrivateKey(key);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction ECDH(curve) {\x0d\n  if (!(this instanceof ECDH))\x0d\n    return new ECDH(curve);\x0d\n\x0d\n  validateString(curve\x2C 'curve');\x0d\n  this[kHandle] = new _ECDH(curve);\x0d\n}\x0d\n\x0d\nECDH.prototype.computeSecret = DiffieHellman.prototype.computeSecret;\x0d\nECDH.prototype.setPrivateKey = DiffieHellman.prototype.setPrivateKey;\x0d\nECDH.prototype.setPublicKey = DiffieHellman.prototype.setPublicKey;\x0d\nECDH.prototype.getPrivateKey = DiffieHellman.prototype.getPrivateKey;\x0d\n\x0d\nECDH.prototype.generateKeys = function generateKeys(encoding\x2C format) {\x0d\n  this[kHandle].generateKeys();\x0d\n\x0d\n  return this.getPublicKey(encoding\x2C format);\x0d\n};\x0d\n\x0d\nECDH.prototype.getPublicKey = function getPublicKey(encoding\x2C format) {\x0d\n  const f = getFormat(format);\x0d\n  const key = this[kHandle].getPublicKey(f);\x0d\n  return encode(key\x2C encoding);\x0d\n};\x0d\n\x0d\nECDH.convertKey = function convertKey(key\x2C curve\x2C inEnc\x2C outEnc\x2C format) {\x0d\n  validateString(curve\x2C 'curve');\x0d\n  key = getArrayBufferOrView(key\x2C 'key'\x2C inEnc);\x0d\n  const f = getFormat(format);\x0d\n  const convertedKey = _ECDHConvertKey(key\x2C curve\x2C f);\x0d\n  return encode(convertedKey\x2C outEnc);\x0d\n};\x0d\n\x0d\nfunction encode(buffer\x2C encoding) {\x0d\n  if (encoding && encoding !== 'buffer')\x0d\n    buffer = buffer.toString(encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction getFormat(format) {\x0d\n  if (format) {\x0d\n    if (format === 'compressed')\x0d\n      return POINT_CONVERSION_COMPRESSED;\x0d\n    if (format === 'hybrid')\x0d\n      return POINT_CONVERSION_HYBRID;\x0d\n    if (format !== 'uncompressed')\x0d\n      throw new ERR_CRYPTO_ECDH_INVALID_FORMAT(format);\x0d\n  }\x0d\n  return POINT_CONVERSION_UNCOMPRESSED;\x0d\n}\x0d\n\x0d\nconst dhEnabledKeyTypes = new SafeSet(['dh'\x2C 'ec'\x2C 'x448'\x2C 'x25519']);\x0d\n\x0d\nfunction diffieHellman(options) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const { privateKey\x2C publicKey } = options;\x0d\n  if (!(privateKey instanceof KeyObject))\x0d\n    throw new ERR_INVALID_ARG_VALUE('options.privateKey'\x2C privateKey);\x0d\n\x0d\n  if (!(publicKey instanceof KeyObject))\x0d\n    throw new ERR_INVALID_ARG_VALUE('options.publicKey'\x2C publicKey);\x0d\n\x0d\n  if (privateKey.type !== 'private')\x0d\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(privateKey.type\x2C 'private');\x0d\n\x0d\n  if (publicKey.type !== 'public' && publicKey.type !== 'private') {\x0d\n    throw new ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE(publicKey.type\x2C\x0d\n                                                 'private or public');\x0d\n  }\x0d\n\x0d\n  const privateType = privateKey.asymmetricKeyType;\x0d\n  const publicType = publicKey.asymmetricKeyType;\x0d\n  if (privateType !== publicType || !dhEnabledKeyTypes.has(privateType)) {\x0d\n    throw new ERR_CRYPTO_INCOMPATIBLE_KEY('key types for Diffie-Hellman'\x2C\x0d\n                                          `${privateType} and ${publicType}`);\x0d\n  }\x0d\n\x0d\n  return statelessDH(privateKey[kHandle]\x2C publicKey[kHandle]);\x0d\n}\x0d\n\x0d\n// The ecdhDeriveBits function is part of the Web Crypto API and serves both\x0d\n// deriveKeys and deriveBits functions.\x0d\nasync function ecdhDeriveBits(algorithm\x2C baseKey\x2C length) {\x0d\n  const { 'public': key } = algorithm;\x0d\n\x0d\n  if (key.type !== 'public') {\x0d\n    throw lazyDOMException(\x0d\n      'algorithm.public must be a public key'\x2C 'InvalidAccessError');\x0d\n  }\x0d\n  if (baseKey.type !== 'private') {\x0d\n    throw lazyDOMException(\x0d\n      'baseKey must be a private key'\x2C 'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    key.algorithm.name !== 'ECDH' &&\x0d\n    key.algorithm.name !== 'X25519' &&\x0d\n    key.algorithm.name !== 'X448'\x0d\n  ) {\x0d\n    throw lazyDOMException('Keys must be ECDH\x2C X25519\x2C or X448 keys'\x2C 'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  if (key.algorithm.name !== baseKey.algorithm.name) {\x0d\n    throw lazyDOMException(\x0d\n      'The public and private keys must be of the same type'\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    key.algorithm.name === 'ECDH' &&\x0d\n    key.algorithm.namedCurve !== baseKey.algorithm.namedCurve\x0d\n  ) {\x0d\n    throw lazyDOMException('Named curve mismatch'\x2C 'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  const bits = await jobPromise(() => new ECDHBitsJob(\x0d\n    kCryptoJobAsync\x2C\x0d\n    key.algorithm.name === 'ECDH' ? baseKey.algorithm.namedCurve : baseKey.algorithm.name\x2C\x0d\n    key[kKeyObject][kHandle]\x2C\x0d\n    baseKey[kKeyObject][kHandle]));\x0d\n\x0d\n  // If a length is not specified\x2C return the full derived secret\x0d\n  if (length === null)\x0d\n    return bits;\x0d\n\x0d\n  // If the length is not a multiple of 8 the nearest ceiled\x0d\n  // multiple of 8 is sliced.\x0d\n  length = MathCeil(length / 8);\x0d\n  const { byteLength } = bits;\x0d\n\x0d\n  // If the length is larger than the derived secret\x2C throw.\x0d\n  // Otherwise\x2C we either return the secret or a truncated\x0d\n  // slice.\x0d\n  if (byteLength < length)\x0d\n    throw lazyDOMException('derived bit length is too small'\x2C 'OperationError');\x0d\n\x0d\n  return length === byteLength ?\x0d\n    bits :\x0d\n    ArrayBufferPrototypeSlice(bits\x2C 0\x2C length);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DiffieHellman\x2C\x0d\n  DiffieHellmanGroup\x2C\x0d\n  ECDH\x2C\x0d\n  diffieHellman\x2C\x0d\n  ecdhDeriveBits\x2C\x0d\n};\x0d\n
code-source-info,0x3b8443565d4,233,0,10275,C0O0C4O10275,,
code-creation,JS,10,329205,0x3b844356f94,856, node:internal/crypto/diffiehellman:1:1,0x3b844356548,~
code-source-info,0x3b844356f94,233,0,10275,C0O0C177O28C183O58C189O71C195O96C200O145C203O145C208O134C214O362C217O362C222O193C228O232C234O262C240O272C246O304C252O324C258O340C264O631C267O631C272O410C277O417C283O454C289O495C295O529C301O570C307O597C313O731C316O731C321O673C327O691C333O710C339O822C342O822C347O777C353O799C359O891C362O891C367O868C373O947C376O947C381O931C387O1073C390O1073C395O994C401O1019C407O1034C413O1044C419O1056C425O1241C428O1241C433O1128C438O1135C444O1169C450O1199C456O1295C458O1295C460O3507C463O3526C471O3570C478O3593C484O3549C488O3743C491O3762C499O3807C506O3831C512O3786C516O4128C519O4147C527O4187C534O4206C540O4166C544O4346C547O4365C555O4409C562O4432C568O4388C572O4592C575O4611C583O4655C590O4678C596O4634C600O4826C603O4845C611O4890C618O4914C624O4869C628O5065C631O5079C640O5102C644O5257C647O5271C656O5295C660O5616C663O5621C671O5661C676O5671C680O5645C684O5687C687O5692C695O5732C700O5742C704O5716C708O5758C711O5763C719O5802C724O5812C728O5786C732O5827C735O5832C743O5872C748O5882C752O5856C756O5900C759O5905C768O5928C772O6061C775O6066C784O6089C788O6251C795O6267C799O7052C806O7052C811O7052C813O10164C820O10186C826O10204C832O10227C838O10236C844O10254C850O10179C855O10274,,
code-creation,Eval,10,329748,0x3b844358e14,5, node:internal/crypto/cipher:1:1,0x3b844358ab0,~
script-source,234,node:internal/crypto/cipher,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CipherBase\x2C\x0d\n  privateDecrypt: _privateDecrypt\x2C\x0d\n  privateEncrypt: _privateEncrypt\x2C\x0d\n  publicDecrypt: _publicDecrypt\x2C\x0d\n  publicEncrypt: _publicEncrypt\x2C\x0d\n  getCipherInfo: _getCipherInfo\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  crypto: {\x0d\n    RSA_PKCS1_OAEP_PADDING\x2C\x0d\n    RSA_PKCS1_PADDING\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('constants');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_INVALID_STATE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateEncoding\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  preparePrivateKey\x2C\x0d\n  preparePublicOrPrivateKey\x2C\x0d\n  prepareSecretKey\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  getStringOption\x2C\x0d\n  kHandle\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst LazyTransform = require('internal/streams/lazy_transform');\x0d\n\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\n\x0d\nfunction rsaFunctionFor(method\x2C defaultPadding\x2C keyType) {\x0d\n  return (options\x2C buffer) => {\x0d\n    const { format\x2C type\x2C data\x2C passphrase } =\x0d\n      keyType === 'private' ?\x0d\n        preparePrivateKey(options) :\x0d\n        preparePublicOrPrivateKey(options);\x0d\n    const padding = options.padding || defaultPadding;\x0d\n    const { oaepHash\x2C encoding } = options;\x0d\n    let { oaepLabel } = options;\x0d\n    if (oaepHash !== undefined)\x0d\n      validateString(oaepHash\x2C 'key.oaepHash');\x0d\n    if (oaepLabel !== undefined)\x0d\n      oaepLabel = getArrayBufferOrView(oaepLabel\x2C 'key.oaepLabel'\x2C encoding);\x0d\n    buffer = getArrayBufferOrView(buffer\x2C 'buffer'\x2C encoding);\x0d\n    return method(data\x2C format\x2C type\x2C passphrase\x2C buffer\x2C padding\x2C oaepHash\x2C\x0d\n                  oaepLabel);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst publicEncrypt = rsaFunctionFor(_publicEncrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\x0d\n                                     'public');\x0d\nconst publicDecrypt = rsaFunctionFor(_publicDecrypt\x2C RSA_PKCS1_PADDING\x2C\x0d\n                                     'public');\x0d\nconst privateEncrypt = rsaFunctionFor(_privateEncrypt\x2C RSA_PKCS1_PADDING\x2C\x0d\n                                      'private');\x0d\nconst privateDecrypt = rsaFunctionFor(_privateDecrypt\x2C RSA_PKCS1_OAEP_PADDING\x2C\x0d\n                                      'private');\x0d\n\x0d\nfunction getDecoder(decoder\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  decoder = decoder || new StringDecoder(encoding);\x0d\n  if (decoder.encoding !== normalizedEncoding) {\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n    assert(false\x2C 'Cannot change encoding');\x0d\n  }\x0d\n  return decoder;\x0d\n}\x0d\n\x0d\nfunction getUIntOption(options\x2C key) {\x0d\n  let value;\x0d\n  if (options && (value = options[key]) != null) {\x0d\n    if (value >>> 0 !== value)\x0d\n      throw new ERR_INVALID_ARG_VALUE(`options.${key}`\x2C value);\x0d\n    return value;\x0d\n  }\x0d\n  return -1;\x0d\n}\x0d\n\x0d\nfunction createCipherBase(cipher\x2C credential\x2C options\x2C decipher\x2C iv) {\x0d\n  const authTagLength = getUIntOption(options\x2C 'authTagLength');\x0d\n  this[kHandle] = new CipherBase(decipher);\x0d\n  if (iv === undefined) {\x0d\n    this[kHandle].init(cipher\x2C credential\x2C authTagLength);\x0d\n  } else {\x0d\n    this[kHandle].initiv(cipher\x2C credential\x2C iv\x2C authTagLength);\x0d\n  }\x0d\n  this._decoder = null;\x0d\n\x0d\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\x0d\n}\x0d\n\x0d\nfunction createCipher(cipher\x2C password\x2C options\x2C decipher) {\x0d\n  validateString(cipher\x2C 'cipher');\x0d\n  password = getArrayBufferOrView(password\x2C 'password');\x0d\n\x0d\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C password\x2C options\x2C decipher]);\x0d\n}\x0d\n\x0d\nfunction createCipherWithIV(cipher\x2C key\x2C options\x2C decipher\x2C iv) {\x0d\n  validateString(cipher\x2C 'cipher');\x0d\n  const encoding = getStringOption(options\x2C 'encoding');\x0d\n  key = prepareSecretKey(key\x2C encoding);\x0d\n  iv = iv === null ? null : getArrayBufferOrView(iv\x2C 'iv');\x0d\n  ReflectApply(createCipherBase\x2C this\x2C [cipher\x2C key\x2C options\x2C decipher\x2C iv]);\x0d\n}\x0d\n\x0d\n// The Cipher class is part of the legacy Node.js crypto API. It exposes\x0d\n// a stream-based encryption/decryption model. For backwards compatibility\x0d\n// the Cipher class is defined using the legacy function syntax rather than\x0d\n// ES6 classes.\x0d\n\x0d\nfunction Cipher(cipher\x2C password\x2C options) {\x0d\n  if (!(this instanceof Cipher))\x0d\n    return new Cipher(cipher\x2C password\x2C options);\x0d\n\x0d\n  ReflectApply(createCipher\x2C this\x2C [cipher\x2C password\x2C options\x2C true]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Cipher.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Cipher\x2C LazyTransform);\x0d\n\x0d\nCipher.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\x0d\n  this.push(this[kHandle].update(chunk\x2C encoding));\x0d\n  callback();\x0d\n};\x0d\n\x0d\nCipher.prototype._flush = function _flush(callback) {\x0d\n  try {\x0d\n    this.push(this[kHandle].final());\x0d\n  } catch (e) {\x0d\n    callback(e);\x0d\n    return;\x0d\n  }\x0d\n  callback();\x0d\n};\x0d\n\x0d\nCipher.prototype.update = function update(data\x2C inputEncoding\x2C outputEncoding) {\x0d\n  if (typeof data === 'string') {\x0d\n    validateEncoding(data\x2C inputEncoding);\x0d\n  } else if (!isArrayBufferView(data)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\x0d\n  }\x0d\n\x0d\n  const ret = this[kHandle].update(data\x2C inputEncoding);\x0d\n\x0d\n  if (outputEncoding && outputEncoding !== 'buffer') {\x0d\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\x0d\n    return this._decoder.write(ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nCipher.prototype.final = function final(outputEncoding) {\x0d\n  const ret = this[kHandle].final();\x0d\n\x0d\n  if (outputEncoding && outputEncoding !== 'buffer') {\x0d\n    this._decoder = getDecoder(this._decoder\x2C outputEncoding);\x0d\n    return this._decoder.end(ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nCipher.prototype.setAutoPadding = function setAutoPadding(ap) {\x0d\n  if (!this[kHandle].setAutoPadding(!!ap))\x0d\n    throw new ERR_CRYPTO_INVALID_STATE('setAutoPadding');\x0d\n  return this;\x0d\n};\x0d\n\x0d\nCipher.prototype.getAuthTag = function getAuthTag() {\x0d\n  const ret = this[kHandle].getAuthTag();\x0d\n  if (ret === undefined)\x0d\n    throw new ERR_CRYPTO_INVALID_STATE('getAuthTag');\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nfunction setAuthTag(tagbuf\x2C encoding) {\x0d\n  tagbuf = getArrayBufferOrView(tagbuf\x2C 'buffer'\x2C encoding);\x0d\n  if (!this[kHandle].setAuthTag(tagbuf))\x0d\n    throw new ERR_CRYPTO_INVALID_STATE('setAuthTag');\x0d\n  return this;\x0d\n}\x0d\n\x0d\nCipher.prototype.setAAD = function setAAD(aadbuf\x2C options) {\x0d\n  const encoding = getStringOption(options\x2C 'encoding');\x0d\n  const plaintextLength = getUIntOption(options\x2C 'plaintextLength');\x0d\n  aadbuf = getArrayBufferOrView(aadbuf\x2C 'aadbuf'\x2C encoding);\x0d\n  if (!this[kHandle].setAAD(aadbuf\x2C plaintextLength))\x0d\n    throw new ERR_CRYPTO_INVALID_STATE('setAAD');\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// The Cipheriv class is part of the legacy Node.js crypto API. It exposes\x0d\n// a stream-based encryption/decryption model. For backwards compatibility\x0d\n// the Cipheriv class is defined using the legacy function syntax rather than\x0d\n// ES6 classes.\x0d\n\x0d\nfunction Cipheriv(cipher\x2C key\x2C iv\x2C options) {\x0d\n  if (!(this instanceof Cipheriv))\x0d\n    return new Cipheriv(cipher\x2C key\x2C iv\x2C options);\x0d\n\x0d\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C true\x2C iv]);\x0d\n}\x0d\n\x0d\nfunction addCipherPrototypeFunctions(constructor) {\x0d\n  constructor.prototype._transform = Cipher.prototype._transform;\x0d\n  constructor.prototype._flush = Cipher.prototype._flush;\x0d\n  constructor.prototype.update = Cipher.prototype.update;\x0d\n  constructor.prototype.final = Cipher.prototype.final;\x0d\n  constructor.prototype.setAutoPadding = Cipher.prototype.setAutoPadding;\x0d\n  if (constructor === Cipheriv) {\x0d\n    constructor.prototype.getAuthTag = Cipher.prototype.getAuthTag;\x0d\n  } else {\x0d\n    constructor.prototype.setAuthTag = setAuthTag;\x0d\n  }\x0d\n  constructor.prototype.setAAD = Cipher.prototype.setAAD;\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Cipheriv.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Cipheriv\x2C LazyTransform);\x0d\naddCipherPrototypeFunctions(Cipheriv);\x0d\n\x0d\n// The Decipher class is part of the legacy Node.js crypto API. It exposes\x0d\n// a stream-based encryption/decryption model. For backwards compatibility\x0d\n// the Decipher class is defined using the legacy function syntax rather than\x0d\n// ES6 classes.\x0d\n\x0d\nfunction Decipher(cipher\x2C password\x2C options) {\x0d\n  if (!(this instanceof Decipher))\x0d\n    return new Decipher(cipher\x2C password\x2C options);\x0d\n\x0d\n  ReflectApply(createCipher\x2C this\x2C [cipher\x2C password\x2C options\x2C false]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Decipher.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Decipher\x2C LazyTransform);\x0d\naddCipherPrototypeFunctions(Decipher);\x0d\n\x0d\n// The Decipheriv class is part of the legacy Node.js crypto API. It exposes\x0d\n// a stream-based encryption/decryption model. For backwards compatibility\x0d\n// the Decipheriv class is defined using the legacy function syntax rather than\x0d\n// ES6 classes.\x0d\n\x0d\nfunction Decipheriv(cipher\x2C key\x2C iv\x2C options) {\x0d\n  if (!(this instanceof Decipheriv))\x0d\n    return new Decipheriv(cipher\x2C key\x2C iv\x2C options);\x0d\n\x0d\n  ReflectApply(createCipherWithIV\x2C this\x2C [cipher\x2C key\x2C options\x2C false\x2C iv]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Decipheriv.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Decipheriv\x2C LazyTransform);\x0d\naddCipherPrototypeFunctions(Decipheriv);\x0d\n\x0d\nfunction getCipherInfo(nameOrNid\x2C options) {\x0d\n  if (typeof nameOrNid !== 'string' && typeof nameOrNid !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'nameOrNid'\x2C\x0d\n      ['string'\x2C 'number']\x2C\x0d\n      nameOrNid);\x0d\n  }\x0d\n  if (typeof nameOrNid === 'number')\x0d\n    validateInt32(nameOrNid\x2C 'nameOrNid');\x0d\n  let keyLength\x2C ivLength;\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    ({ keyLength\x2C ivLength } = options);\x0d\n    if (keyLength !== undefined)\x0d\n      validateInt32(keyLength\x2C 'options.keyLength');\x0d\n    if (ivLength !== undefined)\x0d\n      validateInt32(ivLength\x2C 'options.ivLength');\x0d\n  }\x0d\n\x0d\n  const ret = _getCipherInfo({}\x2C nameOrNid\x2C keyLength\x2C ivLength);\x0d\n  if (ret !== undefined) {\x0d\n    if (ret.name) ret.name = StringPrototypeToLowerCase(ret.name);\x0d\n    if (ret.type) ret.type = StringPrototypeToLowerCase(ret.type);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Cipher\x2C\x0d\n  Cipheriv\x2C\x0d\n  Decipher\x2C\x0d\n  Decipheriv\x2C\x0d\n  privateDecrypt\x2C\x0d\n  privateEncrypt\x2C\x0d\n  publicDecrypt\x2C\x0d\n  publicEncrypt\x2C\x0d\n  getCipherInfo\x2C\x0d\n};\x0d\n
code-source-info,0x3b844358e14,234,0,10532,C0O0C4O10532,,
code-creation,JS,10,330186,0x3b84435987c,843, node:internal/crypto/cipher:1:1,0x3b844358d88,~
code-source-info,0x3b84435987c
code-creation,Eval,10,330448,0x3b84435a4cc,5, node:internal/streams/lazy_transform:1:1,0x3b84435a358,~
script-source,235,node:internal/streams/lazy_transform,// LazyTransform is a special type of Transform stream that is lazily loaded.\x0d\n// This is used for performance with bi-API-ship: when two APIs are available\x0d\n// for the stream\x2C one conventional and one non-conventional.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst stream = require('stream');\x0d\n\x0d\nmodule.exports = LazyTransform;\x0d\n\x0d\nfunction LazyTransform(options) {\x0d\n  this._options = options;\x0d\n}\x0d\nObjectSetPrototypeOf(LazyTransform.prototype\x2C stream.Transform.prototype);\x0d\nObjectSetPrototypeOf(LazyTransform\x2C stream.Transform);\x0d\n\x0d\nfunction makeGetter(name) {\x0d\n  return function() {\x0d\n    stream.Transform.call(this\x2C this._options);\x0d\n    this._writableState.decodeStrings = false;\x0d\n    return this[name];\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction makeSetter(name) {\x0d\n  return function(val) {\x0d\n    ObjectDefineProperty(this\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: val\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n    });\x0d\n  };\x0d\n}\x0d\n\x0d\nObjectDefineProperties(LazyTransform.prototype\x2C {\x0d\n  _readableState: {\x0d\n    __proto__: null\x2C\x0d\n    get: makeGetter('_readableState')\x2C\x0d\n    set: makeSetter('_readableState')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n  _writableState: {\x0d\n    __proto__: null\x2C\x0d\n    get: makeGetter('_writableState')\x2C\x0d\n    set: makeSetter('_writableState')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x3b84435a4cc,235,0,1443,C0O0C4O1443,,
code-creation,JS,10,330531,0x3b84435a814,176, node:internal/streams/lazy_transform:1:1,0x3b84435a440,~
code-source-info,0x3b84435a814,235,0,1443,C0O0C26O249C31O276C37O301C42O359C45O359C49O359C51O381C53O396C57O517C65O535C70O545C75O482C80O558C83O601C88O558C93O1070C103O1102C111O1136C122O1176C136O1279C144O1313C155O1353C169O1033C175O1442,,
code-creation,JS,10,330638,0x3b84435b064,14,makeGetter node:internal/streams/lazy_transform:22:20,0x3b84435a558,~
code-source-info,0x3b84435b064,235,635,796,C0O635C9O647C13O793,,
code-creation,JS,10,330677,0x3b84435b3c4,14,makeSetter node:internal/streams/lazy_transform:30:20,0x3b84435a5d8,~
code-source-info,0x3b84435b3c4,235,819,1029,C0O819C9O831C13O1026,,
code-creation,JS,10,330762,0x3b84435b5d4,22,rsaFunctionFor node:internal/crypto/cipher:65:24,0x3b844358e48,~
code-source-info,0x3b84435b5d4,234,1320,2062,C0O1320C17O1359C21O2059,,
code-creation,JS,10,330853,0x3b84435c51c,169,addCipherPrototypeFunctions node:internal/crypto/cipher:246:37,0x3b844359160,~
code-source-info,0x3b84435c51c,234,7476,8043,C0O7507C8O7537C13O7547C17O7528C21O7574C29O7600C34O7610C38O7591C42O7633C50O7659C55O7669C59O7650C63O7692C71O7717C76O7727C80O7708C84O7749C92O7783C97O7793C101O7774C105O7812C107O7828C112O7861C120O7891C125O7901C129O7882C135O7942C142O7963C146O7997C154O8023C159O8033C163O8014C168O8042,,
code-creation,Eval,10,331194,0x3b84435d9ac,5, node:internal/crypto/sig:1:1,0x3b84435d678,~
script-source,236,node:internal/crypto/sig,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_SIGN_KEY_REQUIRED\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  Sign: _Sign\x2C\x0d\n  SignJob\x2C\x0d\n  Verify: _Verify\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n  kCryptoJobSync\x2C\x0d\n  kSigEncDER\x2C\x0d\n  kSigEncP1363\x2C\x0d\n  kSignJobModeSign\x2C\x0d\n  kSignJobModeVerify\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n  kHandle\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  preparePrivateKey\x2C\x0d\n  preparePublicOrPrivateKey\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst { Writable } = require('stream');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nfunction Sign(algorithm\x2C options) {\x0d\n  if (!(this instanceof Sign))\x0d\n    return new Sign(algorithm\x2C options);\x0d\n  validateString(algorithm\x2C 'algorithm');\x0d\n  this[kHandle] = new _Sign();\x0d\n  this[kHandle].init(algorithm);\x0d\n\x0d\n  ReflectApply(Writable\x2C this\x2C [options]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Sign.prototype\x2C Writable.prototype);\x0d\nObjectSetPrototypeOf(Sign\x2C Writable);\x0d\n\x0d\nSign.prototype._write = function _write(chunk\x2C encoding\x2C callback) {\x0d\n  this.update(chunk\x2C encoding);\x0d\n  callback();\x0d\n};\x0d\n\x0d\nSign.prototype.update = function update(data\x2C encoding) {\x0d\n  if (typeof data === 'string') {\x0d\n    validateEncoding(data\x2C encoding);\x0d\n  } else if (!isArrayBufferView(data)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\x0d\n  }\x0d\n\x0d\n  this[kHandle].update(data\x2C encoding);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction getPadding(options) {\x0d\n  return getIntOption('padding'\x2C options);\x0d\n}\x0d\n\x0d\nfunction getSaltLength(options) {\x0d\n  return getIntOption('saltLength'\x2C options);\x0d\n}\x0d\n\x0d\nfunction getDSASignatureEncoding(options) {\x0d\n  if (typeof options === 'object') {\x0d\n    const { dsaEncoding = 'der' } = options;\x0d\n    if (dsaEncoding === 'der')\x0d\n      return kSigEncDER;\x0d\n    else if (dsaEncoding === 'ieee-p1363')\x0d\n      return kSigEncP1363;\x0d\n    throw new ERR_INVALID_ARG_VALUE('options.dsaEncoding'\x2C dsaEncoding);\x0d\n  }\x0d\n\x0d\n  return kSigEncDER;\x0d\n}\x0d\n\x0d\nfunction getIntOption(name\x2C options) {\x0d\n  const value = options[name];\x0d\n  if (value !== undefined) {\x0d\n    if (value === value >> 0) {\x0d\n      return value;\x0d\n    }\x0d\n    throw new ERR_INVALID_ARG_VALUE(`options.${name}`\x2C value);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nSign.prototype.sign = function sign(options\x2C encoding) {\x0d\n  if (!options)\x0d\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\x0d\n\x0d\n  const { data\x2C format\x2C type\x2C passphrase } = preparePrivateKey(options\x2C true);\x0d\n\x0d\n  // Options specific to RSA\x0d\n  const rsaPadding = getPadding(options);\x0d\n  const pssSaltLength = getSaltLength(options);\x0d\n\x0d\n  // Options specific to (EC)DSA\x0d\n  const dsaSigEnc = getDSASignatureEncoding(options);\x0d\n\x0d\n  const ret = this[kHandle].sign(data\x2C format\x2C type\x2C passphrase\x2C rsaPadding\x2C\x0d\n                                 pssSaltLength\x2C dsaSigEnc);\x0d\n\x0d\n  if (encoding && encoding !== 'buffer')\x0d\n    return ret.toString(encoding);\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction signOneShot(algorithm\x2C data\x2C key\x2C callback) {\x0d\n  if (algorithm != null)\x0d\n    validateString(algorithm\x2C 'algorithm');\x0d\n\x0d\n  if (callback !== undefined)\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  data = getArrayBufferOrView(data\x2C 'data');\x0d\n\x0d\n  if (!key)\x0d\n    throw new ERR_CRYPTO_SIGN_KEY_REQUIRED();\x0d\n\x0d\n  // Options specific to RSA\x0d\n  const rsaPadding = getPadding(key);\x0d\n  const pssSaltLength = getSaltLength(key);\x0d\n\x0d\n  // Options specific to (EC)DSA\x0d\n  const dsaSigEnc = getDSASignatureEncoding(key);\x0d\n\x0d\n  const {\x0d\n    data: keyData\x2C\x0d\n    format: keyFormat\x2C\x0d\n    type: keyType\x2C\x0d\n    passphrase: keyPassphrase\x2C\x0d\n  } = preparePrivateKey(key);\x0d\n\x0d\n  const job = new SignJob(\x0d\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\x0d\n    kSignJobModeSign\x2C\x0d\n    keyData\x2C\x0d\n    keyFormat\x2C\x0d\n    keyType\x2C\x0d\n    keyPassphrase\x2C\x0d\n    data\x2C\x0d\n    algorithm\x2C\x0d\n    pssSaltLength\x2C\x0d\n    rsaPadding\x2C\x0d\n    dsaSigEnc);\x0d\n\x0d\n  if (!callback) {\x0d\n    const { 0: err\x2C 1: signature } = job.run();\x0d\n    if (err !== undefined)\x0d\n      throw err;\x0d\n\x0d\n    return Buffer.from(signature);\x0d\n  }\x0d\n\x0d\n  job.ondone = (error\x2C signature) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C Buffer.from(signature));\x0d\n  };\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nfunction Verify(algorithm\x2C options) {\x0d\n  if (!(this instanceof Verify))\x0d\n    return new Verify(algorithm\x2C options);\x0d\n  validateString(algorithm\x2C 'algorithm');\x0d\n  this[kHandle] = new _Verify();\x0d\n  this[kHandle].init(algorithm);\x0d\n\x0d\n  ReflectApply(Writable\x2C this\x2C [options]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Verify.prototype\x2C Writable.prototype);\x0d\nObjectSetPrototypeOf(Verify\x2C Writable);\x0d\n\x0d\nVerify.prototype._write = Sign.prototype._write;\x0d\nVerify.prototype.update = Sign.prototype.update;\x0d\n\x0d\nVerify.prototype.verify = function verify(options\x2C signature\x2C sigEncoding) {\x0d\n  const {\x0d\n    data\x2C\x0d\n    format\x2C\x0d\n    type\x2C\x0d\n    passphrase\x2C\x0d\n  } = preparePublicOrPrivateKey(options\x2C true);\x0d\n\x0d\n  // Options specific to RSA\x0d\n  const rsaPadding = getPadding(options);\x0d\n  const pssSaltLength = getSaltLength(options);\x0d\n\x0d\n  // Options specific to (EC)DSA\x0d\n  const dsaSigEnc = getDSASignatureEncoding(options);\x0d\n\x0d\n  signature = getArrayBufferOrView(signature\x2C 'signature'\x2C sigEncoding);\x0d\n\x0d\n  return this[kHandle].verify(data\x2C format\x2C type\x2C passphrase\x2C signature\x2C\x0d\n                              rsaPadding\x2C pssSaltLength\x2C dsaSigEnc);\x0d\n};\x0d\n\x0d\nfunction verifyOneShot(algorithm\x2C data\x2C key\x2C signature\x2C callback) {\x0d\n  if (algorithm != null)\x0d\n    validateString(algorithm\x2C 'algorithm');\x0d\n\x0d\n  if (callback !== undefined)\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  data = getArrayBufferOrView(data\x2C 'data');\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'data'\x2C\x0d\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      data\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  // Options specific to RSA\x0d\n  const rsaPadding = getPadding(key);\x0d\n  const pssSaltLength = getSaltLength(key);\x0d\n\x0d\n  // Options specific to (EC)DSA\x0d\n  const dsaSigEnc = getDSASignatureEncoding(key);\x0d\n\x0d\n  if (!isArrayBufferView(signature)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'signature'\x2C\x0d\n      ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      signature\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    data: keyData\x2C\x0d\n    format: keyFormat\x2C\x0d\n    type: keyType\x2C\x0d\n    passphrase: keyPassphrase\x2C\x0d\n  } = preparePublicOrPrivateKey(key);\x0d\n\x0d\n  const job = new SignJob(\x0d\n    callback ? kCryptoJobAsync : kCryptoJobSync\x2C\x0d\n    kSignJobModeVerify\x2C\x0d\n    keyData\x2C\x0d\n    keyFormat\x2C\x0d\n    keyType\x2C\x0d\n    keyPassphrase\x2C\x0d\n    data\x2C\x0d\n    algorithm\x2C\x0d\n    pssSaltLength\x2C\x0d\n    rsaPadding\x2C\x0d\n    dsaSigEnc\x2C\x0d\n    signature);\x0d\n\x0d\n  if (!callback) {\x0d\n    const { 0: err\x2C 1: result } = job.run();\x0d\n    if (err !== undefined)\x0d\n      throw err;\x0d\n\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  job.ondone = (error\x2C result) => {\x0d\n    if (error) return FunctionPrototypeCall(callback\x2C job\x2C error);\x0d\n    FunctionPrototypeCall(callback\x2C job\x2C null\x2C result);\x0d\n  };\x0d\n  job.run();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Sign\x2C\x0d\n  signOneShot\x2C\x0d\n  Verify\x2C\x0d\n  verifyOneShot\x2C\x0d\n};\x0d\n
code-source-info,0x3b84435d9ac,236,0,7243,C0O0C4O7243,,
code-creation,JS,10,331744,0x3b84435e05c,554, node:internal/crypto/sig:1:1,0x3b84435d920,~
code-source-info,0x3b84435e05c,236,0,7243,C0O0C123O28C129O54C134O79C140O235C143O235C148O132C153O139C159O174C165O201C171O340C174O340C179O277C185O298C191O319C197O551C200O551C205O392C211O402C217O422C223O434C229O454C235O473C241O488C247O505C253O526C259O631C262O631C267O592C273O617C279O732C282O732C287O678C293O700C299O789C302O789C307O776C313O830C316O830C321O819C327O887C330O887C335O863C341O1193C344O1219C352O1239C357O1193C362O1252C368O1252C373O1293C376O1298C385O1315C389O1417C392O1422C401O1439C405O2562C408O2567C417O2582C421O4778C424O4806C432O4826C437O4778C442O4839C448O4839C453O4882C456O4889C464O4913C469O4923C473O4906C477O4932C480O4939C488O4963C493O4973C497O4956C501O4984C504O4991C513O5008C517O7165C524O7187C530O7196C536O7212C542O7223C548O7180C553O7242,,
code-creation,Eval,10,332183,0x3b84435f33c,5, node:internal/crypto/hash:1:1,0x3b84435f058,~
script-source,237,node:internal/crypto/hash,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  Hash: _Hash\x2C\x0d\n  HashJob\x2C\x0d\n  Hmac: _Hmac\x2C\x0d\n  kCryptoJobAsync\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  getStringOption\x2C\x0d\n  jobPromise\x2C\x0d\n  normalizeHashName\x2C\x0d\n  validateMaxBufferLength\x2C\x0d\n  kHandle\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  prepareSecretKey\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  Buffer\x2C\x0d\n} = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CRYPTO_HASH_FINALIZED\x2C\x0d\n    ERR_CRYPTO_HASH_UPDATE_FAILED\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateEncoding\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst LazyTransform = require('internal/streams/lazy_transform');\x0d\n\x0d\nconst kState = Symbol('kState');\x0d\nconst kFinalized = Symbol('kFinalized');\x0d\n\x0d\nfunction Hash(algorithm\x2C options) {\x0d\n  if (!(this instanceof Hash))\x0d\n    return new Hash(algorithm\x2C options);\x0d\n  if (!(algorithm instanceof _Hash))\x0d\n    validateString(algorithm\x2C 'algorithm');\x0d\n  const xofLen = typeof options === 'object' && options !== null ?\x0d\n    options.outputLength : undefined;\x0d\n  if (xofLen !== undefined)\x0d\n    validateUint32(xofLen\x2C 'options.outputLength');\x0d\n  this[kHandle] = new _Hash(algorithm\x2C xofLen);\x0d\n  this[kState] = {\x0d\n    [kFinalized]: false\x2C\x0d\n  };\x0d\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Hash.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Hash\x2C LazyTransform);\x0d\n\x0d\nHash.prototype.copy = function copy(options) {\x0d\n  const state = this[kState];\x0d\n  if (state[kFinalized])\x0d\n    throw new ERR_CRYPTO_HASH_FINALIZED();\x0d\n\x0d\n  return new Hash(this[kHandle]\x2C options);\x0d\n};\x0d\n\x0d\nHash.prototype._transform = function _transform(chunk\x2C encoding\x2C callback) {\x0d\n  this[kHandle].update(chunk\x2C encoding);\x0d\n  callback();\x0d\n};\x0d\n\x0d\nHash.prototype._flush = function _flush(callback) {\x0d\n  this.push(this[kHandle].digest());\x0d\n  callback();\x0d\n};\x0d\n\x0d\nHash.prototype.update = function update(data\x2C encoding) {\x0d\n  const state = this[kState];\x0d\n  if (state[kFinalized])\x0d\n    throw new ERR_CRYPTO_HASH_FINALIZED();\x0d\n\x0d\n  if (typeof data === 'string') {\x0d\n    validateEncoding(data\x2C encoding);\x0d\n  } else if (!isArrayBufferView(data)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'data'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C data);\x0d\n  }\x0d\n\x0d\n  if (!this[kHandle].update(data\x2C encoding))\x0d\n    throw new ERR_CRYPTO_HASH_UPDATE_FAILED();\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nHash.prototype.digest = function digest(outputEncoding) {\x0d\n  const state = this[kState];\x0d\n  if (state[kFinalized])\x0d\n    throw new ERR_CRYPTO_HASH_FINALIZED();\x0d\n\x0d\n  // Explicit conversion of truthy values for backward compatibility.\x0d\n  const ret = this[kHandle].digest(outputEncoding && `${outputEncoding}`);\x0d\n  state[kFinalized] = true;\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction Hmac(hmac\x2C key\x2C options) {\x0d\n  if (!(this instanceof Hmac))\x0d\n    return new Hmac(hmac\x2C key\x2C options);\x0d\n  validateString(hmac\x2C 'hmac');\x0d\n  const encoding = getStringOption(options\x2C 'encoding');\x0d\n  key = prepareSecretKey(key\x2C encoding);\x0d\n  this[kHandle] = new _Hmac();\x0d\n  this[kHandle].init(hmac\x2C key);\x0d\n  this[kState] = {\x0d\n    [kFinalized]: false\x2C\x0d\n  };\x0d\n  ReflectApply(LazyTransform\x2C this\x2C [options]);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Hmac.prototype\x2C LazyTransform.prototype);\x0d\nObjectSetPrototypeOf(Hmac\x2C LazyTransform);\x0d\n\x0d\nHmac.prototype.update = Hash.prototype.update;\x0d\n\x0d\nHmac.prototype.digest = function digest(outputEncoding) {\x0d\n  const state = this[kState];\x0d\n\x0d\n  if (state[kFinalized]) {\x0d\n    const buf = Buffer.from('');\x0d\n    if (outputEncoding && outputEncoding !== 'buffer')\x0d\n      return buf.toString(outputEncoding);\x0d\n    return buf;\x0d\n  }\x0d\n\x0d\n  // Explicit conversion of truthy values for backward compatibility.\x0d\n  const ret = this[kHandle].digest(outputEncoding && `${outputEncoding}`);\x0d\n  state[kFinalized] = true;\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nHmac.prototype._flush = Hash.prototype._flush;\x0d\nHmac.prototype._transform = Hash.prototype._transform;\x0d\n\x0d\n// Implementation for WebCrypto subtle.digest()\x0d\n\x0d\nasync function asyncDigest(algorithm\x2C data) {\x0d\n  validateMaxBufferLength(data\x2C 'data');\x0d\n\x0d\n  switch (algorithm.name) {\x0d\n    case 'SHA-1':\x0d\n      // Fall through\x0d\n    case 'SHA-256':\x0d\n      // Fall through\x0d\n    case 'SHA-384':\x0d\n      // Fall through\x0d\n    case 'SHA-512':\x0d\n      return jobPromise(() => new HashJob(\x0d\n        kCryptoJobAsync\x2C\x0d\n        normalizeHashName(algorithm.name)\x2C\x0d\n        data));\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Hash\x2C\x0d\n  Hmac\x2C\x0d\n  asyncDigest\x2C\x0d\n};\x0d\n
code-source-info,0x3b84435f33c,237,0,4742,C0O0C4O4742,,
code-creation,JS,10,332403,0x3b84435f8bc,580, node:internal/crypto/hash:1:1,0x3b84435f2b0,~
code-source-info,0x3b84435f8bc
code-creation,Eval,10,332918,0x3b8443615a4,5, node:internal/crypto/x509:1:1,0x3b844361170,~
script-source,238,node:internal/crypto/x509,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  SafeMap\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  parseX509\x2C\x0d\n  X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT\x2C\x0d\n  X509_CHECK_FLAG_NEVER_CHECK_SUBJECT\x2C\x0d\n  X509_CHECK_FLAG_NO_WILDCARDS\x2C\x0d\n  X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS\x2C\x0d\n  X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS\x2C\x0d\n  X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  PublicKeyObject\x2C\x0d\n  isKeyObject\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  markTransferMode\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst {\x0d\n  kHandle\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nlet lazyTranslatePeerCertificate;\x0d\n\x0d\nconst kInternalState = Symbol('kInternalState');\x0d\n\x0d\nfunction isX509Certificate(value) {\x0d\n  return value[kInternalState] !== undefined;\x0d\n}\x0d\n\x0d\nfunction getFlags(options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const {\x0d\n    subject = 'default'\x2C  // Can be 'default'\x2C 'always'\x2C or 'never'\x0d\n    wildcards = true\x2C\x0d\n    partialWildcards = true\x2C\x0d\n    multiLabelWildcards = false\x2C\x0d\n    singleLabelSubdomains = false\x2C\x0d\n  } = { ...options };\x0d\n  let flags = 0;\x0d\n  validateString(subject\x2C 'options.subject');\x0d\n  validateBoolean(wildcards\x2C 'options.wildcards');\x0d\n  validateBoolean(partialWildcards\x2C 'options.partialWildcards');\x0d\n  validateBoolean(multiLabelWildcards\x2C 'options.multiLabelWildcards');\x0d\n  validateBoolean(singleLabelSubdomains\x2C 'options.singleLabelSubdomains');\x0d\n  switch (subject) {\x0d\n    case 'default': /* Matches OpenSSL's default\x2C no flags. */ break;\x0d\n    case 'always': flags |= X509_CHECK_FLAG_ALWAYS_CHECK_SUBJECT; break;\x0d\n    case 'never': flags |= X509_CHECK_FLAG_NEVER_CHECK_SUBJECT; break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.subject'\x2C subject);\x0d\n  }\x0d\n  if (!wildcards) flags |= X509_CHECK_FLAG_NO_WILDCARDS;\x0d\n  if (!partialWildcards) flags |= X509_CHECK_FLAG_NO_PARTIAL_WILDCARDS;\x0d\n  if (multiLabelWildcards) flags |= X509_CHECK_FLAG_MULTI_LABEL_WILDCARDS;\x0d\n  if (singleLabelSubdomains) flags |= X509_CHECK_FLAG_SINGLE_LABEL_SUBDOMAINS;\x0d\n  return flags;\x0d\n}\x0d\n\x0d\nclass InternalX509Certificate {\x0d\n  [kInternalState] = new SafeMap();\x0d\n\x0d\n  constructor(handle) {\x0d\n    markTransferMode(this\x2C true\x2C false);\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass X509Certificate {\x0d\n  [kInternalState] = new SafeMap();\x0d\n\x0d\n  constructor(buffer) {\x0d\n    if (typeof buffer === 'string')\x0d\n      buffer = Buffer.from(buffer);\x0d\n    if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'buffer'\x2C\x0d\n        ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        buffer);\x0d\n    }\x0d\n    markTransferMode(this\x2C true\x2C false);\x0d\n    this[kHandle] = parseX509(buffer);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `X509Certificate ${inspect({\x0d\n      subject: this.subject\x2C\x0d\n      subjectAltName: this.subjectAltName\x2C\x0d\n      issuer: this.issuer\x2C\x0d\n      infoAccess: this.infoAccess\x2C\x0d\n      validFrom: this.validFrom\x2C\x0d\n      validTo: this.validTo\x2C\x0d\n      fingerprint: this.fingerprint\x2C\x0d\n      fingerprint256: this.fingerprint256\x2C\x0d\n      fingerprint512: this.fingerprint512\x2C\x0d\n      keyUsage: this.keyUsage\x2C\x0d\n      serialNumber: this.serialNumber\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/crypto/x509:InternalX509Certificate'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n\x0d\n  get subject() {\x0d\n    let value = this[kInternalState].get('subject');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].subject();\x0d\n      this[kInternalState].set('subject'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get subjectAltName() {\x0d\n    let value = this[kInternalState].get('subjectAltName');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].subjectAltName();\x0d\n      this[kInternalState].set('subjectAltName'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get issuer() {\x0d\n    let value = this[kInternalState].get('issuer');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].issuer();\x0d\n      this[kInternalState].set('issuer'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get issuerCertificate() {\x0d\n    let value = this[kInternalState].get('issuerCertificate');\x0d\n    if (value === undefined) {\x0d\n      const cert = this[kHandle].getIssuerCert();\x0d\n      if (cert)\x0d\n        value = new InternalX509Certificate(this[kHandle].getIssuerCert());\x0d\n      this[kInternalState].set('issuerCertificate'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get infoAccess() {\x0d\n    let value = this[kInternalState].get('infoAccess');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].infoAccess();\x0d\n      this[kInternalState].set('infoAccess'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get validFrom() {\x0d\n    let value = this[kInternalState].get('validFrom');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].validFrom();\x0d\n      this[kInternalState].set('validFrom'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get validTo() {\x0d\n    let value = this[kInternalState].get('validTo');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].validTo();\x0d\n      this[kInternalState].set('validTo'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get fingerprint() {\x0d\n    let value = this[kInternalState].get('fingerprint');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].fingerprint();\x0d\n      this[kInternalState].set('fingerprint'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get fingerprint256() {\x0d\n    let value = this[kInternalState].get('fingerprint256');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].fingerprint256();\x0d\n      this[kInternalState].set('fingerprint256'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get fingerprint512() {\x0d\n    let value = this[kInternalState].get('fingerprint512');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].fingerprint512();\x0d\n      this[kInternalState].set('fingerprint512'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get keyUsage() {\x0d\n    let value = this[kInternalState].get('keyUsage');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].keyUsage();\x0d\n      this[kInternalState].set('keyUsage'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get serialNumber() {\x0d\n    let value = this[kInternalState].get('serialNumber');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].serialNumber();\x0d\n      this[kInternalState].set('serialNumber'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get raw() {\x0d\n    let value = this[kInternalState].get('raw');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].raw();\x0d\n      this[kInternalState].set('raw'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  get publicKey() {\x0d\n    let value = this[kInternalState].get('publicKey');\x0d\n    if (value === undefined) {\x0d\n      value = new PublicKeyObject(this[kHandle].publicKey());\x0d\n      this[kInternalState].set('publicKey'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    let value = this[kInternalState].get('pem');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].pem();\x0d\n      this[kInternalState].set('pem'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  // There's no standardized JSON encoding for X509 certs so we\x0d\n  // fallback to providing the PEM encoding as a string.\x0d\n  toJSON() { return this.toString(); }\x0d\n\x0d\n  get ca() {\x0d\n    let value = this[kInternalState].get('ca');\x0d\n    if (value === undefined) {\x0d\n      value = this[kHandle].checkCA();\x0d\n      this[kInternalState].set('ca'\x2C value);\x0d\n    }\x0d\n    return value;\x0d\n  }\x0d\n\x0d\n  checkHost(name\x2C options) {\x0d\n    validateString(name\x2C 'name');\x0d\n    return this[kHandle].checkHost(name\x2C getFlags(options));\x0d\n  }\x0d\n\x0d\n  checkEmail(email\x2C options) {\x0d\n    validateString(email\x2C 'email');\x0d\n    return this[kHandle].checkEmail(email\x2C getFlags(options));\x0d\n  }\x0d\n\x0d\n  checkIP(ip\x2C options) {\x0d\n    validateString(ip\x2C 'ip');\x0d\n    // The options argument is currently undocumented since none of the options\x0d\n    // have any effect on the behavior of this function. However\x2C we still parse\x0d\n    // the options argument in case OpenSSL adds flags in the future that do\x0d\n    // affect the behavior of X509_check_ip. This ensures that no invalid values\x0d\n    // are passed as the second argument in the meantime.\x0d\n    return this[kHandle].checkIP(ip\x2C getFlags(options));\x0d\n  }\x0d\n\x0d\n  checkIssued(otherCert) {\x0d\n    if (!isX509Certificate(otherCert))\x0d\n      throw new ERR_INVALID_ARG_TYPE('otherCert'\x2C 'X509Certificate'\x2C otherCert);\x0d\n    return this[kHandle].checkIssued(otherCert[kHandle]);\x0d\n  }\x0d\n\x0d\n  checkPrivateKey(pkey) {\x0d\n    if (!isKeyObject(pkey))\x0d\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\x0d\n    if (pkey.type !== 'private')\x0d\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\x0d\n    return this[kHandle].checkPrivateKey(pkey[kHandle]);\x0d\n  }\x0d\n\x0d\n  verify(pkey) {\x0d\n    if (!isKeyObject(pkey))\x0d\n      throw new ERR_INVALID_ARG_TYPE('pkey'\x2C 'KeyObject'\x2C pkey);\x0d\n    if (pkey.type !== 'public')\x0d\n      throw new ERR_INVALID_ARG_VALUE('pkey'\x2C pkey);\x0d\n    return this[kHandle].verify(pkey[kHandle]);\x0d\n  }\x0d\n\x0d\n  toLegacyObject() {\x0d\n    // TODO(tniessen): do not depend on translatePeerCertificate here\x2C return\x0d\n    // the correct legacy representation from the binding\x0d\n    lazyTranslatePeerCertificate ??=\x0d\n      require('_tls_common').translatePeerCertificate;\x0d\n    return lazyTranslatePeerCertificate(this[kHandle].toLegacy());\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalX509Certificate.prototype.constructor = X509Certificate;\x0d\nObjectSetPrototypeOf(\x0d\n  InternalX509Certificate.prototype\x2C\x0d\n  X509Certificate.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  X509Certificate\x2C\x0d\n  InternalX509Certificate\x2C\x0d\n  isX509Certificate\x2C\x0d\n};\x0d\n
code-source-info,0x3b8443615a4,238,0,10289,C0O0C4O10289,,
code-creation,JS,10,333344,0x3b8443630bc,698, node:internal/crypto/x509:1:1,0x3b844361518,~
code-source-info,0x3b8443630bc,238,0,10289,C0O0C93O28C98O53C104O65C109O362C112O362C117O105C123O119C129O160C135O200C141O233C147O274C153O316C159O441C165O441C170O403C176O423C182O541C188O541C193O509C198O522C204O641C210O641C215O581C221O601C227O620C233O696C239O696C244O684C250O752C256O752C261O741C267O809C273O809C278O785C284O930C290O930C295O862C300O869C306O896C312O1023C318O1023C323O972C329O993C334O1004C339O1095C345O1095C350O1081C356O1135C357O1135C359O1191C362O1191C366O1191C385O2621C413O2585C432O2791C439O3197C448O3849C457O4026C635O10035C638O10059C645O10081C649O10101C652O10150C657O10180C662O10101C667O10195C674O10217C680O10237C686O10265C692O10210C697O10288,,
code-creation,JS,10,333409,0x3b8443634e4,22,X509Certificate node:internal/crypto/x509:106:23,0x3b8443622b0,~
code-source-info,0x3b8443634e4,238,2785,10031,C3O2809C10O2809C21O10031,,
code-creation,JS,10,333430,0x3b844363584,22,InternalX509Certificate node:internal/crypto/x509:97:31,0x3b8443616e0,~
code-source-info,0x3b844363584,238,2615,2759,C3O2639C10O2639C21O2759,,
code-creation,Eval,10,333705,0x3b8443643d4,5, node:internal/crypto/certificate:1:1,0x3b844364230,~
script-source,239,node:internal/crypto/certificate,'use strict';\x0d\n\x0d\nconst {\x0d\n  certExportChallenge\x2C\x0d\n  certExportPublicKey\x2C\x0d\n  certVerifySpkac\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  getArrayBufferOrView\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\n// The functions contained in this file cover the SPKAC format\x0d\n// (also referred to as Netscape SPKI). A general description of\x0d\n// the format can be found at https://en.wikipedia.org/wiki/SPKAC\x0d\n\x0d\nfunction verifySpkac(spkac\x2C encoding) {\x0d\n  return certVerifySpkac(\x0d\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\x0d\n}\x0d\n\x0d\nfunction exportPublicKey(spkac\x2C encoding) {\x0d\n  return certExportPublicKey(\x0d\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\x0d\n}\x0d\n\x0d\nfunction exportChallenge(spkac\x2C encoding) {\x0d\n  return certExportChallenge(\x0d\n    getArrayBufferOrView(spkac\x2C 'spkac'\x2C encoding));\x0d\n}\x0d\n\x0d\n// The legacy implementation of this exposed the Certificate\x0d\n// object and required that users create an instance before\x0d\n// calling the member methods. This API pattern has been\x0d\n// deprecated\x2C however\x2C as the method implementations do not\x0d\n// rely on any object state.\x0d\n\x0d\n// For backwards compatibility reasons\x2C this cannot be converted into a\x0d\n// ES6 Class.\x0d\nfunction Certificate() {\x0d\n  if (!(this instanceof Certificate))\x0d\n    return new Certificate();\x0d\n}\x0d\n\x0d\nCertificate.prototype.verifySpkac = verifySpkac;\x0d\nCertificate.prototype.exportPublicKey = exportPublicKey;\x0d\nCertificate.prototype.exportChallenge = exportChallenge;\x0d\n\x0d\nCertificate.exportChallenge = exportChallenge;\x0d\nCertificate.exportPublicKey = exportPublicKey;\x0d\nCertificate.verifySpkac = verifySpkac;\x0d\n\x0d\nmodule.exports = Certificate;\x0d\n
code-source-info,0x3b8443643d4,239,0,1599,C0O0C4O1599,,
code-creation,JS,10,333808,0x3b84436462c,155, node:internal/crypto/certificate:1:1,0x3b844364348,~
code-source-info,0x3b84436462c,239,0,1599,C0O0C38O98C41O98C46O28C52O52C58O76C64O166C67O166C72O139C78O1262C81O1274C88O1296C92O1312C95O1324C102O1350C106O1370C109O1382C116O1408C120O1430C125O1458C129O1478C134O1506C138O1526C143O1550C147O1568C149O1583C154O1598,,
code-creation,JS,10,334182,0x3b84436627c,33,getRandomBytesAlias node:crypto:295:29,0x299e2c28ae0,~
code-source-info,0x3b84436627c,224,6943,7789,C0O6943C9O6954C14O7017C22O7536C32O7786,,
code-creation,JS,10,334349,0x3b844367b94,12,get node:crypto:368:8,0x299e2c28c10,~
code-source-info,0x3b844367b94,224,8568,8605,C0O8573C3O8580C7O8595C11O8603,,
code-creation,JS,10,334387,0x3b844367c7c,23,lazyWebCrypto node:crypto:124:23,0x299e2c28560,~
code-source-info,0x3b844367c7c,224,3229,3312,C0O3237C14O3251C18O3247C20O3292C22O3309,,
code-creation,Eval,10,335138,0x3b84436a8ac,5, node:internal/crypto/webcrypto:1:1,0x3b84436a4a8,~
script-source,240,node:internal/crypto/webcrypto,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  kWebCryptoKeyFormatRaw\x2C\x0d\n  kWebCryptoKeyFormatPKCS8\x2C\x0d\n  kWebCryptoKeyFormatSPKI\x2C\x0d\n  kWebCryptoCipherEncrypt\x2C\x0d\n  kWebCryptoCipherDecrypt\x2C\x0d\n} = internalBinding('crypto');\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n} = require('internal/options');\x0d\n\x0d\nconst { TextDecoder\x2C TextEncoder } = require('internal/encoding');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  CryptoKey\x2C\x0d\n  InternalCryptoKey\x2C\x0d\n  createSecretKey\x2C\x0d\n} = require('internal/crypto/keys');\x0d\n\x0d\nconst {\x0d\n  asyncDigest\x2C\x0d\n} = require('internal/crypto/hash');\x0d\n\x0d\nconst {\x0d\n  getBlockSize\x2C\x0d\n  hasAnyNotIn\x2C\x0d\n  normalizeAlgorithm\x2C\x0d\n  normalizeHashName\x2C\x0d\n  validateMaxBufferLength\x2C\x0d\n  kHandle\x2C\x0d\n  kKeyObject\x2C\x0d\n} = require('internal/crypto/util');\x0d\n\x0d\nconst {\x0d\n  kEnumerableProperty\x2C\x0d\n  lazyDOMException\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  getRandomValues: _getRandomValues\x2C\x0d\n  randomUUID: _randomUUID\x2C\x0d\n} = require('internal/crypto/random');\x0d\n\x0d\nlet webidl;\x0d\n\x0d\nasync function digest(algorithm\x2C data) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'digest' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 2\x2C { prefix });\x0d\n  algorithm = webidl.converters.AlgorithmIdentifier(algorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  data = webidl.converters.BufferSource(data\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n\x0d\n  algorithm = normalizeAlgorithm(algorithm\x2C 'digest');\x0d\n\x0d\n  return ReflectApply(asyncDigest\x2C this\x2C [algorithm\x2C data]);\x0d\n}\x0d\n\x0d\nfunction randomUUID() {\x0d\n  if (this !== crypto) throw new ERR_INVALID_THIS('Crypto');\x0d\n  return _randomUUID();\x0d\n}\x0d\n\x0d\nasync function generateKey(\x0d\n  algorithm\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'generateKey' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 3\x2C { prefix });\x0d\n  algorithm = webidl.converters.AlgorithmIdentifier(algorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  extractable = webidl.converters.boolean(extractable\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n  keyUsages = webidl.converters['sequence<KeyUsage>'](keyUsages\x2C {\x0d\n    prefix\x2C\x0d\n    context: '3rd argument'\x2C\x0d\n  });\x0d\n\x0d\n  algorithm = normalizeAlgorithm(algorithm\x2C 'generateKey');\x0d\n  let result;\x0d\n  let resultType;\x0d\n  switch (algorithm.name) {\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      // Fall through\x0d\n    case 'RSA-PSS':\x0d\n      // Fall through\x0d\n    case 'RSA-OAEP':\x0d\n      resultType = 'CryptoKeyPair';\x0d\n      result = await require('internal/crypto/rsa')\x0d\n        .rsaKeyGenerate(algorithm\x2C extractable\x2C keyUsages);\x0d\n      break;\x0d\n    case 'Ed25519':\x0d\n      // Fall through\x0d\n    case 'Ed448':\x0d\n      // Fall through\x0d\n    case 'X25519':\x0d\n      // Fall through\x0d\n    case 'X448':\x0d\n      resultType = 'CryptoKeyPair';\x0d\n      result = await require('internal/crypto/cfrg')\x0d\n        .cfrgGenerateKey(algorithm\x2C extractable\x2C keyUsages);\x0d\n      break;\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      resultType = 'CryptoKeyPair';\x0d\n      result = await require('internal/crypto/ec')\x0d\n        .ecGenerateKey(algorithm\x2C extractable\x2C keyUsages);\x0d\n      break;\x0d\n    case 'HMAC':\x0d\n      resultType = 'CryptoKey';\x0d\n      result = await require('internal/crypto/mac')\x0d\n        .hmacGenerateKey(algorithm\x2C extractable\x2C keyUsages);\x0d\n      break;\x0d\n    case 'AES-CTR':\x0d\n      // Fall through\x0d\n    case 'AES-CBC':\x0d\n      // Fall through\x0d\n    case 'AES-GCM':\x0d\n      // Fall through\x0d\n    case 'AES-KW':\x0d\n      resultType = 'CryptoKey';\x0d\n      result = await require('internal/crypto/aes')\x0d\n        .aesGenerateKey(algorithm\x2C extractable\x2C keyUsages);\x0d\n      break;\x0d\n    default:\x0d\n      throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    (resultType === 'CryptoKey' &&\x0d\n      (result.type === 'secret' || result.type === 'private') &&\x0d\n      result.usages.length === 0) ||\x0d\n    (resultType === 'CryptoKeyPair' && result.privateKey.usages.length === 0)\x0d\n  ) {\x0d\n    throw lazyDOMException(\x0d\n      'Usages cannot be empty when creating a key.'\x2C\x0d\n      'SyntaxError');\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nasync function deriveBits(algorithm\x2C baseKey\x2C length) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'deriveBits' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 3\x2C { prefix });\x0d\n  algorithm = webidl.converters.AlgorithmIdentifier(algorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  baseKey = webidl.converters.CryptoKey(baseKey\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n  if (length !== null) {\x0d\n    length = webidl.converters['unsigned long'](length\x2C {\x0d\n      prefix\x2C\x0d\n      context: '3rd argument'\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  algorithm = normalizeAlgorithm(algorithm\x2C 'deriveBits');\x0d\n  if (!ArrayPrototypeIncludes(baseKey.usages\x2C 'deriveBits')) {\x0d\n    throw lazyDOMException(\x0d\n      'baseKey does not have deriveBits usage'\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n  if (baseKey.algorithm.name !== algorithm.name)\x0d\n    throw lazyDOMException('Key algorithm mismatch'\x2C 'InvalidAccessError');\x0d\n  switch (algorithm.name) {\x0d\n    case 'X25519':\x0d\n      // Fall through\x0d\n    case 'X448':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      return require('internal/crypto/diffiehellman')\x0d\n        .ecdhDeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n    case 'HKDF':\x0d\n      return require('internal/crypto/hkdf')\x0d\n        .hkdfDeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n    case 'PBKDF2':\x0d\n      return require('internal/crypto/pbkdf2')\x0d\n        .pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n  }\x0d\n  throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nfunction getKeyLength({ name\x2C length\x2C hash }) {\x0d\n  switch (name) {\x0d\n    case 'AES-CTR':\x0d\n    case 'AES-CBC':\x0d\n    case 'AES-GCM':\x0d\n    case 'AES-KW':\x0d\n      if (length !== 128 && length !== 192 && length !== 256)\x0d\n        throw lazyDOMException('Invalid key length'\x2C 'OperationError');\x0d\n\x0d\n      return length;\x0d\n    case 'HMAC':\x0d\n      if (length === undefined) {\x0d\n        return getBlockSize(hash?.name);\x0d\n      }\x0d\n\x0d\n      if (typeof length === 'number' && length !== 0) {\x0d\n        return length;\x0d\n      }\x0d\n\x0d\n      throw lazyDOMException('Invalid key length'\x2C 'OperationError');\x0d\n    case 'HKDF':\x0d\n    case 'PBKDF2':\x0d\n      return null;\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function deriveKey(\x0d\n  algorithm\x2C\x0d\n  baseKey\x2C\x0d\n  derivedKeyAlgorithm\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'deriveKey' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 5\x2C { prefix });\x0d\n  algorithm = webidl.converters.AlgorithmIdentifier(algorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  baseKey = webidl.converters.CryptoKey(baseKey\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n  derivedKeyAlgorithm = webidl.converters.AlgorithmIdentifier(derivedKeyAlgorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '3rd argument'\x2C\x0d\n  });\x0d\n  extractable = webidl.converters.boolean(extractable\x2C {\x0d\n    prefix\x2C\x0d\n    context: '4th argument'\x2C\x0d\n  });\x0d\n  keyUsages = webidl.converters['sequence<KeyUsage>'](keyUsages\x2C {\x0d\n    prefix\x2C\x0d\n    context: '5th argument'\x2C\x0d\n  });\x0d\n\x0d\n  algorithm = normalizeAlgorithm(algorithm\x2C 'deriveBits');\x0d\n  derivedKeyAlgorithm = normalizeAlgorithm(derivedKeyAlgorithm\x2C 'importKey');\x0d\n  if (!ArrayPrototypeIncludes(baseKey.usages\x2C 'deriveKey')) {\x0d\n    throw lazyDOMException(\x0d\n      'baseKey does not have deriveKey usage'\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n  if (baseKey.algorithm.name !== algorithm.name)\x0d\n    throw lazyDOMException('Key algorithm mismatch'\x2C 'InvalidAccessError');\x0d\n\x0d\n  const length = getKeyLength(normalizeAlgorithm(arguments[2]\x2C 'get key length'));\x0d\n  let bits;\x0d\n  switch (algorithm.name) {\x0d\n    case 'X25519':\x0d\n      // Fall through\x0d\n    case 'X448':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      bits = await require('internal/crypto/diffiehellman')\x0d\n        .ecdhDeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n      break;\x0d\n    case 'HKDF':\x0d\n      bits = await require('internal/crypto/hkdf')\x0d\n        .hkdfDeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n      break;\x0d\n    case 'PBKDF2':\x0d\n      bits = await require('internal/crypto/pbkdf2')\x0d\n        .pbkdf2DeriveBits(algorithm\x2C baseKey\x2C length);\x0d\n      break;\x0d\n    default:\x0d\n      throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\x0d\n  }\x0d\n\x0d\n  return ReflectApply(\x0d\n    importKey\x2C\x0d\n    this\x2C\x0d\n    ['raw'\x2C bits\x2C derivedKeyAlgorithm\x2C extractable\x2C keyUsages]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function exportKeySpki(key) {\x0d\n  switch (key.algorithm.name) {\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      // Fall through\x0d\n    case 'RSA-PSS':\x0d\n      // Fall through\x0d\n    case 'RSA-OAEP':\x0d\n      if (key.type === 'public') {\x0d\n        return require('internal/crypto/rsa')\x0d\n          .rsaExportKey(key\x2C kWebCryptoKeyFormatSPKI);\x0d\n      }\x0d\n      break;\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      if (key.type === 'public') {\x0d\n        return require('internal/crypto/ec')\x0d\n          .ecExportKey(key\x2C kWebCryptoKeyFormatSPKI);\x0d\n      }\x0d\n      break;\x0d\n    case 'Ed25519':\x0d\n      // Fall through\x0d\n    case 'Ed448':\x0d\n      // Fall through\x0d\n    case 'X25519':\x0d\n      // Fall through\x0d\n    case 'X448':\x0d\n      if (key.type === 'public') {\x0d\n        return require('internal/crypto/cfrg')\x0d\n          .cfrgExportKey(key\x2C kWebCryptoKeyFormatSPKI);\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException(\x0d\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`\x2C\x0d\n    'InvalidAccessError');\x0d\n}\x0d\n\x0d\nasync function exportKeyPkcs8(key) {\x0d\n  switch (key.algorithm.name) {\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      // Fall through\x0d\n    case 'RSA-PSS':\x0d\n      // Fall through\x0d\n    case 'RSA-OAEP':\x0d\n      if (key.type === 'private') {\x0d\n        return require('internal/crypto/rsa')\x0d\n          .rsaExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\x0d\n      }\x0d\n      break;\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      if (key.type === 'private') {\x0d\n        return require('internal/crypto/ec')\x0d\n          .ecExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\x0d\n      }\x0d\n      break;\x0d\n    case 'Ed25519':\x0d\n      // Fall through\x0d\n    case 'Ed448':\x0d\n      // Fall through\x0d\n    case 'X25519':\x0d\n      // Fall through\x0d\n    case 'X448':\x0d\n      if (key.type === 'private') {\x0d\n        return require('internal/crypto/cfrg')\x0d\n          .cfrgExportKey(key\x2C kWebCryptoKeyFormatPKCS8);\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException(\x0d\n    `Unable to export a pkcs8 ${key.algorithm.name} ${key.type} key`\x2C\x0d\n    'InvalidAccessError');\x0d\n}\x0d\n\x0d\nasync function exportKeyRaw(key) {\x0d\n  switch (key.algorithm.name) {\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      if (key.type === 'public') {\x0d\n        return require('internal/crypto/ec')\x0d\n          .ecExportKey(key\x2C kWebCryptoKeyFormatRaw);\x0d\n      }\x0d\n      break;\x0d\n    case 'Ed25519':\x0d\n      // Fall through\x0d\n    case 'Ed448':\x0d\n      // Fall through\x0d\n    case 'X25519':\x0d\n      // Fall through\x0d\n    case 'X448':\x0d\n      if (key.type === 'public') {\x0d\n        return require('internal/crypto/cfrg')\x0d\n          .cfrgExportKey(key\x2C kWebCryptoKeyFormatRaw);\x0d\n      }\x0d\n      break;\x0d\n    case 'AES-CTR':\x0d\n      // Fall through\x0d\n    case 'AES-CBC':\x0d\n      // Fall through\x0d\n    case 'AES-GCM':\x0d\n      // Fall through\x0d\n    case 'AES-KW':\x0d\n      // Fall through\x0d\n    case 'HMAC':\x0d\n      return key[kKeyObject].export().buffer;\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException(\x0d\n    `Unable to export a raw ${key.algorithm.name} ${key.type} key`\x2C\x0d\n    'InvalidAccessError');\x0d\n}\x0d\n\x0d\nasync function exportKeyJWK(key) {\x0d\n  const jwk = key[kKeyObject][kHandle].exportJwk({\x0d\n    key_ops: key.usages\x2C\x0d\n    ext: key.extractable\x2C\x0d\n  }\x2C true);\x0d\n  switch (key.algorithm.name) {\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      jwk.alg = normalizeHashName(\x0d\n        key.algorithm.hash.name\x2C\x0d\n        normalizeHashName.kContextJwkRsa);\x0d\n      return jwk;\x0d\n    case 'RSA-PSS':\x0d\n      jwk.alg = normalizeHashName(\x0d\n        key.algorithm.hash.name\x2C\x0d\n        normalizeHashName.kContextJwkRsaPss);\x0d\n      return jwk;\x0d\n    case 'RSA-OAEP':\x0d\n      jwk.alg = normalizeHashName(\x0d\n        key.algorithm.hash.name\x2C\x0d\n        normalizeHashName.kContextJwkRsaOaep);\x0d\n      return jwk;\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      jwk.crv ||= key.algorithm.namedCurve;\x0d\n      return jwk;\x0d\n    case 'X25519':\x0d\n      // Fall through\x0d\n    case 'X448':\x0d\n      jwk.crv ||= key.algorithm.name;\x0d\n      return jwk;\x0d\n    case 'Ed25519':\x0d\n      // Fall through\x0d\n    case 'Ed448':\x0d\n      jwk.crv ||= key.algorithm.name;\x0d\n      return jwk;\x0d\n    case 'AES-CTR':\x0d\n      // Fall through\x0d\n    case 'AES-CBC':\x0d\n      // Fall through\x0d\n    case 'AES-GCM':\x0d\n      // Fall through\x0d\n    case 'AES-KW':\x0d\n      jwk.alg = require('internal/crypto/aes')\x0d\n        .getAlgorithmName(key.algorithm.name\x2C key.algorithm.length);\x0d\n      return jwk;\x0d\n    case 'HMAC':\x0d\n      jwk.alg = normalizeHashName(\x0d\n        key.algorithm.hash.name\x2C\x0d\n        normalizeHashName.kContextJwkHmac);\x0d\n      return jwk;\x0d\n    default:\x0d\n      // Fall through\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException('Not yet supported'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nasync function exportKey(format\x2C key) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'exportKey' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 2\x2C { prefix });\x0d\n  format = webidl.converters.KeyFormat(format\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  key = webidl.converters.CryptoKey(key\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n\x0d\n  if (!key.extractable)\x0d\n    throw lazyDOMException('key is not extractable'\x2C 'InvalidAccessException');\x0d\n\x0d\n  switch (format) {\x0d\n    case 'spki': return exportKeySpki(key);\x0d\n    case 'pkcs8': return exportKeyPkcs8(key);\x0d\n    case 'jwk': return exportKeyJWK(key);\x0d\n    case 'raw': return exportKeyRaw(key);\x0d\n  }\x0d\n  throw lazyDOMException(\x0d\n    'Export format is unsupported'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nasync function importGenericSecretKey(\x0d\n  { name\x2C length }\x2C\x0d\n  format\x2C\x0d\n  keyData\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  const usagesSet = new SafeSet(keyUsages);\x0d\n  if (extractable)\x0d\n    throw lazyDOMException(`${name} keys are not extractable`\x2C 'SyntaxError');\x0d\n\x0d\n  if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\x0d\n    throw lazyDOMException(\x0d\n      `Unsupported key usage for a ${name} key`\x2C\x0d\n      'SyntaxError');\x0d\n  }\x0d\n\x0d\n  switch (format) {\x0d\n    case 'raw': {\x0d\n      if (hasAnyNotIn(usagesSet\x2C ['deriveKey'\x2C 'deriveBits'])) {\x0d\n        throw lazyDOMException(\x0d\n          `Unsupported key usage for a ${name} key`\x2C\x0d\n          'SyntaxError');\x0d\n      }\x0d\n\x0d\n      const checkLength = keyData.byteLength * 8;\x0d\n\x0d\n      // The Web Crypto spec allows for key lengths that are not multiples of\x0d\n      // 8. We don't. Our check here is stricter than that defined by the spec\x0d\n      // in that we require that algorithm.length match keyData.length * 8 if\x0d\n      // algorithm.length is specified.\x0d\n      if (length !== undefined && length !== checkLength) {\x0d\n        throw lazyDOMException('Invalid key length'\x2C 'DataError');\x0d\n      }\x0d\n\x0d\n      const keyObject = createSecretKey(keyData);\x0d\n      return new InternalCryptoKey(keyObject\x2C { name }\x2C keyUsages\x2C false);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw lazyDOMException(\x0d\n    `Unable to import ${name} key with format ${format}`\x2C\x0d\n    'NotSupportedError');\x0d\n}\x0d\n\x0d\nasync function importKey(\x0d\n  format\x2C\x0d\n  keyData\x2C\x0d\n  algorithm\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'importKey' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 4\x2C { prefix });\x0d\n  format = webidl.converters.KeyFormat(format\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  const type = format === 'jwk' ? 'JsonWebKey' : 'BufferSource';\x0d\n  keyData = webidl.converters[type](keyData\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n  algorithm = webidl.converters.AlgorithmIdentifier(algorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '3rd argument'\x2C\x0d\n  });\x0d\n  extractable = webidl.converters.boolean(extractable\x2C {\x0d\n    prefix\x2C\x0d\n    context: '4th argument'\x2C\x0d\n  });\x0d\n  keyUsages = webidl.converters['sequence<KeyUsage>'](keyUsages\x2C {\x0d\n    prefix\x2C\x0d\n    context: '5th argument'\x2C\x0d\n  });\x0d\n\x0d\n  algorithm = normalizeAlgorithm(algorithm\x2C 'importKey');\x0d\n  let result;\x0d\n  switch (algorithm.name) {\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      // Fall through\x0d\n    case 'RSA-PSS':\x0d\n      // Fall through\x0d\n    case 'RSA-OAEP':\x0d\n      result = await require('internal/crypto/rsa')\x0d\n        .rsaImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\x0d\n      break;\x0d\n    case 'ECDSA':\x0d\n      // Fall through\x0d\n    case 'ECDH':\x0d\n      result = await require('internal/crypto/ec')\x0d\n        .ecImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\x0d\n      break;\x0d\n    case 'Ed25519':\x0d\n      // Fall through\x0d\n    case 'Ed448':\x0d\n      // Fall through\x0d\n    case 'X25519':\x0d\n      // Fall through\x0d\n    case 'X448':\x0d\n      result = await require('internal/crypto/cfrg')\x0d\n        .cfrgImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\x0d\n      break;\x0d\n    case 'HMAC':\x0d\n      result = await require('internal/crypto/mac')\x0d\n        .hmacImportKey(format\x2C keyData\x2C algorithm\x2C extractable\x2C keyUsages);\x0d\n      break;\x0d\n    case 'AES-CTR':\x0d\n      // Fall through\x0d\n    case 'AES-CBC':\x0d\n      // Fall through\x0d\n    case 'AES-GCM':\x0d\n      // Fall through\x0d\n    case 'AES-KW':\x0d\n      result = await require('internal/crypto/aes')\x0d\n        .aesImportKey(algorithm\x2C format\x2C keyData\x2C extractable\x2C keyUsages);\x0d\n      break;\x0d\n    case 'HKDF':\x0d\n      // Fall through\x0d\n    case 'PBKDF2':\x0d\n      result = await importGenericSecretKey(\x0d\n        algorithm\x2C\x0d\n        format\x2C\x0d\n        keyData\x2C\x0d\n        extractable\x2C\x0d\n        keyUsages);\x0d\n      break;\x0d\n    default:\x0d\n      throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\x0d\n  }\x0d\n\x0d\n  if ((result.type === 'secret' || result.type === 'private') && result.usages.length === 0) {\x0d\n    throw lazyDOMException(\x0d\n      `Usages cannot be empty when importing a ${result.type} key.`\x2C\x0d\n      'SyntaxError');\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\n// subtle.wrapKey() is essentially a subtle.exportKey() followed\x0d\n// by a subtle.encrypt().\x0d\nasync function wrapKey(format\x2C key\x2C wrappingKey\x2C algorithm) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'wrapKey' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 4\x2C { prefix });\x0d\n  format = webidl.converters.KeyFormat(format\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  key = webidl.converters.CryptoKey(key\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n  wrappingKey = webidl.converters.CryptoKey(wrappingKey\x2C {\x0d\n    prefix\x2C\x0d\n    context: '3rd argument'\x2C\x0d\n  });\x0d\n  algorithm = webidl.converters.AlgorithmIdentifier(algorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '4th argument'\x2C\x0d\n  });\x0d\n\x0d\n  try {\x0d\n    algorithm = normalizeAlgorithm(algorithm\x2C 'wrapKey');\x0d\n  } catch {\x0d\n    algorithm = normalizeAlgorithm(algorithm\x2C 'encrypt');\x0d\n  }\x0d\n  let keyData = await ReflectApply(exportKey\x2C this\x2C [format\x2C key]);\x0d\n\x0d\n  if (format === 'jwk') {\x0d\n    const ec = new TextEncoder();\x0d\n    const raw = JSONStringify(keyData);\x0d\n    // As per the NOTE in step 13 https://w3c.github.io/webcrypto/#SubtleCrypto-method-wrapKey\x0d\n    // we're padding AES-KW wrapped JWK to make sure it is always a multiple of 8 bytes\x0d\n    // in length\x0d\n    if (algorithm.name === 'AES-KW' && raw.length % 8 !== 0) {\x0d\n      keyData = ec.encode(raw + StringPrototypeRepeat(' '\x2C 8 - (raw.length % 8)));\x0d\n    } else {\x0d\n      keyData = ec.encode(raw);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return cipherOrWrap(\x0d\n    kWebCryptoCipherEncrypt\x2C\x0d\n    algorithm\x2C\x0d\n    wrappingKey\x2C\x0d\n    keyData\x2C\x0d\n    'wrapKey');\x0d\n}\x0d\n\x0d\n// subtle.unwrapKey() is essentially a subtle.decrypt() followed\x0d\n// by a subtle.importKey().\x0d\nasync function unwrapKey(\x0d\n  format\x2C\x0d\n  wrappedKey\x2C\x0d\n  unwrappingKey\x2C\x0d\n  unwrapAlgo\x2C\x0d\n  unwrappedKeyAlgo\x2C\x0d\n  extractable\x2C\x0d\n  keyUsages) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'unwrapKey' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 7\x2C { prefix });\x0d\n  format = webidl.converters.KeyFormat(format\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  wrappedKey = webidl.converters.BufferSource(wrappedKey\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n  unwrappingKey = webidl.converters.CryptoKey(unwrappingKey\x2C {\x0d\n    prefix\x2C\x0d\n    context: '3rd argument'\x2C\x0d\n  });\x0d\n  unwrapAlgo = webidl.converters.AlgorithmIdentifier(unwrapAlgo\x2C {\x0d\n    prefix\x2C\x0d\n    context: '4th argument'\x2C\x0d\n  });\x0d\n  unwrappedKeyAlgo = webidl.converters.AlgorithmIdentifier(\x0d\n    unwrappedKeyAlgo\x2C\x0d\n    {\x0d\n      prefix\x2C\x0d\n      context: '5th argument'\x2C\x0d\n    }\x2C\x0d\n  );\x0d\n  extractable = webidl.converters.boolean(extractable\x2C {\x0d\n    prefix\x2C\x0d\n    context: '6th argument'\x2C\x0d\n  });\x0d\n  keyUsages = webidl.converters['sequence<KeyUsage>'](keyUsages\x2C {\x0d\n    prefix\x2C\x0d\n    context: '7th argument'\x2C\x0d\n  });\x0d\n\x0d\n  try {\x0d\n    unwrapAlgo = normalizeAlgorithm(unwrapAlgo\x2C 'unwrapKey');\x0d\n  } catch {\x0d\n    unwrapAlgo = normalizeAlgorithm(unwrapAlgo\x2C 'decrypt');\x0d\n  }\x0d\n\x0d\n  let keyData = await cipherOrWrap(\x0d\n    kWebCryptoCipherDecrypt\x2C\x0d\n    unwrapAlgo\x2C\x0d\n    unwrappingKey\x2C\x0d\n    wrappedKey\x2C\x0d\n    'unwrapKey');\x0d\n\x0d\n  if (format === 'jwk') {\x0d\n    // The fatal: true option is only supported in builds that have ICU.\x0d\n    const options = process.versions.icu !== undefined ?\x0d\n      { fatal: true } : undefined;\x0d\n    const dec = new TextDecoder('utf-8'\x2C options);\x0d\n    try {\x0d\n      keyData = JSONParse(dec.decode(keyData));\x0d\n    } catch {\x0d\n      throw lazyDOMException('Invalid wrapped JWK key'\x2C 'DataError');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return ReflectApply(\x0d\n    importKey\x2C\x0d\n    this\x2C\x0d\n    [format\x2C keyData\x2C unwrappedKeyAlgo\x2C extractable\x2C keyUsages]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction signVerify(algorithm\x2C key\x2C data\x2C signature) {\x0d\n  let usage = 'sign';\x0d\n  if (signature !== undefined) {\x0d\n    usage = 'verify';\x0d\n  }\x0d\n  algorithm = normalizeAlgorithm(algorithm\x2C usage);\x0d\n\x0d\n  if (!ArrayPrototypeIncludes(key.usages\x2C usage) ||\x0d\n      algorithm.name !== key.algorithm.name) {\x0d\n    throw lazyDOMException(\x0d\n      `Unable to use this key to ${usage}`\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  switch (algorithm.name) {\x0d\n    case 'RSA-PSS':\x0d\n      // Fall through\x0d\n    case 'RSASSA-PKCS1-v1_5':\x0d\n      return require('internal/crypto/rsa')\x0d\n        .rsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\x0d\n    case 'ECDSA':\x0d\n      return require('internal/crypto/ec')\x0d\n        .ecdsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\x0d\n    case 'Ed25519':\x0d\n      // Fall through\x0d\n    case 'Ed448':\x0d\n      // Fall through\x0d\n      return require('internal/crypto/cfrg')\x0d\n        .eddsaSignVerify(key\x2C data\x2C algorithm\x2C signature);\x0d\n    case 'HMAC':\x0d\n      return require('internal/crypto/mac')\x0d\n        .hmacSignVerify(key\x2C data\x2C algorithm\x2C signature);\x0d\n  }\x0d\n  throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nasync function sign(algorithm\x2C key\x2C data) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'sign' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 3\x2C { prefix });\x0d\n  algorithm = webidl.converters.AlgorithmIdentifier(algorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  key = webidl.converters.CryptoKey(key\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n  data = webidl.converters.BufferSource(data\x2C {\x0d\n    prefix\x2C\x0d\n    context: '3rd argument'\x2C\x0d\n  });\x0d\n\x0d\n  return signVerify(algorithm\x2C key\x2C data);\x0d\n}\x0d\n\x0d\nasync function verify(algorithm\x2C key\x2C signature\x2C data) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'verify' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 4\x2C { prefix });\x0d\n  algorithm = webidl.converters.AlgorithmIdentifier(algorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  key = webidl.converters.CryptoKey(key\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n  signature = webidl.converters.BufferSource(signature\x2C {\x0d\n    prefix\x2C\x0d\n    context: '3rd argument'\x2C\x0d\n  });\x0d\n  data = webidl.converters.BufferSource(data\x2C {\x0d\n    prefix\x2C\x0d\n    context: '4th argument'\x2C\x0d\n  });\x0d\n\x0d\n  return signVerify(algorithm\x2C key\x2C data\x2C signature);\x0d\n}\x0d\n\x0d\nasync function cipherOrWrap(mode\x2C algorithm\x2C key\x2C data\x2C op) {\x0d\n  // We use a Node.js style error here instead of a DOMException because\x0d\n  // the WebCrypto spec is not specific what kind of error is to be thrown\x0d\n  // in this case. Both Firefox and Chrome throw simple TypeErrors here.\x0d\n  // The key algorithm and cipher algorithm must match\x2C and the\x0d\n  // key must have the proper usage.\x0d\n  if (key.algorithm.name !== algorithm.name ||\x0d\n      !ArrayPrototypeIncludes(key.usages\x2C op)) {\x0d\n    throw lazyDOMException(\x0d\n      'The requested operation is not valid for the provided key'\x2C\x0d\n      'InvalidAccessError');\x0d\n  }\x0d\n\x0d\n  // While WebCrypto allows for larger input buffer sizes\x2C we limit\x0d\n  // those to sizes that can fit within uint32_t because of limitations\x0d\n  // in the OpenSSL API.\x0d\n  validateMaxBufferLength(data\x2C 'data');\x0d\n\x0d\n  switch (algorithm.name) {\x0d\n    case 'RSA-OAEP':\x0d\n      return require('internal/crypto/rsa')\x0d\n        .rsaCipher(mode\x2C key\x2C data\x2C algorithm);\x0d\n    case 'AES-CTR':\x0d\n      // Fall through\x0d\n    case 'AES-CBC':\x0d\n      // Fall through\x0d\n    case 'AES-GCM':\x0d\n      return require('internal/crypto/aes')\x0d\n        .aesCipher(mode\x2C key\x2C data\x2C algorithm);\x0d\n    case 'AES-KW':\x0d\n      if (op === 'wrapKey' || op === 'unwrapKey') {\x0d\n        return require('internal/crypto/aes')\x0d\n          .aesCipher(mode\x2C key\x2C data\x2C algorithm);\x0d\n      }\x0d\n  }\x0d\n  throw lazyDOMException('Unrecognized algorithm name'\x2C 'NotSupportedError');\x0d\n}\x0d\n\x0d\nasync function encrypt(algorithm\x2C key\x2C data) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'encrypt' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 3\x2C { prefix });\x0d\n  algorithm = webidl.converters.AlgorithmIdentifier(algorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  key = webidl.converters.CryptoKey(key\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n  data = webidl.converters.BufferSource(data\x2C {\x0d\n    prefix\x2C\x0d\n    context: '3rd argument'\x2C\x0d\n  });\x0d\n\x0d\n  algorithm = normalizeAlgorithm(algorithm\x2C 'encrypt');\x0d\n  return cipherOrWrap(kWebCryptoCipherEncrypt\x2C algorithm\x2C key\x2C data\x2C 'encrypt');\x0d\n}\x0d\n\x0d\nasync function decrypt(algorithm\x2C key\x2C data) {\x0d\n  if (this !== subtle) throw new ERR_INVALID_THIS('SubtleCrypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'decrypt' on 'SubtleCrypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 3\x2C { prefix });\x0d\n  algorithm = webidl.converters.AlgorithmIdentifier(algorithm\x2C {\x0d\n    prefix\x2C\x0d\n    context: '1st argument'\x2C\x0d\n  });\x0d\n  key = webidl.converters.CryptoKey(key\x2C {\x0d\n    prefix\x2C\x0d\n    context: '2nd argument'\x2C\x0d\n  });\x0d\n  data = webidl.converters.BufferSource(data\x2C {\x0d\n    prefix\x2C\x0d\n    context: '3rd argument'\x2C\x0d\n  });\x0d\n\x0d\n  algorithm = normalizeAlgorithm(algorithm\x2C 'decrypt');\x0d\n  return cipherOrWrap(kWebCryptoCipherDecrypt\x2C algorithm\x2C key\x2C data\x2C 'decrypt');\x0d\n}\x0d\n\x0d\n// The SubtleCrypto and Crypto classes are defined as part of the\x0d\n// Web Crypto API standard: https://www.w3.org/TR/WebCryptoAPI/\x0d\n\x0d\nclass SubtleCrypto {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n}\x0d\nconst subtle = ReflectConstruct(function() {}\x2C []\x2C SubtleCrypto);\x0d\n\x0d\nclass Crypto {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  get subtle() {\x0d\n    if (this !== crypto) throw new ERR_INVALID_THIS('Crypto');\x0d\n    return subtle;\x0d\n  }\x0d\n}\x0d\nconst crypto = ReflectConstruct(function() {}\x2C []\x2C Crypto);\x0d\n\x0d\nfunction getRandomValues(array) {\x0d\n  if (this !== crypto) throw new ERR_INVALID_THIS('Crypto');\x0d\n\x0d\n  webidl ??= require('internal/crypto/webidl');\x0d\n  const prefix = "Failed to execute 'getRandomValues' on 'Crypto'";\x0d\n  webidl.requiredArguments(arguments.length\x2C 1\x2C { prefix });\x0d\n\x0d\n  return ReflectApply(_getRandomValues\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Crypto.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: false\x2C\x0d\n      value: 'Crypto'\x2C\x0d\n    }\x2C\x0d\n    subtle: kEnumerableProperty\x2C\x0d\n    getRandomValues: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: getRandomValues\x2C\x0d\n    }\x2C\x0d\n    randomUUID: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: randomUUID\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\nif (getOptionValue('--no-experimental-global-webcrypto')) {\x0d\n  // For backward compatibility\x2C keep exposing CryptoKey in the Crypto prototype\x0d\n  // when using the flag.\x0d\n  ObjectDefineProperty(Crypto.prototype\x2C 'CryptoKey'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: CryptoKey\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  SubtleCrypto.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: false\x2C\x0d\n      value: 'SubtleCrypto'\x2C\x0d\n    }\x2C\x0d\n    encrypt: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: encrypt\x2C\x0d\n    }\x2C\x0d\n    decrypt: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: decrypt\x2C\x0d\n    }\x2C\x0d\n    sign: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: sign\x2C\x0d\n    }\x2C\x0d\n    verify: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: verify\x2C\x0d\n    }\x2C\x0d\n    digest: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: digest\x2C\x0d\n    }\x2C\x0d\n    generateKey: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: generateKey\x2C\x0d\n    }\x2C\x0d\n    deriveKey: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: deriveKey\x2C\x0d\n    }\x2C\x0d\n    deriveBits: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: deriveBits\x2C\x0d\n    }\x2C\x0d\n    importKey: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: importKey\x2C\x0d\n    }\x2C\x0d\n    exportKey: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: exportKey\x2C\x0d\n    }\x2C\x0d\n    wrapKey: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: wrapKey\x2C\x0d\n    }\x2C\x0d\n    unwrapKey: {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: unwrapKey\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\nmodule.exports = {\x0d\n  Crypto\x2C\x0d\n  CryptoKey\x2C\x0d\n  SubtleCrypto\x2C\x0d\n  crypto\x2C\x0d\n};\x0d\n
code-source-info,0x3b84436a8ac,240,0,32080,C0O0C4O32080,,
tick,0x7ffe2c22d0e4,336870,0,0x0,3,0x7ff62c4c3ef2,0x7ff62c4c3cc7,0x3b844367c8a,0x3b844367b97,0x7ff64c39d1c7,0x7ff62c4c7571,0x7ff62c4c7774,0x7ff62c509740,0x7ff64c28ef5f,0x7ff62c509c7a,0x7ff62c50a051,0x7ff62c50a29f,0x7ff62c50f175,0x7ff62c50833e,0x7ff62c50850f,0x299e2c265f1,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x299e2c08b51,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2773ccb76ae,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f037d0,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,JS,10,336949,0x3b84436bee4,1127, node:internal/crypto/webcrypto:1:1,0x3b84436a820,~
code-source-info,0x3b84436bee
code-creation,JS,10,337299,0x3b84436c9fc,2, node:internal/crypto/webcrypto:978:41,0x3b84436b0c8,~
code-source-info,0x3b84436c9fc,240,28451,28456,C1O28455,,
code-creation,JS,10,337349,0x3b84436eefc,11,SubtleCrypto node:internal/crypto/webcrypto:974:14,0x3b84436b070,~
code-source-info,0x3b84436eefc,240,28355,28406,C0O28365C5O28371C10O28365,,
code-creation,JS,10,337380,0x3b84436f18c,2, node:internal/crypto/webcrypto:990:41,0x3b84436b1f0,~
code-source-info,0x3b84436f18c,240,28714,28719,C1O28718,,
code-creation,JS,10,337418,0x3b84436f2d4,11,Crypto node:internal/crypto/webcrypto:981:14,0x3b84436b120,~
code-source-info,0x3b84436f2d4,240,28509,28560,C0O28519C5O28525C10O28519,,
code-creation,JS,10,337542,0x3b84436fa44,17,get node:crypto:376:8,0x299e2c28c68,~
code-source-info,0x3b84436fa44,224,8728,8772,C0O8733C3O8740C7O8755C12O8762C16O8770,,
code-creation,JS,10,337579,0x3b84436fb64,30,get subtle node:internal/crypto/webcrypto:985:13,0x3b84436b198,~
code-source-info,0x3b84436fb64,240,28576,28669,C0O28586C2O28599C4O28595C9O28607C19O28613C24O28607C25O28650C29O28664,,
code-creation,JS,10,337608,0x3b84436fc4c,3,get node:crypto:384:10,0x299e2c28cc0,~
code-source-info,0x3b84436fc4c,224,8906,8927,C0O8912C2O8927,,
code-creation,Eval,10,338765,0x3b84437295c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\fresh\\index.js:1:1,0x3b8443727d8,~
script-source,241,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\fresh\\index.js,/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|\x2C)\\s*?no-cache\\s*?(?:\x2C|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders\x2C resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0\x2C len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* \x2C */\n        list.push(str.substring(start\x2C end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start\x2C end))\n\n  return list\n}\n
code-source-info,0x3b84437295c,241,0,2711,C0O0C4O2711,,
code-creation,JS,10,338988,0x3b844372b0c,37, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\fresh\\index.js:1:1,0x3b8443728d0,~
code-source-info,0x3b844372b0c,241,0,2711,C0O0C22O250C27O250C29O323C31O338C36O2710,,
new,MemoryChunk,0x11170600000,262144
new,MemoryChunk,0x2f1c1dc0000,262144
new,MemoryChunk,0x3d3e5700000,262144
code-creation,Eval,10,340615,0x3b8443740e4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime\\mime.js:1:1,0x3b844373f80,~
script-source,242,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime\\mime.js,var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg'\x2C ['oga'\x2C 'ogg'\x2C 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || "define()").replace(/.*\\//\x2C '')\x2C 'changes "' + exts[i] + '" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style ".types" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions\x2C the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {}\x2C\n      content = fs.readFileSync(file\x2C 'ascii')\x2C\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments\x2C and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g\x2C '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path\x2C fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/\x2C '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType\x2C fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n
code-source-info,0x3b8443740e4,242,0,2726,C0O0C4O2726,,
code-creation,JS,10,340750,0x3b8443745c4,155, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime\\mime.js:1:1,0x3b844374058,~
code-source-info,0x3b8443745c4,242,0,2726,C0O0C10O11C13O11C18O37C21O37C25O37C27O543C36O560C40O1329C49O1344C53O1833C62O1850C66O2068C75O2088C79O2251C81O2251C87O2294C95O2301C100O2294C105O2369C113O2369C118O2362C122O2443C124O2453C128O2510C133O2538C143O2524C147O2703C149O2718C154O2725,,
code-creation,JS,10,340878,0x3b844374afc,42,Mime C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime\\mime.js:4:14,0x3b844374118,~
code-source-info,0x3b844374afc,242,66,220,C0O121C4O128C11O128C16O119C20O198C24O205C31O205C36O196C41O219,,
code-creation,JS,10,342001,0x3d3e570781c,226,Mime.define C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime\\mime.js:21:34,0x3b844374170,~
code-source-info,0x3d3e570781c,242,571,1094,C0O598C13O590C26O590C27O620C29O623C33O648C35O660C39O653C44O681C48O693C53O697C59O716C66O726C69O721C74O742C78O750C83O761C92O785C106O785C118O824C121O818C127O828C131O872C138O882C141O877C144O855C150O887C156O896C160O750C166O925C173O935C179O940C183O669C188O635C192O1024C199O1034C204O1055C210O1078C213O1072C220O581C225O1093,,
code-creation,JS,10,343175,0x3d3e5707db4,52,Mime.lookup C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime\\mime.js:69:33,0x3b8443742b8,~
code-source-info,0x3d3e5707db4,242,1860,1999,C0O1896C14O1896C21O1922C26O1923C31O1953C38O1958C45O1967C47O1984C51O1997,,
code-creation,Eval,10,343987,0x3d3e5709084,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\send\\node_modules\\ms\\index.js:1:1,0x3d3e5708e90,~
script-source,243,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\send\\node_modules\\ms\\index.js,/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val\x2C options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms\x2C msAbs\x2C d\x2C 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms\x2C msAbs\x2C h\x2C 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms\x2C msAbs\x2C m\x2C 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms\x2C msAbs\x2C s\x2C 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms\x2C msAbs\x2C n\x2C name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n
code-source-info,0x3d3e5709084,243,0,3024,C0O0C4O3024,,
code-creation,JS,10,344132,0x3d3e570933c,83, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\send\\node_modules\\ms\\index.js:1:1,0x3d3e5708ff8,~
code-source-info,0x3d3e570933c,243,0,3024,C0O0C29O29C33O29C35O43C37O45C40O43C42O59C44O61C47O59C49O75C51O77C54O75C56O91C58O93C61O91C63O106C68O108C71O106C73O405C77O420C82O3023,,
code-creation,Eval,10,345209,0x3d3e570b9dc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\range-parser\\index.js:1:1,0x3d3e570b838,~
script-source,244,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\range-parser\\index.js,/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse "Range" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size\x2C str\x2C options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string')\n  }\n\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split('\x2C')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0\x2C index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0]\x2C 10)\n    var end = parseInt(range[1]\x2C 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start\x2C\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0\x2C i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index\x2C range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range\x2C index) {\n  return {\n    start: range.start\x2C\n    end: range.end\x2C\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start\x2C\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a\x2C b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a\x2C b) {\n  return a.start - b.start\n}\n
code-source-info,0x3d3e570b9dc,244,0,2900,C0O0C4O2900,,
code-creation,JS,10,345342,0x3d3e570bca4,48, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\range-parser\\index.js:1:1,0x3d3e570b950,~
code-source-info,0x3d3e570bca4,244,0,2900,C0O0C40O188C42O203C47O2899,,
code-creation,Eval,10,345926,0x3d3e570c9cc,6, :1:1,0x3d3e570c828,~
script-source,245,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function (arg0) {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0x3d3e570c9cc,245,0,163,C0O0C5O163,,
code-creation,JS,10,345962,0x3d3e570caac,30, :1:20,0x3d3e570c940,~
code-source-info,0x3d3e570caac,245,19,162,C0O19C25O67C29O160,,
code-creation,JS,13,346011,0x7ff62c51b880,164, node:internal/validators:160:40,0xfca8d3d9d0,*
code-source-info,0x7ff62c51b880,15,4529,4644,C0O4529C39O4551C72O4593C77O4643C110O4529,,
code-creation,JS,11,346108,0x7ff62c51b980,40,prepareObjectStackTrace C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:405:34,0x3e8c8736318,^
code-source-info,0x7ff62c51b980,137,7983,8014,,,
code-creation,JS,11,346141,0x7ff62c51ba00,656,createServerErrorConstructor C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\http-errors\\index.js:196:39,0x299e2c0b0a8,^
code-source-info,0x7ff62c51ba00,218,4316,5306,,,
code-creation,JS,11,346171,0x7ff62c51bcc0,700,lazyLoadStreams node:fs:3051:25,0x22671cadc88,^
code-source-info,0x7ff62c51bcc0,55,84290,84463,,,
code-creation,JS,11,346205,0x7ff62c51bfc0,292,FastBuffer node:internal/buffer:960:14,0x22671c94300,^
code-source-info,0x7ff62c51bfc0,25,27335,27426,,,
code-creation,JS,11,346224,0x7ff62c51c140,248, node:zlib:806:3,0x299e2c1a0f0,^
code-source-info,0x7ff62c51c140,222,25387,25476,,,
code-creation,JS,11,346241,0x7ff62c51c280,228,createConvenienceMethod node:zlib:789:33,0x299e2c19838,^
code-source-info,0x7ff62c51c280,222,24928,25298,,,
code-creation,JS,11,346259,0x7ff62c51c3c0,232,createProperty node:zlib:874:24,0x299e2c199c8,^
code-source-info,0x7ff62c51c3c0,222,27782,27954,,,
code-creation,JS,11,346284,0x7ff62c51c500,544,reportModuleNotFoundToWatchMode node:internal/modules/cjs/loader:239:41,0x22671cb6800,^
code-source-info,0x7ff62c51c500,63,7096,7299,,,
code-creation,JS,11,346315,0x7ff62c51c740,1628,Mime.define C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime\\mime.js:21:34,0x3b844374170,^
code-source-info,0x7ff62c51c740,242,571,1094,,,
code-creation,Eval,10,347627,0x3d3e571017c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\proxy-addr\\index.js:1:1,0x3d3e570ff48,~
script-source,246,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\proxy-addr\\index.js,/*!\n * proxy-addr\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = proxyaddr\nmodule.exports.all = alladdrs\nmodule.exports.compile = compile\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar forwarded = require('forwarded')\nvar ipaddr = require('ipaddr.js')\n\n/**\n * Variables.\n * @private\n */\n\nvar DIGIT_REGEXP = /^[0-9]+$/\nvar isip = ipaddr.isValid\nvar parseip = ipaddr.parse\n\n/**\n * Pre-defined IP ranges.\n * @private\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16'\x2C 'fe80::/10']\x2C\n  loopback: ['127.0.0.1/8'\x2C '::1/128']\x2C\n  uniquelocal: ['10.0.0.0/8'\x2C '172.16.0.0/12'\x2C '192.168.0.0/16'\x2C 'fc00::/7']\n}\n\n/**\n * Get all addresses in the request\x2C optionally stopping\n * at the first untrusted.\n *\n * @param {Object} request\n * @param {Function|Array|String} [trust]\n * @public\n */\n\nfunction alladdrs (req\x2C trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i]\x2C i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!Object.prototype.hasOwnProperty.call(IP_RANGES\x2C val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    trust.splice.apply(trust\x2C [i\x2C 1].concat(val))\n    i += val.length - 1\n  }\n\n  return compileTrust(compileRangeSubnets(trust))\n}\n\n/**\n * Compile `arr` elements into range subnets.\n *\n * @param {Array} arr\n * @private\n */\n\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0\x2C pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1\x2C note.length)\n    : null\n\n  if (range === null) {\n    range = max\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range\x2C 10)\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range)\n  } else {\n    range = null\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note)\n  }\n\n  return [ip\x2C range]\n}\n\n/**\n * Parse netmask string into CIDR range.\n *\n * @param {String} netmask\n * @private\n */\n\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req\x2C trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req\x2C trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4'\n            ? ip.toIPv4Address()\n            : ip.toIPv4MappedAddress()\n        }\n\n        trusted = ipconv\n      }\n\n      if (trusted.match(subnetip\x2C subnetrange)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Compile trust function for single subnet.\n *\n * @param {Object} subnet\n * @private\n */\n\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip\x2C subnetrange)\n  }\n}\n
code-source-info,0x3d3e571017c,246,0,6000,C0O0C4O6000,,
code-creation,JS,10,347904,0x3d3e5710754,136, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\proxy-addr\\index.js:1:1,0x3d3e57100f0,~
code-source-info,0x3d3e5710754,246,0,6000,C0O0C64O145C66O160C70O179C77O191C81O209C88O225C92O297C95O297C99O297C101O331C104O331C109O407C114O407C116O436C120O429C122O465C126O458C128O535C132O535C135O5999,,
code-creation,Eval,10,348651,0x3d3e57118f4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\forwarded\\index.js:1:1,0x3d3e5711780,~
script-source,247,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\forwarded\\index.js,/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request\x2C using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = getSocketAddr(req)\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Get the socket address for a request.\n *\n * @param {object} req\n * @return {string}\n * @private\n */\n\nfunction getSocketAddr (req) {\n  return req.socket\n    ? req.socket.remoteAddress\n    : req.connection.remoteAddress\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses\x2C backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* \x2C */\n        if (start !== end) {\n          list.push(header.substring(start\x2C end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start\x2C end))\n  }\n\n  return list\n}\n
code-source-info,0x3d3e57118f4,247,0,1578,C0O0C4O1578,,
code-creation,JS,10,348759,0x3d3e5711a9c,30, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\forwarded\\index.js:1:1,0x3d3e5711868,~
code-source-info,0x3d3e5711a9c,247,0,1578,C0O0C22O144C24O159C29O1577,,
code-creation,Eval,10,350292,0x3d3e5714da4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:1,0x3d3e5714b00,~
script-source,248,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ipaddr.js\\lib\\ipaddr.js,(function() {\n  var expandIPv6\x2C ipaddr\x2C ipv4Part\x2C ipv4Regexes\x2C ipv6Part\x2C ipv6Regexes\x2C matchCIDR\x2C root\x2C zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== "undefined" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first\x2C second\x2C partSize\x2C cidrBits) {\n    var part\x2C shift;\n    if (first.length !== second.length) {\n      throw new Error("ipaddr: cannot match CIDR for objects with different lengths");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address\x2C rangeList\x2C defaultName) {\n    var k\x2C len\x2C rangeName\x2C rangeSubnets\x2C subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0\x2C len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address\x2C subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k\x2C len\x2C octet;\n      if (octets.length !== 4) {\n        throw new Error("ipaddr: ipv4 octet count should be 4");\n      }\n      for (k = 0\x2C len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error("ipaddr: ipv4 octet should fit in 8 bits");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(".");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other\x2C cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other\x2C other = ref[0]\x2C cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error("ipaddr: cannot match ipv4 address with non-ipv4 one");\n      }\n      return matchCIDR(this.octets\x2C other.octets\x2C 8\x2C cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0\x2C 0\x2C 0\x2C 0])\x2C 8]]\x2C\n      broadcast: [[new IPv4([255\x2C 255\x2C 255\x2C 255])\x2C 32]]\x2C\n      multicast: [[new IPv4([224\x2C 0\x2C 0\x2C 0])\x2C 4]]\x2C\n      linkLocal: [[new IPv4([169\x2C 254\x2C 0\x2C 0])\x2C 16]]\x2C\n      loopback: [[new IPv4([127\x2C 0\x2C 0\x2C 0])\x2C 8]]\x2C\n      carrierGradeNat: [[new IPv4([100\x2C 64\x2C 0\x2C 0])\x2C 10]]\x2C\n      "private": [[new IPv4([10\x2C 0\x2C 0\x2C 0])\x2C 8]\x2C [new IPv4([172\x2C 16\x2C 0\x2C 0])\x2C 12]\x2C [new IPv4([192\x2C 168\x2C 0\x2C 0])\x2C 16]]\x2C\n      reserved: [[new IPv4([192\x2C 0\x2C 0\x2C 0])\x2C 24]\x2C [new IPv4([192\x2C 0\x2C 2\x2C 0])\x2C 24]\x2C [new IPv4([192\x2C 88\x2C 99\x2C 0])\x2C 24]\x2C [new IPv4([198\x2C 51\x2C 100\x2C 0])\x2C 24]\x2C [new IPv4([203\x2C 0\x2C 113\x2C 0])\x2C 24]\x2C [new IPv4([240\x2C 0\x2C 0\x2C 0])\x2C 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this\x2C this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse("::ffff:" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr\x2C i\x2C k\x2C octet\x2C stop\x2C zeros\x2C zerotable;\n      zerotable = {\n        0: 8\x2C\n        128: 7\x2C\n        192: 6\x2C\n        224: 5\x2C\n        240: 4\x2C\n        248: 3\x2C\n        252: 2\x2C\n        254: 1\x2C\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = "(0?\\\\d+|0x[a-f0-9]+)";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp("^" + ipv4Part + "\\\\." + ipv4Part + "\\\\." + ipv4Part + "\\\\." + ipv4Part + "$"\x2C 'i')\x2C\n    longValue: new RegExp("^" + ipv4Part + "$"\x2C 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match\x2C parseIntAuto\x2C part\x2C shift\x2C value;\n    parseIntAuto = function(string) {\n      if (string[0] === "0" && string[1] !== "x") {\n        return parseInt(string\x2C 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k\x2C len\x2C ref\x2C results;\n        ref = match.slice(1\x2C 6);\n        results = [];\n        for (k = 0\x2C len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error("ipaddr: address outside defined range");\n      }\n      return ((function() {\n        var k\x2C results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts\x2C zoneId) {\n      var i\x2C k\x2C l\x2C len\x2C part\x2C ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error("ipaddr: ipv6 part count should be 8 or 16");\n      }\n      ref = this.parts;\n      for (l = 0\x2C len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error("ipaddr: ipv6 part should fit in 16 bits");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/\x2C '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function() {\n      var bestMatchIndex\x2C bestMatchLength\x2C match\x2C regex\x2C string;\n      regex = /((^|:)(0(:|$)){2\x2C})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n      while ((match = regex.exec(string))) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n      if (bestMatchLength < 0) {\n        return string;\n      }\n      return string.substring(0\x2C bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes\x2C k\x2C len\x2C part\x2C ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0\x2C len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr\x2C part\x2C suffix;\n      addr = ((function() {\n        var k\x2C len\x2C ref\x2C results;\n        ref = this.parts;\n        results = [];\n        for (k = 0\x2C len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(":");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function() {\n      var addr\x2C part\x2C suffix;\n      addr = ((function() {\n        var k\x2C len\x2C ref\x2C results;\n        ref = this.parts;\n        results = [];\n        for (k = 0\x2C len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4\x2C '0'));\n        }\n        return results;\n      }).call(this)).join(":");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other\x2C cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other\x2C other = ref[0]\x2C cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error("ipaddr: cannot match ipv6 address with non-ipv6 one");\n      }\n      return matchCIDR(this.parts\x2C other.parts\x2C 16\x2C cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 128]\x2C\n      linkLocal: [new IPv6([0xfe80\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 10]\x2C\n      multicast: [new IPv6([0xff00\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 8]\x2C\n      loopback: [new IPv6([0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1])\x2C 128]\x2C\n      uniqueLocal: [new IPv6([0xfc00\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 7]\x2C\n      ipv4Mapped: [new IPv6([0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0xffff\x2C 0\x2C 0])\x2C 96]\x2C\n      rfc6145: [new IPv6([0\x2C 0\x2C 0\x2C 0\x2C 0xffff\x2C 0\x2C 0\x2C 0])\x2C 96]\x2C\n      rfc6052: [new IPv6([0x64\x2C 0xff9b\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 96]\x2C\n      '6to4': [new IPv6([0x2002\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 16]\x2C\n      teredo: [new IPv6([0x2001\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 32]\x2C\n      reserved: [[new IPv6([0x2001\x2C 0xdb8\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0])\x2C 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this\x2C this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high\x2C low\x2C ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error("ipaddr: trying to convert a generic ipv6 address to ipv4");\n      }\n      ref = this.parts.slice(-2)\x2C high = ref[0]\x2C low = ref[1];\n      return new ipaddr.IPv4([high >> 8\x2C high & 0xff\x2C low >> 8\x2C low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr\x2C i\x2C k\x2C part\x2C stop\x2C zeros\x2C zerotable;\n      zerotable = {\n        0: 16\x2C\n        32768: 15\x2C\n        49152: 14\x2C\n        57344: 13\x2C\n        61440: 12\x2C\n        63488: 11\x2C\n        64512: 10\x2C\n        65024: 9\x2C\n        65280: 8\x2C\n        65408: 7\x2C\n        65472: 6\x2C\n        65504: 5\x2C\n        65520: 4\x2C\n        65528: 3\x2C\n        65532: 2\x2C\n        65534: 1\x2C\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = "(?:[0-9a-f]+::?)+";\n\n  zoneIndex = "%[0-9a-z]{1\x2C}";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex\x2C 'i')\x2C\n    "native": new RegExp("^(::)?(" + ipv6Part + ")?([0-9a-f]+)?(::)?(" + zoneIndex + ")?$"\x2C 'i')\x2C\n    transitional: new RegExp(("^((?:" + ipv6Part + ")|(?:::)(?:" + ipv6Part + ")?)") + (ipv4Part + "\\\\." + ipv4Part + "\\\\." + ipv4Part + "\\\\." + ipv4Part) + ("(" + zoneIndex + ")?$")\x2C 'i')\n  };\n\n  expandIPv6 = function(string\x2C parts) {\n    var colonCount\x2C lastColon\x2C part\x2C replacement\x2C replacementCount\x2C zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/\x2C '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':'\x2C lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0\x2C 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2\x2C 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::'\x2C replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0\x2C -1);\n    }\n    parts = (function() {\n      var k\x2C len\x2C ref\x2C results;\n      ref = string.split(":");\n      results = [];\n      for (k = 0\x2C len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part\x2C 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts\x2C\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr\x2C k\x2C len\x2C match\x2C octet\x2C octets\x2C zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string\x2C 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0\x2C -1) + zoneId\x2C 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2])\x2C parseInt(match[3])\x2C parseInt(match[4])\x2C parseInt(match[5])];\n        for (k = 0\x2C len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts\x2C\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr\x2C e;\n    if (typeof string === "string" && string.indexOf(":") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts\x2C addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error("ipaddr: string is not formatted like ip address");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error("ipaddr: string is not formatted like ip address");\n    }\n    return new this(addr.parts\x2C addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength\x2C match\x2C parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1])\x2C maskLength];\n        Object.defineProperty(parsed\x2C 'toString'\x2C {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error("ipaddr: string is not formatted like an IPv4 CIDR range");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount\x2C j\x2C octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0\x2C 0\x2C 0\x2C 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2\x2C prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr\x2C error\x2C i\x2C ipInterfaceOctets\x2C octets\x2C subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i]\x2C 10) | parseInt(subnetMaskOctets[i]\x2C 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr\x2C error\x2C i\x2C ipInterfaceOctets\x2C octets\x2C subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i]\x2C 10) & parseInt(subnetMaskOctets[i]\x2C 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength\x2C match\x2C parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1])\x2C maskLength];\n        Object.defineProperty(parsed\x2C 'toString'\x2C {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error("ipaddr: string is not formatted like an IPv6 CIDR range");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error("ipaddr: the address has neither IPv6 nor IPv4 format");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error("ipaddr: the address has neither IPv6 nor IPv4 CIDR format");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error("ipaddr: the binary input is neither an IPv6 nor IPv4 address");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n
code-source-info,0x3d3e5714da4,248,0,19333,C0O0C4O19333,,
code-creation,JS,10,350978,0x3d3e5714e74,26, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:1,0x3d3e5714d18,~
code-source-info,0x3d3e5714e74,248,0,19333,C0O0C9O0C14O19321C19O19321C25O19332,,
code-creation,JS,10,351000,0x3d3e571622c,685, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ipaddr.js\\lib\\ipaddr.js:1:10,0x3d3e5714dd8,~
code-source-info,0x3d3e571622c,248,9,19319,C0O9C5O117C6O124C8O133C11O149C30O214C36O229C43O244C49O269C51O284C55O301C59O311C61O807C68O826C72O1480C80O4291C83O1492C87O4298C90O4336C95O4371C104O4382C110O4393C116O4401C122O4412C128O4420C134O4431C140O4439C146O4450C155O4367C164O4482C173O4493C179O4504C188O4478C199O4348C201O4524C204O4531C213O4543C217O5642C225O11107C228O5654C232O11114C235O11149C238O11181C243O11216C255O11212C264O11258C273O11275C279O11286C285O11311C291O11323C300O11254C309O11360C318O11376C324O11387C330O11403C336O11414C342O11435C348O11443C354O11454C360O11462C366O11473C372O11481C375O11423C384O11500C390O11512C393O11493C402O11356C413O11193C415O11535C419O11546C421O12894C424O12901C433O12913C437O13764C440O13771C448O13792C458O13804C464O13783C468O13874C471O13881C480O13894C484O14067C487O14074C496O14102C500O14281C503O14288C512O14301C516O14612C519O14619C528O14630C532O14841C535O14848C544O14859C548O15091C551O15098C560O15113C564O15625C567O15632C576O15664C580O16174C583O16181C592O16211C596O16819C599O16826C608O16854C612O17456C615O17463C624O17478C628O17991C635O18006C639O18106C646O18119C650O18411C657O18428C661O18766C668O18787C672O19094C679O19109C684O19318,,
code-creation,JS,10,351102,0x3d3e5717cbc,499, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ipaddr.js\\lib\\ipaddr.js:199:26,0x3d3e57150f8,~
code-source-info,0x3d3e5717cbc,248,5665,11106,C0O5665C5O6383C14O6398C18O6451C27O6470C31O6576C40O6602C44O7204C53O7226C57O7503C66O7532C70O8008C79O8038C83O8531C92O8547C96O8898C106O8945C113O8950C120O8946C135O9005C142O9010C149O9006C164O9069C171O9074C178O9070C193O9131C200O9136C207O9132C222O9193C229O9198C236O9194C251O9257C258O9262C265O9258C280O9319C287O9324C294O9320C309O9381C316O9386C323O9382C338O9445C345O9450C352O9446C367O9506C374O9511C381O9507C396O9569C410O9575C417O9571C440O8922C444O9638C453O9654C457O9745C466O9775C470O9851C479O9875C483O10208C492O10245C496O11089C498O11101,,
code-creation,JS,10,351161,0x3d3e57194dc,688, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ipaddr.js\\lib\\ipaddr.js:56:26,0x3d3e5714fb8,~
code-source-info,0x3d3e57194dc,248,1503,4290,C0O1503C5O1928C14O1943C18O1996C27O2015C31O2083C40O2112C44O2174C53O2196C57O2263C66O2279C70O2631C80O2678C94O2684C101O2680C122O2726C136O2732C143O2728C164O2783C178O2789C185O2785C206O2833C220O2839C227O2835C248O2885C262O2891C269O2887C290O2941C304O2947C311O2943C332O2993C346O2999C353O2995C378O3029C385O3025C410O3062C417O3058C438O3108C452O3114C459O3110C484O3146C491O3142C516O3178C523O3174C548O3212C555O3208C580O3247C587O3243C612O3281C619O3277C642O2655C646O3324C655O3340C659O3431C668O3461C672O3556C681O3593C685O4273C687O4285,,
code-creation,JS,10,351353,0x3d3e571a394,97,IPv4 C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ipaddr.js\\lib\\ipaddr.js:57:18,0x3d3e5717fb8,~
code-source-info,0x3d3e571a394,248,1525,1917,C0O1578C7O1585C12O1602C21O1608C26O1602C27O1678C29O1698C34O1708C36O1708C41O1730C43O1744C47O1757C51O1766C60O1784C65O1806C74O1812C79O1806C80O1716C85O1673C89O1890C91O1902C96O1916,,
code-creation,JS,10,351541,0x3d3e571b31c,193,IPv6 C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ipaddr.js\\lib\\ipaddr.js:200:18,0x3d3e5716678,~
code-source-info,0x3d3e571b31c,248,5687,6372,C0O5756C7O5763C12O5781C14O5792C18O5811C21O5824C23O5824C28O5860C33O5866C40O5877C43O5881C49O5897C52O5894C55O5887C59O5866C64O5833C71O5806C77O5937C84O5944C89O5961C91O5972C97O6004C106O6010C111O6004C112O6091C117O6109C119O6126C124O6136C126O6136C131O6158C133O6168C137O6181C141O6190C152O6206C157O6231C166O6237C171O6231C172O6144C177O6104C181O6315C185O6337C187O6349C192O6371,,
tick,0x7ff6ac2c06bd,351864,0,0x0,0,0x7ff62c4c968e,0x7ff62c505eb7,0x7ff62c510de0,0x7ff62c50ee62,0x7ff62c50833e,0x7ff62c50850f,0x2773ccb76ce,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2ce89f037d0,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x7ff62c50f4ae,0x3c570277a41,0x3c5702778bc,0x3e8c8730394,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,JS,10,352389,0x3d3e571cd3c,14,createETagGenerator C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\utils.js:272:30,0x2773ccb6f78,~
code-source-info,0x3d3e571cd3c,212,5467,5651,C0O5467C9O5481C13O5649,,
code-creation,Eval,10,352585,0x3d3e571d19c,6, :1:1,0x3d3e571cff8,~
script-source,249,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function (arg0\x2C arg1) {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0x3d3e571d19c,249,0,169,C0O0C5O169,,
code-creation,JS,10,352627,0x3d3e571d27c,30, :1:20,0x3d3e571d110,~
code-source-info,0x3d3e571d27c,249,19,168,C0O19C25O67C29O166,,
code-creation,Eval,10,352705,0x3d3e571d74c,6, :1:1,0x3d3e571d5a8,~
script-source,250,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function (arg0\x2C arg1) {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0x3d3e571d74c,250,0,169,C0O0C5O169,,
code-creation,JS,10,352731,0x3d3e571d82c,30, :1:20,0x3d3e571d6c0,~
code-source-info,0x3d3e571d82c,250,19,168,C0O19C25O67C29O166,,
code-creation,JS,11,352779,0x7ff62c51cdc0,876,wrapfunction C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:413:23,0x3e8c8736370,^
code-source-info,0x7ff62c51cdc0,137,8102,8686,,,
code-creation,JS,11,352804,0x7ff62c51d180,612,getStack C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:381:19,0x3e8c87362c0,^
code-source-info,0x7ff62c51d180,137,7502,7903,,,
code-creation,JS,11,352828,0x7ff62c51d440,624,callSiteLocation C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:267:27,0x3e8c8736108,^
code-source-info,0x7ff62c51d440,137,5193,5537,,,
code-creation,JS,11,352850,0x7ff62c51d700,412,createArgumentsString C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:71:32,0x3e8c8735e78,^
code-source-info,0x7ff62c51d700,137,1255,1369,,,
code-creation,JS,11,352874,0x7ff62c51d8c0,708,IPv4 C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ipaddr.js\\lib\\ipaddr.js:57:18,0x3d3e5717fb8,^
code-source-info,0x7ff62c51d8c0,248,1525,1917,,,
code-creation,JS,11,352905,0x7ff62c51dbc0,1348,IPv6 C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\ipaddr.js\\lib\\ipaddr.js:200:18,0x3d3e5716678,^
code-source-info,0x7ff62c51dbc0,248,5687,6372,,,
code-creation,JS,10,353678,0x3d3e571ee24,27, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:489:25,0x2ce89f03378,~
code-source-info,0x3d3e571ee24,140,10843,11148,C0O10843C9O10855C17O10859C21O10867C26O11147,,
code-creation,Eval,10,354525,0x3d3e57214ec,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\request.js:1:1,0x3d3e5721318,~
script-source,251,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\request.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts');\nvar deprecate = require('depd')('express');\nvar isIP = require('net').isIP;\nvar typeis = require('type-is');\nvar http = require('http');\nvar fresh = require('fresh');\nvar parseRange = require('range-parser');\nvar parse = require('parseurl');\nvar proxyaddr = require('proxy-addr');\n\n/**\n * Request prototype.\n * @public\n */\n\nvar req = Object.create(http.IncomingMessage.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = req\n\n/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased\x2C\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => "text/plain"\n *\n *     req.get('content-type');\n *     // => "text/plain"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */\n\nreq.get =\nreq.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer\n        || this.headers.referer;\n    default:\n      return this.headers[lc];\n  }\n};\n\n/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable\x2C returning\n * the best match when true\x2C otherwise `undefined`\x2C in which\n * case you should respond with 406 "Not Acceptable".\n *\n * The `type` value may be a single MIME type string\n * such as "application/json"\x2C an extension name\n * such as "json"\x2C a comma-delimited list such as "json\x2C html\x2C text/plain"\x2C\n * an argument list such as `"json"\x2C "html"\x2C "text/plain"`\x2C\n * or an array `["json"\x2C "html"\x2C "text/plain"]`. When a list\n * or array is given\x2C the _best_ match\x2C if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => "html"\n *\n *     // Accept: text/*\x2C application/json\n *     req.accepts('html');\n *     // => "html"\n *     req.accepts('text/html');\n *     // => "text/html"\n *     req.accepts('json\x2C text');\n *     // => "json"\n *     req.accepts('application/json');\n *     // => "application/json"\n *\n *     // Accept: text/*\x2C application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5\x2C application/json\n *     req.accepts(['html'\x2C 'json']);\n *     req.accepts('html'\x2C 'json');\n *     req.accepts('html\x2C json');\n *     // => "json"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */\n\nreq.accepts = function(){\n  var accept = accepts(this);\n  return accept.types.apply(accept\x2C arguments);\n};\n\n/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsEncodings = function(){\n  var accept = accepts(this);\n  return accept.encodings.apply(accept\x2C arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings\x2C\n  'req.acceptsEncoding: Use acceptsEncodings instead');\n\n/**\n * Check if the given `charset`s are acceptable\x2C\n * otherwise you should respond with 406 "Not Acceptable".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsCharsets = function(){\n  var accept = accepts(this);\n  return accept.charsets.apply(accept\x2C arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets\x2C\n  'req.acceptsCharset: Use acceptsCharsets instead');\n\n/**\n * Check if the given `lang`s are acceptable\x2C\n * otherwise you should respond with 406 "Not Acceptable".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsLanguages = function(){\n  var accept = accepts(this);\n  return accept.languages.apply(accept\x2C arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages\x2C\n  'req.acceptsLanguage: Use acceptsLanguages instead');\n\n/**\n * Parse Range header field\x2C capping to the given `size`.\n *\n * Unspecified ranges such as "0-" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned\x2C `-1` when unsatisfiable\x2C\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned\x2C the array has a "type" property which is the type of\n * range that is required (most commonly\x2C "bytes"). Each array element is an object\n * with a "start" and "end" property for the portion of the range.\n *\n * The "combine" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive\x2C so for example "Range: users=0-3"\n * should respond with 4 users when available\x2C not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */\n\nreq.range = function range(size\x2C options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size\x2C range\x2C options);\n};\n\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders\x2C ex: _/user/:id_\n *  - Checks body params\x2C ex: id=12\x2C {"id":12}\n *  - Checks query string params\x2C ex: ?id=12\n *\n * To utilize request bodies\x2C `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */\n\nreq.param = function param(name\x2C defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n\n  var args = arguments.length === 1\n    ? 'name'\n    : 'name\x2C default';\n  deprecate('req.param(' + args + '): Use req.params\x2C req.body\x2C or req.query instead');\n\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n\n  return defaultValue;\n};\n\n/**\n * Check if the incoming request contains the "Content-Type"\n * header field\x2C and it contains the given mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nreq.is = function is(types) {\n  var arr = types;\n\n  // support flattened arguments\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this\x2C arr);\n};\n\n/**\n * Return the protocol string "http" or "https"\n * when requested with TLS. When the "trust proxy"\n * setting trusts the socket address\x2C the\n * "X-Forwarded-Proto" header field will be trusted\n * and used if present.\n *\n * If you're running behind a reverse proxy that\n * supplies https for you this may be enabled.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req\x2C 'protocol'\x2C function protocol(){\n  var proto = this.connection.encrypted\n    ? 'https'\n    : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress\x2C 0)) {\n    return proto;\n  }\n\n  // Note: X-Forwarded-Proto is normally only ever a\n  //       single value\x2C but this is to be safe.\n  var header = this.get('X-Forwarded-Proto') || proto\n  var index = header.indexOf('\x2C')\n\n  return index !== -1\n    ? header.substring(0\x2C index).trim()\n    : header.trim()\n});\n\n/**\n * Short-hand for:\n *\n *    req.protocol === 'https'\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req\x2C 'secure'\x2C function secure(){\n  return this.protocol === 'https';\n});\n\n/**\n * Return the remote address from the trusted proxy.\n *\n * The is the remote address on the socket unless\n * "trust proxy" is set.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req\x2C 'ip'\x2C function ip(){\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this\x2C trust);\n});\n\n/**\n * When "trust proxy" is set\x2C trusted proxy addresses + client.\n *\n * For example if the value were "client\x2C proxy1\x2C proxy2"\n * you would receive the array `["client"\x2C "proxy1"\x2C "proxy2"]`\n * where "proxy2" is the furthest down-stream and "proxy1" and\n * "proxy2" were trusted.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req\x2C 'ips'\x2C function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this\x2C trust);\n\n  // reverse the order (to farthest -> closest)\n  // and remove socket address\n  addrs.reverse().pop()\n\n  return addrs\n});\n\n/**\n * Return subdomains as an array.\n *\n * Subdomains are the dot-separated parts of the host before the main domain of\n * the app. By default\x2C the domain of the app is assumed to be the last two\n * parts of the host. This can be changed by setting "subdomain offset".\n *\n * For example\x2C if the domain is "tobi.ferrets.example.com":\n * If "subdomain offset" is not set\x2C req.subdomains is `["ferrets"\x2C "tobi"]`.\n * If "subdomain offset" is 3\x2C req.subdomains is `["tobi"]`.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req\x2C 'subdomains'\x2C function subdomains() {\n  var hostname = this.hostname;\n\n  if (!hostname) return [];\n\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname)\n    ? hostname.split('.').reverse()\n    : [hostname];\n\n  return subdomains.slice(offset);\n});\n\n/**\n * Short-hand for `url.parse(req.url).pathname`.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req\x2C 'path'\x2C function path() {\n  return parse(this).pathname;\n});\n\n/**\n * Parse the "Host" header field to a hostname.\n *\n * When the "trust proxy" setting trusts the socket\n * address\x2C the "X-Forwarded-Host" header field will\n * be trusted.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req\x2C 'hostname'\x2C function hostname(){\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress\x2C 0)) {\n    host = this.get('Host');\n  } else if (host.indexOf('\x2C') !== -1) {\n    // Note: X-Forwarded-Host is normally only ever a\n    //       single value\x2C but this is to be safe.\n    host = host.substring(0\x2C host.indexOf('\x2C')).trimRight()\n  }\n\n  if (!host) return;\n\n  // IPv6 literal support\n  var offset = host[0] === '['\n    ? host.indexOf(']') + 1\n    : 0;\n  var index = host.indexOf(':'\x2C offset);\n\n  return index !== -1\n    ? host.substring(0\x2C index)\n    : host;\n});\n\n// TODO: change req.host to return host in next major\n\ndefineGetter(req\x2C 'host'\x2C deprecate.function(function host(){\n  return this.hostname;\n}\x2C 'req.host: Use req.hostname instead'));\n\n/**\n * Check if the request is fresh\x2C aka\n * Last-Modified and/or the ETag\n * still match.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req\x2C 'fresh'\x2C function(){\n  var method = this.method;\n  var res = this.res\n  var status = res.statusCode\n\n  // GET or HEAD for weak freshness validation only\n  if ('GET' !== method && 'HEAD' !== method) return false;\n\n  // 2xx or 304 as per rfc2616 14.26\n  if ((status >= 200 && status < 300) || 304 === status) {\n    return fresh(this.headers\x2C {\n      'etag': res.get('ETag')\x2C\n      'last-modified': res.get('Last-Modified')\n    })\n  }\n\n  return false;\n});\n\n/**\n * Check if the request is stale\x2C aka\n * "Last-Modified" and / or the "ETag" for the\n * resource has changed.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req\x2C 'stale'\x2C function stale(){\n  return !this.fresh;\n});\n\n/**\n * Check if the request was an _XMLHttpRequest_.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req\x2C 'xhr'\x2C function xhr(){\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj\x2C name\x2C getter) {\n  Object.defineProperty(obj\x2C name\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: getter\n  });\n}\n
code-source-info,0x3d3e57214ec,251,0,12505,C0O0C4O12505,,
code-creation,JS,10,354963,0x3d3e5721f34,479, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\request.js:1:1,0x3d3e5721460,~
code-source-info,0x3d3e5721f
code-creation,Eval,10,355931,0x3d3e57239ec,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\accepts\\index.js:1:1,0x3d3e5723848,~
script-source,252,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\accepts\\index.js,/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable\x2C returning\n * the best match when true\x2C otherwise `undefined`\x2C in which\n * case you should respond with 406 "Not Acceptable".\n *\n * The `type` value may be a single mime type string\n * such as "application/json"\x2C the extension name\n * such as "json" or an array `["json"\x2C "html"\x2C "text/plain"]`. When a list\n * or array is given the _best_ match\x2C if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => "html"\n *\n *     // Accept: text/*\x2C application/json\n *     this.types('html');\n *     // => "html"\n *     this.types('text/html');\n *     // => "text/html"\n *     this.types('json'\x2C 'text');\n *     // => "json"\n *     this.types('application/json');\n *     // => "application/json"\n *\n *     // Accept: text/*\x2C application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5\x2C application/json\n *     this.types(['html'\x2C 'json']);\n *     this.types('html'\x2C 'json');\n *     // => "json"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types\x2C return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header\x2C return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip\x2C deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip'\x2C 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings\x2C return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8\x2C iso-8859-1;q=0.2\x2C utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8'\x2C 'utf-7'\x2C 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets\x2C return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8\x2C es\x2C pt`\n * an array sorted by quality is returned:\n *\n *     ['es'\x2C 'pt'\x2C 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages\x2C return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n
code-source-info,0x3d3e57239ec,252,0,5252,C0O0C4O5252,,
code-creation,JS,10,356132,0x3d3e5724174,201, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\accepts\\index.js:1:1,0x3d3e5723960,~
code-source-info,0x3d3e5724174,252,0,5252,C0O0C23O194C26O194C30O194C32O227C35O227C39O227C41O289C43O304C47O1721C50O1729C58O1754C68O1770C74O1744C78O2701C81O2709C89O2738C99O2758C105O2728C109O3534C112O3542C120O3570C130O3589C136O3560C140O4312C143O4320C151O4345C159O4371C167O4400C177O4420C183O4390C189O4361C195O4335C200O5251,,
code-creation,Eval,10,356844,0x3d3e57250e4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\index.js:1:1,0x3d3e5724f40,~
script-source,253,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\index.js,/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nvar preferredCharsets = require('./lib/charset')\nvar preferredEncodings = require('./lib/encoding')\nvar preferredLanguages = require('./lib/language')\nvar preferredMediaTypes = require('./lib/mediaType')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  return preferredCharsets(this.request.headers['accept-charset']\x2C available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  return preferredEncodings(this.request.headers['accept-encoding']\x2C available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  return preferredLanguages(this.request.headers['accept-language']\x2C available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  return preferredMediaTypes(this.request.headers.accept\x2C available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n
code-source-info,0x3d3e57250e4,253,0,2451,C0O0C4O2451,,
code-creation,JS,10,356950,0x3d3e572557c,386, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\index.js:1:1,0x3d3e5725058,~
code-source-info,0x3d3e572557c,253,0,2451,C0O0C11O208C14O208C18O208C20O258C23O258C27O258C29O309C32O309C36O309C38O361C41O361C45O361C47O428C49O443C53O464C60O483C64O733C67O744C76O762C80O860C83O871C92O890C96O1006C99O1017C108O1036C112O1136C115O1147C124O1167C128O1286C131O1297C140O1316C144O1416C147O1427C156O1447C160O1566C163O1577C172O1597C176O1699C179O1710C188O1731C192O1867C195O1878C203O1918C208O1928C212O1905C216O1937C219O1948C227O1989C232O1999C236O1976C240O2009C243O2020C251O2061C256O2071C260O2048C264O2081C267O2092C275O2134C280O2144C284O2121C288O2155C291O2166C299O2207C304O2217C308O2194C312O2227C315O2238C323O2280C328O2290C332O2267C336O2301C339O2312C347O2354C352O2364C356O2341C360O2375C363O2386C371O2429C376O2439C380O2416C385O2450,,
code-creation,Eval,10,357481,0x3d3e57265ac,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\charset.js:1:1,0x3d3e57263d8,~
script-source,254,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\charset.js,/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split('\x2C');\n\n  for (var i = 0\x2C j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim()\x2C i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str\x2C i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset\x2C\n    q: q\x2C\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset\x2C accepted\x2C index) {\n  var priority = {o: -1\x2C q: 0\x2C s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset\x2C accepted[i]\x2C index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset\x2C spec\x2C index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index\x2C\n    o: spec.i\x2C\n    q: spec.q\x2C\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept\x2C provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type\x2C index) {\n    return getCharsetPriority(type\x2C accepts\x2C index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a\x2C b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n
code-source-info,0x3d3e57265ac,254,0,3081,C0O0C4O3081,,
code-creation,JS,10,357607,0x3d3e5726974,78, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\charset.js:1:1,0x3d3e5726520,~
code-source-info,0x3d3e5726974,254,0,3081,C0O0C52O223C54O238C58O266C65O292C69O382C74O382C77O3080,,
code-creation,Eval,10,358182,0x3d3e572778c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\encoding.js:1:1,0x3d3e57275b8,~
script-source,255,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\encoding.js,/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split('\x2C');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0\x2C j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim()\x2C i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity'\x2C encoding);\n      minQuality = Math.min(minQuality\x2C encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header\x2C\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity'\x2C\n      q: minQuality\x2C\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str\x2C i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding\x2C\n    q: q\x2C\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding\x2C accepted\x2C index) {\n  var priority = {o: -1\x2C q: 0\x2C s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding\x2C accepted[i]\x2C index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding\x2C spec\x2C index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index\x2C\n    o: spec.i\x2C\n    q: spec.q\x2C\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept\x2C provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type\x2C index) {\n    return getEncodingPriority(type\x2C accepts\x2C index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a\x2C b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n
code-source-info,0x3d3e572778c,255,0,3506,C0O0C4O3506,,
code-creation,JS,10,358355,0x3d3e5727b54,78, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\encoding.js:1:1,0x3d3e5727700,~
code-source-info,0x3d3e5727b54,255,0,3506,C0O0C52O223C54O238C58O267C65O294C69O386C74O386C77O3505,,
code-creation,Eval,10,358826,0x3d3e5728944,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\language.js:1:1,0x3d3e5728770,~
script-source,256,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\language.js,/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split('\x2C');\n\n  for (var i = 0\x2C j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim()\x2C i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str\x2C i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1]\n  var suffix = match[2]\n  var full = prefix\n\n  if (suffix) full += "-" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix\x2C\n    suffix: suffix\x2C\n    q: q\x2C\n    i: i\x2C\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language\x2C accepted\x2C index) {\n  var priority = {o: -1\x2C q: 0\x2C s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language\x2C accepted[i]\x2C index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language\x2C spec\x2C index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index\x2C\n    o: spec.i\x2C\n    q: spec.q\x2C\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept\x2C provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type\x2C index) {\n    return getLanguagePriority(type\x2C accepts\x2C index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a\x2C b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n
code-source-info,0x3d3e5728944,256,0,3409,C0O0C4O3409,,
code-creation,JS,10,358964,0x3d3e5728d0c,78, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\language.js:1:1,0x3d3e57288b8,~
code-source-info,0x3d3e5728d0c,256,0,3409,C0O0C52O223C54O238C58O267C65O294C69O386C74O386C77O3408,,
code-creation,Eval,10,359467,0x3d3e5729f94,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\mediaType.js:1:1,0x3d3e5729d80,~
script-source,257,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\mediaType.js,/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0\x2C j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim()\x2C i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str\x2C i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value\x2C unwrapping quotes\n      var value = val && val[0] === '"' && val[val.length - 1] === '"'\n        ? val.substr(1\x2C val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type\x2C\n    subtype: subtype\x2C\n    params: params\x2C\n    q: q\x2C\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type\x2C accepted\x2C index) {\n  var priority = {o: -1\x2C q: 0\x2C s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type\x2C accepted[i]\x2C index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type\x2C spec\x2C index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index\x2C\n    o: spec.i\x2C\n    q: spec.q\x2C\n    s: s\x2C\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept\x2C provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type\x2C index) {\n    return getMediaTypePriority(type\x2C accepts\x2C index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a\x2C b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('"'\x2C index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0\x2C index);\n    val = str.substr(index + 1);\n  }\n\n  return [key\x2C val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split('\x2C');\n\n  for (var i = 1\x2C j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += '\x2C' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1\x2C j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n
code-source-info,0x3d3e5729f94,257,0,5358,C0O0C4O5358,,
code-creation,JS,10,359664,0x3d3e572a504,102, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\negotiator\\lib\\mediaType.js:1:1,0x3d3e5729f08,~
code-source-info,0x3d3e572a504,257,0,5358,C0O0C76O223C78O238C82O268C89O296C93O390C98O390C101O5357,,
code-creation,Eval,10,360349,0x3d3e572bac4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime-types\\index.js:1:1,0x3d3e572b920,~
script-source,258,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime-types\\index.js,/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions\x2C exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension ("ext" or ".ext" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions\x2C types) {\n  // source preference (least -> most)\n  var preference = ['nginx'\x2C 'apache'\x2C undefined\x2C 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0\x2C 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n
code-source-info,0x3d3e572bac4,258,0,3663,C0O0C4O3663,,
code-creation,JS,10,360492,0x3d3e572bdec,196, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime-types\\index.js:1:1,0x3d3e572ba38,~
code-source-info,0x3d3e572bdec,258,0,3663,C0O0C34O189C37O189C41O189C43O222C46O222C51O237C55O222C57O315C62O315C64O364C69O364C71O415C76O431C80O441C90O470C96O458C100O480C105O500C109O514C114O532C118O544C121O565C125O572C132O572C137O563C141O585C146O600C150O609C153O625C157O632C164O632C169O623C173O684C176O705C184O725C189O684C195O3662,,
code-creation,JS,13,360700,0x7ff62c523500,2416,Module._nodeModulePaths node:internal/modules/cjs/loader:741:37,0x22671cb7080,*
code-source-info,0x7ff62c523500,63,23234,24837,C0O23234C39O23303C90O23684C124O23691C128O23647C401O23696C443O23906C484O23974C497O24355C532O24716C578O24720C617O24550C648O24586C669O24497C683O24586C805O24497C868O23982C872O23915C960O23974C969O24007C1239O24355C1280O24686C1289O24716C1317O24720C1341O24743C1360O24473C1369O24550C1409O24586C1430O24497C1444O24586C1566O24497C1642O23982C1650O23915C1670O24832C1699O23787C1704O23234C1751O23647C1844O24550C1951O23915C2041O24007C2141O24550C2244O23915,,
code-creation,Eval,10,361305,0x3d3e572d08c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime-db\\index.js:1:1,0x3d3e572cf38,~
script-source,259,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime-db\\index.js,/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n
code-source-info,0x3d3e572d08c,259,0,189,C0O0C4O189,,
code-creation,JS,10,361344,0x3d3e572d114,13, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime-db\\index.js:1:1,0x3d3e572d000,~
code-source-info,0x3d3e572d114,259,0,189,C0O151C3O168C7O166C12O188,,
new,MemoryChunk,0x10be3c80000,192512
new,MemoryChunk,0x37307a00000,262144
code-creation,JS,10,364421,0x2f1c1dfc92c,67,populateMaps C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime-types\\index.js:154:23,0x3d3e572bc58,~
code-source-info,0x2f1c1dfc92c,258,2766,3662,C0O2766C13O2846C22O2866C28O2846C30O2888C34O2895C44O2895C50O2903C60O2904C66O3661,,
code-creation,JS,10,364774,0x2f1c1dfcadc,202,forEachMimeType C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime-types\\index.js:158:52,0x2f1c1dfc818,~
code-source-info,0x2f1c1dfcadc,258,2937,3659,C0O2961C7O2963C11O2990C16O3006C18O3025C24O3041C25O3047C26O3085C31O3102C35O3152C37O3164C41O3157C46O3201C48O3205C52O3216C57O3225C62O3259C65O3270C80O3286C83O3280C87O3299C92O3270C98O3324C101O3335C106O3348C111O3335C117O3365C122O3374C128O3386C135O3436C142O3450C152O3465C156O3477C166O3477C175O3491C180O3557C182O3626C187O3643C191O3173C196O3139C201O3658,,
code-creation,Eval,10,366679,0x2f1c1dfe5ec,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\type-is\\index.js:1:1,0x2f1c1dfe418,~
script-source,260,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\type-is\\index.js,/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`\x2C\n * a special shortcut like `multipart` or `urlencoded`\x2C\n * or a mime type.\n *\n * If no types match\x2C `false` is returned.\n * Otherwise\x2C the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value\x2C types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types\x2C return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i])\x2C val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the "Content-Type"\n * header field\x2C and it contains any of the give mime `type`s.\n * If there is no request body\x2C `null` is returned.\n * If there is no content type\x2C `false` is returned.\n * Otherwise\x2C it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*'\x2C 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json'\x2C 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html'\x2C 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req\x2C types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value\x2C types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand\x2C expand it to a valid mime type.\n *\n * In general\x2C you probably want:\n *\n *   var type = is(req\x2C ['urlencoded'\x2C 'json'\x2C 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // "+json" -> "*/*+json" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected\x2C actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0\x2C 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n
code-source-info,0x2f1c1dfe5ec,260,0,5562,C0O0C4O5562,,
code-creation,JS,10,366951,0x2f1c1dfe944,116, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\type-is\\index.js:1:1,0x2f1c1dfe560,~
code-source-info,0x2f1c1dfe944,260,0,5562,C0O0C46O194C49O194C53O194C55O228C58O228C62O228C64O290C66O305C70O328C77O339C81O355C88O371C92O388C99O406C103O425C110O439C115O5561,,
tick,0x7ff6ac28ebca,367848,0,0x0,2,0x7ff62c507c67,0x7ff62c5120f7,0x7ff62c512728,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x2f1c1dfe975,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x3d3e5721f69,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x3e8c87303ad,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,Eval,10,368006,0x2f1c1dffefc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\media-typer\\index.js:1:1,0x2f1c1dffcf8,~
script-source,261,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\media-typer\\index.js,/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( ";" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token "=" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = "(" | ")" | "<" | ">" | "@"\n *               | "\x2C" | ";" | ":" | "\\" | <">\n *               | "/" | "[" | "]" | "?" | "="\n *               | "{" | "}" | SP | HT\n * quoted-string = ( <"> *(qdtext | quoted-pair ) <"> )\n * qdtext        = <any TEXT except <">>\n * quoted-pair   = "\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs\x2C but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR\x2C carriage return (13)>\n * LF            = <US-ASCII LF\x2C linefeed (10)>\n * SP            = <US-ASCII SP\x2C space (32)>\n * SHT           = <US-ASCII HT\x2C horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *("(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = "\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / "!" / "#" /\n *                          "$" / "&" / "-" / "^" / "_"\n * restricted-name-chars =/ "." ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ "+" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0\x2C126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0\x2C126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0\x2C126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0\x2C126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0\x2C index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1\x2C value.length - 2)\n        .replace(qescRegExp\x2C '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '"' + str.replace(quoteRegExp\x2C '\\\\$1') + '"'\n}\n\n/**\n * Simply "type/subtype+siffx" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0\x2C index)\n  }\n\n  var obj = {\n    type: type\x2C\n    subtype: subtype\x2C\n    suffix: suffix\n  }\n\n  return obj\n}\n
code-source-info,0x2f1c1dffefc,261,0,6375,C0O0C4O6375,,
code-creation,JS,10,368251,0x111706349c4,103, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\media-typer\\index.js:1:1,0x2f1c1dffe70,~
code-source-info,0x111706349c4,261,0,6375,C0O0C33O1112C38O1112C40O1283C45O1283C47O1335C52O1335C54O1530C59O1530C61O1643C66O1643C68O2358C73O2358C75O2421C80O2421C82O2479C87O2479C89O2598C91O2613C95O2622C97O2636C102O6374,,
code-creation,Eval,10,369302,0x1117063631c,6, :1:1,0x11170636178,~
script-source,262,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function () {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0x1117063631c,262,0,159,C0O0C5O159,,
code-creation,JS,10,369343,0x111706363fc,30, :1:20,0x11170636290,~
code-source-info,0x111706363fc,262,19,158,C0O19C25O67C29O156,,
code-creation,Eval,10,369411,0x1117063698c,6, :1:1,0x111706367e8,~
script-source,263,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function () {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0x1117063698c,263,0,159,C0O0C5O159,,
code-creation,JS,10,369434,0x11170636a6c,30, :1:20,0x11170636900,~
code-source-info,0x11170636a6c,263,19,158,C0O19C25O67C29O156,,
code-creation,JS,10,369530,0x11170636f24,33,defineGetter C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\request.js:519:22,0x3d3e5721520,~
code-source-info,0x11170636f24,251,12376,12504,C0O12400C4O12407C9O12427C16O12490C26O12407C32O12503,,
code-creation,Eval,10,370468,0x1117063a324,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\response.js:1:1,0x1117063a060,~
script-source,264,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\response.js,/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar createError = require('http-errors')\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  if ((typeof code === 'string' || Math.floor(code) !== code) && code > 99 && code < 1000) {\n    deprecate('res.status(' + JSON.stringify(code) + '): use res.status(' + Math.floor(code) + ') instead')\n  }\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2'\x2C\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += '\x2C ';\n  return this.set('Link'\x2C link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel="' + rel + '"';\n  }).join('\x2C '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body\x2C status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body\x2C status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status\x2C body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status\x2C num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses.message[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type'\x2C setCharset(type\x2C 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk\x2C encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk\x2C encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length'\x2C len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk\x2C encoding))) {\n      this.set('ETag'\x2C etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  // alter headers for 205\n  if (this.statusCode === 205) {\n    this.set('Content-Length'\x2C '0')\n    this.removeHeader('Transfer-Encoding')\n    chunk = ''\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk\x2C encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body\x2C status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj\x2C status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status\x2C obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val\x2C replacer\x2C spaces\x2C escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type'\x2C 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.jsonp(body\x2C status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj\x2C status): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status\x2C obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val\x2C replacer\x2C spaces\x2C escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options'\x2C 'nosniff');\n    this.set('Content-Type'\x2C 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options'\x2C 'nosniff');\n    this.set('Content-Type'\x2C 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g\x2C '');\n\n    if (body === undefined) {\n      // empty argument\n      body = ''\n    } else if (typeof body === 'string') {\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body\n        .replace(/\\u2028/g\x2C '\\\\u2028')\n        .replace(/\\u2029/g\x2C '\\\\u2029')\n    }\n\n    // the /**/ is a specific security mitigation for "Rosetta Flash JSONP abuse"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses.message[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding\x2C as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles\x2C defaulting to false; can be `"allow"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code\x2C so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file'\x2C function(req\x2C res){\n *       var uid = req.params.uid\n *         \x2C file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid\x2C function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403\x2C 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path\x2C options\x2C callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req\x2C pathname\x2C opts);\n\n  // transfer\n  sendfile(res\x2C file\x2C opts\x2C function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.headersSent`\n * if you wish to attempt responding\x2C as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles\x2C defaulting to false; can be `"allow"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code\x2C so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file'\x2C function(req\x2C res){\n *       var uid = req.params.uid\n *         \x2C file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid\x2C function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403\x2C 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path\x2C options\x2C callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req\x2C path\x2C opts);\n\n  // transfer\n  sendfile(res\x2C file\x2C opts\x2C function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile\x2C\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`\x2C\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete\x2C or when an error has\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header\x2C overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path\x2C filename\x2C options\x2C callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // support optional filename\x2C where options may be in it's place\n  if (typeof filename === 'object' &&\n    (typeof options === 'function' || options === undefined)) {\n    name = null\n    opts = filename\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = !opts.root\n    ? resolve(path)\n    : path\n\n  // send file\n  return this.sendFile(fullPath\x2C opts\x2C done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain "/"\x2C or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type'\x2C ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`\x2C an array of\n * acceptable types ordered by their quality values.\n * When "Accept" is not present the _first_ callback\n * is invoked\x2C otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 "Not Acceptable".\n *\n * Content-Type is set for you\x2C however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type'\x2C ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      }\x2C\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      }\x2C\n *\n *      'application/json': function () {\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      }\x2C\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      }\x2C\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var keys = Object.keys(obj)\n    .filter(function (v) { return v !== 'default' })\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary("Accept");\n\n  if (key) {\n    this.set('Content-Type'\x2C normalizeType(key).value);\n    obj[key](req\x2C this\x2C next);\n  } else if (obj.default) {\n    obj.default(req\x2C this\x2C next)\n  } else {\n    next(createError(406\x2C {\n      types: normalizeTypes(keys).map(function (o) { return o.value })\n    }))\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition'\x2C contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link'\x2C ['<http://localhost/>'\x2C '<http://localhost:3000/>']);\n *    res.append('Set-Cookie'\x2C 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning'\x2C '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field\x2C val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n        : [prev\x2C val]\n  }\n\n  return this.set(field\x2C value);\n};\n\n/**\n * Set header `field` to `val`\x2C or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo'\x2C ['bar'\x2C 'baz']);\n *    res.set('Accept'\x2C 'application/json');\n *    res.set({ Accept: 'text/plain'\x2C 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field\x2C val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field\x2C value);\n  } else {\n    for (var key in field) {\n      this.set(key\x2C field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name\x2C options) {\n  var opts = merge({ expires: new Date(1)\x2C path: '/' }\x2C options);\n\n  return this.cookie(name\x2C ''\x2C opts);\n};\n\n/**\n * Set cookie `name` to `value`\x2C with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds\x2C converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to "/"\n *\n * Examples:\n *\n *    // "Remember Me" for 15 minutes\n *    res.cookie('rememberme'\x2C '1'\x2C { expires: new Date(Date.now() + 900000)\x2C httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme'\x2C '1'\x2C { maxAge: 900000\x2C httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name\x2C value\x2C options) {\n  var opts = merge({}\x2C options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser("secret") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val\x2C secret);\n  }\n\n  if (opts.maxAge != null) {\n    var maxAge = opts.maxAge - 0\n\n    if (!isNaN(maxAge)) {\n      opts.expires = new Date(Date.now() + maxAge)\n      opts.maxAge = Math.floor(maxAge / 1000)\n    }\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie'\x2C cookie.serialize(name\x2C String(val)\x2C opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be "back"\x2C which redirects\n * to the _Referrer_ or _Referer_ headers or "/".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // "back" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location'\x2C encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`\x2C so\n * it will play nicely with mounted apps\x2C relative paths\x2C\n * `"back"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301\x2C 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url\x2C status): Use res.redirect(status\x2C url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain\x2Chtml} by default\n  this.format({\n    text: function(){\n      body = statuses.message[status] + '. Redirecting to ' + address\n    }\x2C\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses.message[status] + '. Redirecting to <a href="' + u + '">' + u + '</a></p>'\n    }\x2C\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length'\x2C Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set\x2C then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this\x2C field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically\x2C otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view\x2C options\x2C callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err\x2C str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view\x2C opts\x2C done);\n};\n\n// pipe the send file stream\nfunction sendfile(res\x2C file\x2C options\x2C callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR\x2C read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory'\x2C ondirectory);\n  file.on('end'\x2C onend);\n  file.on('error'\x2C onerror);\n  file.on('file'\x2C onfile);\n  file.on('stream'\x2C onstream);\n  onFinished(res\x2C onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers'\x2C function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k\x2C obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON\x2C like JSON.stringify\x2C but v8 optimized\x2C with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replacer\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value\x2C replacer\x2C spaces\x2C escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value\x2C replacer\x2C spaces)\n    : JSON.stringify(value);\n\n  if (escape && typeof json === 'string') {\n    json = json.replace(/[<>&]/g\x2C function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n
code-source-info,0x1117063a324,264,0,28014,C0O0C4O28014,,
code-creation,JS,10,371373,0x1117063b0fc,493, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\response.js:1:1,0x1117063a298,~
code-source-info,0x1117063b0fc
code-creation,Eval,10,372985,0x1117063dabc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\cookie-signature\\index.js:1:1,0x1117063d938,~
script-source,265,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\cookie-signature\\index.js,/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val\x2C secret){\n  if ('string' != typeof val) throw new TypeError("Cookie value must be provided as a string.");\n  if ('string' != typeof secret) throw new TypeError("Secret string must be provided.");\n  return val + '.' + crypto\n    .createHmac('sha256'\x2C secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/\x2C '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`\x2C\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val\x2C secret){\n  if ('string' != typeof val) throw new TypeError("Signed cookie string must be provided.");\n  if ('string' != typeof secret) throw new TypeError("Secret string must be provided.");\n  var str = val.slice(0\x2C val.lastIndexOf('.'))\n    \x2C mac = exports.sign(str\x2C secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n
code-source-info,0x1117063dabc,265,0,1230,C0O0C4O1230,,
code-creation,JS,10,373055,0x1117063dce4,48, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\cookie-signature\\index.js:1:1,0x1117063da30,~
code-source-info,0x1117063dce4,265,0,1230,C0O0C15O46C18O46C22O46C24O202C31O215C35O764C42O779C47O1229,,
code-creation,Eval,10,373699,0x1117063f6b4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\cookie\\index.js:1:1,0x1117063f500,~
script-source,266,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\cookie\\index.js,/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str\x2C options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('='\x2C index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';'\x2C index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';'\x2C eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index\x2C eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1\x2C endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1\x2C -1)\n      }\n\n      obj[key] = tryDecode(val\x2C dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo'\x2C 'bar'\x2C { httpOnly: true })\n *   => "foo=bar; httpOnly"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name\x2C val\x2C options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str\x2C decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n
code-source-info,0x1117063f6b4,266,0,5224,C0O0C4O5224,,
code-creation,JS,10,373879,0x1117063f9a4,75, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\cookie\\index.js:1:1,0x1117063f628,~
code-source-info,0x1117063f9a4,266,0,5224,C0O0C39O178C41O192C45O201C47O219C51O292C55O299C60O309C64O292C66O535C71O535C74O5223,,
code-creation,Eval,10,374454,0x37307a1bb04,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\vary\\index.js:1:1,0x37307a1b980,~
script-source,267,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\vary\\index.js,/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = "!" / "#" / "$" / "%" / "&" / "'" / "*"\n *               / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~"\n *               / DIGIT / ALPHA\n *               ; any VCHAR\x2C except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header\x2C field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing\x2C unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + '\x2C ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0\x2C len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* \x2C */\n        list.push(header.substring(start\x2C end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start\x2C end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res\x2C field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join('\x2C ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header\x2C field))) {\n    res.setHeader('Vary'\x2C val)\n  }\n}\n
code-source-info,0x37307a1bb04,267,0,2930,C0O0C4O2930,,
code-creation,JS,10,374562,0x37307a1bcbc,48, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\vary\\index.js:1:1,0x37307a1ba78,~
code-source-info,0x37307a1bcbc,267,0,2930,C0O0C22O128C24O143C28O157C35O172C39O525C44O525C47O2929,,
code-creation,Eval,10,374727,0x37307a1c684,6, :1:1,0x37307a1c4e0,~
script-source,268,<unknown>,(function anonymous(fn\x2Clog\x2Cdeprecate\x2Cmessage\x2Csite\n) {\n"use strict"\nreturn function (arg0\x2C arg1\x2C arg2) {log.call(deprecate\x2C message\x2C site)\nreturn fn.apply(this\x2C arguments)\n}\n})
code-source-info,0x37307a1c684,268,0,175,C0O0C5O175,,
code-creation,JS,10,374757,0x37307a1c764,30, :1:20,0x37307a1c5f8,~
code-source-info,0x37307a1c764,268,19,174,C0O19C25O67C29O172,,
code-creation,JS,10,374818,0x37307a1d514,13,get C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\index.js:121:23,0x3e8c8738bc0,~
code-source-info,0x37307a1d514,136,2009,2045,C0O2018C8O2025C12O2041,,
code-creation,JS,10,374872,0x37307a1d6bc,111,loadParser C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\index.js:131:21,0x3e8c8732840,~
code-source-info,0x37307a1d6bc,136,2115,2680,C0O2145C5O2152C9O2168C11O2200C13O2213C14O2273C47O2318C53O2327C58O2361C60O2389C66O2398C71O2431C73O2460C79O2469C84O2503C86O2538C92O2547C97O2587C99O2641C104O2669C110O2678,,
code-creation,Eval,10,375342,0x37307a1e63c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\json.js:1:1,0x37307a1e428,~
script-source,269,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\json.js,/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*([^\\x20\\x09\\x0a\\x0d])/ // eslint-disable-line no-control-regex\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body\x2C as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of "strict" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body\x2C first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body\x2C reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e\x2C {\n        message: e.message\x2C\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req\x2C res\x2C next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j'\x2C req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.slice(0\x2C 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415\x2C 'unsupported charset "' + charset.toUpperCase() + '"'\x2C {\n        charset: charset\x2C\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req\x2C res\x2C next\x2C parse\x2C debug\x2C {\n      encoding: charset\x2C\n      inflate: inflate\x2C\n      limit: limit\x2C\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str\x2C char) {\n  var index = str.indexOf(char)\n  var partial = index !== -1\n    ? str.substring(0\x2C index) + '#'\n    : ''\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e\x2C {\n      message: e.message.replace('#'\x2C char)\x2C\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  var match = FIRST_CHAR_REGEXP.exec(str)\n\n  return match\n    ? match[1]\n    : undefined\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error\x2C obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message\x2C obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req\x2C type))\n  }\n}\n
code-source-info,0x37307a1e63c,269,0,5012,C0O0C4O5012,,
code-creation,JS,10,375531,0x37307a1e99c,117, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\json.js:1:1,0x37307a1e5b0,~
code-source-info,0x37307a1e99c,269,0,5012,C0O0C40O198C43O198C47O198C49O233C52O233C56O233C58O275C61O275C65O275C67O310C70O310C78O326C82O310C84O358C87O358C91O358C93O390C96O390C100O390C102O438C104O453C108O815C113O815C116O5011,,
code-creation,Eval,10,376107,0x37307a1fbc4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\bytes\\index.js:1:1,0x37307a1fa10,~
script-source,270,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\bytes\\index.js,/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1\x2C\n  kb: 1 << 10\x2C\n  mb: 1 << 20\x2C\n  gb: 1 << 30\x2C\n  tb: Math.pow(1024\x2C 4)\x2C\n  pb: Math.pow(1024\x2C 5)\x2C\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string]\x2C\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value\x2C options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value\x2C options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative\x2C it is kept as such. If it is a float\x2C\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value\x2C options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp\x2C '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s\x2C i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp\x2C thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given\x2C it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val\x2C 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n
code-source-info,0x37307a1fbc4,270,0,3613,C0O0C4O3613,,
code-creation,JS,10,376235,0x37307a1fe5c,136, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\bytes\\index.js:1:1,0x37307a1fb38,~
code-source-info,0x37307a1fe5c,270,0,3613,C0O0C22O161C24O176C28O192C35O207C39O224C46O238C50O318C55O318C57O371C62O371C64O407C69O469C73O474C86O474C96O494C100O499C113O499C125O407C127O535C132O535C135O3612,,
code-creation,JS,13,377677,0x7ff62c523f00,3852,resolve node:path:162:10,0x22671c9a9d0,*
code-source-info,0x7ff62c523fx22671c9a5c8S0xfca8d37ab0S0x22671c9a870S0xfca8d3d9d0S0x22671c9a8c8
code-creation,Eval,10,378408,0x37307a225cc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\read.js:1:1,0x37307a223e8,~
script-source,271,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\read.js,/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar destroy = require('destroy')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar unpipe = require('unpipe')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req\x2C res\x2C next\x2C parse\x2C debug\x2C options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req\x2C debug\x2C opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415\x2C 'unsupported charset "' + encoding.toUpperCase() + '"'\x2C {\n      charset: encoding.toLowerCase()\x2C\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream\x2C opts\x2C function (error\x2C body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415\x2C 'unsupported charset "' + encoding.toUpperCase() + '"'\x2C {\n          charset: encoding.toLowerCase()\x2C\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400\x2C error)\n      }\n\n      // unpipe from stream and destroy\n      if (stream !== req) {\n        unpipe(req)\n        destroy(stream\x2C true)\n      }\n\n      // read off entire request\n      dump(req\x2C function onfinished () {\n        next(createError(400\x2C _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req\x2C res\x2C body\x2C encoding)\n      } catch (err) {\n        next(createError(403\x2C err\x2C {\n          body: body\x2C\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body\x2C encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400\x2C err\x2C {\n        body: str\x2C\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req\x2C debug\x2C inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding "%s"'\x2C encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415\x2C 'content encoding unsupported'\x2C {\n      encoding: encoding\x2C\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415\x2C 'unsupported content encoding "' + encoding + '"'\x2C {\n        encoding: encoding\x2C\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n\n/**\n * Dump the contents of a request.\n *\n * @param {object} req\n * @param {function} callback\n * @api private\n */\n\nfunction dump (req\x2C callback) {\n  if (onFinished.isFinished(req)) {\n    callback(null)\n  } else {\n    onFinished(req\x2C callback)\n    req.resume()\n  }\n}\n
code-source-info,0x37307a225cc,271,0,4325,C0O0C4O4325,,
code-creation,JS,10,378594,0x37307a227fc,93, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\read.js:1:1,0x37307a22540,~
code-source-info,0x37307a227fc,271,0,4325,C0O0C22O170C25O170C29O170C31O207C34O207C38O207C40O240C43O240C47O240C49O272C52O272C56O272C58O311C61O311C65O311C67O347C70O347C74O347C76O376C79O376C83O376C85O421C87O436C92O4324,,
code-creation,Eval,10,379606,0x37307a24cf4,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\raw-body\\index.js:1:1,0x37307a24af0,~
script-source,272,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\raw-body\\index.js,/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar asyncHooks = tryRequireAsyncHooks()\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415\x2C 'specified encoding unsupported'\x2C {\n      encoding: encoding\x2C\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream\x2C options\x2C callback) {\n  var done = callback\n  var opts = options || {}\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function\x2C if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length\x2C 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream\x2C encoding\x2C length\x2C limit\x2C wrap(done))\n  }\n\n  return new Promise(function executor (resolve\x2C reject) {\n    readStream(stream\x2C encoding\x2C length\x2C limit\x2C function onRead (err\x2C buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream\x2C encoding\x2C length\x2C limit\x2C callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused\x2C\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413\x2C 'request entity too large'\x2C {\n      expected: length\x2C\n      length: length\x2C\n      limit: limit\x2C\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2\x2C specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500\x2C 'stream encoding should not be set'\x2C {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\n    return done(createError(500\x2C 'stream is not readable'\x2C {\n      type: 'stream.not.readable'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted'\x2C onAborted)\n  stream.on('close'\x2C cleanup)\n  stream.on('data'\x2C onData)\n  stream.on('end'\x2C onEnd)\n  stream.on('error'\x2C onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null\x2C args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400\x2C 'request aborted'\x2C {\n      code: 'ECONNABORTED'\x2C\n      expected: length\x2C\n      length: length\x2C\n      received: received\x2C\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413\x2C 'request entity too large'\x2C {\n        limit: limit\x2C\n        received: received\x2C\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400\x2C 'request size did not match content length'\x2C {\n        expected: length\x2C\n        length: length\x2C\n        received: received\x2C\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null\x2C string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted'\x2C onAborted)\n    stream.removeListener('data'\x2C onData)\n    stream.removeListener('end'\x2C onEnd)\n    stream.removeListener('error'\x2C onEnd)\n    stream.removeListener('close'\x2C cleanup)\n  }\n}\n\n/**\n * Try to require async_hooks\n * @private\n */\n\nfunction tryRequireAsyncHooks () {\n  try {\n    return require('async_hooks')\n  } catch (e) {\n    return {}\n  }\n}\n\n/**\n * Wrap function with async resource\x2C if possible.\n * AsyncResource.bind static method backported.\n * @private\n */\n\nfunction wrap (fn) {\n  var res\n\n  // create anonymous resource\n  if (asyncHooks.AsyncResource) {\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\n  }\n\n  // incompatible node.js\n  if (!res || !res.runInAsyncScope) {\n    return fn\n  }\n\n  // return bound function\n  return res.runInAsyncScope.bind(res\x2C fn\x2C null)\n}\n
code-source-info,0x37307a24cf4,272,0,6902,C0O0C4O6902,,
code-creation,JS,10,379976,0x37307a250a4,111, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\raw-body\\index.js:1:1,0x37307a24c68,~
code-source-info,0x37307a250a4,272,0,6902,C0O0C43O205C46O205C48O240C54O240C58O240C60O275C66O275C70O275C72O310C78O310C82O310C84O345C90O345C94O345C96O403C98O418C102O510C107O510C110O6901,,
code-creation,JS,10,380054,0x37307a25364,27,tryRequireAsyncHooks C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\raw-body\\index.js:300:31,0x37307a24f48,~
code-source-info,0x37307a25364,272,6363,6445,C3O6380C9O6387C13O6409C25O6430C26O6439,,
new,MemoryChunk,0xa542e40000,262144
new,MemoryChunk,0x339fd100000,262144
new,MemoryChunk,0x1e2ad280000,262144
new,MemoryChunk,0x2daba000000,262144
code-creation,Eval,10,381891,0x37307a2748c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\index.js:1:1,0x37307a272f8,~
script-source,273,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\index.js,"use strict";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules "buffer" and "stream" explicitly.\nvar Buffer = require("safer-buffer").Buffer;\n\nvar bomHandling = require("./bom-handling")\x2C\n    iconv = module.exports;\n\n// All codecs and aliases are kept here\x2C keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '\ufffd';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str\x2C encoding\x2C options) {\n    str = "" + (str || ""); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding\x2C options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res\x2C trail]) : res;\n}\n\niconv.decode = function decode(buf\x2C encoding\x2C options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from("" + (buf || "")\x2C "binary"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding\x2C options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require("../encodings"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case "string": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case "object": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case "function": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions\x2C iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error("Encoding not recognized: '" + encoding + "' (searched as: '"+enc+"')");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g\x2C "");\n}\n\niconv.getEncoder = function getEncoder(encoding\x2C options) {\n    var codec = iconv.getCodec(encoding)\x2C\n        encoder = new codec.encoder(options\x2C codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder\x2C options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding\x2C options) {\n    var codec = iconv.getCodec(encoding)\x2C\n        decoder = new codec.decoder(options\x2C codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder\x2C options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(".").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require("./streams")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require("./extend-node")(iconv);\n}\n\nif ("\u0100" != "\\u0100") {\n    console.error("iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.");\n}\n
code-source-info,0x37307a2748c,273,0,5120,C0O0C4O5120,,
code-creation,JS,10,382153,0x37307a278ec,329, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\index.js:1:1,0x37307a27400,~
code-source-info,0x37307a278ec,273,0,5120,C0O0C9O173C15O173C20O196C24O173C26O224C32O224C36O224C38O270C42O263C44O422C48O438C52O487C57O512C61O519C66O547C70O570C77O583C81O879C88O892C92O1478C99O1499C103O1680C106O1705C110O1697C114O1713C117O1740C121O1732C125O1834C129O1856C133O1862C140O1877C144O3591C151O3619C155O3806C162O3823C166O4103C173O4120C177O4537C182O4552C185O4571C189O4579C195O4591C199O4599C204O4608C209O4614C211O4704C219O4704C225O4714C230O4719C234O4715C240O4732C241O4746C246O4750C253O4767C259O4771C264O4788C270O4788C278O4808C282O4867C288O4867C296O4891C300O4903C305O4911C310O4930C314O4938C322O4938C328O5119,,
code-creation,Eval,10,383099,0x37307a28a6c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\safer-buffer\\safer.js:1:1,0x37307a288d0,~
script-source,274,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\safer-buffer\\safer.js,/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value\x2C encodingOrOffset\x2C length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string\x2C Buffer\x2C ArrayBuffer\x2C Array\x2C or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value\x2C encodingOrOffset\x2C length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size\x2C fill\x2C encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value "' + size + '" is invalid for option "size"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill\x2C encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported\x2C so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n
code-source-info,0x37307a28a6c,274,0,2110,C0O0C4O2110,,
code-creation,JS,10,383201,0x37307a28d04,344, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\safer-buffer\\safer.js:1:1,0x37307a289e0,~
code-source-info,0x37307a28d04,274,0,2110,C0O0C5O72C8O72C13O110C17O103C19O130C21O155C34O148C47O179C52O179C59O200C61O211C63O219C70O243C75O257C77O268C79O287C82O279C89O143C93O308C95O321C102O338C115O331C128O350C131O362C136O362C143O383C145O394C147O402C154O427C159O450C161O461C166O480C169O472C176O326C180O495C188O521C192O512C196O543C202O557C207O566C211O577C215O562C220O587C224O598C228O1083C234O1094C238O1106C242O1655C251O1712C255O1720C263O1720C269O1737C273O1710C292O1913C298O1928C303O1970C313O1944C317O1997C323O2027C328O2063C332O2055C336O2087C338O2102C343O2109,,
tick,0x7ff6abe8e288,383856,0,0x0,5,0x7ff62c507c67,0x7ff62c5120f7,0x7ff62c512728,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x37307a2790c,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x37307a250f2,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x37307a22827,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x37307a1e9f3,0x7ff62c513148,0x7ff62c514058,0x7ff62c508ab8,0x7ff62c50f4ae,0x7ff62c50833e,0x7ff62c50850f,0x37307a1d6f1,0x37307a1d51c,0x3e8c87303f6,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872ef17,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3c570277a41,0x3c5702778bc,0x3e8c872b894,0x3c570274bcf,0x3c57026f150,0x3c57026e4f4,0x121eb123735,0x3e8c8729a6b,0x33d09cbd875
code-creation,Eval,10,383948,0x37307a2a4dc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\bom-handling.js:1:1,0x37307a2a378,~
script-source,275,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\bom-handling.js,"use strict";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder\x2C options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder\x2C options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n
code-source-info,0x37307a2a4dc,275,0,1109,C0O0C4O1109,,
code-creation,JS,10,384019,0x37307a2a8ac,85, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\bom-handling.js:1:1,0x37307a2a450,~
code-source-info,0x37307a2a8ac,275,0,1109,C0O0C15O29C17O29C19O40C21O59C25O199C34O215C38O378C47O392C51O524C53O541C57O709C66O725C70O1046C79O1060C84O1108,,
code-creation,Eval,10,384629,0x37307a2bb8c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\streams.js:1:1,0x37307a2b9f8,~
script-source,276,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\streams.js,"use strict";\n\nvar Buffer = require("buffer").Buffer\x2C\n    Transform = require("stream").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding\x2C options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding\x2C options)\x2C options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding\x2C options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding\x2C options)\x2C options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv\x2C options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings\x2C so we don't need to decode them.\n    Transform.call(this\x2C options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype\x2C {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk\x2C encoding\x2C done) {\n    if (typeof chunk != 'string')\n        return done(new Error("Iconv encoding stream needs strings as its input."));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error'\x2C cb);\n    this.on('data'\x2C function(chunk) { chunks.push(chunk); });\n    this.on('end'\x2C function() {\n        cb(null\x2C Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv\x2C options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this\x2C options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype\x2C {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk\x2C encoding\x2C done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error("Iconv decoding stream needs buffers as its input."));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res\x2C this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res\x2C this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error'\x2C cb);\n    this.on('data'\x2C function(chunk) { res += chunk; });\n    this.on('end'\x2C function() {\n        cb(null\x2C res);\n    });\n    return this;\n}\n\n
code-source-info,0x37307a2bb8c,276,0,3387,C0O0C4O3387,,
code-creation,JS,10,384819,0x37307a2c2b4,255, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\streams.js:1:1,0x37307a2bb00,~
code-source-info,0x37307a2c2b4,276,0,3387,C0O0C17O28C20O28C25O45C29O28C31O70C34O70C39O87C43O70C45O182C49O197C53O1138C56O1173C60O1180C68O1197C78O1227C85O1236C95O1180C101O1171C105O1266C108O1289C117O1310C121O1628C124O1651C133O1668C137O1843C140O1866C149O1884C153O2396C156O2431C160O2438C168O2455C178O2485C185O2494C195O2438C201O2429C205O2524C208O2547C217O2568C221O2900C224O2923C233O2940C237O3146C240O3169C249O3187C254O3386,,
code-creation,JS,10,384974,0x37307a2cc5c,84,module.exports C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\streams.js:8:26,0x37307a2bc70,~
code-source-info,0x37307a2cc5c,276,207,824,C0O207C9O256C16O275C20O420C27O439C31O584C35O606C39O646C46O675C50O705C57O734C61O764C69O804C74O814C78O779C83O823,,
code-creation,Eval,10,385420,0x37307a2dc14,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\extend-node.js:1:1,0x37307a2daa0,~
script-source,277,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\extend-node.js,"use strict";\nvar Buffer = require("buffer").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose\x2C as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error("ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node");\n            console.error("See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true\x2C 'utf8': true\x2C 'utf-8': true\x2C 'ascii': true\x2C 'binary': true\x2C \n            'base64': true\x2C 'ucs2': true\x2C 'ucs-2': true\x2C 'utf16le': true\x2C 'utf-16le': true\x2C\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding\x2C start\x2C end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this\x2C encoding\x2C start\x2C end);\n\n            // Otherwise\x2C use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start\x2C end)\x2C encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string\x2C offset\x2C length\x2C encoding) {\n            // Support both (string\x2C offset\x2C length\x2C encoding)\n            // and the legacy (string\x2C encoding\x2C offset\x2C length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this\x2C string\x2C offset\x2C length\x2C encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise\x2C use our encoding method.\n            var buf = iconv.encode(string\x2C encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this\x2C offset\x2C 0\x2C length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str\x2C encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this\x2C str\x2C encoding);\n\n            // Slow\x2C I know\x2C but we don't have a better way yet.\n            return iconv.encode(str\x2C encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding\x2C start\x2C end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this\x2C encoding\x2C start\x2C end);\n\n            // Otherwise\x2C use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start\x2C end)\x2C encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string\x2C offset\x2C length\x2C encoding) {\n            var _offset = offset\x2C _length = length\x2C _encoding = encoding;\n            // Support both (string\x2C offset\x2C length\x2C encoding)\n            // and the legacy (string\x2C encoding\x2C offset\x2C length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this\x2C string\x2C _offset\x2C _length\x2C _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise\x2C use our encoding method.\n            var buf = iconv.encode(string\x2C encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this\x2C offset\x2C 0\x2C length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc\x2C options) {\n                // Use our own decoder\x2C it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc\x2C options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error("require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n
code-source-info,0x37307a2dc14,277,0,8701,C0O0C4O8701,,
code-creation,JS,10,385711,0x37307a2ddcc,36, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\extend-node.js:1:1,0x37307a2db88,~
code-source-info,0x37307a2ddcc,277,0,8701,C0O0C9O27C15O27C20O44C24O27C26O212C30O227C35O8700,,
code-creation,JS,10,385792,0x37307a2e094,76,module.exports C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\iconv-lite\\lib\\extend-node.js:7:27,0x37307a2dc48,~
code-source-info,0x37307a2e094,277,238,8700,C0O238C9O267C10O267C12O511C20O559C35O567C41O592C44O581C48O548C52O610C59O636C63O7682C70O7712C75O8699,,
code-creation,Eval,10,386744,0x37307a3032c,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\raw.js:1:1,0x37307a30188,~
script-source,278,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\raw.js,/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req\x2C res\x2C next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j'\x2C req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req\x2C res\x2C next\x2C parse\x2C debug\x2C {\n      encoding: null\x2C\n      inflate: inflate\x2C\n      limit: limit\x2C\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req\x2C type))\n  }\n}\n
code-source-info,0x37307a3032c,278,0,1884,C0O0C4O1884,,
code-creation,JS,10,386839,0x37307a304f4,68, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\raw.js:1:1,0x37307a302a0,~
code-source-info,0x37307a304f4,278,0,1884,C0O0C16O152C19O152C23O152C25O181C28O181C36O197C40O181C42O228C45O228C49O228C51O260C54O260C58O260C60O308C62O323C67O1883,,
code-creation,JS,11,386958,0x7ff62c51e140,960,enabled C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js:176:17,0x2ce89f16ff0,^
code-source-info,0x7ff62c51e140,149,3913,4206,,,
code-creation,JS,11,386983,0x7ff62c51e540,236, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:489:25,0x2ce89f03378,^
code-source-info,0x7ff62c51e540,140,10843,11148,,,
code-creation,JS,11,387005,0x7ff62c51e680,548,maybeOverridePrepareStackTrace node:internal/errors:120:40,0xfca8d359d0,^
code-source-info,0x7ff62c51e680,10,3112,3835,,,
code-creation,JS,11,387032,0x7ff62c51e900,1140,forEachMimeType C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime-types\\index.js:158:52,0x2f1c1dfc818,^
code-source-info,0x7ff62c51e900,258,2937,3659,,,
code-creation,JS,11,387057,0x7ff62c51edc0,1212,prepareStackTrace node:internal/errors:90:27,0xfca8d34e60,^
code-source-info,0x7ff62c51edc0,10,2179,3068,,,
code-creation,JS,11,387072,0x7ff62c51f2c0,212,defineGetter C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\request.js:519:22,0x3d3e5721520,^
code-source-info,0x7ff62c51f2c0,251,12376,12504,,,
code-creation,Eval,10,388011,0x37307a31e94,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\serve-static\\index.js:1:1,0x37307a31ca0,~
script-source,279,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\serve-static\\index.js,/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root\x2C options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req\x2C res\x2C next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow'\x2C 'GET\x2C HEAD')\n      res.setHeader('Content-Length'\x2C '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req\x2C path\x2C opts)\n\n    // add directory handler\n    stream.on('directory'\x2C onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers'\x2C setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file'\x2C function onFile () {\n        // once file is determined\x2C always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error'\x2C function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title\x2C body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang="en">\\n' +\n    '<head>\\n' +\n    '<meta charset="utf-8">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting'\x2C 'Redirecting to <a href="' + escapeHtml(loc) + '">' +\n      escapeHtml(loc) + '</a>')\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type'\x2C 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length'\x2C Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy'\x2C "default-src 'none'")\n    res.setHeader('X-Content-Type-Options'\x2C 'nosniff')\n    res.setHeader('Location'\x2C loc)\n    res.end(doc)\n  }\n}\n
code-source-info,0x37307a31e94,279,0,4570,C0O0C4O4570,,
code-creation,JS,10,388179,0x37307a321e4,117, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\serve-static\\index.js:1:1,0x37307a31e08,~
code-source-info,0x37307a321e4,279,0,4570,C0O0C34O238C37O238C41O238C43O276C46O276C50O276C52O314C55O314C59O314C61O348C64O348C69O363C73O348C75O383C78O383C82O383C84O409C87O409C91O409C93O464C95O479C99O500C107O520C111O513C116O4569,,
code-creation,Eval,10,389000,0x37307a33dbc,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\text.js:1:1,0x37307a33bf8,~
script-source,280,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\text.js,/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req\x2C res\x2C next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j'\x2C req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req\x2C res\x2C next\x2C parse\x2C debug\x2C {\n      encoding: charset\x2C\n      inflate: inflate\x2C\n      limit: limit\x2C\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req\x2C type))\n  }\n}\n
code-source-info,0x37307a33dbc,280,0,2285,C0O0C4O2285,,
code-creation,JS,10,389100,0x37307a33fec,83, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\text.js:1:1,0x37307a33d30,~
code-source-info,0x37307a33fec,280,0,2285,C0O0C22O152C25O152C29O152C31O187C34O187C38O187C40O223C43O223C51O239C55O223C57O271C60O271C64O271C66O303C69O303C73O303C75O351C77O366C82O2284,,
code-creation,Eval,10,389823,0x37307a35154,5, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\urlencoded.js:1:1,0x37307a34f10,~
script-source,281,C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\urlencoded.js,/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req\x2C res\x2C next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j'\x2C req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415\x2C 'unsupported charset "' + charset.toUpperCase() + '"'\x2C {\n        charset: charset\x2C\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req\x2C res\x2C next\x2C parse\x2C debug\x2C {\n      debug: debug\x2C\n      encoding: charset\x2C\n      inflate: inflate\x2C\n      limit: limit\x2C\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body\x2C parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413\x2C 'too many parameters'\x2C {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100\x2C paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body\x2C {\n      allowPrototypes: true\x2C\n      arrayLimit: arrayLimit\x2C\n      depth: Infinity\x2C\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters\x2C stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body\x2C limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&'\x2C index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body\x2C parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413\x2C 'too many parameters'\x2C {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body\x2C undefined\x2C undefined\x2C { maxKeys: parameterLimit })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req\x2C type))\n  }\n}\n
code-source-info,0x37307a35154,281,0,5797,C0O0C4O5797,,
code-creation,JS,10,390026,0x37307a3557c,176, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\body-parser\\lib\\types\\urlencoded.js:1:1,0x37307a350c8,~
code-source-info,0x37307a3557c,281,0,5797,C0O0C50O198C56O198C60O198C62O233C68O233C72O233C74O275C80O275C84O275C86O310C92O310C100O326C104O310C106O369C112O369C120O384C124O369C126O411C132O411C136O411C138O443C144O443C148O443C150O491C152O506C156O571C160O578C167O578C172O571C175O5796,,
code-creation,JS,10,390529,0x37307a361bc,46, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\express.js:109:37,0x3e8c8730110,~
code-source-info,0x37307a361bc,135,2105,2406,C0O2105C9O2116C13O2123C26O2147C31O2164C39O2123C45O2405,,
code-creation,JS,10,390637,0x37307a36c94,169,createApplication C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\express.js:37:27,0x3e8c8730090,~
code-source-info,0x37307a36c94,135,722,1263,C0O722C5O739C9O739C11O806C24O830C31O806C36O851C51O851C56O936C59O950C63O957C73O964C78O980C85O1043C95O957C101O948C105O1114C108O1129C112O1136C122O1143C127O1159C134O1222C144O1136C150O1127C154O1236C157O1240C162O1240C166O1250C168O1261,,
code-creation,JS,10,390702,0x37307a36fa4,98,merge C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\merge-descriptors\\index.js:34:15,0x3e8c873e010,~
code-source-info,0x37307a36fa4,139,626,1214,C0O626C17O652C21O669C30O675C35O669C36O725C40O741C49O747C54O741C55O796C59O853C60O862C62O876C66O883C74O883C80O907C90O908C95O1201C97O1212,,
code-creation,JS,10,390754,0x37307a3714c,71,forEachOwnPropertyName C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\merge-descriptors\\index.js:48:74,0x37307a36ec8,~
code-source-info,0x37307a3714c,139,947,1196,C0O960C9O992C17O992C25O1042C26O1048C27O1100C31O1107C39O1107C46O1147C50O1154C64O1154C70O1195,,
code-creation,JS,11,390815,0x7ff62c51f3c0,388,forEachOwnPropertyName C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\merge-descriptors\\index.js:48:74,0x37307a36ec8,^
code-source-info,0x7ff62c51f3c0,139,947,1196,,,
code-creation,JS,11,390838,0x7ff62c51f580,292,isatty node:tty:42:16,0x2ce89f0af30,^
code-source-info,0x7ff62c51f580,144,1591,1685,,,
code-creation,JS,11,390853,0x7ff62c51f700,308,useColors C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js:75:19,0x2ce89f09898,^
code-source-info,0x7ff62c51f700,143,1865,1976,,,
code-creation,JS,11,390875,0x7ff62c51f880,600,init C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\node.js:235:15,0x2ce89f09aa8,^
code-source-info,0x7ff62c51f880,143,5724,5918,,,
code-creation,JS,11,390896,0x7ff62c51fb00,628,createDebug C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js:63:21,0x2ce89f16e98,^
code-source-info,0x7ff62c51fb00,149,1220,2957,,,
code-creation,JS,11,390914,0x7ff62c51fdc0,264,isignored C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:153:20,0x3e8c8736000,^
code-source-info,0x7ff62c51fdc0,137,2884,3095,,,
code-creation,JS,11,390946,0x7ff62c524f00,264,istraced C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:169:19,0x3e8c8736058,^
code-source-info,0x7ff62c524f00,137,3161,3380,,,
code-creation,JS,11,390967,0x7ff62c525040,856,depd C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\depd\\index.js:103:15,0x3e8c8735f28,^
code-source-info,0x7ff62c525040,137,1744,2308,,,
code-creation,JS,11,390985,0x7ff62c5253c0,340, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\express.js:109:37,0x3e8c8730110,^
code-source-info,0x7ff62c5253c0,135,2105,2406,,,
code-creation,JS,10,391118,0x37307a38b44,26,init C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:64:25,0x2ce89f02e00,~
code-source-info,0x37307a38b44,140,1438,1538,C0O1445C1O1456C5O1464C6O1477C10O1485C11O1499C15O1513C20O1513C25O1537,,
code-creation,JS,10,391223,0x37307a3915c,322,defaultConfiguration C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:77:57,0x2ce89f02e58,~
code-source-info,0x37307a3915c,140,1659,3237,C0O1676C4O1684C9O1688C18O1745C26O1745C31O1776C42O1776C48O1804C56O1804C62O1828C73O1828C79O1868C90O1868C96O1903C106O1903C112O1970C116O1977C121O1997C129O2007C134O1977C139O2083C145O2083C150O2125C163O2125C169O2674C173O2681C180O2681C185O2672C189O2732C191O2747C195O2782C200O2805C204O2798C208O2850C219O2850C225O2876C239O2889C244O2876C250O2915C261O2915C267O2958C269O2966C274O2995C282O2995C287O3024C291O3031C304O3073C315O3031C321O3236,,
code-creation,JS,10,391292,0x37307a3945c,14,enable C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:469:29,0x2ce89f032c8,~
code-source-info,0x37307a3945c,140,10523,10570,C0O10549C7O10549C13O10568,,
code-creation,JS,10,391353,0x37307a3966c,235,set C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:359:23,0x2ce89f03168,~
code-source-info,0x37307a3966c,140,8451,9387,C0O8451C2O8484C9O8491C14O8548C19O8578C23O8594C27O8601C31O8590C36O8620C39O8639C44O8639C52O8674C54O8689C57O8698C58O8714C62O8732C67O8732C73O8562C77O8768C78O8784C79O8792C91O8792C96O8854C103O8872C107O8912C133O8959C144O8974C149O8959C155O8999C157O9042C168O9065C173O9042C179O9097C181O9139C192O9161C197O9139C203O9229C207O9236C212O9256C220O9266C225O9236C230O9359C232O9373C234O9385,,
code-creation,JS,10,391459,0x37307a399e4,334,debug C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\debug\\src\\debug.js:65:17,0x2ce89f1ce08,~
code-source-info,0x37307a399e4,149,1251,2646,C0O1251C7O1277C12O1288C18O1297C19O1304C20O1321C24O1321C26O1372C30O1373C35O1372C38O1398C45O1406C49O1403C53O1429C58O1439C62O1449C69O1459C73O1475C78O1485C82O1497C84O1506C88O1578C92O1598C99O1578C104O1578C106O1624C108O1629C111O1636C115O1629C120O1657C125O1676C128O1665C132O1645C137O1611C141O1692C151O1710C160O1721C164O1710C169O1700C173O1732C177O1760C184O1818C187O1823C195O1823C200O1907C201O1907C203O1914C212O1928C216O1932C232O1932C238O1922C242O2505C247O2513C252O2524C263O2524C269O2559C274O2565C285O2580C291O2587C295O2595C300O2599C305O2604C309O2599C315O2624C326O2624C333O2645,,
code-creation,JS,10,391547,0x37307a39df4,86,exports.compileETag C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\utils.js:152:31,0x2773ccb7270,~
code-source-info,0x37307a39df4,212,3279,3630,C0O3300C6O3337C8O3348C9O3356C40O3409C43O3422C48O3435C50O3464C52O3496C55O3509C60O3521C62O3547C71O3603C77O3553C82O3547C83O3618C85O3628,,
code-creation,JS,10,391599,0x37307a3a094,84,compileQueryParser C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\utils.js:184:57,0x2773ccb7308,~
code-source-info,0x37307a3a094,212,3816,4217,C0O3837C6O3874C8O3885C9O3893C40O3948C43O3965C48O3978C50O4007C53O4029C55O4063C58O4100C60O4126C69O4190C75O4132C80O4126C81O4205C83O4215,,
code-creation,JS,10,391656,0x37307a3a404,105,exports.compileTrust C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\utils.js:217:32,0x2773ccb7360,~
code-source-info,0x37307a3a404,212,4398,4852,C0O4398C9O4408C15O4439C17O4450C18O4454C26O4510C30O4543C31O4551C37O4620C41O4660C42O4668C48O4741C51O4751C59O4751C65O4768C75O4769C80O4745C82O4814C87O4831C94O4839C99O4831C104O4850,,
code-creation,JS,10,391733,0x37307a3a71c,227,compile C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\proxy-addr\\index.js:84:18,0x3d3e5710208,~
code-source-info,0x37307a3a71c,246,1340,1948,C0O1350C4O1366C13O1372C18O1366C19O1430C25O1465C34O1474C45O1488C49O1498C54O1498C61O1530C66O1530C73O1553C82O1559C87O1553C88O1623C90O1636C94O1628C99O1655C101O1666C106O1675C110O1687C115O1697C120O1712C128O1712C136O1742C138O1797C143O1812C148O1828C153O1835C158O1841C167O1849C171O1855C176O1855C182O1835C188O1881C192O1888C202O1645C207O1610C211O1899C217O1919C222O1906C226O1946,,
code-creation,JS,10,391797,0x37307a3a954,57,compileRangeSubnets C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\proxy-addr\\index.js:122:30,0x3d3e5710260,~
code-source-info,0x37307a3a954,246,2071,2238,C0O2100C4O2114C11O2100C17O2138C19O2149C23O2143C28O2168C33O2205C37O2186C41O2184C45O2158C50O2125C54O2217C56O2236,,
code-creation,JS,10,391837,0x37307a3aa84,44,compileTrust C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\proxy-addr\\index.js:139:23,0x3d3e57102b8,~
code-source-info,0x37307a3aa84,246,2368,2586,C0O2457C5O2466C6O2477C17O2509C26O2547C30O2523C39O2560C43O2584,,
code-creation,JS,10,391986,0x37307a3b13c,100,app.<computed> C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:490:25,0x3d3e571ed38,~
code-source-info,0x37307a3b13c,140,10877,11145,C0O10877C2O10889C7O10900C12O10923C19O10930C24O10983C29O10983C34O10993C35O11010C40O11010C44O11046C49O11054C54O11054C60O11071C62O11076C66O11085C76O11104C84O11104C91O11085C97O11129C99O11141,,
code-creation,JS,10,392044,0x37307a3b39c,127,lazyrouter C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:144:37,0x2ce89f02ee0,~
code-source-info,0x37307a3b39c,140,3496,3779,C0O3513C6O3528C9O3547C14O3582C22O3582C31O3636C39O3636C50O3543C55O3541C59O3680C64O3688C72O3703C80O3703C86O3692C91O3688C96O3738C101O3746C109O3761C114O3761C120O3746C126O3778,,
code-creation,JS,10,392085,0x37307a3b5cc,20,enabled C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:438:31,0x2ce89f03218,~
code-source-info,0x37307a3b5cc,140,10041,10091,C0O10055C4O10075C9O10075C15O10062C19O10089,,
code-creation,JS,10,392138,0x37307a3b78c,97,module.exports C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:43:38,0x2ce89f2c610,~
code-source-info,0x37307a3b78c,158,931,1317,C0O931C11O956C17O1084C30O1084C35O1117C39O1131C43O1139C48O1154C52O1162C55O1190C59O1183C63O1207C66O1233C70O1226C74O1248C77O1269C81O1262C85O1279C90O1292C94O1301C96O1315,,
code-creation,JS,10,392242,0x37307a3bd54,69,query C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\middleware\\query.js:25:32,0x395cad7bcd0,~
code-source-info,0x37307a3bd54,176,414,883,C0O414C5O439C12O439C17O439C19O477C24O480C28O477C30O490C36O531C38O542C40O557C41O562C43O582C50O613C56O683C60O704C64O719C68O881,,
code-creation,JS,10,392289,0x37307a3bea4,54,module.exports C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\utils-merge\\index.js:16:36,0x395cad76dc8,~
code-source-info,0x37307a3bea4,173,284,379,C0O294C6O303C8O328C21O321C34O321C35O339C37O349C40O346C47O312C51O368C53O377,,
code-creation,JS,10,392369,0x37307a3c154,250,use C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:439:25,0x2ce89f2c860,~
code-source-info,0x37307a3c
code-creation,JS,10,392439,0x37307a3c39c,35,arrayFlatten C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\array-flatten\\array-flatten.js:58:23,0x2ce89f2fa88,~
code-source-info,0x37307a3c39c,160,1067,1194,C0O1086C5O1111C8O1133C11O1118C16O1143C17O1151C20O1175C29O1158C34O1192,,
code-creation,JS,10,392478,0x37307a3c4b4,65,flattenForever C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\array-flatten\\array-flatten.js:37:25,0x2ce89f2fa30,~
code-source-info,0x37307a3c4b4,160,683,904,C0O716C2O729C6O721C11O760C13O765C17O774C21O784C26O784C33O808C36O808C43O864C48O864C53O738C58O703C62O889C64O902,,
code-creation,JS,10,392546,0x37307a3c784,143,Layer C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\layer.js:33:15,0x2ce89f30848,~
code-source-info,0x37307a3c784,161,500,951,C0O524C2O535C7O560C21O567C26O596C27O604C33O604C38O639C44O657C46O669C50O692C61O687C65O717C66O729C70O744C71O754C75O769C78O794C81O810C94O783C99O781C103O856C110O880C113O873C117O895C124O920C129O936C137O913C142O950,,
code-creation,JS,10,392683,0x37307a3cf04,607,pathtoRegexp C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\path-to-regexp\\index.js:28:22,0x2ce89f31df8,~
code-source-info,0x37307a3cf
code-creation,RegExp,3,392811,0x7ff62c4e7b00,896,([\\/\\.])
code-creation,RegExp,3,392858,0x7ff62c4e7ec0,2868,(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?
code-creation,JS,10,392921,0x37307a3d5f4,14,exports.init C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\middleware\\init.js:28:24,0x395cad7ad08,~
code-source-info,0x37307a3d5f4,175,510,850,C0O510C9O519C13O848,,
code-creation,RegExp,3,392971,0x7ff62c4e8a40,952,\\((?!\\?)
code-creation,JS,10,393007,0x37307a3d78c,86,route C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:502:29,0x2ce89f2c8b8,~
code-source-info,0x37307a3d78c,158,11770,12019,C0O11793C5O11793C11O11825C14O11835C19O11863C27O11895C35O11928C40O11937C45O11937C56O11825C62O11954C64O11966C68O11983C73O11989C78O11989C83O12004C85O12017,,
code-creation,JS,10,393048,0x37307a3d904,30,Route C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\route.js:43:15,0x2ce89f2dc28,~
code-source-info,0x37307a3d904,159,677,818,C0O688C2O698C6O708C8O719C12O728C18O728C23O798C24O811C29O817,,
code-creation,JS,10,393136,0x37307a3dc7c,184,Route.<computed> C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\route.js:202:37,0x395cad75330,~
code-source-info,0x37307a3dc7c,159,3723,4275,C0O3723C2O3745C12O3759C17O3759C23O3745C28O3795C30O3810C34O3800C39O3844C41O3851C45O3863C49O3918C54O3927C59O3927C65O3959C70O3968C76O3977C82O4024C86O4039C92O4045C97O4039C98O4076C109O4104C114O4076C119O4129C132O4129C138O4159C140O4172C144O4194C153O4210C157O4229C162O4235C167O4235C172O3819C177O3782C181O4259C183O4271,,
code-creation,JS,10,393222,0x37307a3df4c,33,listen C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:633:29,0x2ce89f034a8,~
code-source-info,0x37307a3df4c,140,14101,14196,C0O14101C2O14121C5O14126C10O14126C16O14162C21O14169C26O14169C32O14194,,
code-creation,JS,10,393257,0x37307a3e04c,19,createServer node:http:63:22,0x2ce89f34b08,~
code-source-info,0x37307a3e04c,164,2242,2315,C0O2271C13O2278C18O2312,,
code-creation,JS,10,393376,0x37307a3e2d4,244,Server node:_http_server:520:16,0x395cad6fc08,~
code-source-info,0x37307a3e2d4,172,18172,19388,C0O18204C2O18215C7O18235C18O18242C23O18279C24O18285C30O18327C33O18359C41O18393C46O18421C54O18462C62O18462C67O18508C70O18525C75O18525C81O18549C86O18553C91O18560C101O18622C117O18665C125O18714C133O18767C141O18560C147O18790C151O18823C159O18823C165O19089C166O19112C170O19131C181O19131C187O19177C198O19177C204O19225C205O19238C209O19246C210O19267C214O19278C215O19304C219O19314C221O19319C226O19337C229O19370C234O19337C238O19335C243O19387,,
code-creation,JS,10,393481,0x1e2ad2a0c4c,359,Server node:net:1707:16,0x3ba13650f18,~
code-source-info,0x1e2ad2a0c4c
code-creation,JS,10,393613,0x1e2ad2a114c,440,storeHTTPOptions node:_http_server:430:26,0x395cad6fb00,~
code-source-info,0x1e2ad2a114c
code-creation,JS,10,393839,0x1e2ad2a210c,76,parseUniqueHeadersOption node:_http_outgoing:680:34,0x395cad64b28,~
code-source-info,0x1e2ad2a210c,170,21747,21996,C0O21762C5O21767C11O21797C12O21809C13O21835C18O21835C24O21871C29O21895C31O21900C33O21900C38O21924C45O21928C50O21962C54O21928C59O21924C64O21906C69O21882C73O21979C75O21993,,
code-creation,JS,10,393985,0x1e2ad2a4b04,720,Server.listen node:net:1953:35,0x3ba13652758,~
code-source-info,0x1e2ad2a4b
code-creation,JS,10,394130,0x1e2ad2a511c,183,normalizeArgs node:net:272:23,0x3ba136506b8,~
code-source-info,0x1e2ad2a511c,88,7360,8097,C0O7376C2O7395C8O7402C13O7416C18O7439C20O7443C24O7465C28O7478C30O7489C31O7513C32O7517C36O7539C38O7546C48O7629C55O7655C58O7659C64O7710C66O7723C72O7784C74O7797C78O7819C85O7826C92O7844C99O7871C101O7890C104O7884C108O7933C112O7940C115O7927C119O7949C123O7984C132O7991C143O8020C152O8027C161O8036C170O8046C172O8050C176O8072C180O8083C182O8094,,
code-creation,JS,10,394182,0x1e2ad2a52f4,18,isPipeName node:net:190:20,0x3ba13650450,~
code-source-info,0x1e2ad2a52f4,88,5280,5346,C0O5289C9O5321C17O5343,,
code-creation,JS,10,394255,0x1e2ad2a54dc,39,once node:events:652:44,0x22671c8bd88,~
code-source-info,0x1e2ad2a54dc,23,19609,19727,C0O19631C3O19631C7O19666C24O19675C30O19666C36O19712C38O19724,,
code-creation,JS,10,394293,0x1e2ad2a568c,60,_onceWrap node:events:638:19,0x22671c8bd30,~
code-source-info,0x1e2ad2a568c,23,19168,19397,C0O19212C6O19236C12O19247C18O19255C24O19261C31O19292C34O19304C39O19304C45O19320C47O19337C51O19352C53O19365C57O19379C59O19394,,
code-creation,JS,10,394352,0x1e2ad2a59c4,19,_getMaxListeners node:events:420:26,0x22671c8b120,~
code-source-info,0x1e2ad2a59c4,23,12522,12650,C0O12543C6O12577C9O12597C13O12617C14O12633C18O12647,,
code-creation,JS,10,394383,0x1e2ad2a5ab4,23,toNumber node:net:1764:18,0x3ba13650f70,~
code-source-info,0x1e2ad2a5ab4,88,50235,50283,C0O50241C5O50253C12O50264C22O50281,,
code-creation,JS,10,394410,0x1e2ad2a5bac,18,getFlags node:net:161:18,0x3ba13650348,~
code-source-info,0x1e2ad2a5bac,88,4626,4705,C0O4642C7O4669C10O4682C17O4702,,
code-creation,JS,10,394452,0x1e2ad2a5d54,128,addServerAbortSignalOption node:net:1690:36,0x3ba13650ec0,~
code-source-info,0x1e2ad2a5d54,88,48036,48459,C0O48036C9O48057C16O48068C25O48099C26O48106C27O48115C34O48143C42O48115C47O48181C52O48222C57O48269C63O48285C68O48293C73O48293C80O48350C87O48363C92O48363C99O48405C102O48410C114O48435C116O48434C120O48410C127O48458,,
code-creation,JS,10,394513,0x1e2ad2a5f5c,129, node:internal/validators:418:38,0xfca8d3df30,~
code-source-info,0x1e2ad2a5f5c,15,12335,12705,C24O12383C44O12481C47O12481C52O12506C58O12514C65O12531C70O12542C72O12548C75O12537C86O12570C92O12595C99O12605C101O12624C117O12630C122O12624C123O12686C125O12698C128O12702,,
code-creation,JS,10,394572,0x1e2ad2a62a4,195,listenInCluster node:net:1910:25,0x3ba13651128,~
code-source-info,0x1e2ad2a62a4,88,54584,55864,C0O54584C38O54692C43O54722C51O54749C59O54759C63O54757C67O54784C72O54796C80O54809C82O54988C85O54995C108O54995C113O55058C114O55065C115O55096C122O55112C128O55132C134O55156C140O55178C146O55187C152O55199C162O55216C169O55290C174O55298C188O55298C194O55863,,
code-creation,JS,10,394672,0x1e2ad2a65cc,437,setupListenHandle node:net:1825:27,0x3ba13651020,~
code-source-info,0x1e2ad2a65cc
code-creation,JS,10,394755,0x1e2ad2a6944,10, node:net:45:63,0x3ba136512d8,~
code-source-info,0x1e2ad2a6944,88,1656,1683,C0O1669C2O1675C9O1682,,
code-creation,JS,10,394834,0x1e2ad2a6b94,379,createServerHandle node:net:1767:28,0x3ba13650fc8,~
code-source-info,0x1e2ad2a6b
code-creation,JS,10,395691,0x1e2ad2a70c4,113,defaultTriggerAsyncIdScope node:internal/async_hooks:455:36,0xfca8d3cd00,~
script-source,14,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x2C\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x2C\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(kGenericUserError);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  registerDestroyHook(promise\x2C asyncId);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  const promiseHooks = require('internal/promise_hooks');\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x2C\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x2C\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x1e2ad2a70c4,14,16090,16561,C0O16090C11O16128C15O16180C22O16180C28O16198C29O16316C36O16332C38O16331C42O16360C50O16400C57O16447C64O16447C82O16486C90O16526C112O16560,,
code-creation,JS,10,396995,0x1e2ad2a875c,371,nextTick node:internal/process/task_queues:103:18,0x22671c969e0,~
script-source,28,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x2C\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x2C\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x2C\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x2C\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x2C\x0d\n};\x0d\n
code-source-info,0x1e2ad2a875c
code-creation,JS,10,397352,0x1e2ad2a8fcc,21,get node:internal/bootstrap/node:100:8,0xfca8d3a030,~
code-source-info,0x1e2ad2a8fcc,12,3932,3981,C0O3944C9O3958C11O3957C17O3968C20O3974,,
code-creation,JS,10,397411,0x1e2ad2a90c4,15,isEmpty node:internal/fixed_queue:95:10,0x22671c97ea0,~
script-source,30,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n      tail.next = null;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x1e2ad2a90c4,30,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,JS,10,397625,0x1e2ad2a957c,13,isEmpty node:internal/fixed_queue:67:10,0x22671c97bc8,~
code-source-info,0x1e2ad2a957c,30,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,JS,10,397658,0x1e2ad2a966c,25,setHasTickScheduled node:internal/process/task_queues:51:29,0x22671c968d8,~
code-source-info,0x1e2ad2a966c,28,1137,1197,C0O1150C7O1159C12O1180C19O1178C24O1196,,
code-creation,JS,10,397700,0x1e2ad2a9764,23,newAsyncId node:internal/async_hooks:417:20,0xfca8d3cba0,~
code-source-info,0x1e2ad2a9764,14,14984,15037,C0O14992C7O15017C16O15032C22O15034,,
code-creation,JS,10,397734,0x1e2ad2a988c,33,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0xfca8d3cc50,~
code-source-info,0x1e2ad2a988c,14,15459,15722,C0O15497C7O15513C9O15512C13O15608C14O15634C19O15644C24O15667C26O15666C29O15686C30O15690C32O15719,,
code-creation,JS,10,397800,0x1e2ad2a9ab4,13,initHooksExist node:internal/async_hooks:478:24,0xfca8d3ce08,~
code-source-info,0x1e2ad2a9ab4,14,16722,16756,C0O16730C5O16746C8O16737C12O16753,,
code-creation,JS,10,397843,0x1e2ad2a9b9c,16,hasHooks node:internal/async_hooks:470:18,0xfca8d3cd58,~
code-source-info,0x1e2ad2a9b9c,14,16582,16630,C0O16593C7O16617C12O16623C15O16627,,
code-creation,JS,10,397893,0x1e2ad2a9ca4,59,push node:internal/fixed_queue:99:7,0x22671c97ef8,~
code-source-info,0x1e2ad2a9ca4,30,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,JS,10,397944,0x1e2ad2a9ddc,24,isFull node:internal/fixed_queue:71:9,0x22671c97c20,~
code-source-info,0x1e2ad2a9ddc,30,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,JS,10,397993,0x1e2ad2a9ee4,37,push node:internal/fixed_queue:75:7,0x22671c97c78,~
code-source-info,0x1e2ad2a9ee4,30,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,JS,10,398169,0x1e2ad2aa094,320,processTicksAndRejections node:internal/process/task_queues:67:35,0x22671c96988,~
code-source-info,0x1e2ad2aa
code-creation,JS,10,398342,0x1e2ad2aa364,48,shift node:internal/fixed_queue:108:8,0x22671c97f50,~
code-source-info,0x1e2ad2aa364,30,4061,4320,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4273C41O4283C45O4303C47O4315,,
code-creation,JS,10,398414,0x1e2ad2aa4ac,54,shift node:internal/fixed_queue:80:8,0x22671c97cd0,~
code-source-info,0x1e2ad2aa4ac,30,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,JS,10,398469,0x1e2ad2aa5e4,42,emitBeforeScript node:internal/async_hooks:509:26,0xfca8d3cfc0,~
code-source-info,0x1e2ad2aa5e4,14,17423,17579,C0O17464C12O17464C17O17522C22O17535C25O17526C31O17550C36O17550C41O17578,,
code-creation,JS,10,398516,0x1e2ad2aa734,162,pushAsyncContext node:internal/async_hooks:539:26,0xfca8d3d120,~
code-source-info,0x1e2ad2aa734,14,18097,18652,C0O18153C7O18171C9O18170C13O18189C20O18223C24O18238C26O18249C32O18256C35O18267C40O18283C44O18253C49O18296C54O18303C59O18346C60O18350C63O18361C70O18384C76O18391C81O18407C83O18406C86O18389C90O18430C93O18441C100O18464C103O18468C112O18491C114O18490C117O18473C121O18512C127O18530C132O18543C136O18550C144O18585C148O18599C156O18632C161O18651,,
code-creation,JS,10,398585,0x1e2ad2aa914,21,emitListeningNT node:net:1903:25,0x3ba136510d0,~
code-source-info,0x1e2ad2aa914,88,54459,54554,C0O54514C6O54533C14O54533C20O54553,,
code-creation,JS,10,398645,0x1e2ad2aaba4,322,arrayClone node:events:894:20,0x22671c8c138,~
code-source-info,0x1e2ad2aaba4,23,26266,26731,C0O26408C42O26431C50O26442C62O26450C71O26455C72O26469C80O26480C92O26488C104O26496C113O26501C114O26515C122O26526C134O26534C146O26542C158O26550C167O26555C168O26569C176O26580C188O26588C200O26596C212O26604C224O26612C233O26617C234O26631C242O26642C254O26650C266O26658C278O26666C290O26674C302O26682C311O26687C312O26696C317O26703C321O26728,,
code-creation,JS,10,398719,0x1e2ad2aae4c,76,setupConnectionsTracking node:_http_server:503:34,0x395cad6fb58,~
code-source-info,0x1e2ad2aae4c,172,17571,18019,C0O17611C2O17621C4O17620C9O17643C14O17668C17O17664C22O17662C26O17891C28O17896C33O17933C39O17962C44O17962C50O17979C55O17933C61O18007C66O18008C70O17926C75O18018,,
code-creation,JS,10,398835,0x1e2ad2ab0fc,221,setInterval node:timers:210:21,0x22671c997c0,~
script-source,32,node:timers,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  MathTrunc\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SymbolDispose\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst binding = internalBinding('timers');\x0d\nconst {\x0d\n  immediateInfo\x2C\x0d\n} = binding;\x0d\nconst L = require('internal/linkedlist');\x0d\nconst {\x0d\n  async_id_symbol\x2C\x0d\n  Timeout\x2C\x0d\n  Immediate\x2C\x0d\n  decRefCount\x2C\x0d\n  immediateInfoFields: {\x0d\n    kCount\x2C\x0d\n    kRefCount\x2C\x0d\n  }\x2C\x0d\n  kRefed\x2C\x0d\n  kHasPrimitive\x2C\x0d\n  getTimerDuration\x2C\x0d\n  timerListMap\x2C\x0d\n  timerListQueue\x2C\x0d\n  immediateQueue\x2C\x0d\n  active\x2C\x0d\n  unrefActive\x2C\x0d\n  insert\x2C\x0d\n} = require('internal/timers');\x0d\nconst {\x0d\n  promisify: { custom: customPromisify }\x2C\x0d\n  deprecate\x2C\x0d\n} = require('internal/util');\x0d\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { validateFunction } = require('internal/validators');\x0d\n\x0d\nlet timersPromises;\x0d\n\x0d\nconst {\x0d\n  destroyHooksExist\x2C\x0d\n  // The needed emit*() functions.\x0d\n  emitDestroy\x2C\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\n// This stores all the known timer async ids to allow users to clearTimeout and\x0d\n// clearInterval using those ids\x2C to match the spec and the rest of the web\x0d\n// platform.\x0d\nconst knownTimersById = { __proto__: null };\x0d\n\x0d\n// Remove a timer. Cancels the timeout and resets the relevant timer properties.\x0d\nfunction unenroll(item) {\x0d\n  if (item._destroyed)\x0d\n    return;\x0d\n\x0d\n  item._destroyed = true;\x0d\n\x0d\n  if (item[kHasPrimitive])\x0d\n    delete knownTimersById[item[async_id_symbol]];\x0d\n\x0d\n  // Fewer checks may be possible\x2C but these cover everything.\x0d\n  if (destroyHooksExist() && item[async_id_symbol] !== undefined)\x0d\n    emitDestroy(item[async_id_symbol]);\x0d\n\x0d\n  L.remove(item);\x0d\n\x0d\n  // We only delete refed lists because unrefed ones are incredibly likely\x0d\n  // to come from http and be recreated shortly after.\x0d\n  // TODO: Long-term this could instead be handled by creating an internal\x0d\n  // clearTimeout that makes it clear that the list should not be deleted.\x0d\n  // That function could then be used by http and other similar modules.\x0d\n  if (item[kRefed]) {\x0d\n    // Compliment truncation during insert().\x0d\n    const msecs = MathTrunc(item._idleTimeout);\x0d\n    const list = timerListMap[msecs];\x0d\n    if (list !== undefined && L.isEmpty(list)) {\x0d\n      debug('unenroll: list empty');\x0d\n      timerListQueue.removeAt(list.priorityQueuePosition);\x0d\n      delete timerListMap[list.msecs];\x0d\n    }\x0d\n\x0d\n    decRefCount();\x0d\n  }\x0d\n\x0d\n  // If active is called later\x2C then we want to make sure not to insert again\x0d\n  item._idleTimeout = -1;\x0d\n}\x0d\n\x0d\n// Make a regular object able to act as a timer by setting some properties.\x0d\n// This function does not start the timer\x2C see `active()`.\x0d\n// Using existing objects as timers slightly reduces object overhead.\x0d\nfunction enroll(item\x2C msecs) {\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // If this item was already in a list somewhere\x0d\n  // then we should unenroll it from that\x0d\n  if (item._idleNext) unenroll(item);\x0d\n\x0d\n  L.init(item);\x0d\n  item._idleTimeout = msecs;\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Schedules the execution of a one-time `callback`\x0d\n * after `after` milliseconds.\x0d\n * @param {Function} callback\x0d\n * @param {number} [after]\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Timeout}\x0d\n */\x0d\nfunction setTimeout(callback\x2C after\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n    case 2:\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 4:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 5; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 2] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  const timeout = new Timeout(callback\x2C after\x2C args\x2C false\x2C true);\x0d\n  insert(timeout\x2C timeout._idleTimeout);\x0d\n\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(setTimeout\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!timersPromises)\x0d\n      timersPromises = require('timers/promises');\x0d\n    return timersPromises.setTimeout;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Cancels a timeout.\x0d\n * @param {Timeout | string | number} timer\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearTimeout(timer) {\x0d\n  if (timer && timer._onTimeout) {\x0d\n    timer._onTimeout = null;\x0d\n    unenroll(timer);\x0d\n    return;\x0d\n  }\x0d\n  if (typeof timer === 'number' || typeof timer === 'string') {\x0d\n    const timerInstance = knownTimersById[timer];\x0d\n    if (timerInstance !== undefined) {\x0d\n      timerInstance._onTimeout = null;\x0d\n      unenroll(timerInstance);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Schedules repeated execution of `callback`\x0d\n * every `repeat` milliseconds.\x0d\n * @param {Function} callback\x0d\n * @param {number} [repeat]\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Timeout}\x0d\n */\x0d\nfunction setInterval(callback\x2C repeat\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n    case 2:\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 4:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 5; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 2] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  const timeout = new Timeout(callback\x2C repeat\x2C args\x2C true\x2C true);\x0d\n  insert(timeout\x2C timeout._idleTimeout);\x0d\n\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Cancels an interval.\x0d\n * @param {Timeout | string | number} timer\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearInterval(timer) {\x0d\n  // clearTimeout and clearInterval can be used to clear timers created from\x0d\n  // both setTimeout and setInterval\x2C as specified by HTML Living Standard:\x0d\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\x0d\n  clearTimeout(timer);\x0d\n}\x0d\n\x0d\nTimeout.prototype.close = function() {\x0d\n  clearTimeout(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nTimeout.prototype[SymbolDispose] = function() {\x0d\n  clearTimeout(this);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Coerces a `Timeout` to a primitive.\x0d\n * @returns {number}\x0d\n */\x0d\nTimeout.prototype[SymbolToPrimitive] = function() {\x0d\n  const id = this[async_id_symbol];\x0d\n  if (!this[kHasPrimitive]) {\x0d\n    this[kHasPrimitive] = true;\x0d\n    knownTimersById[id] = this;\x0d\n  }\x0d\n  return id;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Schedules the immediate execution of `callback`\x0d\n * after I/O events' callbacks.\x0d\n * @param {Function} callback\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Immediate}\x0d\n */\x0d\nfunction setImmediate(callback\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n      break;\x0d\n    case 2:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 4; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 1] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  return new Immediate(callback\x2C args);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(setImmediate\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!timersPromises)\x0d\n      timersPromises = require('timers/promises');\x0d\n    return timersPromises.setImmediate;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Cancels an immediate.\x0d\n * @param {Immediate} immediate\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearImmediate(immediate) {\x0d\n  if (!immediate || immediate._destroyed)\x0d\n    return;\x0d\n\x0d\n  immediateInfo[kCount]--;\x0d\n  immediate._destroyed = true;\x0d\n\x0d\n  if (immediate[kRefed] && --immediateInfo[kRefCount] === 0) {\x0d\n    // We need to use the binding as the receiver for fast API calls.\x0d\n    binding.toggleImmediateRef(false);\x0d\n  }\x0d\n  immediate[kRefed] = null;\x0d\n\x0d\n  if (destroyHooksExist() && immediate[async_id_symbol] !== undefined) {\x0d\n    emitDestroy(immediate[async_id_symbol]);\x0d\n  }\x0d\n\x0d\n  immediate._onImmediate = null;\x0d\n\x0d\n  immediateQueue.remove(immediate);\x0d\n}\x0d\n\x0d\nImmediate.prototype[SymbolDispose] = function() {\x0d\n  clearImmediate(this);\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  setTimeout\x2C\x0d\n  clearTimeout\x2C\x0d\n  setImmediate\x2C\x0d\n  clearImmediate\x2C\x0d\n  setInterval\x2C\x0d\n  clearInterval\x2C\x0d\n  _unrefActive: deprecate(\x0d\n    unrefActive\x2C\x0d\n    'timers._unrefActive() is deprecated.' +\x0d\n    ' Please use timeout.refresh() instead.'\x2C\x0d\n    'DEP0127')\x2C\x0d\n  active: deprecate(\x0d\n    active\x2C\x0d\n    'timers.active() is deprecated. Please use timeout.refresh() instead.'\x2C\x0d\n    'DEP0126')\x2C\x0d\n  unenroll: deprecate(\x0d\n    unenroll\x2C\x0d\n    'timers.unenroll() is deprecated. Please use clearTimeout instead.'\x2C\x0d\n    'DEP0096')\x2C\x0d\n  enroll: deprecate(\x0d\n    enroll\x2C\x0d\n    'timers.enroll() is deprecated. Please use setTimeout instead.'\x2C\x0d\n    'DEP0095')\x2C\x0d\n};\x0d\n
code-source-info,0x1e2ad2ab0fc,32,6038,6705,C0O6038C2O6080C10O6080C15O6129C17O6132C19O6159C54O6221C56O6248C65O6256C74O6270C76O6297C85O6305C94O6311C103O6325C105O6353C114O6361C123O6367C132O6373C139O6392C142O6413C146O6401C151O6514C153O6521C159O6537C162O6526C166O6422C171O6387C175O6558C177O6591C197O6591C203O6643C208O6667C213O6643C218O6687C220O6702,,
code-creation,JS,10,399315,0x1e2ad2ac0ec,180,Timeout node:internal/timers:165:14,0xfca8d3af38,~
script-source,13,node:internal/timers,'use strict';\x0d\n\x0d\n// HOW and WHY the timers implementation works the way it does.\x0d\n//\x0d\n// Timers are crucial to Node.js. Internally\x2C any TCP I/O connection creates a\x0d\n// timer so that we can time out of connections. Additionally\x2C many user\x0d\n// libraries and applications also use timers. As such there may be a\x0d\n// significantly large amount of timeouts scheduled at any given time.\x0d\n// Therefore\x2C it is very important that the timers implementation is performant\x0d\n// and efficient.\x0d\n//\x0d\n// Note: It is suggested you first read through the lib/internal/linkedlist.js\x0d\n// linked list implementation\x2C since timers depend on it extensively. It can be\x0d\n// somewhat counter-intuitive at first\x2C as it is not actually a class. Instead\x2C\x0d\n// it is a set of helpers that operate on an existing object.\x0d\n//\x0d\n// In order to be as performant as possible\x2C the architecture and data\x0d\n// structures are designed so that they are optimized to handle the following\x0d\n// use cases as efficiently as possible:\x0d\n\x0d\n// - Adding a new timer. (insert)\x0d\n// - Removing an existing timer. (remove)\x0d\n// - Handling a timer timing out. (timeout)\x0d\n//\x0d\n// Whenever possible\x2C the implementation tries to make the complexity of these\x0d\n// operations as close to constant-time as possible.\x0d\n// (So that performance is not impacted by the number of scheduled timers.)\x0d\n//\x0d\n// Object maps are kept which contain linked lists keyed by their duration in\x0d\n// milliseconds.\x0d\n//\x0d\n/* eslint-disable node-core/non-ascii-character */\x0d\n//\x0d\n// \u2554\u2550\u2550\u2550\u2550 > Object Map\x0d\n// \u2551\x0d\n// \u2560\u2550\u2550\x0d\n// \u2551 lists: { '40': { }\x2C '320': { etc } } (keys of millisecond duration)\x0d\n// \u255a\u2550\u2550          \u250c\u2500\u2500\u2500\u2500\u2518\x0d\n//              \u2502\x0d\n// \u2554\u2550\u2550          \u2502\x0d\n// \u2551 TimersList { _idleNext: { }\x2C _idlePrev: (self) }\x0d\n// \u2551         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\x0d\n// \u2551    \u2554\u2550\u2550  \u2502                              ^\x0d\n// \u2551    \u2551    { _idleNext: { }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\x0d\n// \u2551    \u2551      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\x0d\n// \u2551    \u2551      \u2502                                  ^\x0d\n// \u2551    \u2551      { _idleNext: { etc }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\x0d\n// \u2560\u2550\u2550  \u2560\u2550\u2550\x0d\n// \u2551    \u2551\x0d\n// \u2551    \u255a\u2550\u2550\u2550\u2550 >  Actual JavaScript timeouts\x0d\n// \u2551\x0d\n// \u255a\u2550\u2550\u2550\u2550 > Linked List\x0d\n//\x0d\n/* eslint-enable node-core/non-ascii-character */\x0d\n//\x0d\n// With this\x2C virtually constant-time insertion (append)\x2C removal\x2C and timeout\x0d\n// is possible in the JavaScript layer. Any one list of timers is able to be\x0d\n// sorted by just appending to it because all timers within share the same\x0d\n// duration. Therefore\x2C any timer added later will always have been scheduled to\x0d\n// timeout later\x2C thus only needing to be appended.\x0d\n// Removal from an object-property linked list is also virtually constant-time\x0d\n// as can be seen in the lib/internal/linkedlist.js implementation.\x0d\n// Timeouts only need to process any timers currently due to expire\x2C which will\x0d\n// always be at the beginning of the list for reasons stated above. Any timers\x0d\n// after the first one encountered that does not yet need to timeout will also\x0d\n// always be due to timeout at a later time.\x0d\n//\x0d\n// Less-than constant time operations are thus contained in two places:\x0d\n// The PriorityQueue \u2014 an efficient binary heap implementation that does all\x0d\n// operations in worst-case O(log n) time \u2014 which manages the order of expiring\x0d\n// Timeout lists and the object map lookup of a specific list by the duration of\x0d\n// timers within (or creation of a new list). However\x2C these operations combined\x0d\n// have shown to be trivial in comparison to other timers architectures.\x0d\n\x0d\nconst {\x0d\n  MathMax\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst binding = internalBinding('timers');\x0d\nconst {\x0d\n  immediateInfo\x2C\x0d\n  timeoutInfo\x2C\x0d\n} = binding;\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  // The needed emit*() functions.\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\n// Symbols for storing async id state.\x0d\nconst async_id_symbol = Symbol('asyncId');\x0d\nconst trigger_async_id_symbol = Symbol('triggerId');\x0d\n\x0d\nconst kHasPrimitive = Symbol('kHasPrimitive');\x0d\n\x0d\nconst {\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateNumber\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst L = require('internal/linkedlist');\x0d\nconst PriorityQueue = require('internal/priority_queue');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\n// *Must* match Environment::ImmediateInfo::Fields in src/env.h.\x0d\nconst kCount = 0;\x0d\nconst kRefCount = 1;\x0d\nconst kHasOutstanding = 2;\x0d\n\x0d\n// Timeout values > TIMEOUT_MAX are set to 1.\x0d\nconst TIMEOUT_MAX = 2 ** 31 - 1;\x0d\n\x0d\nlet timerListId = NumberMIN_SAFE_INTEGER;\x0d\n\x0d\nconst kRefed = Symbol('refed');\x0d\n\x0d\nlet nextExpiry = Infinity;\x0d\n// timeoutInfo is an Int32Array that contains the reference count of Timeout\x0d\n// objects at index 0. This is a TypedArray so that GetActiveResourcesInfo() in\x0d\n// `src/node_process_methods.cc` is able to access this value without crossing\x0d\n// the JS-C++ boundary\x2C which is slow at the time of writing.\x0d\ntimeoutInfo[0] = 0;\x0d\n\x0d\n// This is a priority queue with a custom sorting function that first compares\x0d\n// the expiry times of two lists and if they're the same then compares their\x0d\n// individual IDs to determine which list was created first.\x0d\nconst timerListQueue = new PriorityQueue(compareTimersLists\x2C setPosition);\x0d\n\x0d\n// Object map containing linked lists of timers\x2C keyed and sorted by their\x0d\n// duration in milliseconds.\x0d\n//\x0d\n// - key = time in milliseconds\x0d\n// - value = linked list\x0d\nconst timerListMap = { __proto__: null };\x0d\n\x0d\nfunction initAsyncResource(resource\x2C type) {\x0d\n  const asyncId = resource[async_id_symbol] = newAsyncId();\x0d\n  const triggerAsyncId =\x0d\n    resource[trigger_async_id_symbol] = getDefaultTriggerAsyncId();\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\nclass Timeout {\x0d\n  // Timer constructor function.\x0d\n  // The entire prototype is defined in lib/timers.js\x0d\n  constructor(callback\x2C after\x2C args\x2C isRepeat\x2C isRefed) {\x0d\n    after *= 1; // Coalesce to number or NaN\x0d\n    if (!(after >= 1 && after <= TIMEOUT_MAX)) {\x0d\n      if (after > TIMEOUT_MAX) {\x0d\n        process.emitWarning(`${after} does not fit into` +\x0d\n                            ' a 32-bit signed integer.' +\x0d\n                            '\\nTimeout duration was set to 1.'\x2C\x0d\n                            'TimeoutOverflowWarning');\x0d\n      }\x0d\n      after = 1; // Schedule on next tick\x2C follows browser behavior\x0d\n    }\x0d\n\x0d\n    this._idleTimeout = after;\x0d\n    this._idlePrev = this;\x0d\n    this._idleNext = this;\x0d\n    this._idleStart = null;\x0d\n    // This must be set to null first to avoid function tracking\x0d\n    // on the hidden class\x2C revisit in V8 versions after 6.2\x0d\n    this._onTimeout = null;\x0d\n    this._onTimeout = callback;\x0d\n    this._timerArgs = args;\x0d\n    this._repeat = isRepeat ? after : null;\x0d\n    this._destroyed = false;\x0d\n\x0d\n    if (isRefed)\x0d\n      incRefCount();\x0d\n    this[kRefed] = isRefed;\x0d\n    this[kHasPrimitive] = false;\x0d\n\x0d\n    initAsyncResource(this\x2C 'Timeout');\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  refresh() {\x0d\n    if (this[kRefed])\x0d\n      active(this);\x0d\n    else\x0d\n      unrefActive(this);\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kRefed]) {\x0d\n      this[kRefed] = false;\x0d\n      if (!this._destroyed)\x0d\n        decRefCount();\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (!this[kRefed]) {\x0d\n      this[kRefed] = true;\x0d\n      if (!this._destroyed)\x0d\n        incRefCount();\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  hasRef() {\x0d\n    return this[kRefed];\x0d\n  }\x0d\n}\x0d\n\x0d\nclass TimersList {\x0d\n  constructor(expiry\x2C msecs) {\x0d\n    this._idleNext = this; // Create the list with the linkedlist properties to\x0d\n    this._idlePrev = this; // Prevent any unnecessary hidden class changes.\x0d\n    this.expiry = expiry;\x0d\n    this.id = timerListId++;\x0d\n    this.msecs = msecs;\x0d\n    this.priorityQueuePosition = null;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// A linked list for storing `setImmediate()` requests\x0d\nclass ImmediateList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n  }\x0d\n\x0d\n  // Appends an item to the end of the linked list\x2C adjusting the current tail's\x0d\n  // next pointer and the item's previous pointer where applicable\x0d\n  append(item) {\x0d\n    if (this.tail !== null) {\x0d\n      this.tail._idleNext = item;\x0d\n      item._idlePrev = this.tail;\x0d\n    } else {\x0d\n      this.head = item;\x0d\n    }\x0d\n    this.tail = item;\x0d\n  }\x0d\n\x0d\n  // Removes an item from the linked list\x2C adjusting the pointers of adjacent\x0d\n  // items and the linked list's head or tail pointers as necessary\x0d\n  remove(item) {\x0d\n    if (item._idleNext) {\x0d\n      item._idleNext._idlePrev = item._idlePrev;\x0d\n    }\x0d\n\x0d\n    if (item._idlePrev) {\x0d\n      item._idlePrev._idleNext = item._idleNext;\x0d\n    }\x0d\n\x0d\n    if (item === this.head)\x0d\n      this.head = item._idleNext;\x0d\n    if (item === this.tail)\x0d\n      this.tail = item._idlePrev;\x0d\n\x0d\n    item._idleNext = null;\x0d\n    item._idlePrev = null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create a single linked list instance only once at startup\x0d\nconst immediateQueue = new ImmediateList();\x0d\n\x0d\nfunction incRefCount() {\x0d\n  if (timeoutInfo[0]++ === 0) {\x0d\n    // We need to use the binding as the receiver for fast API calls.\x0d\n    binding.toggleTimerRef(true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction decRefCount() {\x0d\n  if (--timeoutInfo[0] === 0) {\x0d\n    // We need to use the binding as the receiver for fast API calls.\x0d\n    binding.toggleTimerRef(false);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Schedule or re-schedule a timer.\x0d\n// The item must have been enroll()'d first.\x0d\nfunction active(item) {\x0d\n  insertGuarded(item\x2C true);\x0d\n}\x0d\n\x0d\n// Internal APIs that need timeouts should use `unrefActive()` instead of\x0d\n// `active()` so that they do not unnecessarily keep the process open.\x0d\nfunction unrefActive(item) {\x0d\n  insertGuarded(item\x2C false);\x0d\n}\x0d\n\x0d\n// The underlying logic for scheduling or re-scheduling a timer.\x0d\n//\x0d\n// Appends a timer onto the end of an existing timers list\x2C or creates a new\x0d\n// list if one does not already exist for the specified timeout duration.\x0d\nfunction insertGuarded(item\x2C refed\x2C start) {\x0d\n  const msecs = item._idleTimeout;\x0d\n  if (msecs < 0 || msecs === undefined)\x0d\n    return;\x0d\n\x0d\n  insert(item\x2C msecs\x2C start);\x0d\n\x0d\n  const isDestroyed = item._destroyed;\x0d\n  if (isDestroyed || !item[async_id_symbol]) {\x0d\n    item._destroyed = false;\x0d\n    initAsyncResource(item\x2C 'Timeout');\x0d\n  }\x0d\n\x0d\n  if (isDestroyed) {\x0d\n    if (refed)\x0d\n      incRefCount();\x0d\n  } else if (refed === !item[kRefed]) {\x0d\n    if (refed)\x0d\n      incRefCount();\x0d\n    else\x0d\n      decRefCount();\x0d\n  }\x0d\n  item[kRefed] = refed;\x0d\n}\x0d\n\x0d\n// We need to use the binding as the receiver for fast API calls.\x0d\nfunction insert(item\x2C msecs\x2C start = binding.getLibuvNow()) {\x0d\n  // Truncate so that accuracy of sub-millisecond timers is not assumed.\x0d\n  msecs = MathTrunc(msecs);\x0d\n  item._idleStart = start;\x0d\n\x0d\n  // Use an existing list if there is one\x2C otherwise we need to make a new one.\x0d\n  let list = timerListMap[msecs];\x0d\n  if (list === undefined) {\x0d\n    debug('no %d list was found in insert\x2C creating a new one'\x2C msecs);\x0d\n    const expiry = start + msecs;\x0d\n    timerListMap[msecs] = list = new TimersList(expiry\x2C msecs);\x0d\n    timerListQueue.insert(list);\x0d\n\x0d\n    if (nextExpiry > expiry) {\x0d\n      // We need to use the binding as the receiver for fast API calls.\x0d\n      binding.scheduleTimer(msecs);\x0d\n      nextExpiry = expiry;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  L.append(list\x2C item);\x0d\n}\x0d\n\x0d\nfunction setUnrefTimeout(callback\x2C after) {\x0d\n  // Type checking identical to setTimeout()\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const timer = new Timeout(callback\x2C after\x2C undefined\x2C false\x2C false);\x0d\n  insert(timer\x2C timer._idleTimeout);\x0d\n\x0d\n  return timer;\x0d\n}\x0d\n\x0d\n// Type checking used by timers.enroll() and Socket#setTimeout()\x0d\nfunction getTimerDuration(msecs\x2C name) {\x0d\n  validateNumber(msecs\x2C name);\x0d\n  if (msecs < 0 || !NumberIsFinite(msecs)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'a non-negative finite number'\x2C msecs);\x0d\n  }\x0d\n\x0d\n  // Ensure that msecs fits into signed int32\x0d\n  if (msecs > TIMEOUT_MAX) {\x0d\n    process.emitWarning(`${msecs} does not fit into a 32-bit signed integer.` +\x0d\n                        `\\nTimer duration was truncated to ${TIMEOUT_MAX}.`\x2C\x0d\n                        'TimeoutOverflowWarning');\x0d\n    return TIMEOUT_MAX;\x0d\n  }\x0d\n\x0d\n  return msecs;\x0d\n}\x0d\n\x0d\nfunction compareTimersLists(a\x2C b) {\x0d\n  const expiryDiff = a.expiry - b.expiry;\x0d\n  if (expiryDiff === 0) {\x0d\n    if (a.id < b.id)\x0d\n      return -1;\x0d\n    if (a.id > b.id)\x0d\n      return 1;\x0d\n  }\x0d\n  return expiryDiff;\x0d\n}\x0d\n\x0d\nfunction setPosition(node\x2C pos) {\x0d\n  node.priorityQueuePosition = pos;\x0d\n}\x0d\n\x0d\nfunction getTimerCallbacks(runNextTicks) {\x0d\n  // If an uncaught exception was thrown during execution of immediateQueue\x2C\x0d\n  // this queue will store all remaining Immediates that need to run upon\x0d\n  // resolution of all error handling (if process is still alive).\x0d\n  const outstandingQueue = new ImmediateList();\x0d\n\x0d\n  function processImmediate() {\x0d\n    const queue = outstandingQueue.head !== null ?\x0d\n      outstandingQueue : immediateQueue;\x0d\n    let immediate = queue.head;\x0d\n\x0d\n    // Clear the linked list early in case new `setImmediate()`\x0d\n    // calls occur while immediate callbacks are executed\x0d\n    if (queue !== outstandingQueue) {\x0d\n      queue.head = queue.tail = null;\x0d\n      immediateInfo[kHasOutstanding] = 1;\x0d\n    }\x0d\n\x0d\n    let prevImmediate;\x0d\n    let ranAtLeastOneImmediate = false;\x0d\n    while (immediate !== null) {\x0d\n      if (ranAtLeastOneImmediate)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneImmediate = true;\x0d\n\x0d\n      // It's possible for this current Immediate to be cleared while executing\x0d\n      // the next tick queue above\x2C which means we need to use the previous\x0d\n      // Immediate's _idleNext which is guaranteed to not have been cleared.\x0d\n      if (immediate._destroyed) {\x0d\n        outstandingQueue.head = immediate = prevImmediate._idleNext;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // TODO(RaisinTen): Destroy and unref the Immediate after _onImmediate()\x0d\n      // gets executed\x2C just like how Timeouts work.\x0d\n      immediate._destroyed = true;\x0d\n\x0d\n      immediateInfo[kCount]--;\x0d\n      if (immediate[kRefed])\x0d\n        immediateInfo[kRefCount]--;\x0d\n      immediate[kRefed] = null;\x0d\n\x0d\n      prevImmediate = immediate;\x0d\n\x0d\n      const asyncId = immediate[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C immediate[trigger_async_id_symbol]\x2C immediate);\x0d\n\x0d\n      try {\x0d\n        const argv = immediate._argv;\x0d\n        if (!argv)\x0d\n          immediate._onImmediate();\x0d\n        else\x0d\n          immediate._onImmediate(...argv);\x0d\n      } finally {\x0d\n        immediate._onImmediate = null;\x0d\n\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n\x0d\n        outstandingQueue.head = immediate = immediate._idleNext;\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n\x0d\n    if (queue === outstandingQueue)\x0d\n      outstandingQueue.head = null;\x0d\n    immediateInfo[kHasOutstanding] = 0;\x0d\n  }\x0d\n\x0d\n\x0d\n  function processTimers(now) {\x0d\n    debug('process timer lists %d'\x2C now);\x0d\n    nextExpiry = Infinity;\x0d\n\x0d\n    let list;\x0d\n    let ranAtLeastOneList = false;\x0d\n    while ((list = timerListQueue.peek()) != null) {\x0d\n      if (list.expiry > now) {\x0d\n        nextExpiry = list.expiry;\x0d\n        return timeoutInfo[0] > 0 ? nextExpiry : -nextExpiry;\x0d\n      }\x0d\n      if (ranAtLeastOneList)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneList = true;\x0d\n      listOnTimeout(list\x2C now);\x0d\n    }\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  function listOnTimeout(list\x2C now) {\x0d\n    const msecs = list.msecs;\x0d\n\x0d\n    debug('timeout callback %d'\x2C msecs);\x0d\n\x0d\n    let ranAtLeastOneTimer = false;\x0d\n    let timer;\x0d\n    while ((timer = L.peek(list)) != null) {\x0d\n      const diff = now - timer._idleStart;\x0d\n\x0d\n      // Check if this loop iteration is too early for the next timer.\x0d\n      // This happens if there are more timers scheduled for later in the list.\x0d\n      if (diff < msecs) {\x0d\n        list.expiry = MathMax(timer._idleStart + msecs\x2C now + 1);\x0d\n        list.id = timerListId++;\x0d\n        timerListQueue.percolateDown(1);\x0d\n        debug('%d list wait because diff is %d'\x2C msecs\x2C diff);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (ranAtLeastOneTimer)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneTimer = true;\x0d\n\x0d\n      // The actual logic for when a timeout happens.\x0d\n      L.remove(timer);\x0d\n\x0d\n      const asyncId = timer[async_id_symbol];\x0d\n\x0d\n      if (!timer._onTimeout) {\x0d\n        if (!timer._destroyed) {\x0d\n          timer._destroyed = true;\x0d\n\x0d\n          if (timer[kRefed])\x0d\n            timeoutInfo[0]--;\x0d\n\x0d\n          if (destroyHooksExist())\x0d\n            emitDestroy(asyncId);\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      emitBefore(asyncId\x2C timer[trigger_async_id_symbol]\x2C timer);\x0d\n\x0d\n      let start;\x0d\n      if (timer._repeat) {\x0d\n        // We need to use the binding as the receiver for fast API calls.\x0d\n        start = binding.getLibuvNow();\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        const args = timer._timerArgs;\x0d\n        if (args === undefined)\x0d\n          timer._onTimeout();\x0d\n        else\x0d\n          ReflectApply(timer._onTimeout\x2C timer\x2C args);\x0d\n      } finally {\x0d\n        if (timer._repeat && timer._idleTimeout !== -1) {\x0d\n          timer._idleTimeout = timer._repeat;\x0d\n          insert(timer\x2C timer._idleTimeout\x2C start);\x0d\n        } else if (!timer._idleNext && !timer._idlePrev && !timer._destroyed) {\x0d\n          timer._destroyed = true;\x0d\n\x0d\n          if (timer[kRefed])\x0d\n            timeoutInfo[0]--;\x0d\n\x0d\n          if (destroyHooksExist())\x0d\n            emitDestroy(asyncId);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n\x0d\n    // If `L.peek(list)` returned nothing\x2C the list was either empty or we have\x0d\n    // called all of the timer timeouts.\x0d\n    // As such\x2C we can remove the list from the object map and\x0d\n    // the PriorityQueue.\x0d\n    debug('%d list empty'\x2C msecs);\x0d\n\x0d\n    // The current list may have been removed and recreated since the reference\x0d\n    // to `list` was created. Make sure they're the same instance of the list\x0d\n    // before destroying.\x0d\n    if (list === timerListMap[msecs]) {\x0d\n      delete timerListMap[msecs];\x0d\n      timerListQueue.shift();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nclass Immediate {\x0d\n  constructor(callback\x2C args) {\x0d\n    this._idleNext = null;\x0d\n    this._idlePrev = null;\x0d\n    this._onImmediate = callback;\x0d\n    this._argv = args;\x0d\n    this._destroyed = false;\x0d\n    this[kRefed] = false;\x0d\n\x0d\n    initAsyncResource(this\x2C 'Immediate');\x0d\n\x0d\n    this.ref();\x0d\n    immediateInfo[kCount]++;\x0d\n\x0d\n    immediateQueue.append(this);\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kRefed] === false) {\x0d\n      this[kRefed] = true;\x0d\n\x0d\n      if (immediateInfo[kRefCount]++ === 0) {\x0d\n        // We need to use the binding as the receiver for fast API calls.\x0d\n        binding.toggleImmediateRef(true);\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kRefed] === true) {\x0d\n      this[kRefed] = false;\x0d\n      if (--immediateInfo[kRefCount] === 0) {\x0d\n        // We need to use the binding as the receiver for fast API calls.\x0d\n        binding.toggleImmediateRef(false);\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  hasRef() {\x0d\n    return !!this[kRefed];\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  TIMEOUT_MAX\x2C\x0d\n  kTimeout: Symbol('timeout')\x2C // For hiding Timeouts on other internals.\x0d\n  async_id_symbol\x2C\x0d\n  trigger_async_id_symbol\x2C\x0d\n  Timeout\x2C\x0d\n  Immediate\x2C\x0d\n  kRefed\x2C\x0d\n  kHasPrimitive\x2C\x0d\n  initAsyncResource\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x2C\x0d\n  immediateQueue\x2C\x0d\n  getTimerCallbacks\x2C\x0d\n  immediateInfoFields: {\x0d\n    kCount\x2C\x0d\n    kRefCount\x2C\x0d\n    kHasOutstanding\x2C\x0d\n  }\x2C\x0d\n  active\x2C\x0d\n  unrefActive\x2C\x0d\n  insert\x2C\x0d\n  timerListMap\x2C\x0d\n  timerListQueue\x2C\x0d\n  decRefCount\x2C\x0d\n  incRefCount\x2C\x0d\n};\x0d\n
code-source-info,0x1e2ad2ac0ec,13,6107,7172,C0O6157C7O6203C9O6215C16O6232C18O6229C23O6255C25O6267C27O6265C32O6291C35O6299C42O6314C52O6340C58O6399C65O6299C71O6538C75O6614C77O6632C81O6646C83O6661C87O6674C89O6689C93O6702C94O6718C98O6859C99O6875C103O6888C105O6904C109O6921C111O6937C115O6950C120O6965C127O6963C131O6995C132O7011C136O7027C140O7047C143O7047C146O7067C148O7072C153O7080C157O7096C159O7101C163O7116C167O7132C173O7132C179O7171,,
tick,0x7ffe2c1bfab3,400698,0,0x0,3,0x7ff6abdd9b30,0x1e2ad2ab1c1,0x1e2ad2aae83,0x22671c8b3ed,0x1e2ad2aa922,0x1e2ad2aa107
code-creation,JS,10,400877,0x1e2ad2adb9c,45,incRefCount node:internal/timers:305:21,0xfca8d3b3d0,~
code-source-info,0x1e2ad2adb9c,13,9727,9878,C0O9735C16O9753C21O9756C26O9841C31O9849C38O9849C44O9877,,
code-creation,JS,10,400968,0x1e2ad2add64,76,initAsyncResource node:internal/timers:155:27,0xfca8d3aee0,~
code-source-info,0x1e2ad2add64,13,5728,5986,C0O5766C2O5775C7O5794C10O5794C14O5792C21O5839C23O5848C28O5875C31O5875C35O5873C42O5906C47O5910C52O5933C69O5933C75O5985,,
code-creation,JS,10,401058,0x1e2ad2adff4,167,insert node:internal/timers:361:16,0xfca8d3b588,~
code-source-info,0x1e2ad2adff4,13,11262,12007,C12O11284C15O11292C20O11292C29O11386C34O11394C39O11415C41O11431C45O11537C52O11549C56O11561C58O11592C66O11592C71O11680C73O11686C77O11700C82O11733C93O11729C99O11720C103O11765C108O11780C113O11780C118O11801C125O11816C130O11908C135O11916C140O11916C145O11945C147O11956C149O11983C154O11985C159O11985C166O12006,,
code-creation,JS,10,401161,0x1e2ad2ae1dc,10, node:internal/timers:120:65,0xfca8d3ab70,~
code-source-info,0x1e2ad2ae1dc,13,4504,4531,C0O4517C2O4523C9O4530,,
code-creation,JS,10,401209,0x1e2ad2ae2fc,48,TimersList node:internal/timers:241:14,0xfca8d3b148,~
code-source-info,0x1e2ad2ae2fc,13,7971,8273,C0O7994C2O8009C6O8075C8O8090C12O8152C14O8164C18O8179C27O8200C31O8187C35O8209C37O8220C41O8234C42O8261C47O8272,,
code-creation,JS,10,401312,0x1e2ad2ae714,63,insert node:internal/priority_queue:26:9,0x22671c845e0,~
script-source,20,node:internal/priority_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// The PriorityQueue is a basic implementation of a binary heap that accepts\x0d\n// a custom sorting function via its constructor. This function is passed\x0d\n// the two nodes to compare\x2C similar to the native Array#sort. Crucially\x0d\n// this enables priority queues that are based on a comparison of more than\x0d\n// just a single criteria.\x0d\n\x0d\nmodule.exports = class PriorityQueue {\x0d\n  #compare = (a\x2C b) => a - b;\x0d\n  #heap = new Array(64);\x0d\n  #setPosition;\x0d\n  #size = 0;\x0d\n\x0d\n  constructor(comparator\x2C setPosition) {\x0d\n    if (comparator !== undefined)\x0d\n      this.#compare = comparator;\x0d\n    if (setPosition !== undefined)\x0d\n      this.#setPosition = setPosition;\x0d\n  }\x0d\n\x0d\n  insert(value) {\x0d\n    const heap = this.#heap;\x0d\n    const pos = ++this.#size;\x0d\n    heap[pos] = value;\x0d\n\x0d\n    if (heap.length === pos)\x0d\n      heap.length *= 2;\x0d\n\x0d\n    this.percolateUp(pos);\x0d\n  }\x0d\n\x0d\n  peek() {\x0d\n    return this.#heap[1];\x0d\n  }\x0d\n\x0d\n  peekBottom() {\x0d\n    return this.#heap[this.#size];\x0d\n  }\x0d\n\x0d\n  percolateDown(pos) {\x0d\n    const compare = this.#compare;\x0d\n    const setPosition = this.#setPosition;\x0d\n    const heap = this.#heap;\x0d\n    const size = this.#size;\x0d\n    const item = heap[pos];\x0d\n\x0d\n    while (pos * 2 <= size) {\x0d\n      let childIndex = pos * 2 + 1;\x0d\n      if (childIndex > size || compare(heap[pos * 2]\x2C heap[childIndex]) < 0)\x0d\n        childIndex = pos * 2;\x0d\n      const child = heap[childIndex];\x0d\n      if (compare(item\x2C child) <= 0)\x0d\n        break;\x0d\n      if (setPosition !== undefined)\x0d\n        setPosition(child\x2C pos);\x0d\n      heap[pos] = child;\x0d\n      pos = childIndex;\x0d\n    }\x0d\n    heap[pos] = item;\x0d\n    if (setPosition !== undefined)\x0d\n      setPosition(item\x2C pos);\x0d\n  }\x0d\n\x0d\n  percolateUp(pos) {\x0d\n    const heap = this.#heap;\x0d\n    const compare = this.#compare;\x0d\n    const setPosition = this.#setPosition;\x0d\n    const item = heap[pos];\x0d\n\x0d\n    while (pos > 1) {\x0d\n      const parent = heap[pos / 2 | 0];\x0d\n      if (compare(parent\x2C item) <= 0)\x0d\n        break;\x0d\n      heap[pos] = parent;\x0d\n      if (setPosition !== undefined)\x0d\n        setPosition(parent\x2C pos);\x0d\n      pos = pos / 2 | 0;\x0d\n    }\x0d\n    heap[pos] = item;\x0d\n    if (setPosition !== undefined)\x0d\n      setPosition(item\x2C pos);\x0d\n  }\x0d\n\x0d\n  removeAt(pos) {\x0d\n    const heap = this.#heap;\x0d\n    const size = --this.#size;\x0d\n    heap[pos] = heap[size + 1];\x0d\n    heap[size + 1] = undefined;\x0d\n\x0d\n    if (size > 0 && pos <= size) {\x0d\n      if (pos > 1 && this.#compare(heap[pos / 2 | 0]\x2C heap[pos]) > 0)\x0d\n        this.percolateUp(pos);\x0d\n      else\x0d\n        this.percolateDown(pos);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const heap = this.#heap;\x0d\n    const value = heap[1];\x0d\n    if (value === undefined)\x0d\n      return;\x0d\n\x0d\n    this.removeAt(1);\x0d\n\x0d\n    return value;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x1e2ad2ae714,20,723,909,C0O751C2O756C6O780C9O786C15O787C22O799C24O809C28O834C35O841C40O857C47O869C51O887C56O887C62O908,,
code-creation,JS,10,401553,0x1e2ad2aebcc,103,percolateUp node:internal/priority_queue:69:14,0x22671c84740,~
code-source-info,0x1e2ad2aebcc,20,1725,2220,C0O1751C2O1756C6O1784C8O1789C12O1824C14O1829C18O1861C20O1865C24O1890C26O1890C31O1919C33O1928C36O1932C39O1923C43O1949C50O1971C55O1986C57O2000C59O2010C63O2027C67O2067C72O2100C74O2110C77O2114C82O1879C86O2131C88O2141C92O2154C96O2192C102O2219,,
code-creation,JS,10,401626,0x1e2ad2aed54,8,setPosition node:internal/timers:423:21,0xfca8d3b6e8,~
code-source-info,0x1e2ad2aed54,13,13132,13185,C0O13149C2O13176C7O13184,,
code-creation,JS,10,401843,0x1e2ad2aee3c,52,append node:internal/linkedlist:30:16,0x22671c83fd0,~
script-source,19,node:internal/linkedlist,'use strict';\x0d\n\x0d\nfunction init(list) {\x0d\n  list._idleNext = list;\x0d\n  list._idlePrev = list;\x0d\n  return list;\x0d\n}\x0d\n\x0d\n// Show the most idle item.\x0d\nfunction peek(list) {\x0d\n  if (list._idlePrev === list) return null;\x0d\n  return list._idlePrev;\x0d\n}\x0d\n\x0d\n// Remove an item from its list.\x0d\nfunction remove(item) {\x0d\n  if (item._idleNext) {\x0d\n    item._idleNext._idlePrev = item._idlePrev;\x0d\n  }\x0d\n\x0d\n  if (item._idlePrev) {\x0d\n    item._idlePrev._idleNext = item._idleNext;\x0d\n  }\x0d\n\x0d\n  item._idleNext = null;\x0d\n  item._idlePrev = null;\x0d\n}\x0d\n\x0d\n// Remove an item from its list and place at the end.\x0d\nfunction append(list\x2C item) {\x0d\n  if (item._idleNext || item._idlePrev) {\x0d\n    remove(item);\x0d\n  }\x0d\n\x0d\n  // Items are linked  with _idleNext -> (older) and _idlePrev -> (newer).\x0d\n  // Note: This linkage (next being older) may seem counter-intuitive at first.\x0d\n  item._idleNext = list._idleNext;\x0d\n  item._idlePrev = list;\x0d\n\x0d\n  // The list _idleNext points to tail (newest) and _idlePrev to head (oldest).\x0d\n  list._idleNext._idlePrev = item;\x0d\n  list._idleNext = item;\x0d\n}\x0d\n\x0d\nfunction isEmpty(list) {\x0d\n  return list._idleNext === list;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  init\x2C\x0d\n  peek\x2C\x0d\n  remove\x2C\x0d\n  append\x2C\x0d\n  isEmpty\x2C\x0d\n};\x0d\n
code-source-info,0x1e2ad2aee3c,19,587,1037,C0O614C6O632C12O650C15O650C19O853C23O846C27O867C29O882C33O981C40O1001C44O1012C46O1027C51O1036,,
code-creation,JS,10,402273,0x1e2ad2af134,50,remove node:internal/linkedlist:16:16,0x22671c83f78,~
code-source-info,0x1e2ad2af134,19,290,513,C0O311C6O334C11O361C15O354C19O391C25O414C30O441C34O434C38O462C39O477C43O488C44O503C49O512,,
code-creation,JS,10,402366,0x1e2ad2af254,32,unref node:internal/timers:217:8,0xfca8d3b040,~
code-source-info,0x1e2ad2af254,13,7593,7734,C0O7603C2O7612C4O7611C9O7630C13O7643C17O7669C23O7690C26O7690C29O7717C31O7729,,
code-creation,JS,10,402431,0x1e2ad2af364,42,decRefCount node:internal/timers:312:21,0xfca8d3b428,~
code-source-info,0x1e2ad2af364,13,9902,10054,C0O9910C13O9929C18O9931C23O10016C28O10024C35O10024C41O10053,,
code-creation,JS,10,402513,0x1e2ad2af4f4,95,onceWrapper node:events:628:21,0x22671c8bcd8,~
code-source-info,0x1e2ad2af4f4,23,18894,19146,C0O18894C2O18912C8O18931C13O18938C18O18958C23O18969C28O18938C34O18983C35O18994C39O19021C45O19028C50O19054C55O19063C60O19073C65O19063C70O19081C71O19099C76O19108C81O19119C86O19108C92O19138C94O19145,,
code-creation,JS,10,402629,0x1e2ad2af6b4,313,removeListener node:events:681:28,0x22671c8be38,~
code-source-info,0x1e2ad2af6b
code-creation,JS,10,402744,0x1e2ad2af994,48,spliceOne node:internal/util:486:19,0x22671c81218,~
code-source-info,0x1e2ad2af994,16,14277,14390,C0O14313C2O14309C6O14320C10O14313C15O14342C17O14367C20O14360C23O14354C27O14333C33O14296C37O14381C42O14381C47O14389,,
code-creation,JS,10,402787,0x1e2ad2afacc,19, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js:9:18,0x3e8c872b780,~
code-source-info,0x1e2ad2afacc,133,226,285,C0O239C4O247C12O247C18O284,,
code-creation,JS,10,402862,0x1e2ad2afbc4,38,log node:internal/console/constructor:378:6,0x22671ca2f00,~
code-source-info,0x1e2ad2afbc4,44,11960,12046,C0O11960C3O11977C5O11982C7O11981C13O11999C18O12016C20O12015C24O12033C30O11998C37O12045,,
code-creation,JS,10,402902,0x1e2ad2afcf4,50,value node:internal/console/constructor:339:20,0x22671ca2d88,~
code-source-info,0x1e2ad2afcf4,44,10465,10641,C0O10494C2O10499C4O10498C8O10524C13O10518C19O10541C24O10541C29O10583C36O10603C44O10590C49O10634,,
code-creation,JS,10,402936,0x1e2ad2afe0c,18,get node:internal/console/constructor:213:14,0x121eb10c308,~
code-source-info,0x1e2ad2afe0c,44,6256,6351,C0O6274C6O6287C9O6303C13O6294C15O6324C17O6338,,
code-creation,JS,10,402993,0x1e2ad2aff4c,81,value node:internal/console/constructor:319:20,0x22671ca2cf8,~
code-source-info,0x1e2ad2aff4c,44,9942,10359,C0O9972C2O9977C4O9976C8O9997C10O10007C15O10030C18O10038C22O10054C27O10055C33O10113C38O10124C43O10124C49O10142C51O10178C57O10213C59O10228C63O10257C65O10272C66O10291C72O10306C78O10329C80O10352,,
code-creation,JS,10,403040,0x1e2ad2b00d4,23,lazyUtilColors node:internal/console/constructor:83:24,0x22671ca1638,~
code-source-info,0x1e2ad2b00d4,44,1980,2060,C0O1988C14O2003C18O1999C20O2039C22O2057,,
code-creation,Eval,10,403162,0x1e2ad2b0554,5, node:internal/util/colors:1:1,0x1e2ad2b03b0,~
script-source,282,node:internal/util/colors,'use strict';\x0d\n\x0d\nlet internalTTy;\x0d\nfunction lazyInternalTTY() {\x0d\n  internalTTy ??= require('internal/tty');\x0d\n  return internalTTy;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  blue: ''\x2C\x0d\n  green: ''\x2C\x0d\n  white: ''\x2C\x0d\n  red: ''\x2C\x0d\n  gray: ''\x2C\x0d\n  clear: ''\x2C\x0d\n  hasColors: false\x2C\x0d\n  shouldColorize(stream) {\x0d\n    if (process.env.FORCE_COLOR !== undefined) {\x0d\n      return lazyInternalTTY().getColorDepth() > 2;\x0d\n    }\x0d\n    return stream?.isTTY && (\x0d\n      typeof stream.getColorDepth === 'function' ?\x0d\n        stream.getColorDepth() > 2 : true);\x0d\n  }\x2C\x0d\n  refresh() {\x0d\n    if (process.stderr.isTTY) {\x0d\n      const hasColors = module.exports.shouldColorize(process.stderr);\x0d\n      module.exports.blue = hasColors ? '\\u001b[34m' : '';\x0d\n      module.exports.green = hasColors ? '\\u001b[32m' : '';\x0d\n      module.exports.white = hasColors ? '\\u001b[39m' : '';\x0d\n      module.exports.yellow = hasColors ? '\\u001b[33m' : '';\x0d\n      module.exports.red = hasColors ? '\\u001b[31m' : '';\x0d\n      module.exports.gray = hasColors ? '\\u001b[90m' : '';\x0d\n      module.exports.clear = hasColors ? '\\u001bc' : '';\x0d\n      module.exports.hasColors = hasColors;\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports.refresh();\x0d\n
code-source-info,0x1e2ad2b0554,282,0,1162,C0O0C4O1162,,
code-creation,JS,10,403229,0x1e2ad2b07bc,78, node:internal/util/colors:1:1,0x1e2ad2b04c8,~
code-source-info,0x1e2ad2b07bc,282,0,1162,C0O0C26O21C27O21C29O137C37O260C45O532C55O152C59O1135C62O1142C67O1150C72O1150C77O1161,,
code-creation,JS,10,403366,0x1e2ad2b0d4c,211,refresh node:internal/util/colors:25:10,0x1e2ad2b0638,~
code-source-info,0x1e2ad2b0d4c,282,539,1126,C0O549C3O561C8O568C14O602C17O609C22O617C30O640C35O617C41O656C44O663C51O678C59O676C63O716C66O723C73O739C81O737C85O777C88O784C95O800C103O798C107O838C110O845C117O862C125O860C129O900C132O907C139O921C147O919C151O959C154O966C161O981C169O979C173O1019C176O1026C183O1042C191O1040C195O1077C198O1084C205O1102C210O1125,,
code-creation,JS,10,403451,0x1e2ad2b10e4,80,shouldColorize node:internal/util/colors:17:17,0x1e2ad2b05e0,~
code-source-info,0x1e2ad2b10e4,282,274,527,C0O290C3O302C8O306C14O342C17O349C21O366C26O367C33O383C36O387C37O400C44O413C53O447C61O494C66O494C73O510C79O522,,
code-creation,JS,10,403639,0x1e2ad2b17d4,750,getColorDepth node:internal/tty:106:23,0x2ce89f0c970,~
code-source-info,0x1e2ad2b17d4,145,3287,6375,C0O3287C17O3302C27O3437C30O3445C36O3479C39O3491C81O3568C89O3568C93O3607C99O3624C100O3651C108O3651C112O3690C118O3708C119O3735C127O3735C131O3774C137O3792C138O3818C144O3834C145O3852C148O3860C157O3944C166O4178C173O4183C178O4202C184O4218C185O4229C190O4241C197O4250C202O4313C210O4371C218O4371C223O4359C228O4393C235O4426C242O4405C247O4403C251O4630C257O4644C260O4634C265O4648C270O4678C277O4688C280O4678C283O4700C287O4710C292O4729C298O4747C299O4755C303O4765C308O4784C314O4802C315O4817C321O4834C322O4845C325O4853C331O4866C337O4884C338O4895C341O4903C347O4914C352O5063C362O5063C372O5098C379O5106C384O5131C390O5149C391O5162C397O5178C398O5189C403O5212C408O5227C424O5291C429O5234C440O5327C448O5339C450O5348C451O5359C454O5371C489O5417C492O5426C502O5459C514O5495C519O5459C526O5546C532O5564C533O5581C539O5599C540O5651C546O5669C547O5705C553O5723C554O5734C557O5742C564O5752C572O5775C579O5785C584O5805C590O5823C591O5834C594O5842C607O5855C625O5897C630O5859C637O5922C643O5940C644O5971C656O6002C661O5971C665O5971C667O6016C676O6029C681O6049C688O6065C691O6075C692O6088C703O6111C711O6092C718O6223C724O6240C727O6304C730O6312C736O6330C742O6347C743O6356C749O6372,,
code-creation,Eval,10,404190,0x1e2ad2b3c9c,5, node:os:1:1,0x1e2ad2b3918,~
script-source,283,node:os,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst constants = internalBinding('constants').os;\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_SYSTEM_ERROR\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateInt32 } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  getAvailableParallelism\x2C\x0d\n  getCPUs\x2C\x0d\n  getFreeMem\x2C\x0d\n  getHomeDirectory: _getHomeDirectory\x2C\x0d\n  getHostname: _getHostname\x2C\x0d\n  getInterfaceAddresses: _getInterfaceAddresses\x2C\x0d\n  getLoadAvg\x2C\x0d\n  getPriority: _getPriority\x2C\x0d\n  getOSInformation: _getOSInformation\x2C\x0d\n  getTotalMem\x2C\x0d\n  getUserInfo\x2C\x0d\n  getUptime: _getUptime\x2C\x0d\n  isBigEndian\x2C\x0d\n  setPriority: _setPriority\x2C\x0d\n} = internalBinding('os');\x0d\n\x0d\nfunction getCheckedFunction(fn) {\x0d\n  return hideStackFrames(function checkError() {\x0d\n    const ctx = {};\x0d\n    const ret = fn(ctx);\x0d\n    if (ret === undefined) {\x0d\n      throw new ERR_SYSTEM_ERROR.HideStackFramesError(ctx);\x0d\n    }\x0d\n    return ret;\x0d\n  });\x0d\n}\x0d\n\x0d\nconst {\x0d\n  0: type\x2C\x0d\n  1: version\x2C\x0d\n  2: release\x2C\x0d\n  3: machine\x2C\x0d\n} = _getOSInformation();\x0d\n\x0d\nconst getHomeDirectory = getCheckedFunction(_getHomeDirectory);\x0d\nconst getHostname = getCheckedFunction(_getHostname);\x0d\nconst getInterfaceAddresses = getCheckedFunction(_getInterfaceAddresses);\x0d\nconst getUptime = getCheckedFunction(_getUptime);\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSRelease = () => release;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSType = () => type;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSVersion = () => version;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getMachine = () => machine;\x0d\n\x0d\ngetAvailableParallelism[SymbolToPrimitive] = () => getAvailableParallelism();\x0d\ngetFreeMem[SymbolToPrimitive] = () => getFreeMem();\x0d\ngetHostname[SymbolToPrimitive] = () => getHostname();\x0d\ngetOSVersion[SymbolToPrimitive] = () => getOSVersion();\x0d\ngetOSType[SymbolToPrimitive] = () => getOSType();\x0d\ngetOSRelease[SymbolToPrimitive] = () => getOSRelease();\x0d\ngetMachine[SymbolToPrimitive] = () => getMachine();\x0d\ngetHomeDirectory[SymbolToPrimitive] = () => getHomeDirectory();\x0d\ngetTotalMem[SymbolToPrimitive] = () => getTotalMem();\x0d\ngetUptime[SymbolToPrimitive] = () => getUptime();\x0d\n\x0d\nconst kEndianness = isBigEndian ? 'BE' : 'LE';\x0d\n\x0d\nconst avgValues = new Float64Array(3);\x0d\n\x0d\n/**\x0d\n * @returns {[number\x2C number\x2C number]}\x0d\n */\x0d\nfunction loadavg() {\x0d\n  getLoadAvg(avgValues);\x0d\n  return [avgValues[0]\x2C avgValues[1]\x2C avgValues[2]];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array of objects containing information about each\x0d\n * logical CPU core.\x0d\n * @returns {Array<{\x0d\n *  model: string\x2C\x0d\n *  speed: number\x2C\x0d\n *  times: {\x0d\n *    user: number\x2C\x0d\n *    nice: number\x2C\x0d\n *    sys: number\x2C\x0d\n *    idle: number\x2C\x0d\n *    irq: number\x2C\x0d\n *  }\x2C\x0d\n * }>}\x0d\n */\x0d\nfunction cpus() {\x0d\n  // [] is a bugfix for a regression introduced in 51cea61\x0d\n  const data = getCPUs() || [];\x0d\n  const result = [];\x0d\n  let i = 0;\x0d\n  while (i < data.length) {\x0d\n    ArrayPrototypePush(result\x2C {\x0d\n      model: data[i++]\x2C\x0d\n      speed: data[i++]\x2C\x0d\n      times: {\x0d\n        user: data[i++]\x2C\x0d\n        nice: data[i++]\x2C\x0d\n        sys: data[i++]\x2C\x0d\n        idle: data[i++]\x2C\x0d\n        irq: data[i++]\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction arch() {\x0d\n  return process.arch;\x0d\n}\x0d\narch[SymbolToPrimitive] = () => process.arch;\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction platform() {\x0d\n  return process.platform;\x0d\n}\x0d\nplatform[SymbolToPrimitive] = () => process.platform;\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction tmpdir() {\x0d\n  let path;\x0d\n  if (isWindows) {\x0d\n    path = process.env.TEMP ||\x0d\n           process.env.TMP ||\x0d\n           (process.env.SystemRoot || process.env.windir) + '\\\\temp';\x0d\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '\\\\') &&\x0d\n        !StringPrototypeEndsWith(path\x2C ':\\\\'))\x0d\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\x0d\n  } else {\x0d\n    path = safeGetenv('TMPDIR') ||\x0d\n           safeGetenv('TMP') ||\x0d\n           safeGetenv('TEMP') ||\x0d\n           '/tmp';\x0d\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '/'))\x0d\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\x0d\n  }\x0d\n\x0d\n  return path;\x0d\n}\x0d\ntmpdir[SymbolToPrimitive] = () => tmpdir();\x0d\n\x0d\n/**\x0d\n * @returns {'BE' | 'LE'}\x0d\n */\x0d\nfunction endianness() {\x0d\n  return kEndianness;\x0d\n}\x0d\nendianness[SymbolToPrimitive] = () => kEndianness;\x0d\n\x0d\n// Returns the number of ones in the binary representation of the decimal\x0d\n// number.\x0d\nfunction countBinaryOnes(n) {\x0d\n  // Count the number of bits set in parallel\x2C which is faster than looping\x0d\n  n = n - ((n >>> 1) & 0x55555555);\x0d\n  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333);\x0d\n  return ((n + (n >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\x0d\n}\x0d\n\x0d\nfunction getCIDR(address\x2C netmask\x2C family) {\x0d\n  let ones = 0;\x0d\n  let split = '.';\x0d\n  let range = 10;\x0d\n  let groupLength = 8;\x0d\n  let hasZeros = false;\x0d\n  let lastPos = 0;\x0d\n\x0d\n  if (family === 'IPv6') {\x0d\n    split = ':';\x0d\n    range = 16;\x0d\n    groupLength = 16;\x0d\n  }\x0d\n\x0d\n  for (let i = 0; i < netmask.length; i++) {\x0d\n    if (netmask[i] !== split) {\x0d\n      if (i + 1 < netmask.length) {\x0d\n        continue;\x0d\n      }\x0d\n      i++;\x0d\n    }\x0d\n    const part = StringPrototypeSlice(netmask\x2C lastPos\x2C i);\x0d\n    lastPos = i + 1;\x0d\n    if (part !== '') {\x0d\n      if (hasZeros) {\x0d\n        if (part !== '0') {\x0d\n          return null;\x0d\n        }\x0d\n      } else {\x0d\n        const binary = NumberParseInt(part\x2C range);\x0d\n        const binaryOnes = countBinaryOnes(binary);\x0d\n        ones += binaryOnes;\x0d\n        if (binaryOnes !== groupLength) {\x0d\n          if ((binary & 1) !== 0) {\x0d\n            return null;\x0d\n          }\x0d\n          hasZeros = true;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return `${address}/${ones}`;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @returns {Record<string\x2C Array<{\x0d\n *  address: string\x2C\x0d\n *  netmask: string\x2C\x0d\n *  family: 'IPv4' | 'IPv6'\x2C\x0d\n *  mac: string\x2C\x0d\n *  internal: boolean\x2C\x0d\n *  scopeid: number\x2C\x0d\n *  cidr: string | null\x2C\x0d\n * }>>}\x0d\n */\x0d\nfunction networkInterfaces() {\x0d\n  const data = getInterfaceAddresses();\x0d\n  const result = {};\x0d\n\x0d\n  if (data === undefined)\x0d\n    return result;\x0d\n  for (let i = 0; i < data.length; i += 7) {\x0d\n    const name = data[i];\x0d\n    const entry = {\x0d\n      address: data[i + 1]\x2C\x0d\n      netmask: data[i + 2]\x2C\x0d\n      family: data[i + 3]\x2C\x0d\n      mac: data[i + 4]\x2C\x0d\n      internal: data[i + 5]\x2C\x0d\n      cidr: getCIDR(data[i + 1]\x2C data[i + 2]\x2C data[i + 3])\x2C\x0d\n    };\x0d\n    const scopeid = data[i + 6];\x0d\n    if (scopeid !== -1)\x0d\n      entry.scopeid = scopeid;\x0d\n\x0d\n    const existing = result[name];\x0d\n    if (existing !== undefined)\x0d\n      ArrayPrototypePush(existing\x2C entry);\x0d\n    else\x0d\n      result[name] = [entry];\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} [pid=0]\x0d\n * @param {number} priority\x0d\n * @returns {void}\x0d\n */\x0d\nfunction setPriority(pid\x2C priority) {\x0d\n  if (priority === undefined) {\x0d\n    priority = pid;\x0d\n    pid = 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(pid\x2C 'pid');\x0d\n  validateInt32(priority\x2C 'priority'\x2C -20\x2C 19);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (_setPriority(pid\x2C priority\x2C ctx) !== 0)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} [pid=0]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction getPriority(pid) {\x0d\n  if (pid === undefined)\x0d\n    pid = 0;\x0d\n  else\x0d\n    validateInt32(pid\x2C 'pid');\x0d\n\x0d\n  const ctx = {};\x0d\n  const priority = _getPriority(pid\x2C ctx);\x0d\n\x0d\n  if (priority === undefined)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n\x0d\n  return priority;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {{ encoding?: string }} [options=utf8] If `encoding` is set to\x0d\n * `'buffer'`\x2C the `username`\x2C `shell`\x2C and `homedir` values will\x0d\n * be `Buffer` instances.\x0d\n * @returns {{\x0d\n *   uid: number\x2C\x0d\n *   gid: number\x2C\x0d\n *   username: string\x2C\x0d\n *   homedir: string\x2C\x0d\n *   shell: string | null\x2C\x0d\n * }}\x0d\n */\x0d\nfunction userInfo(options) {\x0d\n  if (typeof options !== 'object')\x0d\n    options = null;\x0d\n\x0d\n  const ctx = {};\x0d\n  const user = getUserInfo(options\x2C ctx);\x0d\n\x0d\n  if (user === undefined)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n\x0d\n  if (isWindows) {\x0d\n    user.uid |= 0;\x0d\n    user.gid |= 0;\x0d\n  }\x0d\n\x0d\n  return user;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  arch\x2C\x0d\n  availableParallelism: getAvailableParallelism\x2C\x0d\n  cpus\x2C\x0d\n  endianness\x2C\x0d\n  freemem: getFreeMem\x2C\x0d\n  getPriority\x2C\x0d\n  homedir: getHomeDirectory\x2C\x0d\n  hostname: getHostname\x2C\x0d\n  loadavg\x2C\x0d\n  networkInterfaces\x2C\x0d\n  platform\x2C\x0d\n  release: getOSRelease\x2C\x0d\n  setPriority\x2C\x0d\n  tmpdir\x2C\x0d\n  totalmem: getTotalMem\x2C\x0d\n  type: getOSType\x2C\x0d\n  userInfo\x2C\x0d\n  uptime: getUptime\x2C\x0d\n  version: getOSVersion\x2C\x0d\n  machine: getMachine\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  EOL: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: isWindows ? '\\r\\n' : '\\n'\x2C\x0d\n  }\x2C\x0d\n\x0d\n  devNull: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: isWindows ? '\\\\\\\\.\\\\nul' : '/dev/null'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x1e2ad2b3c9c,283,0,10195,C0O0C4O10195,,
code-creation,JS,10,404723,0x1e2ad2b5104,886, node:os:1:1,0x1e2ad2b3c10,~
code-source-info,0x1e2ad2b
code-creation,JS,10,405161,0x1e2ad2b6fa4,26,getCheckedFunction node:os:63:28,0x1e2ad2b3cd0,~
code-source-info,0x1e2ad2b6fa4,283,2115,2343,C0O2115C9O2125C21O2132C25O2340,,
code-creation,JS,10,405291,0x1e2ad2b89bc,5,getOSRelease node:os:89:22,0x1e2ad2b4170,~
code-source-info,0x1e2ad2b89bc,283,2742,2755,C0O2748C4O2755,,
code-creation,JS,10,405510,0x1e2ad2b8b0c,38,formatWithOptions node:internal/util/inspect:2158:27,0x22671c88c50,~
script-source,21,node:internal/util/inspect,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  BigIntPrototypeValueOf\x2C\x0d\n  BooleanPrototypeValueOf\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  DatePrototypeToISOString\x2C\x0d\n  DatePrototypeToString\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  FunctionPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGetSize\x2C\x0d\n  MapPrototypeEntries\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  MathSqrt\x2C\x0d\n  MathTrunc\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseFloat\x2C\x0d\n  NumberParseInt\x2C\x0d\n  NumberPrototypeToString\x2C\x0d\n  NumberPrototypeValueOf\x2C\x0d\n  Object\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectPrototypePropertyIsEnumerable\x2C\x0d\n  ObjectSeal\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  RegExpPrototypeToString\x2C\x0d\n  SafeStringIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SetPrototypeGetSize\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeNormalize\x2C\x0d\n  StringPrototypePadEnd\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  StringPrototypeValueOf\x2C\x0d\n  SymbolPrototypeToString\x2C\x0d\n  SymbolPrototypeValueOf\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n  Uint8Array\x2C\x0d\n  globalThis\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x2C\x0d\n    kPending\x2C\x0d\n    kRejected\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  getPromiseDetails\x2C\x0d\n  getProxyDetails\x2C\x0d\n  previewEntries\x2C\x0d\n  getConstructorName: internalGetConstructorName\x2C\x0d\n  getExternalValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isError\x2C\x0d\n  join\x2C\x0d\n  removeColors\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isGeneratorFunction\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBuffer\x2C\x0d\n  isArgumentsObject\x2C\x0d\n  isBoxedPrimitive\x2C\x0d\n  isDataView\x2C\x0d\n  isExternal\x2C\x0d\n  isMap\x2C\x0d\n  isMapIterator\x2C\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isNativeError\x2C\x0d\n  isPromise\x2C\x0d\n  isSet\x2C\x0d\n  isSetIterator\x2C\x0d\n  isWeakMap\x2C\x0d\n  isWeakSet\x2C\x0d\n  isRegExp\x2C\x0d\n  isDate\x2C\x0d\n  isTypedArray\x2C\x0d\n  isStringObject\x2C\x0d\n  isNumberObject\x2C\x0d\n  isBooleanObject\x2C\x0d\n  isBigIntObject\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nlet hexSlice;\x0d\nlet internalUrl;\x0d\n\x0d\nfunction pathToFileUrlHref(filepath) {\x0d\n  internalUrl ??= require('internal/url');\x0d\n  return internalUrl.pathToFileURL(filepath).href;\x0d\n}\x0d\n\x0d\nconst builtInObjects = new SafeSet(\x0d\n  ArrayPrototypeFilter(\x0d\n    ObjectGetOwnPropertyNames(globalThis)\x2C\x0d\n    (e) => RegExpPrototypeExec(/^[A-Z][a-zA-Z0-9]+$/\x2C e) !== null\x2C\x0d\n  )\x2C\x0d\n);\x0d\n\x0d\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\x0d\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\x0d\n\x0d\n// These options must stay in sync with `getUserOptions`. So if any option will\x0d\n// be added or removed\x2C `getUserOptions` must also be updated accordingly.\x0d\nconst inspectDefaultOptions = ObjectSeal({\x0d\n  showHidden: false\x2C\x0d\n  depth: 2\x2C\x0d\n  colors: false\x2C\x0d\n  customInspect: true\x2C\x0d\n  showProxy: false\x2C\x0d\n  maxArrayLength: 100\x2C\x0d\n  maxStringLength: 10000\x2C\x0d\n  breakLength: 80\x2C\x0d\n  compact: 3\x2C\x0d\n  sorted: false\x2C\x0d\n  getters: false\x2C\x0d\n  numericSeparator: false\x2C\x0d\n});\x0d\n\x0d\nconst kObjectType = 0;\x0d\nconst kArrayType = 1;\x0d\nconst kArrayExtrasType = 2;\x0d\n\x0d\n/* eslint-disable no-control-regex */\x0d\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\n/* eslint-enable no-control-regex */\x0d\n\x0d\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\x0d\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\x0d\n\x0d\nconst coreModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\x0d\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\x0d\n\x0d\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\x0d\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\x0d\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\x0d\n\x0d\nconst kMinLineLength = 16;\x0d\n\x0d\n// Constants to map the iterator state.\x0d\nconst kWeak = 0;\x0d\nconst kIterator = 1;\x0d\nconst kMapEntries = 2;\x0d\n\x0d\n// Escaped control characters (plus the single quote and the backslash). Use\x0d\n// empty strings to fill up unused entries.\x0d\nconst meta = [\x0d\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\x0d\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\x0d\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\x0d\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\x0d\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\x0d\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\x0d\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\x0d\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\x0d\n];\x0d\n\x0d\n// Regex used for ansi escape code splitting\x0d\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\x0d\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\x0d\n// Matches all ansi escape code sequences in a string\x0d\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\x0d\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\x0d\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\x0d\n  '|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\x0d\nconst ansi = new RegExp(ansiPattern\x2C 'g');\x0d\n\x0d\nlet getStringWidth;\x0d\n\x0d\nfunction getUserOptions(ctx\x2C isCrossContext) {\x0d\n  const ret = {\x0d\n    stylize: ctx.stylize\x2C\x0d\n    showHidden: ctx.showHidden\x2C\x0d\n    depth: ctx.depth\x2C\x0d\n    colors: ctx.colors\x2C\x0d\n    customInspect: ctx.customInspect\x2C\x0d\n    showProxy: ctx.showProxy\x2C\x0d\n    maxArrayLength: ctx.maxArrayLength\x2C\x0d\n    maxStringLength: ctx.maxStringLength\x2C\x0d\n    breakLength: ctx.breakLength\x2C\x0d\n    compact: ctx.compact\x2C\x0d\n    sorted: ctx.sorted\x2C\x0d\n    getters: ctx.getters\x2C\x0d\n    numericSeparator: ctx.numericSeparator\x2C\x0d\n    ...ctx.userOptions\x2C\x0d\n  };\x0d\n\x0d\n  // Typically\x2C the target value will be an instance of `Object`. If that is\x0d\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\x0d\n  // to avoid passing it objects from this Context in that case\x2C so we remove\x0d\n  // the prototype from the returned object itself + the `stylize()` function\x2C\x0d\n  // and remove all other non-primitives\x2C including non-primitive user options.\x0d\n  if (isCrossContext) {\x0d\n    ObjectSetPrototypeOf(ret\x2C null);\x0d\n    for (const key of ObjectKeys(ret)) {\x0d\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\x0d\n          ret[key] !== null) {\x0d\n        delete ret[key];\x0d\n      }\x0d\n    }\x0d\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\x0d\n      let stylized;\x0d\n      try {\x0d\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      if (typeof stylized !== 'string') return value;\x0d\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\x0d\n      return stylized;\x0d\n    }\x2C null);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Echos the value of any input. Tries to print the value out\x0d\n * in the best way possible given the different types.\x0d\n * @param {any} value The value to print out.\x0d\n * @param {object} opts Optional options object that alters the output.\x0d\n */\x0d\n/* Legacy: value\x2C showHidden\x2C depth\x2C colors */\x0d\nfunction inspect(value\x2C opts) {\x0d\n  // Default options\x0d\n  const ctx = {\x0d\n    budget: {}\x2C\x0d\n    indentationLvl: 0\x2C\x0d\n    seen: []\x2C\x0d\n    currentDepth: 0\x2C\x0d\n    stylize: stylizeNoColor\x2C\x0d\n    showHidden: inspectDefaultOptions.showHidden\x2C\x0d\n    depth: inspectDefaultOptions.depth\x2C\x0d\n    colors: inspectDefaultOptions.colors\x2C\x0d\n    customInspect: inspectDefaultOptions.customInspect\x2C\x0d\n    showProxy: inspectDefaultOptions.showProxy\x2C\x0d\n    maxArrayLength: inspectDefaultOptions.maxArrayLength\x2C\x0d\n    maxStringLength: inspectDefaultOptions.maxStringLength\x2C\x0d\n    breakLength: inspectDefaultOptions.breakLength\x2C\x0d\n    compact: inspectDefaultOptions.compact\x2C\x0d\n    sorted: inspectDefaultOptions.sorted\x2C\x0d\n    getters: inspectDefaultOptions.getters\x2C\x0d\n    numericSeparator: inspectDefaultOptions.numericSeparator\x2C\x0d\n  };\x0d\n  if (arguments.length > 1) {\x0d\n    // Legacy...\x0d\n    if (arguments.length > 2) {\x0d\n      if (arguments[2] !== undefined) {\x0d\n        ctx.depth = arguments[2];\x0d\n      }\x0d\n      if (arguments.length > 3 && arguments[3] !== undefined) {\x0d\n        ctx.colors = arguments[3];\x0d\n      }\x0d\n    }\x0d\n    // Set user-specified options\x0d\n    if (typeof opts === 'boolean') {\x0d\n      ctx.showHidden = opts;\x0d\n    } else if (opts) {\x0d\n      const optKeys = ObjectKeys(opts);\x0d\n      for (let i = 0; i < optKeys.length; ++i) {\x0d\n        const key = optKeys[i];\x0d\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\x0d\n        // this function public or add a new API with a similar or better\x0d\n        // functionality.\x0d\n        if (\x0d\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions\x2C key) ||\x0d\n          key === 'stylize') {\x0d\n          ctx[key] = opts[key];\x0d\n        } else if (ctx.userOptions === undefined) {\x0d\n          // This is required to pass through the actual user input.\x0d\n          ctx.userOptions = opts;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\x0d\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\x0d\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\x0d\n  return formatValue(ctx\x2C value\x2C 0);\x0d\n}\x0d\ninspect.custom = customInspectSymbol;\x0d\n\x0d\nObjectDefineProperty(inspect\x2C 'defaultOptions'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return inspectDefaultOptions;\x0d\n  }\x2C\x0d\n  set(options) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    return ObjectAssign(inspectDefaultOptions\x2C options);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\x0d\n// Each color consists of an array with the color code as first entry and the\x0d\n// reset code as second entry.\x0d\nconst defaultFG = 39;\x0d\nconst defaultBG = 49;\x0d\ninspect.colors = {\x0d\n  __proto__: null\x2C\x0d\n  reset: [0\x2C 0]\x2C\x0d\n  bold: [1\x2C 22]\x2C\x0d\n  dim: [2\x2C 22]\x2C // Alias: faint\x0d\n  italic: [3\x2C 23]\x2C\x0d\n  underline: [4\x2C 24]\x2C\x0d\n  blink: [5\x2C 25]\x2C\x0d\n  // Swap foreground and background colors\x0d\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\x0d\n  hidden: [8\x2C 28]\x2C // Alias: conceal\x0d\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\x0d\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\x0d\n  black: [30\x2C defaultFG]\x2C\x0d\n  red: [31\x2C defaultFG]\x2C\x0d\n  green: [32\x2C defaultFG]\x2C\x0d\n  yellow: [33\x2C defaultFG]\x2C\x0d\n  blue: [34\x2C defaultFG]\x2C\x0d\n  magenta: [35\x2C defaultFG]\x2C\x0d\n  cyan: [36\x2C defaultFG]\x2C\x0d\n  white: [37\x2C defaultFG]\x2C\x0d\n  bgBlack: [40\x2C defaultBG]\x2C\x0d\n  bgRed: [41\x2C defaultBG]\x2C\x0d\n  bgGreen: [42\x2C defaultBG]\x2C\x0d\n  bgYellow: [43\x2C defaultBG]\x2C\x0d\n  bgBlue: [44\x2C defaultBG]\x2C\x0d\n  bgMagenta: [45\x2C defaultBG]\x2C\x0d\n  bgCyan: [46\x2C defaultBG]\x2C\x0d\n  bgWhite: [47\x2C defaultBG]\x2C\x0d\n  framed: [51\x2C 54]\x2C\x0d\n  overlined: [53\x2C 55]\x2C\x0d\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\x0d\n  redBright: [91\x2C defaultFG]\x2C\x0d\n  greenBright: [92\x2C defaultFG]\x2C\x0d\n  yellowBright: [93\x2C defaultFG]\x2C\x0d\n  blueBright: [94\x2C defaultFG]\x2C\x0d\n  magentaBright: [95\x2C defaultFG]\x2C\x0d\n  cyanBright: [96\x2C defaultFG]\x2C\x0d\n  whiteBright: [97\x2C defaultFG]\x2C\x0d\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\x0d\n  bgRedBright: [101\x2C defaultBG]\x2C\x0d\n  bgGreenBright: [102\x2C defaultBG]\x2C\x0d\n  bgYellowBright: [103\x2C defaultBG]\x2C\x0d\n  bgBlueBright: [104\x2C defaultBG]\x2C\x0d\n  bgMagentaBright: [105\x2C defaultBG]\x2C\x0d\n  bgCyanBright: [106\x2C defaultBG]\x2C\x0d\n  bgWhiteBright: [107\x2C defaultBG]\x2C\x0d\n};\x0d\n\x0d\nfunction defineColorAlias(target\x2C alias) {\x0d\n  ObjectDefineProperty(inspect.colors\x2C alias\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[target];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[target] = value;\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineColorAlias('gray'\x2C 'grey');\x0d\ndefineColorAlias('gray'\x2C 'blackBright');\x0d\ndefineColorAlias('bgGray'\x2C 'bgGrey');\x0d\ndefineColorAlias('bgGray'\x2C 'bgBlackBright');\x0d\ndefineColorAlias('dim'\x2C 'faint');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedout');\x0d\ndefineColorAlias('strikethrough'\x2C 'strikeThrough');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedOut');\x0d\ndefineColorAlias('hidden'\x2C 'conceal');\x0d\ndefineColorAlias('inverse'\x2C 'swapColors');\x0d\ndefineColorAlias('inverse'\x2C 'swapcolors');\x0d\ndefineColorAlias('doubleunderline'\x2C 'doubleUnderline');\x0d\n\x0d\n// TODO(BridgeAR): Add function style support for more complex styles.\x0d\n// Don't use 'blue' not visible on cmd.exe\x0d\ninspect.styles = ObjectAssign({ __proto__: null }\x2C {\x0d\n  special: 'cyan'\x2C\x0d\n  number: 'yellow'\x2C\x0d\n  bigint: 'yellow'\x2C\x0d\n  boolean: 'yellow'\x2C\x0d\n  undefined: 'grey'\x2C\x0d\n  null: 'bold'\x2C\x0d\n  string: 'green'\x2C\x0d\n  symbol: 'green'\x2C\x0d\n  date: 'magenta'\x2C\x0d\n  // "name": intentionally not styling\x0d\n  // TODO(BridgeAR): Highlight regular expressions properly.\x0d\n  regexp: 'red'\x2C\x0d\n  module: 'underline'\x2C\x0d\n});\x0d\n\x0d\nfunction addQuotes(str\x2C quotes) {\x0d\n  if (quotes === -1) {\x0d\n    return `"${str}"`;\x0d\n  }\x0d\n  if (quotes === -2) {\x0d\n    return `\\`${str}\\``;\x0d\n  }\x0d\n  return `'${str}'`;\x0d\n}\x0d\n\x0d\nfunction escapeFn(str) {\x0d\n  const charCode = StringPrototypeCharCodeAt(str);\x0d\n  return meta.length > charCode ? meta[charCode] : `\\\\u${NumberPrototypeToString(charCode\x2C 16)}`;\x0d\n}\x0d\n\x0d\n// Escape control characters\x2C single quotes and the backslash.\x0d\n// This is similar to JSON stringify escaping.\x0d\nfunction strEscape(str) {\x0d\n  let escapeTest = strEscapeSequencesRegExp;\x0d\n  let escapeReplace = strEscapeSequencesReplacer;\x0d\n  let singleQuote = 39;\x0d\n\x0d\n  // Check for double quotes. If not present\x2C do not escape single quotes and\x0d\n  // instead wrap the text in double quotes. If double quotes exist\x2C check for\x0d\n  // backticks. If they do not exist\x2C use those as fallback instead of the\x0d\n  // double quotes.\x0d\n  if (StringPrototypeIncludes(str\x2C "'")) {\x0d\n    // This invalidates the charCode and therefore can not be matched for\x0d\n    // anymore.\x0d\n    if (!StringPrototypeIncludes(str\x2C '"')) {\x0d\n      singleQuote = -1;\x0d\n    } else if (!StringPrototypeIncludes(str\x2C '`') &&\x0d\n               !StringPrototypeIncludes(str\x2C '${')) {\x0d\n      singleQuote = -2;\x0d\n    }\x0d\n    if (singleQuote !== 39) {\x0d\n      escapeTest = strEscapeSequencesRegExpSingle;\x0d\n      escapeReplace = strEscapeSequencesReplacerSingle;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\x0d\n  if (str.length < 5000 && RegExpPrototypeExec(escapeTest\x2C str) === null)\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  if (str.length > 100) {\x0d\n    str = RegExpPrototypeSymbolReplace(escapeReplace\x2C str\x2C escapeFn);\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  }\x0d\n\x0d\n  let result = '';\x0d\n  let last = 0;\x0d\n  for (let i = 0; i < str.length; i++) {\x0d\n    const point = StringPrototypeCharCodeAt(str\x2C i);\x0d\n    if (point === singleQuote ||\x0d\n        point === 92 ||\x0d\n        point < 32 ||\x0d\n        (point > 126 && point < 160)) {\x0d\n      if (last === i) {\x0d\n        result += meta[point];\x0d\n      } else {\x0d\n        result += `${StringPrototypeSlice(str\x2C last\x2C i)}${meta[point]}`;\x0d\n      }\x0d\n      last = i + 1;\x0d\n    } else if (point >= 0xd800 && point <= 0xdfff) {\x0d\n      if (point <= 0xdbff && i + 1 < str.length) {\x0d\n        const point = StringPrototypeCharCodeAt(str\x2C i + 1);\x0d\n        if (point >= 0xdc00 && point <= 0xdfff) {\x0d\n          i++;\x0d\n          continue;\x0d\n        }\x0d\n      }\x0d\n      result += `${StringPrototypeSlice(str\x2C last\x2C i)}\\\\u${NumberPrototypeToString(point\x2C 16)}`;\x0d\n      last = i + 1;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (last !== str.length) {\x0d\n    result += StringPrototypeSlice(str\x2C last);\x0d\n  }\x0d\n  return addQuotes(result\x2C singleQuote);\x0d\n}\x0d\n\x0d\nfunction stylizeWithColor(str\x2C styleType) {\x0d\n  const style = inspect.styles[styleType];\x0d\n  if (style !== undefined) {\x0d\n    const color = inspect.colors[style];\x0d\n    if (color !== undefined)\x0d\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction stylizeNoColor(str) {\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// Return a new empty array to push in the results of the default formatter.\x0d\nfunction getEmptyFormatArray() {\x0d\n  return [];\x0d\n}\x0d\n\x0d\nfunction isInstanceof(object\x2C proto) {\x0d\n  try {\x0d\n    return object instanceof proto;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\x0d\n  let firstProto;\x0d\n  const tmp = obj;\x0d\n  while (obj || isUndetectableObject(obj)) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '' &&\x0d\n        isInstanceof(tmp\x2C descriptor.value)) {\x0d\n      if (protoProps !== undefined &&\x0d\n         (firstProto !== obj ||\x0d\n         !builtInObjects.has(descriptor.value.name))) {\x0d\n        addPrototypeProperties(\x0d\n          ctx\x2C tmp\x2C firstProto || tmp\x2C recurseTimes\x2C protoProps);\x0d\n      }\x0d\n      return String(descriptor.value.name);\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n    if (firstProto === undefined) {\x0d\n      firstProto = obj;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (firstProto === null) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  const res = internalGetConstructorName(tmp);\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return `${res} <Complex prototype>`;\x0d\n  }\x0d\n\x0d\n  const protoConstr = getConstructorName(\x0d\n    firstProto\x2C ctx\x2C recurseTimes + 1\x2C protoProps);\x0d\n\x0d\n  if (protoConstr === null) {\x0d\n    return `${res} <${inspect(firstProto\x2C {\x0d\n      ...ctx\x2C\x0d\n      customInspect: false\x2C\x0d\n      depth: -1\x2C\x0d\n    })}>`;\x0d\n  }\x0d\n\x0d\n  return `${res} <${protoConstr}>`;\x0d\n}\x0d\n\x0d\n// This function has the side effect of adding prototype properties to the\x0d\n// `output` argument (which is an array). This is intended to highlight user\x0d\n// defined prototype properties.\x0d\nfunction addPrototypeProperties(ctx\x2C main\x2C obj\x2C recurseTimes\x2C output) {\x0d\n  let depth = 0;\x0d\n  let keys;\x0d\n  let keySet;\x0d\n  do {\x0d\n    if (depth !== 0 || main === obj) {\x0d\n      obj = ObjectGetPrototypeOf(obj);\x0d\n      // Stop as soon as a null prototype is encountered.\x0d\n      if (obj === null) {\x0d\n        return;\x0d\n      }\x0d\n      // Stop as soon as a built-in object type is detected.\x0d\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n      if (descriptor !== undefined &&\x0d\n          typeof descriptor.value === 'function' &&\x0d\n          builtInObjects.has(descriptor.value.name)) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (depth === 0) {\x0d\n      keySet = new SafeSet();\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(keys\x2C (key) => keySet.add(key));\x0d\n    }\x0d\n    // Get all own property names and symbols.\x0d\n    keys = ReflectOwnKeys(obj);\x0d\n    ArrayPrototypePush(ctx.seen\x2C main);\x0d\n    for (const key of keys) {\x0d\n      // Ignore the `constructor` property and keys that exist on layers above.\x0d\n      if (key === 'constructor' ||\x0d\n          ObjectPrototypeHasOwnProperty(main\x2C key) ||\x0d\n          (depth !== 0 && keySet.has(key))) {\x0d\n        continue;\x0d\n      }\x0d\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n      if (typeof desc.value === 'function') {\x0d\n        continue;\x0d\n      }\x0d\n      const value = formatProperty(\x0d\n        ctx\x2C obj\x2C recurseTimes\x2C key\x2C kObjectType\x2C desc\x2C main);\x0d\n      if (ctx.colors) {\x0d\n        // Faint!\x0d\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\x0d\n      } else {\x0d\n        ArrayPrototypePush(output\x2C value);\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePop(ctx.seen);\x0d\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\x0d\n  // is not a good choice here\x2C because it's as if the properties are declared\x0d\n  // on the current object from the users perspective.\x0d\n  } while (++depth !== 3);\x0d\n}\x0d\n\x0d\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = '') {\x0d\n  if (constructor === null) {\x0d\n    if (tag !== '' && fallback !== tag) {\x0d\n      return `[${fallback}${size}: null prototype] [${tag}] `;\x0d\n    }\x0d\n    return `[${fallback}${size}: null prototype] `;\x0d\n  }\x0d\n\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    return `${constructor}${size} [${tag}] `;\x0d\n  }\x0d\n  return `${constructor}${size} `;\x0d\n}\x0d\n\x0d\n// Look up the keys of the object.\x0d\nfunction getKeys(value\x2C showHidden) {\x0d\n  let keys;\x0d\n  const symbols = ObjectGetOwnPropertySymbols(value);\x0d\n  if (showHidden) {\x0d\n    keys = ObjectGetOwnPropertyNames(value);\x0d\n    if (symbols.length !== 0)\x0d\n      ArrayPrototypePushApply(keys\x2C symbols);\x0d\n  } else {\x0d\n    // This might throw if `value` is a Module Namespace Object from an\x0d\n    // unevaluated module\x2C but we don't want to perform the actual type\x0d\n    // check because it's expensive.\x0d\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\x0d\n    // and modify this logic as needed.\x0d\n    try {\x0d\n      keys = ObjectKeys(value);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\x0d\n             isModuleNamespaceObject(value));\x0d\n      keys = ObjectGetOwnPropertyNames(value);\x0d\n    }\x0d\n    if (symbols.length !== 0) {\x0d\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\x0d\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\x0d\n    }\x0d\n  }\x0d\n  return keys;\x0d\n}\x0d\n\x0d\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\x0d\n  let fallback = '';\x0d\n  if (constructor === null) {\x0d\n    fallback = internalGetConstructorName(value);\x0d\n    if (fallback === tag) {\x0d\n      fallback = 'Object';\x0d\n    }\x0d\n  }\x0d\n  return getPrefix(constructor\x2C tag\x2C fallback);\x0d\n}\x0d\n\x0d\nfunction formatProxy(ctx\x2C proxy\x2C recurseTimes) {\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return ctx.stylize('Proxy [Array]'\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n  ctx.indentationLvl += 2;\x0d\n  const res = [\x0d\n    formatValue(ctx\x2C proxy[0]\x2C recurseTimes)\x2C\x0d\n    formatValue(ctx\x2C proxy[1]\x2C recurseTimes)\x2C\x0d\n  ];\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return reduceToSingleString(\x0d\n    ctx\x2C res\x2C ''\x2C ['Proxy ['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n}\x0d\n\x0d\n// Note: using `formatValue` directly requires the indentation level to be\x0d\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\x0d\n// value afterwards again.\x0d\nfunction formatValue(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  // Primitive types cannot have properties.\x0d\n  if (typeof value !== 'object' &&\x0d\n      typeof value !== 'function' &&\x0d\n      !isUndetectableObject(value)) {\x0d\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\x0d\n  }\x0d\n  if (value === null) {\x0d\n    return ctx.stylize('null'\x2C 'null');\x0d\n  }\x0d\n\x0d\n  // Memorize the context for custom inspection on proxies.\x0d\n  const context = value;\x0d\n  // Always check for proxies to prevent side effects and to prevent triggering\x0d\n  // any proxy handlers.\x0d\n  const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\x0d\n  if (proxy !== undefined) {\x0d\n    if (proxy === null || proxy[0] === null) {\x0d\n      return ctx.stylize('<Revoked Proxy>'\x2C 'special');\x0d\n    }\x0d\n    if (ctx.showProxy) {\x0d\n      return formatProxy(ctx\x2C proxy\x2C recurseTimes);\x0d\n    }\x0d\n    value = proxy;\x0d\n  }\x0d\n\x0d\n  // Provide a hook for user-specified inspect functions.\x0d\n  // Check that value is an object with an inspect function on it.\x0d\n  if (ctx.customInspect) {\x0d\n    const maybeCustom = value[customInspectSymbol];\x0d\n    if (typeof maybeCustom === 'function' &&\x0d\n        // Filter out the util module\x2C its inspect function is special.\x0d\n        maybeCustom !== inspect &&\x0d\n        // Also filter out any prototype objects using the circular check.\x0d\n        !(value.constructor && value.constructor.prototype === value)) {\x0d\n      // This makes sure the recurseTimes are reported as before while using\x0d\n      // a counter internally.\x0d\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\x0d\n      const isCrossContext =\x0d\n        proxy !== undefined || !(context instanceof Object);\x0d\n      const ret = FunctionPrototypeCall(\x0d\n        maybeCustom\x2C\x0d\n        context\x2C\x0d\n        depth\x2C\x0d\n        getUserOptions(ctx\x2C isCrossContext)\x2C\x0d\n        inspect\x2C\x0d\n      );\x0d\n      // If the custom inspection method returned `this`\x2C don't go into\x0d\n      // infinite recursion.\x0d\n      if (ret !== context) {\x0d\n        if (typeof ret !== 'string') {\x0d\n          return formatValue(ctx\x2C ret\x2C recurseTimes);\x0d\n        }\x0d\n        return StringPrototypeReplaceAll(ret\x2C '\\n'\x2C `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Using an array here is actually better for the average case than using\x0d\n  // a Set. `seen` will only check for the depth and will never grow too large.\x0d\n  if (ctx.seen.includes(value)) {\x0d\n    let index = 1;\x0d\n    if (ctx.circular === undefined) {\x0d\n      ctx.circular = new SafeMap();\x0d\n      ctx.circular.set(value\x2C index);\x0d\n    } else {\x0d\n      index = ctx.circular.get(value);\x0d\n      if (index === undefined) {\x0d\n        index = ctx.circular.size + 1;\x0d\n        ctx.circular.set(value\x2C index);\x0d\n      }\x0d\n    }\x0d\n    return ctx.stylize(`[Circular *${index}]`\x2C 'special');\x0d\n  }\x0d\n\x0d\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray);\x0d\n}\x0d\n\x0d\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  let keys;\x0d\n  let protoProps;\x0d\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\x0d\n    protoProps = [];\x0d\n  }\x0d\n\x0d\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\x0d\n  // Reset the variable to check for this later on.\x0d\n  if (protoProps !== undefined && protoProps.length === 0) {\x0d\n    protoProps = undefined;\x0d\n  }\x0d\n\x0d\n  let tag = value[SymbolToStringTag];\x0d\n  // Only list the tag in case it's non-enumerable / not an own property.\x0d\n  // Otherwise we'd print this twice.\x0d\n  if (typeof tag !== 'string' ||\x0d\n      (tag !== '' &&\x0d\n      (ctx.showHidden ?\x0d\n        ObjectPrototypeHasOwnProperty :\x0d\n        ObjectPrototypePropertyIsEnumerable)(\x0d\n        value\x2C SymbolToStringTag\x2C\x0d\n      ))) {\x0d\n    tag = '';\x0d\n  }\x0d\n  let base = '';\x0d\n  let formatter = getEmptyFormatArray;\x0d\n  let braces;\x0d\n  let noIterator = true;\x0d\n  let i = 0;\x0d\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n\x0d\n  let extrasType = kObjectType;\x0d\n\x0d\n  // Iterators and the rest are split to reduce checks.\x0d\n  // We have to check all values in case the constructor is set to null.\x0d\n  // Otherwise it would not possible to identify all types properly.\x0d\n  if (SymbolIterator in value || constructor === null) {\x0d\n    noIterator = false;\x0d\n    if (ArrayIsArray(value)) {\x0d\n      // Only set the constructor for non ordinary ("Array [...]") arrays.\x0d\n      const prefix = (constructor !== 'Array' || tag !== '') ?\x0d\n        getPrefix(constructor\x2C tag\x2C 'Array'\x2C `(${value.length})`) :\x0d\n        '';\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${braces[0]}]`;\x0d\n      extrasType = kArrayExtrasType;\x0d\n      formatter = formatArray;\x0d\n    } else if (isSet(value)) {\x0d\n      const size = SetPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Set'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        FunctionPrototypeBind(formatSet\x2C null\x2C value) :\x0d\n        FunctionPrototypeBind(formatSet\x2C null\x2C SetPrototypeValues(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isMap(value)) {\x0d\n      const size = MapPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Map'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        FunctionPrototypeBind(formatMap\x2C null\x2C value) :\x0d\n        FunctionPrototypeBind(formatMap\x2C null\x2C MapPrototypeEntries(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isTypedArray(value)) {\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      let bound = value;\x0d\n      let fallback = '';\x0d\n      if (constructor === null) {\x0d\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\x0d\n        // Reconstruct the array information.\x0d\n        bound = new primordials[fallback](value);\x0d\n      }\x0d\n      const size = TypedArrayPrototypeGetLength(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\x0d\n        return `${braces[0]}]`;\x0d\n      // Special handle the value. The original value is required below. The\x0d\n      // bound function is required to reconstruct missing information.\x0d\n      formatter = FunctionPrototypeBind(formatTypedArray\x2C null\x2C bound\x2C size);\x0d\n      extrasType = kArrayExtrasType;\x0d\n    } else if (isMapIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Map'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\x0d\n    } else if (isSetIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Set'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\x0d\n    } else {\x0d\n      noIterator = true;\x0d\n    }\x0d\n  }\x0d\n  if (noIterator) {\x0d\n    keys = getKeys(value\x2C ctx.showHidden);\x0d\n    braces = ['{'\x2C '}'];\x0d\n    if (constructor === 'Object') {\x0d\n      if (isArgumentsObject(value)) {\x0d\n        braces[0] = '[Arguments] {';\x0d\n      } else if (tag !== '') {\x0d\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Object')}{`;\x0d\n      }\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return `${braces[0]}}`;\x0d\n      }\x0d\n    } else if (typeof value === 'function') {\x0d\n      base = getFunctionBase(value\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return ctx.stylize(base\x2C 'special');\x0d\n    } else if (isRegExp(value)) {\x0d\n      // Make RegExps say that they are RegExps\x0d\n      base = RegExpPrototypeToString(\x0d\n        constructor !== null ? value : new RegExp(value)\x2C\x0d\n      );\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'RegExp');\x0d\n      if (prefix !== 'RegExp ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if ((keys.length === 0 && protoProps === undefined) ||\x0d\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\x0d\n        return ctx.stylize(base\x2C 'regexp');\x0d\n      }\x0d\n    } else if (isDate(value)) {\x0d\n      // Make dates with properties first say the date\x0d\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\x0d\n        DatePrototypeToString(value) :\x0d\n        DatePrototypeToISOString(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Date');\x0d\n      if (prefix !== 'Date ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return ctx.stylize(base\x2C 'date');\x0d\n      }\x0d\n    } else if (isError(value)) {\x0d\n      base = formatError(value\x2C constructor\x2C tag\x2C ctx\x2C keys);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return base;\x0d\n    } else if (isAnyArrayBuffer(value)) {\x0d\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\x0d\n      // Can't do the same for DataView because it has a non-primitive\x0d\n      // .buffer property that we need to recurse for.\x0d\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\x0d\n        'SharedArrayBuffer';\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\x0d\n      if (typedArray === undefined) {\x0d\n        formatter = formatArrayBuffer;\x0d\n      } else if (keys.length === 0 && protoProps === undefined) {\x0d\n        return prefix +\x0d\n              `{ byteLength: ${formatNumber(ctx.stylize\x2C value.byteLength\x2C false)} }`;\x0d\n      }\x0d\n      braces[0] = `${prefix}{`;\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength');\x0d\n    } else if (isDataView(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'DataView')}{`;\x0d\n      // .buffer goes last\x2C it's not a primitive like the others.\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength'\x2C 'byteOffset'\x2C 'buffer');\x0d\n    } else if (isPromise(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Promise')}{`;\x0d\n      formatter = formatPromise;\x0d\n    } else if (isWeakSet(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakSet')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\x0d\n    } else if (isWeakMap(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakMap')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\x0d\n    } else if (isModuleNamespaceObject(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Module')}{`;\x0d\n      // Special handle keys for namespace objects.\x0d\n      formatter = formatNamespaceObject.bind(null\x2C keys);\x0d\n    } else if (isBoxedPrimitive(value)) {\x0d\n      base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return base;\x0d\n      }\x0d\n    } else {\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        if (isExternal(value)) {\x0d\n          const address = getExternalValue(value).toString(16);\x0d\n          return ctx.stylize(`[External: ${address}]`\x2C 'special');\x0d\n        }\x0d\n        return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\x0d\n      }\x0d\n      braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    let constructorName = StringPrototypeSlice(getCtxStyle(value\x2C constructor\x2C tag)\x2C 0\x2C -1);\x0d\n    if (constructor !== null)\x0d\n      constructorName = `[${constructorName}]`;\x0d\n    return ctx.stylize(constructorName\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n\x0d\n  ctx.seen.push(value);\x0d\n  ctx.currentDepth = recurseTimes;\x0d\n  let output;\x0d\n  const indentationLvl = ctx.indentationLvl;\x0d\n  try {\x0d\n    output = formatter(ctx\x2C value\x2C recurseTimes);\x0d\n    for (i = 0; i < keys.length; i++) {\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType)\x2C\x0d\n      );\x0d\n    }\x0d\n    if (protoProps !== undefined) {\x0d\n      ArrayPrototypePushApply(output\x2C protoProps);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    const constructorName = StringPrototypeSlice(getCtxStyle(value\x2C constructor\x2C tag)\x2C 0\x2C -1);\x0d\n    return handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl);\x0d\n  }\x0d\n  if (ctx.circular !== undefined) {\x0d\n    const index = ctx.circular.get(value);\x0d\n    if (index !== undefined) {\x0d\n      const reference = ctx.stylize(`<ref *${index}>`\x2C 'special');\x0d\n      // Add reference always to the very beginning of the output.\x0d\n      if (ctx.compact !== true) {\x0d\n        base = base === '' ? reference : `${reference} ${base}`;\x0d\n      } else {\x0d\n        braces[0] = `${reference} ${braces[0]}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  ctx.seen.pop();\x0d\n\x0d\n  if (ctx.sorted) {\x0d\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\x0d\n    if (extrasType === kObjectType) {\x0d\n      ArrayPrototypeSort(output\x2C comparator);\x0d\n    } else if (keys.length > 1) {\x0d\n      const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(output\x2C output.length - keys.length)\x2C comparator);\x0d\n      ArrayPrototypeUnshift(sorted\x2C output\x2C output.length - keys.length\x2C keys.length);\x0d\n      ReflectApply(ArrayPrototypeSplice\x2C null\x2C sorted);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const res = reduceToSingleString(\x0d\n    ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value);\x0d\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\x0d\n  const newLength = budget + res.length;\x0d\n  ctx.budget[ctx.indentationLvl] = newLength;\x0d\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\x0d\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\x0d\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\x0d\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\x0d\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\x0d\n  // This limit also makes sure that huge objects don't block the event loop\x0d\n  // significantly.\x0d\n  if (newLength > 2 ** 27) {\x0d\n    ctx.depth = -1;\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction getIteratorBraces(type\x2C tag) {\x0d\n  if (tag !== `${type} Iterator`) {\x0d\n    if (tag !== '')\x0d\n      tag += '] [';\x0d\n    tag += `${type} Iterator`;\x0d\n  }\x0d\n  return [`[${tag}] {`\x2C '}'];\x0d\n}\x0d\n\x0d\nfunction getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag) {\x0d\n  let fn;\x0d\n  let type;\x0d\n  if (isNumberObject(value)) {\x0d\n    fn = NumberPrototypeValueOf;\x0d\n    type = 'Number';\x0d\n  } else if (isStringObject(value)) {\x0d\n    fn = StringPrototypeValueOf;\x0d\n    type = 'String';\x0d\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\x0d\n    // since they just noisy up the output and are redundant\x0d\n    // Make boxed primitive Strings look like such\x0d\n    keys.splice(0\x2C value.length);\x0d\n  } else if (isBooleanObject(value)) {\x0d\n    fn = BooleanPrototypeValueOf;\x0d\n    type = 'Boolean';\x0d\n  } else if (isBigIntObject(value)) {\x0d\n    fn = BigIntPrototypeValueOf;\x0d\n    type = 'BigInt';\x0d\n  } else {\x0d\n    fn = SymbolPrototypeValueOf;\x0d\n    type = 'Symbol';\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (type !== constructor) {\x0d\n    if (constructor === null) {\x0d\n      base += ' (null prototype)';\x0d\n    } else {\x0d\n      base += ` (${constructor})`;\x0d\n    }\x0d\n  }\x0d\n  base += `: ${formatPrimitive(stylizeNoColor\x2C fn(value)\x2C ctx)}]`;\x0d\n  if (tag !== '' && tag !== constructor) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\x0d\n    return base;\x0d\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\x0d\n}\x0d\n\x0d\nfunction getClassBase(value\x2C constructor\x2C tag) {\x0d\n  const hasName = ObjectPrototypeHasOwnProperty(value\x2C 'name');\x0d\n  const name = (hasName && value.name) || '(anonymous)';\x0d\n  let base = `class ${name}`;\x0d\n  if (constructor !== 'Function' && constructor !== null) {\x0d\n    base += ` [${constructor}]`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (constructor !== null) {\x0d\n    const superName = ObjectGetPrototypeOf(value).name;\x0d\n    if (superName) {\x0d\n      base += ` extends ${superName}`;\x0d\n    }\x0d\n  } else {\x0d\n    base += ' extends [null prototype]';\x0d\n  }\x0d\n  return `[${base}]`;\x0d\n}\x0d\n\x0d\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\x0d\n  const stringified = FunctionPrototypeToString(value);\x0d\n  if (StringPrototypeStartsWith(stringified\x2C 'class') && StringPrototypeEndsWith(stringified\x2C '}')) {\x0d\n    const slice = StringPrototypeSlice(stringified\x2C 5\x2C -1);\x0d\n    const bracketIndex = StringPrototypeIndexOf(slice\x2C '{');\x0d\n    if (bracketIndex !== -1 &&\x0d\n        (!StringPrototypeIncludes(StringPrototypeSlice(slice\x2C 0\x2C bracketIndex)\x2C '(') ||\x0d\n        // Slow path to guarantee that it's indeed a class.\x0d\n        RegExpPrototypeExec(classRegExp\x2C RegExpPrototypeSymbolReplace(stripCommentsRegExp\x2C slice)) !== null)\x0d\n    ) {\x0d\n      return getClassBase(value\x2C constructor\x2C tag);\x0d\n    }\x0d\n  }\x0d\n  let type = 'Function';\x0d\n  if (isGeneratorFunction(value)) {\x0d\n    type = `Generator${type}`;\x0d\n  }\x0d\n  if (isAsyncFunction(value)) {\x0d\n    type = `Async${type}`;\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (constructor === null) {\x0d\n    base += ' (null prototype)';\x0d\n  }\x0d\n  if (value.name === '') {\x0d\n    base += ' (anonymous)';\x0d\n  } else {\x0d\n    base += `: ${value.name}`;\x0d\n  }\x0d\n  base += ']';\x0d\n  if (constructor !== type && constructor !== null) {\x0d\n    base += ` ${constructor}`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  return base;\x0d\n}\x0d\n\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return { len\x2C offset: i };\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return { len: 0\x2C offset: 0 };\x0d\n}\x0d\n\x0d\nfunction getStackString(error) {\x0d\n  return error.stack ? String(error.stack) : ErrorPrototypeToString(error);\x0d\n}\x0d\n\x0d\nfunction getStackFrames(ctx\x2C err\x2C stack) {\x0d\n  const frames = StringPrototypeSplit(stack\x2C '\\n');\x0d\n\x0d\n  let cause;\x0d\n  try {\x0d\n    ({ cause } = err);\x0d\n  } catch {\x0d\n    // If 'cause' is a getter that throws\x2C ignore it.\x0d\n  }\x0d\n\x0d\n  // Remove stack frames identical to frames in cause.\x0d\n  if (cause != null && isError(cause)) {\x0d\n    const causeStack = getStackString(cause);\x0d\n    const causeStackStart = StringPrototypeIndexOf(causeStack\x2C '\\n    at');\x0d\n    if (causeStackStart !== -1) {\x0d\n      const causeFrames = StringPrototypeSplit(StringPrototypeSlice(causeStack\x2C causeStackStart + 1)\x2C '\\n');\x0d\n      const { len\x2C offset } = identicalSequenceRange(frames\x2C causeFrames);\x0d\n      if (len > 0) {\x0d\n        const skipped = len - 2;\x0d\n        const msg = `    ... ${skipped} lines matching cause stack trace ...`;\x0d\n        frames.splice(offset + 1\x2C skipped\x2C ctx.stylize(msg\x2C 'undefined'));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return frames;\x0d\n}\x0d\n\x0d\nfunction improveStack(stack\x2C constructor\x2C name\x2C tag) {\x0d\n  // A stack trace may contain arbitrary data. Only manipulate the output\x0d\n  // for "regular errors" (errors that "look normal") for now.\x0d\n  let len = name.length;\x0d\n\x0d\n  if (constructor === null ||\x0d\n      (StringPrototypeEndsWith(name\x2C 'Error') &&\x0d\n      StringPrototypeStartsWith(stack\x2C name) &&\x0d\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\x0d\n    let fallback = 'Error';\x0d\n    if (constructor === null) {\x0d\n      const start = RegExpPrototypeExec(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/\x2C stack) ||\x0d\n      RegExpPrototypeExec(/^([a-z_A-Z0-9-]*Error)$/\x2C stack);\x0d\n      fallback = (start && start[1]) || '';\x0d\n      len = fallback.length;\x0d\n      fallback = fallback || 'Error';\x0d\n    }\x0d\n    const prefix = StringPrototypeSlice(getPrefix(constructor\x2C tag\x2C fallback)\x2C 0\x2C -1);\x0d\n    if (name !== prefix) {\x0d\n      if (StringPrototypeIncludes(prefix\x2C name)) {\x0d\n        if (len === 0) {\x0d\n          stack = `${prefix}: ${stack}`;\x0d\n        } else {\x0d\n          stack = `${prefix}${StringPrototypeSlice(stack\x2C len)}`;\x0d\n        }\x0d\n      } else {\x0d\n        stack = `${prefix} [${name}]${StringPrototypeSlice(stack\x2C len)}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack) {\x0d\n  if (!ctx.showHidden && keys.length !== 0) {\x0d\n    for (const name of ['name'\x2C 'message'\x2C 'stack']) {\x0d\n      const index = ArrayPrototypeIndexOf(keys\x2C name);\x0d\n      // Only hide the property in case it's part of the original stack\x0d\n      if (index !== -1 && StringPrototypeIncludes(stack\x2C err[name])) {\x0d\n        ArrayPrototypeSplice(keys\x2C index\x2C 1);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markNodeModules(ctx\x2C line) {\x0d\n  let tempLine = '';\x0d\n  let nodeModule;\x0d\n  let pos = 0;\x0d\n  while ((nodeModule = nodeModulesRegExp.exec(line)) !== null) {\x0d\n    // '/node_modules/'.length === 14\x0d\n    tempLine += StringPrototypeSlice(line\x2C pos\x2C nodeModule.index + 14);\x0d\n    tempLine += ctx.stylize(nodeModule[1]\x2C 'module');\x0d\n    pos = nodeModule.index + nodeModule[0].length;\x0d\n  }\x0d\n  if (pos !== 0) {\x0d\n    line = tempLine + StringPrototypeSlice(line\x2C pos);\x0d\n  }\x0d\n  return line;\x0d\n}\x0d\n\x0d\nfunction markCwd(ctx\x2C line\x2C workingDirectory) {\x0d\n  let cwdStartPos = StringPrototypeIndexOf(line\x2C workingDirectory);\x0d\n  let tempLine = '';\x0d\n  let cwdLength = workingDirectory.length;\x0d\n  if (cwdStartPos !== -1) {\x0d\n    if (StringPrototypeSlice(line\x2C cwdStartPos - 7\x2C cwdStartPos) === 'file://') {\x0d\n      cwdLength += 7;\x0d\n      cwdStartPos -= 7;\x0d\n    }\x0d\n    const start = line[cwdStartPos - 1] === '(' ? cwdStartPos - 1 : cwdStartPos;\x0d\n    const end = start !== cwdStartPos && StringPrototypeEndsWith(line\x2C ')') ? -1 : line.length;\x0d\n    const workingDirectoryEndPos = cwdStartPos + cwdLength + 1;\x0d\n    const cwdSlice = StringPrototypeSlice(line\x2C start\x2C workingDirectoryEndPos);\x0d\n\x0d\n    tempLine += StringPrototypeSlice(line\x2C 0\x2C start);\x0d\n    tempLine += ctx.stylize(cwdSlice\x2C 'undefined');\x0d\n    tempLine += StringPrototypeSlice(line\x2C workingDirectoryEndPos\x2C end);\x0d\n    if (end === -1) {\x0d\n      tempLine += ctx.stylize(')'\x2C 'undefined');\x0d\n    }\x0d\n  } else {\x0d\n    tempLine += line;\x0d\n  }\x0d\n  return tempLine;\x0d\n}\x0d\n\x0d\nfunction safeGetCWD() {\x0d\n  let workingDirectory;\x0d\n  try {\x0d\n    workingDirectory = process.cwd();\x0d\n  } catch {\x0d\n    return;\x0d\n  }\x0d\n  return workingDirectory;\x0d\n}\x0d\n\x0d\nfunction formatError(err\x2C constructor\x2C tag\x2C ctx\x2C keys) {\x0d\n  const name = err.name != null ? String(err.name) : 'Error';\x0d\n  let stack = getStackString(err);\x0d\n\x0d\n  removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack);\x0d\n\x0d\n  if ('cause' in err &&\x0d\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys\x2C 'cause'))) {\x0d\n    ArrayPrototypePush(keys\x2C 'cause');\x0d\n  }\x0d\n\x0d\n  // Print errors aggregated into AggregateError\x0d\n  if (ArrayIsArray(err.errors) &&\x0d\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys\x2C 'errors'))) {\x0d\n    ArrayPrototypePush(keys\x2C 'errors');\x0d\n  }\x0d\n\x0d\n  stack = improveStack(stack\x2C constructor\x2C name\x2C tag);\x0d\n\x0d\n  // Ignore the error message if it's contained in the stack.\x0d\n  let pos = (err.message && StringPrototypeIndexOf(stack\x2C err.message)) || -1;\x0d\n  if (pos !== -1)\x0d\n    pos += err.message.length;\x0d\n  // Wrap the error in brackets in case it has no stack trace.\x0d\n  const stackStart = StringPrototypeIndexOf(stack\x2C '\\n    at'\x2C pos);\x0d\n  if (stackStart === -1) {\x0d\n    stack = `[${stack}]`;\x0d\n  } else {\x0d\n    let newStack = StringPrototypeSlice(stack\x2C 0\x2C stackStart);\x0d\n    const stackFramePart = StringPrototypeSlice(stack\x2C stackStart + 1);\x0d\n    const lines = getStackFrames(ctx\x2C err\x2C stackFramePart);\x0d\n    if (ctx.colors) {\x0d\n      // Highlight userland code and node modules.\x0d\n      const workingDirectory = safeGetCWD();\x0d\n      let esmWorkingDirectory;\x0d\n      for (let line of lines) {\x0d\n        const core = RegExpPrototypeExec(coreModuleRegExp\x2C line);\x0d\n        if (core !== null && BuiltinModule.exists(core[1])) {\x0d\n          newStack += `\\n${ctx.stylize(line\x2C 'undefined')}`;\x0d\n        } else {\x0d\n          newStack += '\\n';\x0d\n\x0d\n          line = markNodeModules(ctx\x2C line);\x0d\n          if (workingDirectory !== undefined) {\x0d\n            let newLine = markCwd(ctx\x2C line\x2C workingDirectory);\x0d\n            if (newLine === line) {\x0d\n              esmWorkingDirectory ??= pathToFileUrlHref(workingDirectory);\x0d\n              newLine = markCwd(ctx\x2C line\x2C esmWorkingDirectory);\x0d\n            }\x0d\n            line = newLine;\x0d\n          }\x0d\n\x0d\n          newStack += line;\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      newStack += `\\n${ArrayPrototypeJoin(lines\x2C '\\n')}`;\x0d\n    }\x0d\n    stack = newStack;\x0d\n  }\x0d\n  // The message and the stack have to be indented as well!\x0d\n  if (ctx.indentationLvl !== 0) {\x0d\n    const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n    stack = StringPrototypeReplaceAll(stack\x2C '\\n'\x2C `\\n${indentation}`);\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction groupArrayElements(ctx\x2C output\x2C value) {\x0d\n  let totalLength = 0;\x0d\n  let maxLength = 0;\x0d\n  let i = 0;\x0d\n  let outputLength = output.length;\x0d\n  if (ctx.maxArrayLength < output.length) {\x0d\n    // This makes sure the "... n more items" part is not taken into account.\x0d\n    outputLength--;\x0d\n  }\x0d\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\x0d\n  const dataLen = new Array(outputLength);\x0d\n  // Calculate the total length of all output entries and the individual max\x0d\n  // entries length of all output entries. We have to remove colors first\x2C\x0d\n  // otherwise the length would not be calculated properly.\x0d\n  for (; i < outputLength; i++) {\x0d\n    const len = getStringWidth(output[i]\x2C ctx.colors);\x0d\n    dataLen[i] = len;\x0d\n    totalLength += len + separatorSpace;\x0d\n    if (maxLength < len)\x0d\n      maxLength = len;\x0d\n  }\x0d\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\x0d\n  // in-between two entries.\x0d\n  const actualMax = maxLength + separatorSpace;\x0d\n  // Check if at least three entries fit next to each other and prevent grouping\x0d\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\x0d\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\x0d\n  // space in-between small entries would be enormous.\x0d\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\x0d\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\x0d\n\x0d\n    const approxCharHeights = 2.5;\x0d\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\x0d\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\x0d\n    // Dynamically check how many columns seem possible.\x0d\n    const columns = MathMin(\x0d\n      // Ideally a square should be drawn. We expect a character to be about 2.5\x0d\n      // times as high as wide. This is the area formula to calculate a square\x0d\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\x0d\n      // Divide that by `actualMax` to receive the correct number of columns.\x0d\n      // The added bias increases the columns for short entries.\x0d\n      MathRound(\x0d\n        MathSqrt(\x0d\n          approxCharHeights * biasedMax * outputLength\x2C\x0d\n        ) / biasedMax\x2C\x0d\n      )\x2C\x0d\n      // Do not exceed the breakLength.\x0d\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\x0d\n      // Limit array grouping for small `compact` modes as the user requested\x0d\n      // minimal grouping.\x0d\n      ctx.compact * 4\x2C\x0d\n      // Limit the columns to a maximum of fifteen.\x0d\n      15\x2C\x0d\n    );\x0d\n    // Return with the original output if no grouping should happen.\x0d\n    if (columns <= 1) {\x0d\n      return output;\x0d\n    }\x0d\n    const tmp = [];\x0d\n    const maxLineLength = [];\x0d\n    for (let i = 0; i < columns; i++) {\x0d\n      let lineMaxLength = 0;\x0d\n      for (let j = i; j < output.length; j += columns) {\x0d\n        if (dataLen[j] > lineMaxLength)\x0d\n          lineMaxLength = dataLen[j];\x0d\n      }\x0d\n      lineMaxLength += separatorSpace;\x0d\n      maxLineLength[i] = lineMaxLength;\x0d\n    }\x0d\n    let order = StringPrototypePadStart;\x0d\n    if (value !== undefined) {\x0d\n      for (let i = 0; i < output.length; i++) {\x0d\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\x0d\n          order = StringPrototypePadEnd;\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Each iteration creates a single line of grouped entries.\x0d\n    for (let i = 0; i < outputLength; i += columns) {\x0d\n      // The last lines may contain less entries than columns.\x0d\n      const max = MathMin(i + columns\x2C outputLength);\x0d\n      let str = '';\x0d\n      let j = i;\x0d\n      for (; j < max - 1; j++) {\x0d\n        // Calculate extra color padding in case it's active. This has to be\x0d\n        // done line by line as some lines might contain more colors than\x0d\n        // others.\x0d\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\x0d\n        str += order(`${output[j]}\x2C `\x2C padding\x2C ' ');\x0d\n      }\x0d\n      if (order === StringPrototypePadStart) {\x0d\n        const padding = maxLineLength[j - i] +\x0d\n                        output[j].length -\x0d\n                        dataLen[j] -\x0d\n                        separatorSpace;\x0d\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C ' ');\x0d\n      } else {\x0d\n        str += output[j];\x0d\n      }\x0d\n      ArrayPrototypePush(tmp\x2C str);\x0d\n    }\x0d\n    if (ctx.maxArrayLength < output.length) {\x0d\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\x0d\n    }\x0d\n    output = tmp;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl) {\x0d\n  if (isStackOverflowError(err)) {\x0d\n    ctx.seen.pop();\x0d\n    ctx.indentationLvl = indentationLvl;\x0d\n    return ctx.stylize(\x0d\n      `[${constructorName}: Inspection interrupted ` +\x0d\n        'prematurely. Maximum call stack size exceeded.]'\x2C\x0d\n      'special'\x2C\x0d\n    );\x0d\n  }\x0d\n  /* c8 ignore next */\x0d\n  assert.fail(err.stack);\x0d\n}\x0d\n\x0d\nfunction addNumericSeparator(integerString) {\x0d\n  let result = '';\x0d\n  let i = integerString.length;\x0d\n  const start = StringPrototypeStartsWith(integerString\x2C '-') ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    result = `_${StringPrototypeSlice(integerString\x2C i - 3\x2C i)}${result}`;\x0d\n  }\x0d\n  return i === integerString.length ?\x0d\n    integerString :\x0d\n    `${StringPrototypeSlice(integerString\x2C 0\x2C i)}${result}`;\x0d\n}\x0d\n\x0d\nfunction addNumericSeparatorEnd(integerString) {\x0d\n  let result = '';\x0d\n  let i = 0;\x0d\n  for (; i < integerString.length - 3; i += 3) {\x0d\n    result += `${StringPrototypeSlice(integerString\x2C i\x2C i + 3)}_`;\x0d\n  }\x0d\n  return i === 0 ?\x0d\n    integerString :\x0d\n    `${result}${StringPrototypeSlice(integerString\x2C i)}`;\x0d\n}\x0d\n\x0d\nconst remainingText = (remaining) => `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\x0d\n\x0d\nfunction formatNumber(fn\x2C number\x2C numericSeparator) {\x0d\n  if (!numericSeparator) {\x0d\n    // Format -0 as '-0'. Checking `number === -0` won't distinguish 0 from -0.\x0d\n    if (ObjectIs(number\x2C -0)) {\x0d\n      return fn('-0'\x2C 'number');\x0d\n    }\x0d\n    return fn(`${number}`\x2C 'number');\x0d\n  }\x0d\n  const integer = MathTrunc(number);\x0d\n  const string = String(integer);\x0d\n  if (integer === number) {\x0d\n    if (!NumberIsFinite(number) || StringPrototypeIncludes(string\x2C 'e')) {\x0d\n      return fn(string\x2C 'number');\x0d\n    }\x0d\n    return fn(`${addNumericSeparator(string)}`\x2C 'number');\x0d\n  }\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return fn(string\x2C 'number');\x0d\n  }\x0d\n  return fn(`${\x0d\n    addNumericSeparator(string)\x0d\n  }.${\x0d\n    addNumericSeparatorEnd(\x0d\n      StringPrototypeSlice(String(number)\x2C string.length + 1)\x2C\x0d\n    )\x0d\n  }`\x2C 'number');\x0d\n}\x0d\n\x0d\nfunction formatBigInt(fn\x2C bigint\x2C numericSeparator) {\x0d\n  const string = String(bigint);\x0d\n  if (!numericSeparator) {\x0d\n    return fn(`${string}n`\x2C 'bigint');\x0d\n  }\x0d\n  return fn(`${addNumericSeparator(string)}n`\x2C 'bigint');\x0d\n}\x0d\n\x0d\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\x0d\n  if (typeof value === 'string') {\x0d\n    let trailer = '';\x0d\n    if (value.length > ctx.maxStringLength) {\x0d\n      const remaining = value.length - ctx.maxStringLength;\x0d\n      value = StringPrototypeSlice(value\x2C 0\x2C ctx.maxStringLength);\x0d\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\x0d\n    }\x0d\n    if (ctx.compact !== true &&\x0d\n        // We do not support handling unicode characters width with\x0d\n        // the readline getStringWidth function as there are\x0d\n        // performance implications.\x0d\n        value.length > kMinLineLength &&\x0d\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\x0d\n      return ArrayPrototypeJoin(\x0d\n        ArrayPrototypeMap(\x0d\n          RegExpPrototypeSymbolSplit(/(?<=\\n)/\x2C value)\x2C\x0d\n          (line) => fn(strEscape(line)\x2C 'string')\x2C\x0d\n        )\x2C\x0d\n        ` +\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl + 2)}`\x2C\x0d\n      ) + trailer;\x0d\n    }\x0d\n    return fn(strEscape(value)\x2C 'string') + trailer;\x0d\n  }\x0d\n  if (typeof value === 'number')\x0d\n    return formatNumber(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'bigint')\x0d\n    return formatBigInt(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'boolean')\x0d\n    return fn(`${value}`\x2C 'boolean');\x0d\n  if (typeof value === 'undefined')\x0d\n    return fn('undefined'\x2C 'undefined');\x0d\n  // es6 symbol primitive\x0d\n  return fn(SymbolPrototypeToString(value)\x2C 'symbol');\x0d\n}\x0d\n\x0d\nfunction formatNamespaceObject(keys\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const output = new Array(keys.length);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    try {\x0d\n      output[i] = formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C\x0d\n                                 kObjectType);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError');\x0d\n      // Use the existing functionality. This makes sure the indentation and\x0d\n      // line breaks are always correct. Otherwise it is very difficult to keep\x0d\n      // this aligned\x2C even though this is a hacky way of dealing with this.\x0d\n      const tmp = { [keys[i]]: '' };\x0d\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\x0d\n      const pos = StringPrototypeLastIndexOf(output[i]\x2C ' ');\x0d\n      // We have to find the last whitespace and have to replace that value as\x0d\n      // it will be visualized as a regular string.\x0d\n      output[i] = StringPrototypeSlice(output[i]\x2C 0\x2C pos + 1) +\x0d\n                  ctx.stylize('<uninitialized>'\x2C 'special');\x0d\n    }\x0d\n  }\x0d\n  // Reset the keys to an empty array. This prevents duplicated inspection.\x0d\n  keys.length = 0;\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// The array is sparse and/or has extra keys\x0d\nfunction formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C maxLength\x2C output\x2C i) {\x0d\n  const keys = ObjectKeys(value);\x0d\n  let index = i;\x0d\n  for (; i < keys.length && output.length < maxLength; i++) {\x0d\n    const key = keys[i];\x0d\n    const tmp = +key;\x0d\n    // Arrays can only have up to 2^32 - 1 entries\x0d\n    if (tmp > 2 ** 32 - 2) {\x0d\n      break;\x0d\n    }\x0d\n    if (`${index}` !== key) {\x0d\n      if (RegExpPrototypeExec(numberRegExp\x2C key) === null) {\x0d\n        break;\x0d\n      }\x0d\n      const emptyItems = tmp - index;\x0d\n      const ending = emptyItems > 1 ? 's' : '';\x0d\n      const message = `<${emptyItems} empty item${ending}>`;\x0d\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C 'undefined'));\x0d\n      index = tmp;\x0d\n      if (output.length === maxLength) {\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePush(output\x2C formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType));\x0d\n    index++;\x0d\n  }\x0d\n  const remaining = value.length - index;\x0d\n  if (output.length !== maxLength) {\x0d\n    if (remaining > 0) {\x0d\n      const ending = remaining > 1 ? 's' : '';\x0d\n      const message = `<${remaining} empty item${ending}>`;\x0d\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C 'undefined'));\x0d\n    }\x0d\n  } else if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatArrayBuffer(ctx\x2C value) {\x0d\n  let buffer;\x0d\n  try {\x0d\n    buffer = new Uint8Array(value);\x0d\n  } catch {\x0d\n    return [ctx.stylize('(detached)'\x2C 'special')];\x0d\n  }\x0d\n  if (hexSlice === undefined)\x0d\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C\x0d\n    hexSlice(buffer\x2C 0\x2C MathMin(ctx.maxArrayLength\x2C buffer.length))\x2C\x0d\n    '$1 '\x2C\x0d\n  ));\x0d\n  const remaining = buffer.length - ctx.maxArrayLength;\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  return [`${ctx.stylize('[Uint8Contents]'\x2C 'special')}: <${str}>`];\x0d\n}\x0d\n\x0d\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\x0d\n  const valLen = value.length;\x0d\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\x0d\n\x0d\n  const remaining = valLen - len;\x0d\n  const output = [];\x0d\n  for (let i = 0; i < len; i++) {\x0d\n    // Special handle sparse arrays.\x0d\n    if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\x0d\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\x0d\n    }\x0d\n    ArrayPrototypePush(output\x2C formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType));\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatTypedArray(value\x2C length\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = value.length - maxLength;\x0d\n  const output = new Array(maxLength);\x0d\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\x0d\n    formatNumber :\x0d\n    formatBigInt;\x0d\n  for (let i = 0; i < maxLength; ++i) {\x0d\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]\x2C ctx.numericSeparator);\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    output[maxLength] = remainingText(remaining);\x0d\n  }\x0d\n  if (ctx.showHidden) {\x0d\n    // .buffer goes last\x2C it's not a primitive like the others.\x0d\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\x0d\n    ctx.indentationLvl += 2;\x0d\n    for (const key of [\x0d\n      'BYTES_PER_ELEMENT'\x2C\x0d\n      'length'\x2C\x0d\n      'byteLength'\x2C\x0d\n      'byteOffset'\x2C\x0d\n      'buffer'\x2C\x0d\n    ]) {\x0d\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\x0d\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\x0d\n    }\x0d\n    ctx.indentationLvl -= 2;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSet(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const length = value.size;\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = length - maxLength;\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  let i = 0;\x0d\n  for (const v of value) {\x0d\n    if (i >= maxLength) break;\x0d\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C v\x2C recurseTimes));\x0d\n    i++;\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMap(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const length = value.size;\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = length - maxLength;\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  let i = 0;\x0d\n  for (const { 0: k\x2C 1: v } of value) {\x0d\n    if (i >= maxLength) break;\x0d\n    ArrayPrototypePush(\x0d\n      output\x2C\x0d\n      `${formatValue(ctx\x2C k\x2C recurseTimes)} => ${formatValue(ctx\x2C v\x2C recurseTimes)}`\x2C\x0d\n    );\x0d\n    i++;\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\x0d\n  const output = new Array(maxLength);\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (let i = 0; i < maxLength; i++) {\x0d\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (state === kWeak && !ctx.sorted) {\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    ArrayPrototypeSort(output);\x0d\n  }\x0d\n  const remaining = entries.length - maxLength;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\x0d\n  const len = entries.length / 2;\x0d\n  const remaining = len - maxArrayLength;\x0d\n  const maxLength = MathMin(maxArrayLength\x2C len);\x0d\n  const output = new Array(maxLength);\x0d\n  let i = 0;\x0d\n  ctx.indentationLvl += 2;\x0d\n  if (state === kWeak) {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      output[i] =\x0d\n        `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)}`;\x0d\n    }\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    if (!ctx.sorted)\x0d\n      ArrayPrototypeSort(output);\x0d\n  } else {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      const res = [\x0d\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\x0d\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\x0d\n      ];\x0d\n      output[i] = reduceToSingleString(\x0d\n        ctx\x2C res\x2C ''\x2C ['['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n    }\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatWeakCollection(ctx) {\x0d\n  return [ctx.stylize('<items unknown>'\x2C 'special')];\x0d\n}\x0d\n\x0d\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const { 0: entries\x2C 1: isKeyValue } = previewEntries(value\x2C true);\x0d\n  if (isKeyValue) {\x0d\n    // Mark entry iterators as such.\x0d\n    braces[0] = RegExpPrototypeSymbolReplace(/ Iterator] {$/\x2C braces[0]\x2C ' Entries] {');\x0d\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\x0d\n  }\x0d\n\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\x0d\n}\x0d\n\x0d\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\x0d\n  let output;\x0d\n  const { 0: state\x2C 1: result } = getPromiseDetails(value);\x0d\n  if (state === kPending) {\x0d\n    output = [ctx.stylize('<pending>'\x2C 'special')];\x0d\n  } else {\x0d\n    ctx.indentationLvl += 2;\x0d\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\x0d\n    ctx.indentationLvl -= 2;\x0d\n    output = [\x0d\n      state === kRejected ?\x0d\n        `${ctx.stylize('<rejected>'\x2C 'special')} ${str}` :\x0d\n        str\x2C\x0d\n    ];\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C type\x2C desc\x2C\x0d\n                        original = value) {\x0d\n  let name\x2C str;\x0d\n  let extra = ' ';\x0d\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\x0d\n    { value: value[key]\x2C enumerable: true };\x0d\n  if (desc.value !== undefined) {\x0d\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\x0d\n    ctx.indentationLvl += diff;\x0d\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\x0d\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\x0d\n      extra = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    }\x0d\n    ctx.indentationLvl -= diff;\x0d\n  } else if (desc.get !== undefined) {\x0d\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\x0d\n    const s = ctx.stylize;\x0d\n    const sp = 'special';\x0d\n    if (ctx.getters && (ctx.getters === true ||\x0d\n          (ctx.getters === 'get' && desc.set === undefined) ||\x0d\n          (ctx.getters === 'set' && desc.set !== undefined))) {\x0d\n      try {\x0d\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\x0d\n        ctx.indentationLvl += 2;\x0d\n        if (tmp === null) {\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${s('null'\x2C 'null')}${s(']'\x2C sp)}`;\x0d\n        } else if (typeof tmp === 'object') {\x0d\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\x0d\n        } else {\x0d\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s(']'\x2C sp)}`;\x0d\n        }\x0d\n        ctx.indentationLvl -= 2;\x0d\n      } catch (err) {\x0d\n        const message = `<Inspection threw (${err.message})>`;\x0d\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s(']'\x2C sp)}`;\x0d\n      }\x0d\n    } else {\x0d\n      str = ctx.stylize(`[${label}]`\x2C sp);\x0d\n    }\x0d\n  } else if (desc.set !== undefined) {\x0d\n    str = ctx.stylize('[Setter]'\x2C 'special');\x0d\n  } else {\x0d\n    str = ctx.stylize('undefined'\x2C 'undefined');\x0d\n  }\x0d\n  if (type === kArrayType) {\x0d\n    return str;\x0d\n  }\x0d\n  if (typeof key === 'symbol') {\x0d\n    const tmp = RegExpPrototypeSymbolReplace(\x0d\n      strEscapeSequencesReplacer\x2C\x0d\n      SymbolPrototypeToString(key)\x2C\x0d\n      escapeFn\x2C\x0d\n    );\x0d\n    name = `[${ctx.stylize(tmp\x2C 'symbol')}]`;\x0d\n  } else if (key === '__proto__') {\x0d\n    name = "['__proto__']";\x0d\n  } else if (desc.enumerable === false) {\x0d\n    const tmp = RegExpPrototypeSymbolReplace(\x0d\n      strEscapeSequencesReplacer\x2C\x0d\n      key\x2C\x0d\n      escapeFn\x2C\x0d\n    );\x0d\n    name = `[${tmp}]`;\x0d\n  } else if (RegExpPrototypeExec(keyStrRegExp\x2C key) !== null) {\x0d\n    name = ctx.stylize(key\x2C 'name');\x0d\n  } else {\x0d\n    name = ctx.stylize(strEscape(key)\x2C 'string');\x0d\n  }\x0d\n  return `${name}:${extra}${str}`;\x0d\n}\x0d\n\x0d\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\x0d\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\x0d\n  // length of at least `output.length`. In addition\x2C some cases have a\x0d\n  // whitespace in-between each other that is added to the total as well.\x0d\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\x0d\n  // function. Check the performance overhead and make it an opt-in in case it's\x0d\n  // significant.\x0d\n  let totalLength = output.length + start;\x0d\n  if (totalLength + output.length > ctx.breakLength)\x0d\n    return false;\x0d\n  for (let i = 0; i < output.length; i++) {\x0d\n    if (ctx.colors) {\x0d\n      totalLength += removeColors(output[i]).length;\x0d\n    } else {\x0d\n      totalLength += output[i].length;\x0d\n    }\x0d\n    if (totalLength > ctx.breakLength) {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n  // Do not line up properties on the same line if `base` contains line breaks.\x0d\n  return base === '' || !StringPrototypeIncludes(base\x2C '\\n');\x0d\n}\x0d\n\x0d\nfunction reduceToSingleString(\x0d\n  ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value) {\x0d\n  if (ctx.compact !== true) {\x0d\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\x0d\n      // Memorize the original output length. In case the output is grouped\x2C\x0d\n      // prevent lining up the entries on a single line.\x0d\n      const entries = output.length;\x0d\n      // Group array elements together if the array contains at least six\x0d\n      // separate entries.\x0d\n      if (extrasType === kArrayExtrasType && entries > 6) {\x0d\n        output = groupArrayElements(ctx\x2C output\x2C value);\x0d\n      }\x0d\n      // `ctx.currentDepth` is set to the most inner depth of the currently\x0d\n      // inspected object part while `recurseTimes` is the actual current depth\x0d\n      // that is inspected.\x0d\n      //\x0d\n      // Example:\x0d\n      //\x0d\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\x0d\n      //\x0d\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\x0d\n      // depth of 1.\x0d\n      //\x0d\n      // Consolidate all entries of the local most inner depth up to\x0d\n      // `ctx.compact`\x2C as long as the properties are smaller than\x0d\n      // `ctx.breakLength`.\x0d\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\x0d\n          entries === output.length) {\x0d\n        // Line up all entries on a single line in case the entries do not\x0d\n        // exceed `breakLength`. Add 10 as constant to start next to all other\x0d\n        // factors that may reduce `breakLength`.\x0d\n        const start = output.length + ctx.indentationLvl +\x0d\n                      braces[0].length + base.length + 10;\x0d\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\x0d\n          const joinedOutput = join(output\x2C '\x2C ');\x0d\n          if (!StringPrototypeIncludes(joinedOutput\x2C '\\n')) {\x0d\n            return `${base ? `${base} ` : ''}${braces[0]} ${joinedOutput}` +\x0d\n              ` ${braces[1]}`;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Line up each entry on an individual line.\x0d\n    const indentation = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\x0d\n      `${join(output\x2C `\x2C${indentation}  `)}${indentation}${braces[1]}`;\x0d\n  }\x0d\n  // Line up all entries on a single line in case the entries do not exceed\x0d\n  // `breakLength`.\x0d\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\x0d\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output\x2C '\x2C ')} ` +\x0d\n      braces[1];\x0d\n  }\x0d\n  const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\x0d\n  // we need to force the first item to be on the next line or the\x0d\n  // items will not line up correctly.\x0d\n  const ln = base === '' && braces[0].length === 1 ?\x0d\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\x0d\n  // Line up each entry on an individual line.\x0d\n  return `${braces[0]}${ln}${join(output\x2C `\x2C\\n${indentation}  `)} ${braces[1]}`;\x0d\n}\x0d\n\x0d\nfunction hasBuiltInToString(value) {\x0d\n  // Prevent triggering proxy traps.\x0d\n  const getFullProxy = false;\x0d\n  const proxyTarget = getProxyDetails(value\x2C getFullProxy);\x0d\n  if (proxyTarget !== undefined) {\x0d\n    if (proxyTarget === null) {\x0d\n      return true;\x0d\n    }\x0d\n    value = proxyTarget;\x0d\n  }\x0d\n\x0d\n  // Count objects that have no `toString` function as built-in.\x0d\n  if (typeof value.toString !== 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  // The object has a own `toString` property. Thus it's not not a built-in one.\x0d\n  if (ObjectPrototypeHasOwnProperty(value\x2C 'toString')) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  // Find the object that has the `toString` property as own property in the\x0d\n  // prototype chain.\x0d\n  let pointer = value;\x0d\n  do {\x0d\n    pointer = ObjectGetPrototypeOf(pointer);\x0d\n  } while (!ObjectPrototypeHasOwnProperty(pointer\x2C 'toString'));\x0d\n\x0d\n  // Check closer if the object is a built-in.\x0d\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer\x2C 'constructor');\x0d\n  return descriptor !== undefined &&\x0d\n    typeof descriptor.value === 'function' &&\x0d\n    builtInObjects.has(descriptor.value.name);\x0d\n}\x0d\n\x0d\nconst firstErrorLine = (error) => StringPrototypeSplit(error.message\x2C '\\n'\x2C 1)[0];\x0d\nlet CIRCULAR_ERROR_MESSAGE;\x0d\nfunction tryStringify(arg) {\x0d\n  try {\x0d\n    return JSONStringify(arg);\x0d\n  } catch (err) {\x0d\n    // Populate the circular error message lazily\x0d\n    if (!CIRCULAR_ERROR_MESSAGE) {\x0d\n      try {\x0d\n        const a = {};\x0d\n        a.a = a;\x0d\n        JSONStringify(a);\x0d\n      } catch (circularError) {\x0d\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(circularError);\x0d\n      }\x0d\n    }\x0d\n    if (err.name === 'TypeError' &&\x0d\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\x0d\n      return '[Circular]';\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction format(...args) {\x0d\n  return formatWithOptionsInternal(undefined\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatWithOptions(inspectOptions\x2C ...args) {\x0d\n  validateObject(inspectOptions\x2C 'inspectOptions'\x2C kValidateObjectAllowArray);\x0d\n  return formatWithOptionsInternal(inspectOptions\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatNumberNoColor(number\x2C options) {\x0d\n  return formatNumber(\x0d\n    stylizeNoColor\x2C\x0d\n    number\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatBigIntNoColor(bigint\x2C options) {\x0d\n  return formatBigInt(\x0d\n    stylizeNoColor\x2C\x0d\n    bigint\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatWithOptionsInternal(inspectOptions\x2C args) {\x0d\n  const first = args[0];\x0d\n  let a = 0;\x0d\n  let str = '';\x0d\n  let join = '';\x0d\n\x0d\n  if (typeof first === 'string') {\x0d\n    if (args.length === 1) {\x0d\n      return first;\x0d\n    }\x0d\n    let tempStr;\x0d\n    let lastPos = 0;\x0d\n\x0d\n    for (let i = 0; i < first.length - 1; i++) {\x0d\n      if (StringPrototypeCharCodeAt(first\x2C i) === 37) { // '%'\x0d\n        const nextChar = StringPrototypeCharCodeAt(first\x2C ++i);\x0d\n        if (a + 1 !== args.length) {\x0d\n          switch (nextChar) {\x0d\n            case 115: { // 's'\x0d\n              const tempArg = args[++a];\x0d\n              if (typeof tempArg === 'number') {\x0d\n                tempStr = formatNumberNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg !== 'object' ||\x0d\n                         tempArg === null ||\x0d\n                         !hasBuiltInToString(tempArg)) {\x0d\n                tempStr = String(tempArg);\x0d\n              } else {\x0d\n                tempStr = inspect(tempArg\x2C {\x0d\n                  ...inspectOptions\x2C\x0d\n                  compact: 3\x2C\x0d\n                  colors: false\x2C\x0d\n                  depth: 0\x2C\x0d\n                });\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 106: // 'j'\x0d\n              tempStr = tryStringify(args[++a]);\x0d\n              break;\x0d\n            case 100: { // 'd'\x0d\n              const tempNum = args[++a];\x0d\n              if (typeof tempNum === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempNum\x2C inspectOptions);\x0d\n              } else if (typeof tempNum === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(Number(tempNum)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 79: // 'O'\x0d\n              tempStr = inspect(args[++a]\x2C inspectOptions);\x0d\n              break;\x0d\n            case 111: // 'o'\x0d\n              tempStr = inspect(args[++a]\x2C {\x0d\n                ...inspectOptions\x2C\x0d\n                showHidden: true\x2C\x0d\n                showProxy: true\x2C\x0d\n                depth: 4\x2C\x0d\n              });\x0d\n              break;\x0d\n            case 105: { // 'i'\x0d\n              const tempInteger = args[++a];\x0d\n              if (typeof tempInteger === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempInteger\x2C inspectOptions);\x0d\n              } else if (typeof tempInteger === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseInt(tempInteger)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 102: { // 'f'\x0d\n              const tempFloat = args[++a];\x0d\n              if (typeof tempFloat === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseFloat(tempFloat)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 99: // 'c'\x0d\n              a += 1;\x0d\n              tempStr = '';\x0d\n              break;\x0d\n            case 37: // '%'\x0d\n              str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n              lastPos = i + 1;\x0d\n              continue;\x0d\n            default: // Any other character is not a correct placeholder\x0d\n              continue;\x0d\n          }\x0d\n          if (lastPos !== i - 1) {\x0d\n            str += StringPrototypeSlice(first\x2C lastPos\x2C i - 1);\x0d\n          }\x0d\n          str += tempStr;\x0d\n          lastPos = i + 1;\x0d\n        } else if (nextChar === 37) {\x0d\n          str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n          lastPos = i + 1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (lastPos !== 0) {\x0d\n      a++;\x0d\n      join = ' ';\x0d\n      if (lastPos < first.length) {\x0d\n        str += StringPrototypeSlice(first\x2C lastPos);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  while (a < args.length) {\x0d\n    const value = args[a];\x0d\n    str += join;\x0d\n    str += typeof value !== 'string' ? inspect(value\x2C inspectOptions) : value;\x0d\n    join = ' ';\x0d\n    a++;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction isZeroWidthCodePoint(code) {\x0d\n  return code <= 0x1F || // C0 control codes\x0d\n    (code >= 0x7F && code <= 0x9F) || // C1 control codes\x0d\n    (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\x0d\n    (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\x0d\n    // Combining Diacritical Marks for Symbols\x0d\n    (code >= 0x20D0 && code <= 0x20FF) ||\x0d\n    (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\x0d\n    (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\x0d\n    (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\x0d\n}\x0d\n\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const icu = internalBinding('icu');\x0d\n  // icu.getStringWidth(string\x2C ambiguousAsFullWidth\x2C expandEmojiSequence)\x0d\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\x0d\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\x0d\n  // best thing possible at the moment\x2C since it's difficult to know what\x0d\n  // the receiving end supports.\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars) {\x0d\n      str = stripVTControlCharacters(str);\x0d\n    }\x0d\n    for (let i = 0; i < str.length; i++) {\x0d\n      // Try to avoid calling into C++ by first handling the ASCII portion of\x0d\n      // the string. If it is fully ASCII\x2C we skip the C++ part.\x0d\n      const code = str.charCodeAt(i);\x0d\n      if (code >= 127) {\x0d\n        width += icu.getStringWidth(StringPrototypeNormalize(StringPrototypeSlice(str\x2C i)\x2C 'NFC'));\x0d\n        break;\x0d\n      }\x0d\n      width += code >= 32 ? 1 : 0;\x0d\n    }\x0d\n    return width;\x0d\n  };\x0d\n} else {\x0d\n  /**\x0d\n   * Returns the number of columns required to display the given string.\x0d\n   */\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars)\x0d\n      str = stripVTControlCharacters(str);\x0d\n    str = StringPrototypeNormalize(str\x2C 'NFC');\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      const code = StringPrototypeCodePointAt(char\x2C 0);\x0d\n      if (isFullWidthCodePoint(code)) {\x0d\n        width += 2;\x0d\n      } else if (!isZeroWidthCodePoint(code)) {\x0d\n        width++;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return width;\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Returns true if the character represented by a given\x0d\n   * Unicode code point is full-width. Otherwise returns false.\x0d\n   */\x0d\n  const isFullWidthCodePoint = (code) => {\x0d\n    // Code points are partially derived from:\x0d\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\x0d\n    return code >= 0x1100 && (\x0d\n      code <= 0x115f ||  // Hangul Jamo\x0d\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\x0d\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\x0d\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\x0d\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\x0d\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\x0d\n      (code >= 0x3250 && code <= 0x4dbf) ||\x0d\n      // CJK Unified Ideographs .. Yi Radicals\x0d\n      (code >= 0x4e00 && code <= 0xa4c6) ||\x0d\n      // Hangul Jamo Extended-A\x0d\n      (code >= 0xa960 && code <= 0xa97c) ||\x0d\n      // Hangul Syllables\x0d\n      (code >= 0xac00 && code <= 0xd7a3) ||\x0d\n      // CJK Compatibility Ideographs\x0d\n      (code >= 0xf900 && code <= 0xfaff) ||\x0d\n      // Vertical Forms\x0d\n      (code >= 0xfe10 && code <= 0xfe19) ||\x0d\n      // CJK Compatibility Forms .. Small Form Variants\x0d\n      (code >= 0xfe30 && code <= 0xfe6b) ||\x0d\n      // Halfwidth and Fullwidth Forms\x0d\n      (code >= 0xff01 && code <= 0xff60) ||\x0d\n      (code >= 0xffe0 && code <= 0xffe6) ||\x0d\n      // Kana Supplement\x0d\n      (code >= 0x1b000 && code <= 0x1b001) ||\x0d\n      // Enclosed Ideographic Supplement\x0d\n      (code >= 0x1f200 && code <= 0x1f251) ||\x0d\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\x0d\n      // Emoticons 0x1f600 - 0x1f64f\x0d\n      (code >= 0x1f300 && code <= 0x1f64f) ||\x0d\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\x0d\n      (code >= 0x20000 && code <= 0x3fffd)\x0d\n    );\x0d\n  };\x0d\n\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove all VT control characters. Use to estimate displayed string width.\x0d\n */\x0d\nfunction stripVTControlCharacters(str) {\x0d\n  validateString(str\x2C 'str');\x0d\n\x0d\n  return RegExpPrototypeSymbolReplace(ansi\x2C str\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  identicalSequenceRange\x2C\x0d\n  inspect\x2C\x0d\n  inspectDefaultOptions\x2C\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  getStringWidth\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n  isZeroWidthCodePoint\x2C\x0d\n};\x0d\n
code-source-info,0x1e2ad2b8b0c,21,74795,74964,C0O74795C8O74826C18O74875C24O74826C29O74906C32O74913C37O74961,,
code-creation,JS,10,409246,0x1e2ad2bd964,762,formatWithOptionsInternal node:internal/util/inspect:2179:35,0x22671c88d58,~
code-source-info,0x1e2ad2bd
code-creation,JS,10,409496,0x1e2ad2be024,269,value node:internal/console/constructor:276:20,0x22671ca2c68,~
code-source-info,0x1e2ad2be024,44,8352,9834,C0O8410C5O8452C7O8457C9O8456C13O8499C15O8516C17O8512C21O8550C23O8567C29O8582C34O8619C38O8645C44O8672C49O8718C55O8725C60O8743C68O8747C75O8799C91O8857C99O8808C106O8893C108O8914C113O8940C123O8965C128O9007C133O9007C138O9021C145O9346C153O9346C160O9369C165O9394C176O9394C182O9433C187O9433C206O9633C216O9637C222O9673C224O9673C238O9781C239O9788C250O9788C268O9833,,
code-creation,JS,10,409638,0x1e2ad2be2cc,127,listenerCount node:events:853:23,0x22671c8c088,~
code-source-info,0x1e2ad2be2cc,23,25271,25984,C0O25313C5O25327C7O25379C9O25385C13O25400C17O25447C22O25480C24O25496C29O25538C33O25523C43O25555C44O25574C46O25583C47O25596C51O25635C56O25683C58O25710C60O25728C65O25738C67O25738C72O25761C74O25775C80O25779C87O25805C91O25809C98O25818C103O25847C108O25744C113O25697C117O25894C119O25910C120O25947C124O25954C125O25972C126O25981,,
code-creation,JS,10,409905,0x1e2ad2be47c,42,Writable.write node:internal/streams/writable:496:36,0x15e3f44a3e0,~
code-source-info,0x1e2ad2be47c,104,15754,15944,C0O15781C11O15844C14O15864C17O15891C32O15898C41O15941,,
code-creation,JS,10,410039,0x1e2ad2be694,401,_write node:internal/streams/writable:445:16,0x15e3f449818,~
code-source-info,0x1e2ad2be
code-creation,JS,10,410210,0x1e2ad2beadc,425,writeOrBuffer node:internal/streams/writable:540:23,0x15e3f449870,~
code-source-info,0x1e2ad2beadc
code-creation,JS,10,410339,0x1e2ad2bee6c,61,set node:internal/streams/writable:254:8,0x15e3f44a000,~
code-source-info,0x1e2ad2bee6c,104,8462,8632,C0O8479C4O8501C6O8506C11O8521C15O8539C17O8544C26O8555C31O8552C37O8590C39O8595C48O8607C50O8606C55O8603C60O8631,,
code-creation,JS,10,410402,0x1e2ad2befec,26,Socket._write node:net:963:35,0x3ba13652410,~
code-source-info,0x1e2ad2befec,88,25990,26065,C0O26021C19O26021C25O26064,,
code-creation,JS,10,410496,0x1e2ad2bf294,217,Socket._writeGeneric node:net:921:42,0x3ba136522b8,~
code-source-info,0x1e2ad2bf294,88,24907,25845,C0O24907C21O25113C37O25132C41O25150C45O25163C49O25185C53O25207C66O25207C72O25440C83O25440C89O25469C90O25476C91O25485C92O25503C96O25514C98O25536C102O25557C108O25573C115O25580C118O25576C124O25573C128O25607C129O25620C130O25636C135O25636C139O25660C141O25668C145O25685C161O25691C169O25735C188O25741C194O25792C200O25804C204O25809C207O25836C211O25830C216O25844,,
code-creation,JS,10,410571,0x1e2ad2bf504,44,_unrefTimer node:net:505:52,0x3ba13651388,~
code-source-info,0x1e2ad2bf504,88,14386,14501,C0O14407C5O14415C9O14447C11O14453C13O14452C18O14471C20O14472C24O14483C29O14483C33O14431C38O14394C43O14500,,
code-creation,JS,10,410637,0x1e2ad2bf614,55,writeGeneric node:internal/stream_base_commons:147:22,0x15e3f4598d8,~
code-source-info,0x1e2ad2bf614,108,3750,3940,C0O3794C5O3815C7O3814C11O3794C17O3845C29O3845C35O3887C47O3887C52O3926C54O3937,,
code-creation,JS,10,410696,0x37307a3e504,47,createWriteWrap node:internal/stream_base_commons:109:25,0x15e3f459828,~
code-source-info,0x37307a3e504,108,2834,3059,C0O2870C5O2870C11O2892C13O2903C17O2916C19O2931C23O2953C24O2963C28O2975C29O2985C33O2993C34O3004C38O3015C40O3028C44O3045C46O3056,,
code-creation,JS,10,410808,0x37307a3e904,215,handleWriteReq node:internal/stream_base_commons:45:24,0x15e3f459778,~
code-source-info,0x37307a3e904,108,1221,2086,C0O1256C5O1277C80O1350C85O1350C92O1381C99O1401C101O1400C106O1431C108O1442C112O1457C114O1468C115O1537C120O1537C126O1566C127O1625C132O1625C138O1652C139O1693C144O1693C150O1721C151O1823C156O1823C162O1850C163O1894C168O1901C173O1901C180O1949C185O1949C192O1982C199O2002C201O2001C206O2032C208O2043C212O2060C214O2071,,
code-creation,JS,10,410931,0x37307a3eb4c,91,afterWriteDispatched node:internal/stream_base_commons:155:30,0x15e3f459930,~
code-source-info,0x37307a3eb4c,108,3973,4261,C0O3993C2O4005C7O4021C9O4020C12O4003C16O4040C21O4070C23O4069C27O4050C31O4096C32O4104C37O4116C39O4130C45O4163C55O4126C61O4123C65O4171C66O4186C72O4206C80O4242C85O4242C90O4260,,
code-creation,JS,10,411007,0x37307a3ecfc,118,Readable.removeListener node:internal/streams/readable:1157:45,0x3ba13674898,~
code-source-info,0x37307a3ecfc,99,37260,37978,C0O37293C5O37326C10O37333C15O37343C20O37358C34O37358C40O37435C42O37442C47O37799C50O37807C58O37807C66O37858C68O37865C73O37884C81O37884C88O37906C93O37920C95O37926C104O37938C106O37937C111O37934C115O37964C117O37975,,
code-creation,JS,10,411069,0x37307a3ee84,13,destroyHooksExist node:internal/async_hooks:486:27,0xfca8d3ceb8,~
code-source-info,0x37307a3ee84,14,16849,16886,C0O16857C5O16873C8O16864C12O16883,,
code-creation,JS,10,411101,0x37307a3ef74,32,emitAfterScript node:internal/async_hooks:517:25,0xfca8d3d018,~
code-source-info,0x37307a3ef74,14,17609,17710,C0O17624C5O17637C8O17628C14O17651C19O17651C23O17682C26O17682C31O17709,,
code-creation,JS,10,411163,0x37307a3f0dc,159,popAsyncContext node:internal/async_hooks:553:25,0xfca8d3d178,~
code-source-info,0x37307a3f0dc,14,18745,19347,C0O18780C7O18798C9O18797C13O18816C14O18832C19O18839C20O18852C21O18858C24O18862C31O18885C36O18901C38O18900C44O18920C49O19004C54O19011C58O19037C59O19063C61O19075C65O19083C72O19099C77O19120C80O19131C87O19149C90O19146C93O19118C97O19163C102O19179C108O19209C115O19227C118O19236C121O19224C124O19196C128O19245C133O19271C138O19271C142O19281C150O19313C154O19326C155O19340C158O19344,,
code-creation,JS,10,411218,0x37307a3f2b4,13,enabledHooksExist node:internal/async_hooks:474:27,0xfca8d3cdb0,~
code-source-info,0x37307a3f2b4,14,16660,16695,C0O16668C5O16684C8O16675C12O16692,,
code-creation,JS,10,411375,0x37307a3f56c,618,processPromiseRejections node:internal/process/promises:221:34,0x22671c97568,~
script-source,29,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x2C\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x2C\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x2C\x0d\n  exitCodes: { kGenericUserError }\x2C\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x2C\x0d\n  }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst multipleResolvesDeprecate = deprecate(\x0d\n  () => {}\x2C\x0d\n  'The multipleResolves event has been deprecated.'\x2C\x0d\n  'DEP0160'\x2C\x0d\n);\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    if (process.emit('multipleResolves'\x2C type\x2C promise\x2C reason)) {\x0d\n      multipleResolvesDeprecate();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x2C\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x2C\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x2C\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x2C\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = kGenericUserError;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x37307a3f56c
code-creation,JS,10,411948,0x339fd10e5f4,25,setHasRejectionToWarn node:internal/process/promises:78:31,0x22671c96ef0,~
code-source-info,0x339fd10e5f4,29,2262,2324,C0O2275C7O2284C12O2307C19O2305C24O2323,,
code-creation,JS,10,412029,0x339fd10e73c,171,onWriteComplete node:internal/stream_base_commons:80:25,0x15e3f4597d0,~
code-source-info,0x339fd10e73c,108,2114,2806,C0O2128C8O2166C16O2128C21O2199C28O2206C30O2205C34O2237C40O2271C48O2308C55O2308C60O2329C61O2336C62O2458C63O2469C68O2492C76O2533C86O2492C92O2562C100O2599C105O2599C112O2637C117O2637C122O2655C123O2662C124O2673C126O2680C128O2679C132O2693C136O2700C138O2707C140O2706C144O2724C149O2753C157O2788C164O2788C170O2805,,
code-creation,JS,10,412103,0x339fd10e934,10, node:internal/stream_base_commons:38:66,0x15e3f459a38,~
code-source-info,0x339fd10e934,108,1047,1074,C0O1060C2O1066C9O1073,,
code-creation,JS,10,412138,0x339fd10ea0c,35,get node:internal/streams/duplex:159:8,0x3ba1366bda0,~
code-source-info,0x339fd10ea0c,97,5523,5738,C0O5544C6O5590C12O5631C13O5644C14O5673C19O5688C25O5706C30O5721C34O5731,,
code-creation,JS,10,412171,0x339fd10eb0c,5,get node:net:689:16,0x3ba136518d0,~
code-source-info,0x339fd10eb0c,88,18958,18997,C0O18980C4O18992,,
code-creation,JS,10,412195,0x339fd10ebe4,12,Socket.<computed> node:net:917:46,0x3ba13652220,~
code-source-info,0x339fd10ebe4,88,24820,24861,C0O24828C2O24833C6O24854C11O24860,,
code-creation,JS,10,412318,0x339fd10ee14,729,onwrite node:internal/streams/writable:607:17,0x15e3f449978,~
code-source-info,0x339fd10ee
code-creation,JS,10,412498,0x339fd10f39c,198,afterWrite node:internal/streams/writable:690:20,0x15e3f449a28,~
code-source-info,0x339fd10f39c,104,21898,22408,C0O21930C2O21936C11O21948C13O21947C18O21944C22O21991C24O21997C30O22009C35O22019C37O22017C43O22032C45O22030C48O22006C54O22045C59O22069C65O22076C69O22086C71O22108C74O22114C80O22125C85O22122C89O22150C97O22150C102O22190C112O22190C117O22202C123O22217C127O22226C129O22226C133O22175C137O22246C139O22256C145O22265C150O22279C155O22293C158O22293C162O22323C164O22333C170O22342C175O22353C180O22367C191O22367C197O22407,,
code-creation,JS,10,412569,0x339fd10f5e4,87, node:internal/console/constructor:358:10,0x121eb10d148,~
code-source-info,0x339fd10f5e4,44,11087,11921,C0O11308C7O11325C9O11321C17O11354C26O11373C31O11387C35O11415C40O11430C46O11832C54O11832C61O11855C66O11880C79O11880C86O11920,,
tick,0x7ffe2c22fe14,415882,0,0x0,8
tick,0x7ffe2c22fe14,431858,0,0x0,8
tick,0x7ffe2c22fe14,447837,0,0x0,8
tick,0x7ffe2c22fe14,463811,0,0x0,8
tick,0x7ffe2c22fe14,479839,0,0x0,8
tick,0x7ffe2c22fe14,495836,0,0x0,8
tick,0x7ffe2c22fe14,511021,0,0x0,8
tick,0x7ffe2c22fe14,525835,0,0x0,8
tick,0x7ffe2c22fe14,540864,0,0x0,8
tick,0x7ffe2c22fe14,556806,0,0x0,8
tick,0x7ffe2c22fe14,571859,0,0x0,8
tick,0x7ffe2c22fe14,587835,0,0x0,8
tick,0x7ffe2c22fe14,603824,0,0x0,8
tick,0x7ffe2c22fe14,619784,0,0x0,8
tick,0x7ffe2c22fe14,635837,0,0x0,8
tick,0x7ffe2c22fe14,651842,0,0x0,8
tick,0x7ffe2c22fe14,666926,0,0x0,8
tick,0x7ffe2c22fe14,681885,0,0x0,8
tick,0x7ffe2c22fe14,697581,0,0x0,8
tick,0x7ffe2c22fe14,712766,0,0x0,8
tick,0x7ffe2c22fe14,727876,0,0x0,8
tick,0x7ffe2c22fe14,743803,0,0x0,8
tick,0x7ffe2c22fe14,758819,0,0x0,8
tick,0x7ffe2c22fe14,773788,0,0x0,8
tick,0x7ffe2c22fe14,788810,0,0x0,8
tick,0x7ffe2c22fe14,804824,0,0x0,8
tick,0x7ffe2c22fe14,819833,0,0x0,8
tick,0x7ffe2c22fe14,835894,0,0x0,8
tick,0x7ffe2c22fe14,851867,0,0x0,8
tick,0x7ffe2c22fe14,867874,0,0x0,8
tick,0x7ffe2c22fe14,882862,0,0x0,8
tick,0x7ffe2c22fe14,897823,0,0x0,8
tick,0x7ffe2c22fe14,913895,0,0x0,8
tick,0x7ffe2c22fe14,928869,0,0x0,8
tick,0x7ffe2c22fe14,943882,0,0x0,8
tick,0x7ffe2c22fe14,959874,0,0x0,8
tick,0x7ffe2c22fe14,975901,0,0x0,8
tick,0x7ffe2c22fe14,991911,0,0x0,8
tick,0x7ffe2c22fe14,1007872,0,0x0,8
tick,0x7ffe2c22fe14,1023863,0,0x0,8
tick,0x7ffe2c22fe14,1039905,0,0x0,8
tick,0x7ffe2c22fe14,1055422,0,0x0,8
tick,0x7ffe2c22fe14,1070405,0,0x0,8
tick,0x7ffe2c22fe14,1086403,0,0x0,8
tick,0x7ffe2c22fe14,1102434,0,0x0,8
tick,0x7ffe2c22fe14,1118025,0,0x0,8
tick,0x7ffe2c22fe14,1134043,0,0x0,8
tick,0x7ffe2c22fe14,1150012,0,0x0,8
tick,0x7ffe2c22fe14,1165078,0,0x0,8
tick,0x7ffe2c22fe14,1180448,0,0x0,8
tick,0x7ffe2c22fe14,1195476,0,0x0,8
tick,0x7ffe2c22fe14,1211487,0,0x0,8
tick,0x7ffe2c22fe14,1226467,0,0x0,8
tick,0x7ffe2c22fe14,1241459,0,0x0,8
tick,0x7ffe2c22fe14,1256541,0,0x0,8
tick,0x7ffe2c22fe14,1271580,0,0x0,8
tick,0x7ffe2c22fe14,1286846,0,0x0,8
tick,0x7ffe2c22fe14,1303614,0,0x0,8
tick,0x7ffe2c22fe14,1317917,0,0x0,8
tick,0x7ffe2c22fe14,1332929,0,0x0,8
tick,0x7ffe2c22fe14,1347794,0,0x0,8
tick,0x7ffe2c22fe14,1363780,0,0x0,8
tick,0x7ffe2c22fe14,1378820,0,0x0,8
tick,0x7ffe2c22fe14,1394839,0,0x0,8
tick,0x7ffe2c22fe14,1410804,0,0x0,8
tick,0x7ffe2c22fe14,1426821,0,0x0,8
tick,0x7ffe2c22fe14,1442811,0,0x0,8
tick,0x7ffe2c22fe14,1458856,0,0x0,8
tick,0x7ffe2c22fe14,1474839,0,0x0,8
tick,0x7ffe2c22fe14,1490818,0,0x0,8
tick,0x7ffe2c22fe14,1506850,0,0x0,8
tick,0x7ffe2c22fe14,1522829,0,0x0,8
tick,0x7ffe2c22fe14,1538812,0,0x0,8
tick,0x7ffe2c22fe14,1554826,0,0x0,8
tick,0x7ffe2c22fe14,1570804,0,0x0,8
tick,0x7ffe2c22fe14,1586787,0,0x0,8
tick,0x7ffe2c22fe14,1602804,0,0x0,8
tick,0x7ffe2c22fe14,1618799,0,0x0,8
tick,0x7ffe2c22fe14,1634909,0,0x0,8
tick,0x7ffe2c22fe14,1650804,0,0x0,8
tick,0x7ffe2c22fe14,1666952,0,0x0,8
tick,0x7ffe2c22fe14,1682815,0,0x0,8
tick,0x7ffe2c22fe14,1697869,0,0x0,8
tick,0x7ffe2c22fe14,1712769,0,0x0,8
tick,0x7ffe2c22fe14,1728781,0,0x0,8
tick,0x7ffe2c22fe14,1743859,0,0x0,8
tick,0x7ffe2c22fe14,1758829,0,0x0,8
tick,0x7ffe2c22fe14,1773840,0,0x0,8
tick,0x7ffe2c22fe14,1789814,0,0x0,8
tick,0x7ffe2c22fe14,1804856,0,0x0,8
tick,0x7ffe2c22fe14,1820779,0,0x0,8
tick,0x7ffe2c22fe14,1836861,0,0x0,8
tick,0x7ffe2c22fe14,1852345,0,0x0,8
tick,0x7ffe2c22fe14,1868384,0,0x0,8
tick,0x7ffe2c22fe14,1883970,0,0x0,8
tick,0x7ffe2c22fe14,1899999,0,0x0,8
tick,0x7ffe2c22fe14,1915928,0,0x0,8
tick,0x7ffe2c22fe14,1931951,0,0x0,8
tick,0x7ffe2c22fe14,1946960,0,0x0,8
tick,0x7ffe2c22fe14,1961953,0,0x0,8
tick,0x7ffe2c22fe14,1977766,0,0x0,8
tick,0x7ffe2c22fe14,1993777,0,0x0,8
tick,0x7ffe2c22fe14,2009861,0,0x0,8
tick,0x7ffe2c22fe14,2025838,0,0x0,8
tick,0x7ffe2c22fe14,2040816,0,0x0,8
tick,0x7ffe2c22fe14,2055851,0,0x0,8
tick,0x7ffe2c22fe14,2070932,0,0x0,8
tick,0x7ffe2c22fe14,2087073,0,0x0,8
tick,0x7ffe2c22fe14,2101924,0,0x0,8
tick,0x7ffe2c22fe14,2117902,0,0x0,8
tick,0x7ffe2c22fe14,2133893,0,0x0,8
tick,0x7ffe2c22fe14,2148857,0,0x0,8
code-creation,JS,10,2156657,0x339fd10f974,444,onconnection node:net:2098:22,0x3ba13651228,~
code-source-info,0x339fd10f
code-creation,JS,10,2157100,0x339fd1100bc,71,Socket.read node:net:766:33,0x3ba13651c38,~
code-source-info,0x339fd1100bc,88,20928,21112,C0O20937C2O20946C4O20945C9O20964C15O20983C21O21007C26O21015C32O21031C35O21031C39O21059C44O21073C49O21080C54O21090C59O21095C64O21095C70O21109,,
code-creation,JS,10,2157492,0x339fd110414,878,Readable.read node:internal/streams/readable:645:35,0x3ba13674558,~
code-source-info,0x339fd
code-creation,JS,10,2157887,0x339fd110a5c,10, node:internal/streams/readable:53:66,0x3ba13673cc8,~
code-source-info,0x339fd110a5c,99,1894,1921,C0O1907C2O1913C9O1920,,
code-creation,JS,10,2158014,0x339fd110b5c,166,howMuchToRead node:internal/streams/readable:628:23,0x3ba136735e8,~
code-source-info,0x339fd110b5c,99,19415,19888,C0O19431C1O19437C6O19452C12O19459C19O19475C21O19474C27O19485C29O19483C34O19493C39O19506C40O19515C41O19519C43O19530C45O19529C51O19540C53O19538C58O19553C63O19565C65O19574C66O19578C71O19582C77O19645C79O19655C85O19666C87O19664C92O19676C97O19691C103O19719C108O19732C112O19725C116O19745C120O19752C121O19771C125O19778C126O19802C130O19793C135O19815C137O19824C138O19828C140O19841C146O19852C148O19850C153O19860C158O19874C165O19885,,
code-creation,JS,10,2158179,0x339fd110e9c,137,Socket._read node:net:705:34,0x3ba13651960,~
code-source-info,0x339fd110e9c,88,19369,19693,C0O19369C13O19378C32O19435C44O19473C50O19378C55O19493C58O19502C67O19522C73O19538C81O19538C85O19579C88O19584C101O19584C109O19632C112O19642C117O19650C123O19666C131O19666C136O19692,,
code-creation,JS,10,2158275,0x339fd1110b4,70,tryReadStart node:net:695:22,0x3ba136508c8,~
code-source-info,0x339fd1110b4,88,19030,19266,C0O19086C8O19086C12O19131C18O19147C22O19177C27O19185C32O19185C37O19201C39O19222C46O19234C57O19230C63O19222C69O19265,,
code-creation,JS,10,2158406,0x339fd1111fc,31,connectionListener node:_http_server:644:28,0x395cad6fcb8,~
code-source-info,0x339fd1111fc,172,21603,21725,C0O21617C7O21650C10O21650C24O21617C30O21724,,
code-creation,JS,10,2158463,0x339fd111304,40,getOrSetAsyncId node:internal/async_hooks:421:25,0xfca8d3cbf8,~
code-source-info,0x339fd111304,14,15065,15237,C0O15079C7O15121C10O15083C17O15146C19O15159C22O15177C23O15188C29O15221C33O15219C39O15234,,
code-creation,JS,10,2158725,0x339fd11179c,655,connectionListenerInternal node:_http_server:650:36,0x395cad6fd10,~
code-source-info,0x339fd11179c
code-creation,JS,10,2158961,0x339fd111c74,10, node:_http_server:96:64,0x395cad70578,~
code-source-info,0x339fd111c74,172,2854,2881,C0O2867C2O2873C9O2880,,
code-creation,JS,10,2159051,0x339fd111dc4,56,alloc node:internal/freelist:15:8,0x395cad5d9a8,~
code-source-info,0x339fd111dc4,168,217,335,C0O217C2O239C7O244C13O251C18O269C23O274C28O274C36O289C39O307C50O289C55O330,,
code-creation,JS,10,2159144,0x339fd111f0c,65,parsersCb node:_http_common:160:65,0x395cad5ace0,~
code-source-info,0x339fd111f0c,167,5326,5607,C0O5349C5O5349C11O5372C14O5372C18O5398C20O5405C25O5417C29O5439C31O5446C36O5466C40O5496C42O5503C47O5512C51O5531C53O5538C58O5558C62O5590C64O5604,,
code-creation,JS,10,2159238,0x339fd112954,82,cleanParser node:_http_common:227:21,0x395cad5abd8,~
code-source-info,0x339fd112954,167,7359,7734,C0O7373C2O7389C6O7398C8O7410C12O7419C13O7433C17O7444C18O7460C22O7471C23O7487C27O7498C29O7522C31O7520C35O7543C37O7550C41O7567C45O7578C47O7585C51O7597C55O7608C57O7615C61O7627C65O7638C66O7655C70O7667C71O7685C75O7696C76O7724C81O7733,,
code-creation,JS,10,2159446,0x339fd112e1c,41,isLenient node:_http_common:250:19,0x395cad5ac88,~
code-source-info,0x339fd112e1c,167,7987,8160,C0O7995C8O8022C12O8044C16O8058C22O8071C25O8079C33O8079C38O8131C40O8157,,
code-creation,JS,10,2159504,0x339fd112f2c,14,HTTPServerAsyncResource node:_http_server:189:14,0x395cad705d0,~
code-source-info,0x339fd112f2c,172,7292,7363,C0O7314C2O7324C6O7337C8O7349C13O7362,,
code-creation,JS,10,2159723,0x339fd11360c,70,Socket.resume node:net:757:35,0x3ba13651ba8,~
code-source-info,0x339fd11360c,88,20707,20889,C0O20715C2O20724C4O20723C9O20742C15O20761C21O20785C26O20793C32O20809C35O20809C39O20837C44O20851C49O20858C54O20868C59O20875C64O20875C69O20886,,
code-creation,JS,10,2159826,0x339fd11378c,162,Readable.resume node:internal/streams/readable:1225:37,0x3ba136749c8,~
code-source-info,0x339fd11378c,99,39681,40196,C0O39708C5O39727C7O39738C9O39737C15O39748C17O39746C22O39758C27O39772C35O39772C39O39910C42O39916C48O39927C53O39924C57O39945C59O39955C65O39966C67O39964C72O39986C77O40002C80O40008C86O40019C89O40016C95O40050C98O40056C104O40067C109O40064C113O40090C116O40090C121O40119C124O40125C130O40136C135O40133C139O40151C142O40157C148O40169C150O40168C155O40165C159O40181C161O40193,,
code-creation,JS,10,2159937,0x339fd113974,62,resume node:internal/streams/readable:1245:16,0x3ba13673928,~
code-source-info,0x339fd113974,99,40216,40379,C0O40237C2O40248C4O40247C10O40258C12O40256C17O40276C22O40290C25O40296C31O40307C34O40304C38O40330C41O40338C55O40338C61O40378,,
code-creation,JS,11,2160084,0x7ff62c52cf00,2116,Readable.on node:internal/streams/readable:1125:33,0x3ba13674808,^
code-source-info,0x7ff62c52cf00,99,36124,37154,,,
code-creation,JS,11,2160130,0x7ff62c525540,1404,set C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:359:23,0x2ce89f03168,^
code-source-info,0x7ff62c525540,140,8451,9387,,,
code-creation,JS,11,2160170,0x7ff62c525b00,380,get node:internal/streams/writable:222:8,0x15e3f449e48,^
code-source-info,0x7ff62c525b00,104,7414,7511,,,
code-creation,JS,10,2160250,0x339fd113eac,14,generateSocketListenerWrapper node:_http_server:1192:39,0x395cad704f8,~
code-source-info,0x339fd113eac,172,38821,39353,C0O38821C9O38843C13O39350,,
code-creation,JS,10,2160324,0x339fd11418c,2,get hasSubscribers node:diagnostics_channel:200:21,0x15e3f45c910,~
code-source-info,0x339fd11418c,109,4561,4589,C0O4571C1O4584,,
code-creation,JS,10,2160425,0x339fd11427c,146,resume_ node:internal/streams/readable:1252:17,0x3ba13673980,~
code-source-info,0x339fd11427c,99,40399,40708,C0O40420C10O40443C12O40442C18O40453C20O40451C25O40463C30O40420C35O40474C37O40484C43O40493C48O40505C53O40526C60O40526C65O40545C68O40551C74O40563C76O40562C81O40559C85O40591C93O40591C98O40610C101O40610C105O40627C107O40637C113O40649C118O40658C121O40646C127O40671C132O40697C139O40697C145O40707,,
code-creation,JS,10,2160520,0x339fd11444c,60,onSocketResume node:_http_server:1157:24,0x395cad703f0,~
code-source-info,0x339fd11444c,172,37850,38365,C0O38195C6O38216C11O38216C15O38230C16O38237C17O38257C23O38274C28O38282C34O38303C40O38319C44O38337C49O38345C54O38345C59O38364,,
code-creation,JS,10,2160587,0x339fd1145a4,56,flow node:internal/streams/readable:1278:14,0x3ba136739d8,~
code-source-info,0x339fd1145a4,99,41080,41222,C0O41115C5O41134C13O41134C17O41192C19O41166C21O41165C27O41176C29O41174C34O41186C39O41202C44O41202C50O41152C55O41221,,
code-creation,JS,10,2160836,0x339fd11483c,251,parserOnHeadersComplete node:_http_common:72:33,0x395cad5a970,~
code-source-info,0x339fd11483c,167,2861,4411,C0O3053C3O3070C8O3094C12O3145C18O3160C20O3176C24O3192C28O3235C34O3246C36O3258C40O3345C44O3363C50O3414C57O3421C59O3420C66O3477C69O3516C71O3534C77O3532C84O3572C86O3598C90O3617C92O3643C96O3662C98O3688C108O3704C112O3683C116O3723C126O3761C133O3769C142O3837C146O3753C150O3862C152O3875C156O3885C158O3902C162O3934C167O4024C173O4039C178O4049C183O4071C188O4053C194O4102C199O4102C205O4136C211O4195C213O4213C218O4220C221O4211C227O4267C229O4287C233O4306C235O4329C239O4370C244O4370C250O4408,,
code-creation,JS,10,2160974,0x339fd114c3c,182,IncomingMessage node:_http_incoming:53:25,0x395cad5f350,~
code-source-info,0x339fd114c3c,169,1958,2960,C0O1976C2O1996C6O2015C11O2062C24O2103C29O2112C34O2112C40O2149C46O2176C50O2189C52O2201C56O2216C57O2238C61O2249C62O2271C66O2282C67O2299C71O2310C72O2324C76O2336C78O2341C82O2351C86O2362C88O2367C92O2382C96O2390C98O2406C102O2415C104O2420C108O2431C112O2442C114O2447C118O2463C122O2471C124O2488C128O2497C129O2523C133O2535C134O2548C138O2562C139O2575C143O2616C145O2625C149O2634C150O2646C154O2688C155O2704C159O2715C160O2734C164O2745C166O2757C170O2772C171O2788C175O2936C176O2949C181O2959,,
code-creation,JS,10,2161048,0x339fd115d4c,10,get node:internal/streams/readable:1453:18,0x3ba13674ef8,~
code-source-info,0x339fd115d4c,99,45477,45537,C0O45501C5O45516C9O45530,,
code-creation,JS,10,2161168,0x339fd11671c,126,_addHeaderLines node:_http_incoming:247:25,0x395cad5f3a8,~
code-source-info,0x339fd11671c,169,7487,7941,C0O7505C4O7528C10O7547C12O7567C18O7586C20O7603C24O7621C26O7626C31O7642C35O7654C37O7666C39O7665C45O7699C47O7715C51O7733C53O7738C58O7753C62O7765C64O7777C66O7776C70O7802C74O7834C76O7839C78O7839C83O7868C90O7890C96O7905C99O7902C109O7868C114O7846C120O7821C125O7940,,
code-creation,JS,10,2161355,0x339fd116c9c,768,parserOnIncoming node:_http_server:1030:26,0x395cad70340,~
code-source-info,0x339fd116c9c
code-creation,JS,10,2161491,0x339fd117224,36,resetSocketTimeout node:_http_server:1149:28,0x395cad70398,~
code-source-info,0x339fd117224,172,37664,37823,C0O37704C6O37730C7O37737C8O37750C13O37768C24O37750C29O37786C30O37812C35O37822,,
code-creation,JS,10,2161533,0x339fd11732c,12,get node:internal/streams/writable:1059:8,0x15e3f44aa78,~
code-source-info,0x339fd11732c,104,32162,32259,C0O32193C5O32216C7O32238C11O32252,,
code-creation,JS,10,2161640,0x339fd11772c,241,ServerResponse node:_http_server:195:24,0x395cad6f9f8,~
code-source-info,0x339fd11772c,172,7393,8322,C0O7413C5O7429C10O7429C16O7463C23O7470C28O7482C29O7496C33O7510C35O7519C39O7529C40O7543C44O7554C45O7568C49O7580C50O7602C54O7624C61O7641C66O7652C73O7669C78O7681C80O7716C85O7736C88O7817C93O7825C98O7716C104O7829C105O7714C109O7844C110O7865C114O7884C122O7888C128O7916C135O7932C143O8025C148O8041C153O8066C161O8094C169O8123C192O7916C197O8171C202O8175C207O8204C209O8225C212O8225C215O8223C219O8253C226O8264C229O8299C234O8253C240O8321,,
code-creation,JS,10,2161759,0x339fd117c1c,292,OutgoingMessage node:_http_outgoing:109:25,0x395cad64918,~
code-source-info,0x339fd117c1c,170,3827,5438,C0O3842C5O3849C10O3849C15O4020C17O4036C21O4345C22O4361C26O4371C27O4385C31O4396C32O4411C36O4425C37O4436C41O4448C42O4469C46O4481C47O4502C51O4513C52O4549C56O4561C57O4584C61O4595C62O4628C66O4639C67O4653C71O4665C72O4689C76O4701C77O4722C81O4734C82O4750C86O4764C87O4789C91O4801C93O4806C97O4821C101O4829C102O4849C106O4860C107O4874C111O4885C113O4899C117O4908C119O4913C123O4925C127O4939C128O4953C132O4965C133O4982C137O4994C139O4999C143O5008C147O5016C149O5021C154O5037C158O5046C160O5051C164O5067C168O5075C169O5088C173O5102C175O5107C179O5116C183O5127C184O5140C188O5151C190O5156C194O5169C198O5182C199O5205C203O5215C205O5237C207O5235C211O5247C213O5252C217O5262C221O5273C223O5278C236O5303C249O5322C252O5322C255O5294C259O5352C261O5357C274O5396C286O5387C291O5437,,
code-creation,JS,10,2161963,0x339fd118cc4,24,hasObserver node:internal/perf/observe:570:21,0x15e3f462d48,~
code-source-info,0x339fd118cc4,110,16473,16575,C0O16506C3O16506C8O16532C15O16553C20O16568C23O16572,,
code-creation,JS,10,2162005,0x339fd11a144,67,getObserverType node:internal/perf/observe:134:25,0x15e3f462980,~
code-source-info,0x339fd11a144,110,3020,3344,C0O3032C40O3064C44O3102C45O3122C49O3163C50O3182C54O3222C55O3240C59O3279C60O3297C64O3336C66O3343,,
code-creation,JS,10,2162046,0x339fd11a29c,13,isTraceHTTPEnabled node:internal/http:40:28,0x395cad683b8,~
code-source-info,0x339fd11a29c,171,778,832,C0O786C8O793C12O829,,
code-creation,JS,10,2162110,0x339fd11a64c,71,assignSocket node:_http_server:282:62,0x395cad70680,~
code-source-info,0x339fd11a64c,172,10341,10584,C0O10366C6O10387C11O10393C16O10387C17O10433C19O10453C23O10471C34O10471C40O10510C42O10522C46O10540C54O10540C60O10572C65O10572C70O10583,,
code-creation,JS,10,2162172,0x339fd11a81c,153,socketListenerWrap node:_http_server:1193:37,0x339fd113e00,~
code-source-info,0x339fd11a81c,172,38877,39349,C0O38905C7O38909C12O38916C19O38925C23O38942C37O38942C43O39036C49O39053C54O39067C59O39074C64O39084C68O39061C72O39095C77O39118C82O39125C87O39135C91O39112C95O39155C100O39182C105O39189C110O39199C114O39176C118O39223C120O39234C121O39249C123O39256C130O39273C135O39296C140O39311C145O39296C150O39333C152O39344,,
code-creation,JS,10,2162282,0x339fd11aa14,77,set node:_http_outgoing:254:16,0x395cad65308,~
code-source-info,0x339fd11aa14,170,7961,8105,C0O7987C2O7992C4O7999C6O7998C9O7992C14O8023C21O8026C26O8028C33O8043C35O8048C37O8047C43O8056C48O8058C55O8010C60O7974C64O8080C66O8085C71O8094C76O8104,,
code-creation,JS,10,2162469,0x339fd11ab9c,82,_flush node:_http_outgoing:1166:51,0x395cad65e48,~
code-source-info,0x339fd11ab9c,170,35325,35757,C0O35348C2O35353C4O35352C8O35368C10O35389C16O35490C21O35490C27O35528C33O35629C38O35629C44O35652C50O35668C52O35667C57O35690C59O35695C63O35707C67O35728C75O35728C81O35756,,
code-creation,JS,10,2162532,0x339fd11ad1c,63,get node:internal/streams/writable:1000:8,0x15e3f44a810,~
code-source-info,0x339fd11ad1c,104,30622,31033,C0O30649C5O30913C8O30929C16O30938C19O30954C28O30977C30O30976C36O30988C41O30998C43O30996C49O31007C51O31005C54O30985C59O31020C62O31026,,
code-creation,JS,10,2162578,0x339fd11ae5c,33,get node:internal/streams/writable:208:8,0x15e3f449d98,~
code-source-info,0x339fd11ae5c,104,7080,7155,C0O7085C2O7098C4O7097C10O7108C12O7106C17O7118C24O7131C26O7130C32O7153,,
code-creation,JS,10,2162790,0x339fd11afa4,136,_flushOutput node:_http_outgoing:1183:63,0x395cad65ea0,~
code-source-info,0x339fd11afa4,170,35824,36396,C0O35864C5O35875C10O35886C11O35903C16O35914C17O35931C18O35961C23O35983C28O35983C32O35998C34O36123C36O36128C38O36128C43O36193C45O36203C49O36164C54O36170C59O36180C64O36226C81O36226C87O36145C92O36110C96O36274C101O36274C105O36289C107O36305C111O36319C116O36340C120O36334C123O36319C128O36356C129O36372C133O36382C135O36393,,
code-creation,JS,10,2162978,0x339fd11b17c,92,get node:_http_incoming:112:16,0x395cad5f680,~
code-source-info,0x339fd11b17c,169,3379,3680,C0O3389C2O3399C4O3398C9O3419C12O3424C13O3434C17O3466C22O3497C24O3501C28O3535C30O3540C32O3547C34O3546C37O3540C42O3587C49O3608C52O3605C58O3620C61O3617C71O3587C76O3565C82O3522C86O3653C88O3664C91O3675,,
code-creation,JS,10,2163124,0x339fd11b374,216,_addHeaderLine node:_http_incoming:385:24,0x395cad5f458,~
code-source-info,0x339fd11b374,169,13310,14367,C0O13336C3O13344C9O13385C16O13385C22O13425C23O13434C30O13448C35O13462C43O13470C50O13537C52O13552C59O13583C61O13588C66O13604C86O13625C92O13595C98O13655C100O13667C106O13693C108O13702C113O13778C119O13821C124O13836C129O13836C136O13870C145O13892C151O13889C157O13926C163O14149C165O14157C170O14189C172O14201C178O14231C180O14236C189O14251C195O14243C201O14277C203O14285C208O14339C210O14351C215O14366,,
code-creation,JS,10,2163403,0x339fd11c1ec,743,matchKnownFields node:_http_incoming:279:26,0x395cad5f400,~
code-source-info,0x339fd11c1ec,169,8701,12665,C0O8740C52O8770C54O8780C61O8799C66O8810C68O8823C69O8831C71O8858C73O8868C80O8888C85O8900C87O8914C88O8922C90O8932C97O8952C102O8964C104O8978C105O8986C107O8996C114O9016C119O9028C121O9042C122O9050C124O9060C131O9080C136O9092C138O9112C139O9120C141O9130C148O9150C153O9162C155O9182C156O9190C158O9217C160O9227C167O9249C172O9263C174O9279C175O9287C177O9297C184O9319C189O9333C191O9355C192O9363C194O9373C201O9395C206O9409C208O9431C209O9439C211O9449C218O9471C223O9485C225O9507C226O9515C228O9525C235O9547C240O9561C242O9583C243O9591C245O9618C247O9628C254O9651C259O9666C261O9683C262O9691C264O9701C271O9724C276O9739C278O9756C279O9764C281O9774C288O9797C293O9812C295O9835C296O9843C298O9870C300O9880C307O9904C312O9929C314O9947C315O9955C317O9965C324O9989C329O10014C331O10038C332O10046C334O10074C336O10084C343O10110C348O10137C350O10157C351O10165C353O10175C360O10201C365O10228C367O10244C368O10252C370O10262C377O10288C382O10315C384O10341C385O10349C387O10377C389O10387C396O10414C401O10442C403O10463C404O10471C406O10499C408O10509C415O10537C420O10566C422O10588C423O10596C425O10606C432O10634C437O10663C439O10685C440O10693C442O10721C444O10731C451O10760C456O10790C458O10813C459O10821C461O10831C468O10860C473O10890C475O10913C476O10921C478O10931C485O10960C490O10990C492O11019C493O11027C495O11037C502O11066C507O11096C509O11125C510O11133C512O11161C514O11171C521O11201C526O11232C528O11256C529O11264C531O11292C533O11302C540O11333C545O11365C547O11396C548O11404C550O11414C557O11445C562O11477C564O11508C565O11516C567O11526C574O11557C579O11589C581O11620C582O11628C584O11656C586O11666C593O11698C598O11731C600O11763C601O11771C603O11781C610O11813C615O11846C617O11878C618O11886C620O11914C622O11924C629O11957C634O11991C636O12018C637O12026C639O12036C646O12069C651O12103C653O12136C654O12144C656O12154C663O12187C668O12221C670O12254C671O12262C673O12290C675O12300C682O12335C687O12371C689O12400C690O12408C692O12418C699O12453C704O12489C706O12518C707O12526C709O12541C713O12564C718O12580C721O12588C722O12597C727O12621C730O12621C737O12604C742O12662,,
tick,0x7ff6ac10fee2,2163919,0,0x0,0,0x7ff6abddaaf0,0x339fd11b3d8,0x339fd11b1c3,0x339fd116e25,0x339fd114930
code-creation,JS,11,2164072,0x7ff62c52d780,4516,matchKnownFields node:_http_incoming:279:26,0x395cad5f400,^
code-source-info,0x7ff62c52d780,169,8701,12665,,,
code-creation,JS,11,2164118,0x7ff62c525cc0,136,hasHooks node:internal/async_hooks:470:18,0xfca8d3cd58,^
code-source-info,0x7ff62c525cc0,14,16582,16630,,,
code-creation,JS,11,2164161,0x7ff62c525d80,1168,EventEmitter.init node:events:342:29,0x22671c8ad50,^
code-source-info,0x7ff62c525d80,23,10268,10950,,,
code-creation,JS,11,2164188,0x7ff62c526240,140,EventEmitter node:events:220:22,0x22671c8a880,^
code-source-info,0x7ff62c526240,23,6763,6813,,,
code-creation,JS,10,2164370,0x339fd11d43c,24,app C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\express.js:38:21,0x37307a36a88,~
code-source-info,0x339fd11d43c,135,747,801,C0O770C3O774C17O774C23O800,,
code-creation,JS,10,2164486,0x339fd11d5c4,106,handle C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\application.js:165:29,0x2ce89f02f38,~
code-source-info,0x339fd11d5c4,140,4043,4365,C0O4086C5O4128C12O4158C17O4179C25O4179C37O4213C42O4213C57O4140C63O4248C67O4267C73O4267C77O4306C80O4318C81O4325C82O4340C99O4340C105O4364,,
code-creation,JS,10,2164588,0x339fd11d88c,55,finalhandler C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\finalhandler\\index.js:77:23,0x2ce89f066e0,~
code-source-info,0x339fd11d88c,141,1477,2786,C0O1477C13O1512C19O1565C25O1572C29O1580C34O1584C42O1560C44O1656C48O1651C50O1667C54O2784,,
code-creation,JS,10,2164742,0x339fd11dc94,240,handle C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:136:31,0x2ce89f2c720,~
code-source-info,0x339fd11dc94,158,3375,8106,C0O3375C25O3406C27O3406C29O3415C40O3446C48O3458C53O3415C58O3477C59O3477C61O3498C69O3515C74O3498C82O3498C84O3542C86O3542C88O3565C89O3565C91O3585C92O3585C94O3607C95O3607C97O3701C99O3701C101O3747C104O3752C108O3747C110O3816C113O3820C117O3816C119O3846C122O3850C130O3846C132O3878C152O3878C157O3878C159O3951C164O3960C168O4046C171O4054C178O4061C183O4082C191O4094C196O4089C201O4087C203O4266C208O4278C212O4293C215O4315C224O4334C228O4309C232O4342C235O4342C239O8105,,
code-creation,JS,10,2164909,0x339fd11df94,137,getProtohost C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:546:22,0x2ce89f2c358,~
code-source-info,0x339fd11df94,158,12690,13063,C0O12700C6O12735C12O12742C18O12754C24O12758C29O12773C30O12789C31O12819C39O12819C45O12851C47O12863C56O12898C61O12927C68O12927C75O12947C83O12948C89O12966C91O12983C96O13000C103O13017C116O13032C120O13017C127O13000C136O13061,,
code-creation,JS,10,2165013,0x339fd11e1dc,121,restore C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:631:17,0x2ce89f2c4b8,~
code-source-info,0x339fd11e1dc,158,14253,14639,C0O14253C15O14279C19O14299C23O14306C29O14279C34O14279C36O14325C40O14345C44O14352C50O14325C55O14325C57O14374C59O14379C62O14387C66O14379C71O14406C76O14429C79O14426C82O14415C86O14439C97O14458C100O14452C103O14447C107O14396C112O14361C116O14471C120O14637,,
code-creation,JS,10,2165270,0x339fd11e5ac,602,next C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:177:16,0x339fd11dad0,~
code-source-info,0x339fd11e5ac
code-creation,JS,10,2165855,0x339fd11ea8c,29,getPathname C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:537:21,0x2ce89f2c300,~
code-source-info,0x339fd11ea8c,158,12534,12630,C3O12554C6O12561C11O12574C15O12584C27O12607C28O12624,,
code-creation,JS,10,2165958,0x339fd11ebcc,50,parseurl C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\parseurl\\index.js:35:19,0x2ce89f24368,~
code-source-info,0x339fd11ebcc,155,485,806,C0O509C5O516C7O569C8O585C9O610C14O624C17O628C24O685C26O698C27O725C30O734C35O751C37O763C41O772C43O795C49O804,,
code-creation,JS,10,2166040,0x339fd11ecec,35,fresh C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\parseurl\\index.js:153:16,0x2ce89f24470,~
code-source-info,0x339fd11ecec,155,2638,2808,C0O2659C9O2713C19O2761C24O2794C31O2799C34O2806,,
code-creation,JS,10,2166171,0x339fd11ee24,253,fastparse C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\parseurl\\index.js:95:20,0x2ce89f24418,~
code-source-info,0x339fd11ee24,155,1451,2477,C0O1461C6O1496C13O1496C21O1510C26O1534C29O1541C33O1551C34O1574C37O1592C39O1612C41O1785C44O1796C48O1790C53O1827C58O1827C135O1878C139O1926C146O1926C153O1964C160O1976C164O1964C170O2004C175O2004C181O2035C183O2241C186O2248C190O2258C191O1805C196O1772C200O2282C207O2306C216O2328C218O2337C222O2345C224O2354C228O2362C230O2375C234O2389C238O2416C240O2426C244O2438C246O2449C250O2465C252O2475,,
code-creation,JS,10,2166335,0x339fd11f0dc,62,Url node:url:69:13,0x22671cb4340,~
script-source,61,node:url,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  Int8Array\x2C\x0d\n  ObjectKeys\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { toASCII } = require('internal/idna');\x0d\nconst { encodeStr\x2C hexTable } = require('internal/querystring');\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_URL\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\n// This ensures setURLConstructor() is called before the native\x0d\n// URL::ToObject() method is used.\x0d\nconst { spliceOne } = require('internal/util');\x0d\n\x0d\n// WHATWG URL implementation provided by internal/url\x0d\nconst {\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL: _pathToFileURL\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  unsafeProtocol\x2C\x0d\n  hostlessProtocol\x2C\x0d\n  slashedProtocol\x2C\x0d\n} = require('internal/url');\x0d\n\x0d\nconst bindingUrl = internalBinding('url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n// Original url.parse() API\x0d\n\x0d\nfunction Url() {\x0d\n  this.protocol = null;\x0d\n  this.slashes = null;\x0d\n  this.auth = null;\x0d\n  this.host = null;\x0d\n  this.port = null;\x0d\n  this.hostname = null;\x0d\n  this.hash = null;\x0d\n  this.search = null;\x0d\n  this.query = null;\x0d\n  this.pathname = null;\x0d\n  this.path = null;\x0d\n  this.href = null;\x0d\n}\x0d\n\x0d\n// Reference: RFC 3986\x2C RFC 1808\x2C RFC 2396\x0d\n\x0d\n// define these here so at least they only have to be\x0d\n// compiled once on the first module load.\x0d\nconst protocolPattern = /^[a-z0-9.+-]+:/i;\x0d\nconst portPattern = /:[0-9]*$/;\x0d\nconst hostPattern = /^\\/\\/[^@/]+@[^@/]+/;\x0d\n\x0d\n// Special case for a simple path URL\x0d\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/;\x0d\n\x0d\nconst hostnameMaxLen = 255;\x0d\nconst {\x0d\n  CHAR_SPACE\x2C\x0d\n  CHAR_TAB\x2C\x0d\n  CHAR_CARRIAGE_RETURN\x2C\x0d\n  CHAR_LINE_FEED\x2C\x0d\n  CHAR_NO_BREAK_SPACE\x2C\x0d\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\x2C\x0d\n  CHAR_HASH\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LEFT_SQUARE_BRACKET\x2C\x0d\n  CHAR_RIGHT_SQUARE_BRACKET\x2C\x0d\n  CHAR_LEFT_ANGLE_BRACKET\x2C\x0d\n  CHAR_RIGHT_ANGLE_BRACKET\x2C\x0d\n  CHAR_LEFT_CURLY_BRACKET\x2C\x0d\n  CHAR_RIGHT_CURLY_BRACKET\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n  CHAR_DOUBLE_QUOTE\x2C\x0d\n  CHAR_SINGLE_QUOTE\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_SEMICOLON\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_CIRCUMFLEX_ACCENT\x2C\x0d\n  CHAR_GRAVE_ACCENT\x2C\x0d\n  CHAR_VERTICAL_LINE\x2C\x0d\n  CHAR_AT\x2C\x0d\n  CHAR_COLON\x2C\x0d\n} = require('internal/constants');\x0d\n\x0d\nlet urlParseWarned = false;\x0d\n\x0d\nfunction urlParse(url\x2C parseQueryString\x2C slashesDenoteHost) {\x0d\n  if (!urlParseWarned && getOptionValue('--pending-deprecation')) {\x0d\n    urlParseWarned = true;\x0d\n    process.emitWarning(\x0d\n      '`url.parse()` behavior is not standardized and prone to ' +\x0d\n      'errors that have security implications. Use the WHATWG URL API ' +\x0d\n      'instead. CVEs are not issued for `url.parse()` vulnerabilities.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0169'\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (url instanceof Url) return url;\x0d\n\x0d\n  const urlObject = new Url();\x0d\n  urlObject.parse(url\x2C parseQueryString\x2C slashesDenoteHost);\x0d\n  return urlObject;\x0d\n}\x0d\n\x0d\nfunction isIpv6Hostname(hostname) {\x0d\n  return (\x0d\n    StringPrototypeCharCodeAt(hostname\x2C 0) === CHAR_LEFT_SQUARE_BRACKET &&\x0d\n    StringPrototypeCharCodeAt(hostname\x2C hostname.length - 1) ===\x0d\n    CHAR_RIGHT_SQUARE_BRACKET\x0d\n  );\x0d\n}\x0d\n\x0d\n// This prevents some common spoofing bugs due to our use of IDNA toASCII. For\x0d\n// compatibility\x2C the set of characters we use here is the *intersection* of\x0d\n// "forbidden host code point" in the WHATWG URL Standard [1] and the\x0d\n// characters in the host parsing loop in Url.prototype.parse\x2C with the\x0d\n// following additions:\x0d\n//\x0d\n// - ':' since this could cause a "protocol spoofing" bug\x0d\n// - '@' since this could cause parts of the hostname to be confused with auth\x0d\n// - '[' and ']' since this could cause a non-IPv6 hostname to be interpreted\x0d\n//   as IPv6 by isIpv6Hostname above\x0d\n//\x0d\n// [1]: https://url.spec.whatwg.org/#forbidden-host-code-point\x0d\nconst forbiddenHostChars = /[\\0\\t\\n\\r #%/:<>?@[\\\\\\]^|]/;\x0d\n// For IPv6\x2C permit '['\x2C ']'\x2C and ':'.\x0d\nconst forbiddenHostCharsIpv6 = /[\\0\\t\\n\\r #%/<>?@\\\\^|]/;\x0d\n\x0d\nUrl.prototype.parse = function parse(url\x2C parseQueryString\x2C slashesDenoteHost) {\x0d\n  validateString(url\x2C 'url');\x0d\n\x0d\n  // Copy chrome\x2C IE\x2C opera backslash-handling behavior.\x0d\n  // Back slashes before the query string get converted to forward slashes\x0d\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\x0d\n  let hasHash = false;\x0d\n  let hasAt = false;\x0d\n  let start = -1;\x0d\n  let end = -1;\x0d\n  let rest = '';\x0d\n  let lastPos = 0;\x0d\n  for (let i = 0\x2C inWs = false\x2C split = false; i < url.length; ++i) {\x0d\n    const code = url.charCodeAt(i);\x0d\n\x0d\n    // Find first and last non-whitespace characters for trimming\x0d\n    const isWs = code < 33 ||\x0d\n                 code === CHAR_NO_BREAK_SPACE ||\x0d\n                 code === CHAR_ZERO_WIDTH_NOBREAK_SPACE;\x0d\n    if (start === -1) {\x0d\n      if (isWs)\x0d\n        continue;\x0d\n      lastPos = start = i;\x0d\n    } else if (inWs) {\x0d\n      if (!isWs) {\x0d\n        end = -1;\x0d\n        inWs = false;\x0d\n      }\x0d\n    } else if (isWs) {\x0d\n      end = i;\x0d\n      inWs = true;\x0d\n    }\x0d\n\x0d\n    // Only convert backslashes while we haven't seen a split character\x0d\n    if (!split) {\x0d\n      switch (code) {\x0d\n        case CHAR_AT:\x0d\n          hasAt = true;\x0d\n          break;\x0d\n        case CHAR_HASH:\x0d\n          hasHash = true;\x0d\n        // Fall through\x0d\n        case CHAR_QUESTION_MARK:\x0d\n          split = true;\x0d\n          break;\x0d\n        case CHAR_BACKWARD_SLASH:\x0d\n          if (i - lastPos > 0)\x0d\n            rest += url.slice(lastPos\x2C i);\x0d\n          rest += '/';\x0d\n          lastPos = i + 1;\x0d\n          break;\x0d\n      }\x0d\n    } else if (!hasHash && code === CHAR_HASH) {\x0d\n      hasHash = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Check if string was non-empty (including strings with only whitespace)\x0d\n  if (start !== -1) {\x0d\n    if (lastPos === start) {\x0d\n      // We didn't convert any backslashes\x0d\n\x0d\n      if (end === -1) {\x0d\n        if (start === 0)\x0d\n          rest = url;\x0d\n        else\x0d\n          rest = url.slice(start);\x0d\n      } else {\x0d\n        rest = url.slice(start\x2C end);\x0d\n      }\x0d\n    } else if (end === -1 && lastPos < url.length) {\x0d\n      // We converted some backslashes and have only part of the entire string\x0d\n      rest += url.slice(lastPos);\x0d\n    } else if (end !== -1 && lastPos < end) {\x0d\n      // We converted some backslashes and have only part of the entire string\x0d\n      rest += url.slice(lastPos\x2C end);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!slashesDenoteHost && !hasHash && !hasAt) {\x0d\n    // Try fast path regexp\x0d\n    const simplePath = simplePathPattern.exec(rest);\x0d\n    if (simplePath) {\x0d\n      this.path = rest;\x0d\n      this.href = rest;\x0d\n      this.pathname = simplePath[1];\x0d\n      if (simplePath[2]) {\x0d\n        this.search = simplePath[2];\x0d\n        if (parseQueryString) {\x0d\n          this.query = querystring.parse(this.search.slice(1));\x0d\n        } else {\x0d\n          this.query = this.search.slice(1);\x0d\n        }\x0d\n      } else if (parseQueryString) {\x0d\n        this.search = null;\x0d\n        this.query = { __proto__: null };\x0d\n      }\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let proto = protocolPattern.exec(rest);\x0d\n  let lowerProto;\x0d\n  if (proto) {\x0d\n    proto = proto[0];\x0d\n    lowerProto = proto.toLowerCase();\x0d\n    this.protocol = lowerProto;\x0d\n    rest = rest.slice(proto.length);\x0d\n  }\x0d\n\x0d\n  // Figure out if it's got a host\x0d\n  // user@server is *always* interpreted as a hostname\x2C and url\x0d\n  // resolution will treat //foo/bar as host=foo\x2Cpath=bar because that's\x0d\n  // how the browser resolves relative URLs.\x0d\n  let slashes;\x0d\n  if (slashesDenoteHost || proto || hostPattern.test(rest)) {\x0d\n    slashes = rest.charCodeAt(0) === CHAR_FORWARD_SLASH &&\x0d\n              rest.charCodeAt(1) === CHAR_FORWARD_SLASH;\x0d\n    if (slashes && !(proto && hostlessProtocol.has(lowerProto))) {\x0d\n      rest = rest.slice(2);\x0d\n      this.slashes = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!hostlessProtocol.has(lowerProto) &&\x0d\n      (slashes || (proto && !slashedProtocol.has(proto)))) {\x0d\n\x0d\n    // there's a hostname.\x0d\n    // the first instance of /\x2C ?\x2C ;\x2C or # ends the host.\x0d\n    //\x0d\n    // If there is an @ in the hostname\x2C then non-host chars *are* allowed\x0d\n    // to the left of the last @ sign\x2C unless some host-ending character\x0d\n    // comes *before* the @-sign.\x0d\n    // URLs are obnoxious.\x0d\n    //\x0d\n    // ex:\x0d\n    // http://a@b@c/ => user:a@b host:c\x0d\n    // http://a@b?@c => user:a host:b path:/?@c\x0d\n\x0d\n    let hostEnd = -1;\x0d\n    let atSign = -1;\x0d\n    let nonHost = -1;\x0d\n    for (let i = 0; i < rest.length; ++i) {\x0d\n      switch (rest.charCodeAt(i)) {\x0d\n        case CHAR_TAB:\x0d\n        case CHAR_LINE_FEED:\x0d\n        case CHAR_CARRIAGE_RETURN:\x0d\n          // WHATWG URL removes tabs\x2C newlines\x2C and carriage returns. Let's do that too.\x0d\n          rest = rest.slice(0\x2C i) + rest.slice(i + 1);\x0d\n          i -= 1;\x0d\n          break;\x0d\n        case CHAR_SPACE:\x0d\n        case CHAR_DOUBLE_QUOTE:\x0d\n        case CHAR_PERCENT:\x0d\n        case CHAR_SINGLE_QUOTE:\x0d\n        case CHAR_SEMICOLON:\x0d\n        case CHAR_LEFT_ANGLE_BRACKET:\x0d\n        case CHAR_RIGHT_ANGLE_BRACKET:\x0d\n        case CHAR_BACKWARD_SLASH:\x0d\n        case CHAR_CIRCUMFLEX_ACCENT:\x0d\n        case CHAR_GRAVE_ACCENT:\x0d\n        case CHAR_LEFT_CURLY_BRACKET:\x0d\n        case CHAR_VERTICAL_LINE:\x0d\n        case CHAR_RIGHT_CURLY_BRACKET:\x0d\n          // Characters that are never ever allowed in a hostname from RFC 2396\x0d\n          if (nonHost === -1)\x0d\n            nonHost = i;\x0d\n          break;\x0d\n        case CHAR_HASH:\x0d\n        case CHAR_FORWARD_SLASH:\x0d\n        case CHAR_QUESTION_MARK:\x0d\n          // Find the first instance of any host-ending characters\x0d\n          if (nonHost === -1)\x0d\n            nonHost = i;\x0d\n          hostEnd = i;\x0d\n          break;\x0d\n        case CHAR_AT:\x0d\n          // At this point\x2C either we have an explicit point where the\x0d\n          // auth portion cannot go past\x2C or the last @ char is the decider.\x0d\n          atSign = i;\x0d\n          nonHost = -1;\x0d\n          break;\x0d\n      }\x0d\n      if (hostEnd !== -1)\x0d\n        break;\x0d\n    }\x0d\n    start = 0;\x0d\n    if (atSign !== -1) {\x0d\n      this.auth = decodeURIComponent(rest.slice(0\x2C atSign));\x0d\n      start = atSign + 1;\x0d\n    }\x0d\n    if (nonHost === -1) {\x0d\n      this.host = rest.slice(start);\x0d\n      rest = '';\x0d\n    } else {\x0d\n      this.host = rest.slice(start\x2C nonHost);\x0d\n      rest = rest.slice(nonHost);\x0d\n    }\x0d\n\x0d\n    // pull out port.\x0d\n    this.parseHost();\x0d\n\x0d\n    // We've indicated that there is a hostname\x2C\x0d\n    // so even if it's empty\x2C it has to be present.\x0d\n    if (typeof this.hostname !== 'string')\x0d\n      this.hostname = '';\x0d\n\x0d\n    const hostname = this.hostname;\x0d\n\x0d\n    // If hostname begins with [ and ends with ]\x0d\n    // assume that it's an IPv6 address.\x0d\n    const ipv6Hostname = isIpv6Hostname(hostname);\x0d\n\x0d\n    // validate a little.\x0d\n    if (!ipv6Hostname) {\x0d\n      rest = getHostname(this\x2C rest\x2C hostname\x2C url);\x0d\n    }\x0d\n\x0d\n    if (this.hostname.length > hostnameMaxLen) {\x0d\n      this.hostname = '';\x0d\n    } else {\x0d\n      // Hostnames are always lower case.\x0d\n      this.hostname = this.hostname.toLowerCase();\x0d\n    }\x0d\n\x0d\n    if (this.hostname !== '') {\x0d\n      if (ipv6Hostname) {\x0d\n        if (forbiddenHostCharsIpv6.test(this.hostname)) {\x0d\n          throw new ERR_INVALID_URL(url);\x0d\n        }\x0d\n      } else {\x0d\n        // IDNA Support: Returns a punycoded representation of "domain".\x0d\n        // It only converts parts of the domain name that\x0d\n        // have non-ASCII characters\x2C i.e. it doesn't matter if\x0d\n        // you call it with a domain that already is ASCII-only.\x0d\n        this.hostname = toASCII(this.hostname);\x0d\n\x0d\n        // Prevent two potential routes of hostname spoofing.\x0d\n        // 1. If this.hostname is empty\x2C it must have become empty due to toASCII\x0d\n        //    since we checked this.hostname above.\x0d\n        // 2. If any of forbiddenHostChars appears in this.hostname\x2C it must have\x0d\n        //    also gotten in due to toASCII. This is since getHostname would have\x0d\n        //    filtered them out otherwise.\x0d\n        // Rather than trying to correct this by moving the non-host part into\x0d\n        // the pathname as we've done in getHostname\x2C throw an exception to\x0d\n        // convey the severity of this issue.\x0d\n        if (this.hostname === '' || forbiddenHostChars.test(this.hostname)) {\x0d\n          throw new ERR_INVALID_URL(url);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const p = this.port ? ':' + this.port : '';\x0d\n    const h = this.hostname || '';\x0d\n    this.host = h + p;\x0d\n\x0d\n    // strip [ and ] from the hostname\x0d\n    // the host field still retains them\x2C though\x0d\n    if (ipv6Hostname) {\x0d\n      this.hostname = this.hostname.slice(1\x2C -1);\x0d\n      if (rest[0] !== '/') {\x0d\n        rest = '/' + rest;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Now rest is set to the post-host stuff.\x0d\n  // Chop off any delim chars.\x0d\n  if (!unsafeProtocol.has(lowerProto)) {\x0d\n    // First\x2C make 100% sure that any "autoEscape" chars get\x0d\n    // escaped\x2C even if encodeURIComponent doesn't think they\x0d\n    // need to be.\x0d\n    rest = autoEscapeStr(rest);\x0d\n  }\x0d\n\x0d\n  let questionIdx = -1;\x0d\n  let hashIdx = -1;\x0d\n  for (let i = 0; i < rest.length; ++i) {\x0d\n    const code = rest.charCodeAt(i);\x0d\n    if (code === CHAR_HASH) {\x0d\n      this.hash = rest.slice(i);\x0d\n      hashIdx = i;\x0d\n      break;\x0d\n    } else if (code === CHAR_QUESTION_MARK && questionIdx === -1) {\x0d\n      questionIdx = i;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (questionIdx !== -1) {\x0d\n    if (hashIdx === -1) {\x0d\n      this.search = rest.slice(questionIdx);\x0d\n      this.query = rest.slice(questionIdx + 1);\x0d\n    } else {\x0d\n      this.search = rest.slice(questionIdx\x2C hashIdx);\x0d\n      this.query = rest.slice(questionIdx + 1\x2C hashIdx);\x0d\n    }\x0d\n    if (parseQueryString) {\x0d\n      this.query = querystring.parse(this.query);\x0d\n    }\x0d\n  } else if (parseQueryString) {\x0d\n    // No query string\x2C but parseQueryString still requested\x0d\n    this.search = null;\x0d\n    this.query = { __proto__: null };\x0d\n  }\x0d\n\x0d\n  const useQuestionIdx =\x0d\n    questionIdx !== -1 && (hashIdx === -1 || questionIdx < hashIdx);\x0d\n  const firstIdx = useQuestionIdx ? questionIdx : hashIdx;\x0d\n  if (firstIdx === -1) {\x0d\n    if (rest.length > 0)\x0d\n      this.pathname = rest;\x0d\n  } else if (firstIdx > 0) {\x0d\n    this.pathname = rest.slice(0\x2C firstIdx);\x0d\n  }\x0d\n  if (slashedProtocol.has(lowerProto) &&\x0d\n      this.hostname && !this.pathname) {\x0d\n    this.pathname = '/';\x0d\n  }\x0d\n\x0d\n  // To support http.request\x0d\n  if (this.pathname || this.search) {\x0d\n    const p = this.pathname || '';\x0d\n    const s = this.search || '';\x0d\n    this.path = p + s;\x0d\n  }\x0d\n\x0d\n  // Finally\x2C reconstruct the href based on what has been validated.\x0d\n  this.href = this.format();\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet warnInvalidPort = true;\x0d\nfunction getHostname(self\x2C rest\x2C hostname\x2C url) {\x0d\n  for (let i = 0; i < hostname.length; ++i) {\x0d\n    const code = hostname.charCodeAt(i);\x0d\n    const isValid = (code !== CHAR_FORWARD_SLASH &&\x0d\n                     code !== CHAR_BACKWARD_SLASH &&\x0d\n                     code !== CHAR_HASH &&\x0d\n                     code !== CHAR_QUESTION_MARK &&\x0d\n                     code !== CHAR_COLON);\x0d\n\x0d\n    if (!isValid) {\x0d\n      // If leftover starts with :\x2C then it represents an invalid port.\x0d\n      // But url.parse() is lenient about it for now.\x0d\n      // Issue a warning and continue.\x0d\n      if (warnInvalidPort && code === CHAR_COLON) {\x0d\n        const detail = `The URL ${url} is invalid. Future versions of Node.js will throw an error.`;\x0d\n        process.emitWarning(detail\x2C 'DeprecationWarning'\x2C 'DEP0170');\x0d\n        warnInvalidPort = false;\x0d\n      }\x0d\n      self.hostname = hostname.slice(0\x2C i);\x0d\n      return `/${hostname.slice(i)}${rest}`;\x0d\n    }\x0d\n  }\x0d\n  return rest;\x0d\n}\x0d\n\x0d\n// Escaped characters. Use empty strings to fill up unused entries.\x0d\n// Using Array is faster than Object/Map\x0d\nconst escapedCodes = [\x0d\n  /* 0 - 9 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '%09'\x2C\x0d\n  /* 10 - 19 */ '%0A'\x2C ''\x2C ''\x2C '%0D'\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 20 - 29 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 30 - 39 */ ''\x2C ''\x2C '%20'\x2C ''\x2C '%22'\x2C ''\x2C ''\x2C ''\x2C ''\x2C '%27'\x2C\x0d\n  /* 40 - 49 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 50 - 59 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 60 - 69 */ '%3C'\x2C ''\x2C '%3E'\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 70 - 79 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 80 - 89 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 90 - 99 */ ''\x2C ''\x2C '%5C'\x2C ''\x2C '%5E'\x2C ''\x2C '%60'\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 100 - 109 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 110 - 119 */ ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C\x0d\n  /* 120 - 125 */ ''\x2C ''\x2C ''\x2C '%7B'\x2C '%7C'\x2C '%7D'\x2C\x0d\n];\x0d\n\x0d\n// Automatically escape all delimiters and unwise characters from RFC 2396.\x0d\n// Also escape single quotes in case of an XSS attack.\x0d\n// Return the escaped string.\x0d\nfunction autoEscapeStr(rest) {\x0d\n  let escaped = '';\x0d\n  let lastEscapedPos = 0;\x0d\n  for (let i = 0; i < rest.length; ++i) {\x0d\n    // `escaped` contains substring up to the last escaped character.\x0d\n    const escapedChar = escapedCodes[rest.charCodeAt(i)];\x0d\n    if (escapedChar) {\x0d\n      // Concat if there are ordinary characters in the middle.\x0d\n      if (i > lastEscapedPos)\x0d\n        escaped += rest.slice(lastEscapedPos\x2C i);\x0d\n      escaped += escapedChar;\x0d\n      lastEscapedPos = i + 1;\x0d\n    }\x0d\n  }\x0d\n  if (lastEscapedPos === 0)  // Nothing has been escaped.\x0d\n    return rest;\x0d\n\x0d\n  // There are ordinary characters at the end.\x0d\n  if (lastEscapedPos < rest.length)\x0d\n    escaped += rest.slice(lastEscapedPos);\x0d\n\x0d\n  return escaped;\x0d\n}\x0d\n\x0d\n// Format a parsed object into a url string\x0d\nfunction urlFormat(urlObject\x2C options) {\x0d\n  // Ensure it's an object\x2C and not a string url.\x0d\n  // If it's an object\x2C this is a no-op.\x0d\n  // this way\x2C you can call urlParse() on strings\x0d\n  // to clean up potentially wonky urls.\x0d\n  if (typeof urlObject === 'string') {\x0d\n    urlObject = urlParse(urlObject);\x0d\n  } else if (typeof urlObject !== 'object' || urlObject === null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('urlObject'\x2C\x0d\n                                   ['Object'\x2C 'string']\x2C urlObject);\x0d\n  } else if (urlObject instanceof URL) {\x0d\n    let fragment = true;\x0d\n    let unicode = false;\x0d\n    let search = true;\x0d\n    let auth = true;\x0d\n\x0d\n    if (options) {\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n      if (options.fragment != null) {\x0d\n        fragment = Boolean(options.fragment);\x0d\n      }\x0d\n\x0d\n      if (options.unicode != null) {\x0d\n        unicode = Boolean(options.unicode);\x0d\n      }\x0d\n\x0d\n      if (options.search != null) {\x0d\n        search = Boolean(options.search);\x0d\n      }\x0d\n\x0d\n      if (options.auth != null) {\x0d\n        auth = Boolean(options.auth);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return bindingUrl.format(urlObject.href\x2C fragment\x2C unicode\x2C search\x2C auth);\x0d\n  }\x0d\n\x0d\n  return Url.prototype.format.call(urlObject);\x0d\n}\x0d\n\x0d\n// These characters do not need escaping:\x0d\n// ! - . _ ~\x0d\n// ' ( ) * :\x0d\n// digits\x0d\n// alpha (uppercase)\x0d\n// alpha (lowercase)\x0d\nconst noEscapeAuth = new Int8Array([\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\nUrl.prototype.format = function format() {\x0d\n  let auth = this.auth || '';\x0d\n  if (auth) {\x0d\n    auth = encodeStr(auth\x2C noEscapeAuth\x2C hexTable);\x0d\n    auth += '@';\x0d\n  }\x0d\n\x0d\n  let protocol = this.protocol || '';\x0d\n  let pathname = this.pathname || '';\x0d\n  let hash = this.hash || '';\x0d\n  let host = '';\x0d\n  let query = '';\x0d\n\x0d\n  if (this.host) {\x0d\n    host = auth + this.host;\x0d\n  } else if (this.hostname) {\x0d\n    host = auth + (\x0d\n      this.hostname.includes(':') && !isIpv6Hostname(this.hostname) ?\x0d\n        '[' + this.hostname + ']' :\x0d\n        this.hostname\x0d\n    );\x0d\n    if (this.port) {\x0d\n      host += ':' + this.port;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this.query !== null && typeof this.query === 'object') {\x0d\n    query = querystring.stringify(this.query);\x0d\n  }\x0d\n\x0d\n  let search = this.search || (query && ('?' + query)) || '';\x0d\n\x0d\n  if (protocol && protocol.charCodeAt(protocol.length - 1) !== 58/* : */)\x0d\n    protocol += ':';\x0d\n\x0d\n  let newPathname = '';\x0d\n  let lastPos = 0;\x0d\n  for (let i = 0; i < pathname.length; ++i) {\x0d\n    switch (pathname.charCodeAt(i)) {\x0d\n      case CHAR_HASH:\x0d\n        if (i - lastPos > 0)\x0d\n          newPathname += pathname.slice(lastPos\x2C i);\x0d\n        newPathname += '%23';\x0d\n        lastPos = i + 1;\x0d\n        break;\x0d\n      case CHAR_QUESTION_MARK:\x0d\n        if (i - lastPos > 0)\x0d\n          newPathname += pathname.slice(lastPos\x2C i);\x0d\n        newPathname += '%3F';\x0d\n        lastPos = i + 1;\x0d\n        break;\x0d\n    }\x0d\n  }\x0d\n  if (lastPos > 0) {\x0d\n    if (lastPos !== pathname.length)\x0d\n      pathname = newPathname + pathname.slice(lastPos);\x0d\n    else\x0d\n      pathname = newPathname;\x0d\n  }\x0d\n\x0d\n  // Only the slashedProtocols get the //.  Not mailto:\x2C xmpp:\x2C etc.\x0d\n  // unless they had them to begin with.\x0d\n  if (this.slashes || slashedProtocol.has(protocol)) {\x0d\n    if (this.slashes || host) {\x0d\n      if (pathname && pathname.charCodeAt(0) !== CHAR_FORWARD_SLASH)\x0d\n        pathname = '/' + pathname;\x0d\n      host = '//' + host;\x0d\n    } else if (protocol.length >= 4 &&\x0d\n               protocol.charCodeAt(0) === 102/* f */ &&\x0d\n               protocol.charCodeAt(1) === 105/* i */ &&\x0d\n               protocol.charCodeAt(2) === 108/* l */ &&\x0d\n               protocol.charCodeAt(3) === 101/* e */) {\x0d\n      host = '//';\x0d\n    }\x0d\n  }\x0d\n\x0d\n  search = search.replace(/#/g\x2C '%23');\x0d\n\x0d\n  if (hash && hash.charCodeAt(0) !== CHAR_HASH)\x0d\n    hash = '#' + hash;\x0d\n  if (search && search.charCodeAt(0) !== CHAR_QUESTION_MARK)\x0d\n    search = '?' + search;\x0d\n\x0d\n  return protocol + host + pathname + search + hash;\x0d\n};\x0d\n\x0d\nfunction urlResolve(source\x2C relative) {\x0d\n  return urlParse(source\x2C false\x2C true).resolve(relative);\x0d\n}\x0d\n\x0d\nUrl.prototype.resolve = function resolve(relative) {\x0d\n  return this.resolveObject(urlParse(relative\x2C false\x2C true)).format();\x0d\n};\x0d\n\x0d\nfunction urlResolveObject(source\x2C relative) {\x0d\n  if (!source) return relative;\x0d\n  return urlParse(source\x2C false\x2C true).resolveObject(relative);\x0d\n}\x0d\n\x0d\nUrl.prototype.resolveObject = function resolveObject(relative) {\x0d\n  if (typeof relative === 'string') {\x0d\n    const rel = new Url();\x0d\n    rel.parse(relative\x2C false\x2C true);\x0d\n    relative = rel;\x0d\n  }\x0d\n\x0d\n  const result = new Url();\x0d\n  const tkeys = ObjectKeys(this);\x0d\n  for (let tk = 0; tk < tkeys.length; tk++) {\x0d\n    const tkey = tkeys[tk];\x0d\n    result[tkey] = this[tkey];\x0d\n  }\x0d\n\x0d\n  // Hash is always overridden\x2C no matter what.\x0d\n  // even href="" will remove it.\x0d\n  result.hash = relative.hash;\x0d\n\x0d\n  // If the relative url is empty\x2C then there's nothing left to do here.\x0d\n  if (relative.href === '') {\x0d\n    result.href = result.format();\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  // Hrefs like //foo/bar always cut to the protocol.\x0d\n  if (relative.slashes && !relative.protocol) {\x0d\n    // Take everything except the protocol from relative\x0d\n    const rkeys = ObjectKeys(relative);\x0d\n    for (let rk = 0; rk < rkeys.length; rk++) {\x0d\n      const rkey = rkeys[rk];\x0d\n      if (rkey !== 'protocol')\x0d\n        result[rkey] = relative[rkey];\x0d\n    }\x0d\n\x0d\n    // urlParse appends trailing / to urls like http://www.example.com\x0d\n    if (slashedProtocol.has(result.protocol) &&\x0d\n        result.hostname && !result.pathname) {\x0d\n      result.path = result.pathname = '/';\x0d\n    }\x0d\n\x0d\n    result.href = result.format();\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  if (relative.protocol && relative.protocol !== result.protocol) {\x0d\n    // If it's a known url protocol\x2C then changing\x0d\n    // the protocol does weird things\x0d\n    // first\x2C if it's not file:\x2C then we MUST have a host\x2C\x0d\n    // and if there was a path\x0d\n    // to begin with\x2C then we MUST have a path.\x0d\n    // if it is file:\x2C then the host is dropped\x2C\x0d\n    // because that's known to be hostless.\x0d\n    // anything else is assumed to be absolute.\x0d\n    if (!slashedProtocol.has(relative.protocol)) {\x0d\n      const keys = ObjectKeys(relative);\x0d\n      for (let v = 0; v < keys.length; v++) {\x0d\n        const k = keys[v];\x0d\n        result[k] = relative[k];\x0d\n      }\x0d\n      result.href = result.format();\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    result.protocol = relative.protocol;\x0d\n    if (!relative.host &&\x0d\n        !/^file:?$/.test(relative.protocol) &&\x0d\n        !hostlessProtocol.has(relative.protocol)) {\x0d\n      const relPath = (relative.pathname || '').split('/');\x0d\n      while (relPath.length && !(relative.host = relPath.shift()));\x0d\n      if (!relative.host) relative.host = '';\x0d\n      if (!relative.hostname) relative.hostname = '';\x0d\n      if (relPath[0] !== '') relPath.unshift('');\x0d\n      if (relPath.length < 2) relPath.unshift('');\x0d\n      result.pathname = relPath.join('/');\x0d\n    } else {\x0d\n      result.pathname = relative.pathname;\x0d\n    }\x0d\n    result.search = relative.search;\x0d\n    result.query = relative.query;\x0d\n    result.host = relative.host || '';\x0d\n    result.auth = relative.auth;\x0d\n    result.hostname = relative.hostname || relative.host;\x0d\n    result.port = relative.port;\x0d\n    // To support http.request\x0d\n    if (result.pathname || result.search) {\x0d\n      const p = result.pathname || '';\x0d\n      const s = result.search || '';\x0d\n      result.path = p + s;\x0d\n    }\x0d\n    result.slashes = result.slashes || relative.slashes;\x0d\n    result.href = result.format();\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  const isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/');\x0d\n  const isRelAbs = (\x0d\n    relative.host || (relative.pathname && relative.pathname.charAt(0) === '/')\x0d\n  );\x0d\n  let mustEndAbs = (isRelAbs || isSourceAbs ||\x0d\n                    (result.host && relative.pathname));\x0d\n  const removeAllDots = mustEndAbs;\x0d\n  let srcPath = (result.pathname && result.pathname.split('/')) || [];\x0d\n  const relPath = (relative.pathname && relative.pathname.split('/')) || [];\x0d\n  const noLeadingSlashes = result.protocol &&\x0d\n      !slashedProtocol.has(result.protocol);\x0d\n\x0d\n  // If the url is a non-slashed url\x2C then relative\x0d\n  // links like ../.. should be able\x0d\n  // to crawl up to the hostname\x2C as well.  This is strange.\x0d\n  // result.protocol has already been set by now.\x0d\n  // Later on\x2C put the first path part into the host field.\x0d\n  if (noLeadingSlashes) {\x0d\n    result.hostname = '';\x0d\n    result.port = null;\x0d\n    if (result.host) {\x0d\n      if (srcPath[0] === '') srcPath[0] = result.host;\x0d\n      else srcPath.unshift(result.host);\x0d\n    }\x0d\n    result.host = '';\x0d\n    if (relative.protocol) {\x0d\n      relative.hostname = null;\x0d\n      relative.port = null;\x0d\n      result.auth = null;\x0d\n      if (relative.host) {\x0d\n        if (relPath[0] === '') relPath[0] = relative.host;\x0d\n        else relPath.unshift(relative.host);\x0d\n      }\x0d\n      relative.host = null;\x0d\n    }\x0d\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\x0d\n  }\x0d\n\x0d\n  if (isRelAbs) {\x0d\n    // it's absolute.\x0d\n    if (relative.host || relative.host === '') {\x0d\n      if (result.host !== relative.host) result.auth = null;\x0d\n      result.host = relative.host;\x0d\n      result.port = relative.port;\x0d\n    }\x0d\n    if (relative.hostname || relative.hostname === '') {\x0d\n      if (result.hostname !== relative.hostname) result.auth = null;\x0d\n      result.hostname = relative.hostname;\x0d\n    }\x0d\n    result.search = relative.search;\x0d\n    result.query = relative.query;\x0d\n    srcPath = relPath;\x0d\n    // Fall through to the dot-handling below.\x0d\n  } else if (relPath.length) {\x0d\n    // it's relative\x0d\n    // throw away the existing file\x2C and take the new path instead.\x0d\n    if (!srcPath) srcPath = [];\x0d\n    srcPath.pop();\x0d\n    srcPath = srcPath.concat(relPath);\x0d\n    result.search = relative.search;\x0d\n    result.query = relative.query;\x0d\n  } else if (relative.search !== null && relative.search !== undefined) {\x0d\n    // Just pull out the search.\x0d\n    // like href='?foo'.\x0d\n    // Put this after the other two cases because it simplifies the booleans\x0d\n    if (noLeadingSlashes) {\x0d\n      result.hostname = result.host = srcPath.shift();\x0d\n      // Occasionally the auth can get stuck only in host.\x0d\n      // This especially happens in cases like\x0d\n      // url.resolveObject('mailto:local1@domain1'\x2C 'local2@domain2')\x0d\n      const authInHost =\x0d\n        result.host && result.host.indexOf('@') > 0 && result.host.split('@');\x0d\n      if (authInHost) {\x0d\n        result.auth = authInHost.shift();\x0d\n        result.host = result.hostname = authInHost.shift();\x0d\n      }\x0d\n    }\x0d\n    result.search = relative.search;\x0d\n    result.query = relative.query;\x0d\n    // To support http.request\x0d\n    if (result.pathname !== null || result.search !== null) {\x0d\n      result.path = (result.pathname ? result.pathname : '') +\x0d\n                    (result.search ? result.search : '');\x0d\n    }\x0d\n    result.href = result.format();\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  if (!srcPath.length) {\x0d\n    // No path at all. All other things were already handled above.\x0d\n    result.pathname = null;\x0d\n    // To support http.request\x0d\n    if (result.search) {\x0d\n      result.path = '/' + result.search;\x0d\n    } else {\x0d\n      result.path = null;\x0d\n    }\x0d\n    result.href = result.format();\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  // If a url ENDs in . or ..\x2C then it must get a trailing slash.\x0d\n  // however\x2C if it ends in anything else non-slashy\x2C\x0d\n  // then it must NOT get a trailing slash.\x0d\n  let last = srcPath.slice(-1)[0];\x0d\n  const hasTrailingSlash = (\x0d\n    ((result.host || relative.host || srcPath.length > 1) &&\x0d\n    (last === '.' || last === '..')) || last === '');\x0d\n\x0d\n  // Strip single dots\x2C resolve double dots to parent dir\x0d\n  // if the path tries to go above the root\x2C `up` ends up > 0\x0d\n  let up = 0;\x0d\n  for (let i = srcPath.length - 1; i >= 0; i--) {\x0d\n    last = srcPath[i];\x0d\n    if (last === '.') {\x0d\n      spliceOne(srcPath\x2C i);\x0d\n    } else if (last === '..') {\x0d\n      spliceOne(srcPath\x2C i);\x0d\n      up++;\x0d\n    } else if (up) {\x0d\n      spliceOne(srcPath\x2C i);\x0d\n      up--;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the path is allowed to go above the root\x2C restore leading ..s\x0d\n  if (!mustEndAbs && !removeAllDots) {\x0d\n    while (up--) {\x0d\n      srcPath.unshift('..');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (mustEndAbs && srcPath[0] !== '' &&\x0d\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\x0d\n    srcPath.unshift('');\x0d\n  }\x0d\n\x0d\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\x0d\n    srcPath.push('');\x0d\n  }\x0d\n\x0d\n  const isAbsolute = srcPath[0] === '' ||\x0d\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\x0d\n\x0d\n  // put the host back\x0d\n  if (noLeadingSlashes) {\x0d\n    result.hostname =\x0d\n      result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\x0d\n    // Occasionally the auth can get stuck only in host.\x0d\n    // This especially happens in cases like\x0d\n    // url.resolveObject('mailto:local1@domain1'\x2C 'local2@domain2')\x0d\n    const authInHost = result.host && result.host.indexOf('@') > 0 ?\x0d\n      result.host.split('@') : false;\x0d\n    if (authInHost) {\x0d\n      result.auth = authInHost.shift();\x0d\n      result.host = result.hostname = authInHost.shift();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\x0d\n\x0d\n  if (mustEndAbs && !isAbsolute) {\x0d\n    srcPath.unshift('');\x0d\n  }\x0d\n\x0d\n  if (!srcPath.length) {\x0d\n    result.pathname = null;\x0d\n    result.path = null;\x0d\n  } else {\x0d\n    result.pathname = srcPath.join('/');\x0d\n  }\x0d\n\x0d\n  // To support request.http\x0d\n  if (result.pathname !== null || result.search !== null) {\x0d\n    result.path = (result.pathname ? result.pathname : '') +\x0d\n                  (result.search ? result.search : '');\x0d\n  }\x0d\n  result.auth = relative.auth || result.auth;\x0d\n  result.slashes = result.slashes || relative.slashes;\x0d\n  result.href = result.format();\x0d\n  return result;\x0d\n};\x0d\n\x0d\nUrl.prototype.parseHost = function parseHost() {\x0d\n  let host = this.host;\x0d\n  let port = portPattern.exec(host);\x0d\n  if (port) {\x0d\n    port = port[0];\x0d\n    if (port !== ':') {\x0d\n      this.port = port.slice(1);\x0d\n    }\x0d\n    host = host.slice(0\x2C host.length - port.length);\x0d\n  }\x0d\n  if (host) this.hostname = host;\x0d\n};\x0d\n\x0d\n// When used internally\x2C we are not obligated to associate TypeError with\x0d\n// this function\x2C so non-strings can be rejected by underlying implementation.\x0d\n// Public API has to validate input and throw appropriate error.\x0d\nfunction pathToFileURL(path) {\x0d\n  validateString(path\x2C 'path');\x0d\n\x0d\n  return _pathToFileURL(path);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  // Original API\x0d\n  Url\x2C\x0d\n  parse: urlParse\x2C\x0d\n  resolve: urlResolve\x2C\x0d\n  resolveObject: urlResolveObject\x2C\x0d\n  format: urlFormat\x2C\x0d\n\x0d\n  // WHATWG API\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n\x0d\n  // Utilities\x0d\n  pathToFileURL\x2C\x0d\n  fileURLToPath\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n};\x0d\n
code-source-info,0x339fd11f0dc,61,2229,2506,C0O2237C1O2251C5O2262C6O2275C10O2286C11O2296C15O2307C16O2317C20O2328C21O2338C25O2349C26O2363C30O2374C31O2384C35O2395C36O2407C40O2418C41O2429C45O2440C46O2454C50O2465C51O2475C55O2486C56O2496C61O2505,,
code-creation,JS,10,2168186,0x339fd12181c,28,matchLayer C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:583:20,0x2ce89f2c408,~
code-source-info,0x339fd12181c,158,13411,13504,C3O13452C8O13452C13O13464C25O13487C27O13498,,
code-creation,JS,10,2168305,0x339fd121994,203,match C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\layer.js:110:39,0x2ce89f309a8,~
code-source-info,0x339fd121994,161,1957,2872,C0O1981C5O2073C10O2080C16O2100C17O2112C21O2123C23O2133C27O2144C28O2155C29O2231C34O2238C40O2257C50O2277C61O2269C65O2303C67O2313C71O2326C72O2337C73O2384C78O2391C83O2391C89O2409C93O2427C94O2439C98O2456C99O2466C103O2483C104O2496C105O2522C106O2534C110O2542C111O2559C114O2552C118O2582C123O2608C128O2632C131O2645C135O2637C140O2674C142O2681C145O2678C149O2706C154O2726C159O2744C163O2726C168O2754C173O2796C178O2796C186O2825C188O2838C192O2654C197O2619C201O2858C202O2870,,
code-creation,JS,10,2168422,0x339fd121dd4,84,process_params C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:338:47,0x2ce89f2c7d8,~
code-source-info,0x339fd121dd4,158,8217,9887,C0O8217C33O8271C37O8266C39O8356C43O8350C45O8381C52O8399C58O8406C63O8419C66O8426C69O8433C70O8449C71O8449C73O8483C74O8483C76O9877C79O9877C83O9886,,
code-creation,JS,10,2168487,0x339fd121f6c,85, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:280:64,0x339fd11e478,~
code-source-info,0x339fd121f6c,158,6633,6861,C0O6647C4O6666C11O6671C16O6666C22O6703C26O6724C29O6730C49O6730C56O6784C73O6784C78O6847C79O6852C84O6860,,
code-creation,JS,10,2168580,0x339fd12216c,352,trim_prefix C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\index.js:293:23,0x339fd11db30,~
code-source-info,0x339fd12216c,158,6891,8104,C0O6948C6O6955C11O7034C18O7053C23O7034C29O7025C34O7072C37O7072C41O7097C42O7103C43O7192C47O7181C51O7206C55O7217C62O7230C67O7239C70O7246C74O7262C75O7396C86O7449C94O7396C99O7461C101O7469C103O7488C112O7514C117O7518C125O7534C133O7551C137O7541C141O7518C146O7508C149O7496C153O7596C160O7618C166O7621C172O7625C177O7644C186O7664C190O7658C193O7652C197O7677C198O7688C200O7755C212O7798C216O7805C219O7789C225O7810C233O7836C243O7857C247O7864C251O7836C261O7779C264O7767C268O7900C276O7926C284O7947C292O7900C297O7966C301O7996C321O7996C328O8063C345O8063C351O8103,,
code-creation,JS,10,2168682,0x339fd1224bc,62,handle C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\layer.js:86:49,0x2ce89f30950,~
code-source-info,0x339fd1224bc,161,1576,1775,C0O1611C5O1629C12O1636C17O1692C20O1699C24O1717C33O1717C51O1759C54O1759C61O1774,,
code-creation,JS,10,2168763,0x339fd1225e4,41,query C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\middleware\\query.js:39:24,0x37307a3bc98,~
code-source-info,0x339fd1225e4,176,740,880,C0O771C6O796C11O796C16O809C21O823C27O835C32O833C36O869C40O879,,
code-creation,JS,10,2168814,0x339fd12271c,20,parseExtendedQueryString C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\utils.js:289:34,0x2773ccb6ff8,~
code-source-info,0x339fd12271c,212,5773,5839,C0O5783C3O5793C8O5799C13O5793C19O5837,,
code-creation,JS,10,2168900,0x339fd12288c,213,module.exports C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\parse.js:239:27,0x2773cc8d168,~
code-source-info,0x339fd12288c,201,8627,9372,C0O8659C3O8659C8O8693C10O8701C25O8780C31O8795C35O8802C42O8802C50O8820C51O8846C60O8872C70O8927C76O8942C80O8949C87O8949C96O9039C100O9046C105O9046C111O9078C113O9090C117O9083C122O9123C124O9127C128O9153C133O9175C148O9153C154O9225C157O9237C171O9237C177O9100C182O9065C186O9289C196O9321C198O9332C199O9344C202O9357C207O9357C212O9370,,
code-creation,JS,10,2169031,0x339fd122cf4,508,normalizeParseOptions C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\parse.js:204:59,0x2773cc8d110,~
code-source-info,0x339fd122cf4,201,6407,8598,C0O6420C4O6441C6O6457C7O6478C13O6503C19O6540C27O6574C36O6580C41O6574C42O6655C50O6687C57O6695C62O6715C69O6723C74O6751C83O6757C88O6751C89O6877C100O6912C106O6927C111O6941C116O6981C127O7018C133O7037C142O7085C150O7122C159O7149C167O7199C175O7232C184O7255C192O7300C200O7331C209O7353C219O7382C223O7428C231O7465C240O7492C248O7536C256O7563C265O7580C273O7616C281O7646C290O7665C298O7705C309O7737C314O7751C319O7737C326O7769C335O7790C343O7903C351O7930C361O7955C365O7949C372O7972C380O8011C388O8029C392O8085C400O8131C409O8167C417O8229C425O8264C434O8290C442O8332C450O8344C455O8389C463O8423C472O8447C480O8501C488O8541C497O8571C507O8596,,
code-creation,JS,10,2169135,0x339fd1230cc,31,isRegExp C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\qs\\lib\\utils.js:214:33,0x1ffa74bced0,~
code-source-info,0x339fd1230cc,199,5969,6048,C0O5981C4O5995C9O6005C14O6014C19O6014C27O6024C30O6046,,
code-creation,JS,10,2169210,0x339fd1232ac,123,expressInit C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\middleware\\init.js:29:30,0x37307a3d548,~
code-source-info,0x339fd1232ac,175,546,847,C0O568C3O576C11O576C18O605C29O605C35O647C37O655C41O666C43O674C47O685C49O694C53O707C61O731C66O707C71O744C79O768C84O744C89O800C98O810C102O817C109O817C114O794C118O836C122O846,,
code-creation,JS,10,2169290,0x339fd1234ac,104,setHeader node:_http_outgoing:694:57,0x395cad657c8,~
code-source-info,0x339fd1234ac,170,22056,22412,C0O22084C6O22100C16O22106C21O22100C22O22148C27O22148C31O22177C36O22177C41O22230C43O22235C45O22234C49O22252C51O22279C54O22284C59O22297C63O22335C65O22343C68O22343C82O22380C91O22386C97O22377C101O22397C103O22409,,
code-creation,JS,10,2169346,0x339fd12369c,51, node:_http_outgoing:664:44,0x395cad65718,~
code-source-info,0x339fd12369c,170,21151,21338,C0O21173C8O21206C12O21215C15O21215C21O21246C26O21279C33O21300C43O21252C48O21246C50O21337,,
code-creation,JS,10,2169382,0x339fd1237bc,18,checkIsHttpToken node:_http_common:212:26,0x395cad5ab28,~
code-source-info,0x339fd1237bc,167,6893,6961,C0O6904C7O6931C10O6911C16O6949C17O6958,,
code-creation,JS,10,2169473,0x339fd1239f4,78, node:_http_outgoing:670:45,0x395cad65770,~
code-source-info,0x339fd1239f4,170,21388,21708,C0O21410C4O21442C9O21482C22O21448C27O21442C28O21525C33O21529C39O21567C47O21567C52O21628C57O21655C70O21634C75O21628C77O21707,,
code-creation,JS,10,2169512,0x339fd123b3c,18,checkInvalidHeaderChar node:_http_common:223:32,0x395cad5ab80,~
code-source-info,0x339fd123b3c,167,7263,7335,C0O7274C7O7301C10O7281C16O7323C17O7332,,
code-creation,JS,10,2169661,0x339fd123f7c,64,_handles_method C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\route.js:58:59,0x2ce89f2dc80,~
code-source-info,0x339fd123f7c,159,949,1157,C0O971C5O979C11O991C12O1003C13O1029C18O1029C23O1047C25O1056C30O1076C35O1083C41O1099C44O1120C48O1140C55O1147C59O1127C63O1155,,
code-creation,JS,10,2169789,0x339fd1242f4,117,dispatch C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\route.js:98:45,0x2ce89f2dd30,~
code-source-info,0x339fd1242f4,159,1662,2554,C0O1662C23O1693C24O1693C26O1715C30O1710C32O1735C33O1735C35O1740C38O1750C44O1757C49O1770C52O1777C55O1784C56O1805C59O1809C64O1816C69O1816C73O1805C75O1833C80O1844C85O1864C90O1871C96O1887C98O1894C100O1910C105O1920C109O1931C112O1931C116O2553,,
code-creation,JS,10,2169890,0x339fd1244d4,177,next C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\router\\route.js:116:16,0x339fd124208,~
code-source-info,0x339fd1244d4,159,1955,2552,C0O1995C6O2010C11O2031C14O2038C17O2045C18O2086C24O2101C29O2123C32O2130C36O2139C37O2173C41O2179C46O2184C51O2199C58O2206C63O2229C64O2253C74O2262C78O2258C82O2292C84O2312C87O2319C91O2328C92O2350C98O2366C105O2373C110O2393C113O2393C119O2414C123O2437C143O2437C150O2497C167O2497C172O2540C173O2545C176O2551,,
code-creation,JS,10,2169964,0x339fd124724,85, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js:3:14,0x3e8c872b728,~
code-source-info,0x339fd124724,133,70,205,C6O70C14O113C21O138C24O138C29O167C33O175C38O175C43O193C48O193C62O204,,
code-creation,JS,10,2170015,0x339fd12485c,44,findPrimesOptimized C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js:58:29,0x3e8c872b620,~
code-source-info,0x339fd12485c,133,1487,1653,C0O1511C3O1532C6O1537C8O1537C13O1558C16O1561C22O1604C27O1604C32O1543C37O1520C41O1636C43O1650,,
code-creation,JS,10,2170062,0x339fd12497c,65,isPrimeOptimized C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js:77:26,0x3e8c872b6d0,~
code-source-info,0x339fd12497c,133,1839,2003,C0O1864C3O1871C7O1876C12O1882C16O1887C21O1887C27O1876C32O1898C35O1869C40O1919C42O1926C47O1930C52O1951C53O1964C54O1904C59O1852C63O1988C64O2000,,
code-creation,JS,11,2170677,0x7ff62c526300,540,isPrimeOptimized C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js:77:26,0x3e8c872b6d0,^
code-source-info,0x7ff62c526300,133,1839,2003,,,
code-creation,JS,11,2170764,0x7ff62c526540,1108,_addHeaderLine node:_http_incoming:385:24,0x395cad5f458,^
code-source-info,0x7ff62c526540,169,13310,14367,,,
code-creation,JS,11,2170788,0x7ff62c5269c0,712,get node:_http_incoming:112:16,0x395cad5f680,^
code-source-info,0x7ff62c5269c0,169,3379,3680,,,
code-creation,JS,11,2170807,0x7ff62c526cc0,412,findPrimesOptimized C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js:58:29,0x3e8c872b620,^
code-source-info,0x7ff62c526cc0,133,1487,1653,,,
code-creation,JS,13,2171558,0x7ff62c526e80,688,isPrimeOptimized C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js:77:26,0x3e8c872b6d0,*
code-source-info,0x7ff62c526e80,133,1839,2003,C0O1839C39O1887C119O1876C125O1898C158O1869C174O1926C191O1930C201O1926C207O1852C259O1869C268O1926C319O1930C327O1904C339O1852C351O2000C384O1964C393O1839C444O1926C455O1930C465O1852C525O1926C563O1930C576O1852,,
code-creation,JS,13,2173852,0x7ff62c527180,1068,findPrimesOptimized C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\app.js:58:29,0x3e8c872b620,*
code-source-info,0x7ff62c527180,133,1487,1653,C0O1487C57O1537C164O1543C178O1887I0C187O1876I0C193O1898I0C201O1561C221O1898I0C249O1869I0C258O1926I0C267O1930I0C277O1926I0C282O1852I0C323O1869I0C331O1926I0C387O1930I0C395O1904I0C407O1852I0C419O1604C490O1543C500O1520C516O1650C545O1487C596O1926I0C607O1930I0C617O1852I0C713O1926I0C750O1930I0C766O1852I0C864O1604C944O1520,F0O1561,S0x3e8c872b6d0
tick,0x7ff62c5272c0,2179847,0,0x0,0,0x339fd12473c,0x339fd1224dd,0x339fd12457b,0x339fd124364,0x339fd1224dd,0x339fd121f9d,0x339fd121e16,0x339fd11e7ff,0x339fd123322,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd122608,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd11dd7f,0x339fd11d627,0x339fd11d44d,0x22671c8b3a8,0x339fd116f95,0x339fd114930
new,MemoryChunk,0x1b0b51c0000,188416
new,MemoryChunk,0xe5f8500000,278528
tick,0x7ff62c5272fe,2194849,0,0x0,0,0x339fd12473c,0x339fd1224dd,0x339fd12457b,0x339fd124364,0x339fd1224dd,0x339fd121f9d,0x339fd121e16,0x339fd11e7ff,0x339fd123322,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd122608,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd11dd7f,0x339fd11d627,0x339fd11d44d,0x22671c8b3a8,0x339fd116f95,0x339fd114930
new,MemoryChunk,0x3e5a6300000,413696
tick,0x7ff6acc2b4d4,2211182,0,0x0,0,0x7ff6abdf0260,0x7ff62c527502,0x339fd12473c,0x339fd1224dd,0x339fd12457b,0x339fd124364,0x339fd1224dd,0x339fd121f9d,0x339fd121e16,0x339fd11e7ff,0x339fd123322,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd122608,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd11dd7f,0x339fd11d627,0x339fd11d44d,0x22671c8b3a8,0x339fd116f95,0x339fd114930
tick,0x7ff62c5272fe,2225974,0,0x0,0,0x339fd12473c,0x339fd1224dd,0x339fd12457b,0x339fd124364,0x339fd1224dd,0x339fd121f9d,0x339fd121e16,0x339fd11e7ff,0x339fd123322,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd122608,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd11dd7f,0x339fd11d627,0x339fd11d44d,0x22671c8b3a8,0x339fd116f95,0x339fd114930
tick,0x7ff62c5272d3,2241921,0,0x0,0,0x339fd12473c,0x339fd1224dd,0x339fd12457b,0x339fd124364,0x339fd1224dd,0x339fd121f9d,0x339fd121e16,0x339fd11e7ff,0x339fd123322,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd122608,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd11dd7f,0x339fd11d627,0x339fd11d44d,0x22671c8b3a8,0x339fd116f95,0x339fd114930
new,MemoryChunk,0x1d390a00000,618496
tick,0x7ff62c5272fe,2257831,0,0x0,0,0x339fd12473c,0x339fd1224dd,0x339fd12457b,0x339fd124364,0x339fd1224dd,0x339fd121f9d,0x339fd121e16,0x339fd11e7ff,0x339fd123322,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd122608,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd11dd7f,0x339fd11d627,0x339fd11d44d,0x22671c8b3a8,0x339fd116f95,0x339fd114930
tick,0x7ff62c5272fe,2272853,0,0x0,0,0x339fd12473c,0x339fd1224dd,0x339fd12457b,0x339fd124364,0x339fd1224dd,0x339fd121f9d,0x339fd121e16,0x339fd11e7ff,0x339fd123322,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd122608,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd11dd7f,0x339fd11d627,0x339fd11d44d,0x22671c8b3a8,0x339fd116f95,0x339fd114930
tick,0x7ff62c5272fc,2287844,0,0x0,0,0x339fd12473c,0x339fd1224dd,0x339fd12457b,0x339fd124364,0x339fd1224dd,0x339fd121f9d,0x339fd121e16,0x339fd11e7ff,0x339fd123322,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd122608,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd11dd7f,0x339fd11d627,0x339fd11d44d,0x22671c8b3a8,0x339fd116f95,0x339fd114930
new,MemoryChunk,0x249274c0000,262144
new,MemoryChunk,0x3e4a0780000,262144
new,MemoryChunk,0x136dc000000,262144
new,MemoryChunk,0x10b77c0000,262144
new,MemoryChunk,0x114bf7c0000,262144
new,MemoryChunk,0x22f77fc0000,262144
new,MemoryChunk,0x2e67d100000,262144
new,MemoryChunk,0x11c40600000,262144
new,MemoryChunk,0x1f2efa40000,262144
new,MemoryChunk,0x1a374ec0000,262144
new,MemoryChunk,0x19f4ce40000,262144
new,MemoryChunk,0x13a16ac0000,262144
new,MemoryChunk,0x3715ca00000,262144
new,MemoryChunk,0x21500380000,262144
new,MemoryChunk,0x1f70a8c0000,262144
new,MemoryChunk,0x3a474c80000,262144
new,MemoryChunk,0x3839d700000,262144
new,MemoryChunk,0xc669a80000,262144
new,MemoryChunk,0x158d3f00000,262144
new,MemoryChunk,0x36b25680000,262144
delete,MemoryChunk,0x1b0b51c0000
delete,MemoryChunk,0xe5f8500000
delete,MemoryChunk,0x3e5a6300000
new,MemoryChunk,0x637640000,921600
tick,0x7ff6ac1210dd,2302892,0,0x0,0,0x7ff6abdf0260,0x7ff62c527502,0x339fd12473c,0x339fd1224dd,0x339fd12457b,0x339fd124364,0x339fd1224dd,0x339fd121f9d,0x339fd121e16,0x339fd11e7ff,0x339fd123322,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd122608,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd11dd7f,0x339fd11d627,0x339fd11d44d,0x22671c8b3a8,0x339fd116f95,0x339fd114930
code-creation,JS,10,2308636,0x339fd1253a4,372,inspect node:internal/util/inspect:309:17,0x22671c876a0,~
code-source-info,0x339fd1253a
code-creation,JS,10,2309030,0x339fd125d3c,490,formatValue node:internal/util/inspect:765:21,0x22671c87d30,~
code-source-info,0x339fd125d3c
code-creation,JS,10,2309510,0x339fd126804,3297,formatRaw node:internal/util/inspect:843:19,0x22671c87d88,~
code-source-info,0x339fd126804,21,26699,37788,C0O26747C2O26760C4O26783C10O26818C14O26811C19O26831C25O26855C28O26902C44O26902C50O27016C54O27059C61O27066C66O27080C68O27124C70O27130C72O27129C76O27267C82O27310C87O27332C95O27354C101O27395C109O27431C116O27486C119O27515C122O27538C125O27566C127O27594C129O27611C131O27636C139O27649C145O27666C148O27705C153O27924C161O27943C170O27984C172O28009C178O28013C184O28134C186O28147C193O28166C210O28232C233O28185C244O28265C250O28272C256O28320C267O28333C282O28367C289O28374C294O28388C301O28395C310O28439C311O28455C322O28462C323O28470C328O28508C333O28545C339O28549C345O28585C351O28585C357O28635C371O28674C390O28635C397O28691C401O28717C407O28698C413O28737C419O28781C433O28781C442O28838C455O28877C459O28877C465O28838C471O28912C472O28921C477O28935C484O28942C493O28986C503O29007C504O29015C515O29028C534O29057C540O29061C546O29097C552O29097C558O29147C572O29186C591O29147C598O29203C602O29229C608O29210C614O29249C620O29293C634O29293C643O29350C656O29389C660O29389C666O29350C672O29425C673O29434C678O29448C685O29455C694O29499C704O29520C705O29528C716O29541C735O29570C741O29574C747O29604C753O29611C759O29671C762O29700C766O29711C770O29748C776O29759C782O29863C788O29886C795O29871C802O29934C808O29934C814O29993C824O30035C846O29993C853O30052C864O30065C879O30099C886O30106C891O30120C898O30127C903O30141C909O30162C910O30178C921O30185C922O30344C941O30356C947O30423C954O30466C960O30470C966O30501C970O30527C976O30508C982O30547C990O30556C996O30644C1012O30656C1020O30721C1026O30725C1032O30756C1036O30782C1042O30763C1048O30802C1056O30811C1062O30899C1078O30911C1086O30985C1088O31019C1092O31042C1096O31068C1102O31049C1108O31086C1113O31112C1115O31128C1120O31151C1126O31155C1132O31192C1137O31202C1143O31235C1145O31243C1150O31262C1167O31277C1180O31272C1184O31344C1191O31351C1200O31397C1201O31413C1212O31420C1215O31442C1221O31484C1234O31491C1240O31549C1247O31556C1256O31611C1266O31611C1272O31636C1275O31649C1281O31653C1287O31728C1303O31804C1309O31800C1316O31735C1321O31851C1335O31851C1342O31897C1344O31908C1349O31932C1356O31951C1361O31976C1368O31983C1377O32052C1381O32046C1386O32065C1392O32104C1402O32104C1408O32128C1411O32150C1417O32154C1423O32234C1431O32253C1435O32253C1441O32241C1449O32293C1453O32293C1461O32333C1465O32333C1470O32388C1484O32388C1491O32432C1493O32443C1498O32465C1505O32484C1510O32508C1517O32515C1526O32572C1536O32572C1542O32594C1545O32616C1551O32620C1557O32645C1576O32652C1582O32717C1589O32724C1598O32768C1600O32780C1603O32793C1609O32797C1615O33036C1621O33036C1635O33127C1648O33127C1655O33174C1659O33215C1664O33269C1671O33276C1680O33322C1688O33387C1694O33402C1703O33370C1719O33336C1722O33425C1723O33442C1728O33457C1736O33452C1740O33475C1750O33475C1757O33530C1763O33534C1769O33562C1786O33577C1799O33572C1803O33695C1824O33695C1831O33774C1837O33778C1843O33805C1860O33820C1873O33815C1877O33870C1882O33909C1888O33913C1894O33940C1911O33955C1924O33950C1928O34021C1943O34084C1949O34088C1955O34115C1972O34130C1985O34125C1989O34196C2004O34259C2010O34263C2016O34304C2033O34319C2046O34314C2050O34421C2054O34455C2063O34455C2072O34485C2078O34489C2084O34523C2103O34530C2109O34596C2116O34603C2125O34649C2127O34661C2130O34701C2137O34708C2146O34754C2152O34758C2158O34806C2164O34806C2170O34829C2180O34830C2192O34866C2204O34888C2227O34866C2239O34911C2240O34932C2253O34942C2274O34983C2275O35000C2291O35015C2312O35010C2320O35096C2324O35090C2332O35109C2338O35154C2357O35175C2376O35154C2388O35226C2392O35259C2398O35281C2417O35317C2427O35317C2439O35353C2440O35362C2450O35390C2460O35395C2470O35395C2480O35411C2482O35428C2490O35451C2492O35489C2504O35519C2513O35528C2524O35575C2526O35591C2530O35584C2538O35613C2550O35704C2570O35659C2582O35613C2592O35600C2599O35570C2607O35744C2611O35783C2617O35783C2642O35883C2665O35904C2684O35883C2696O35955C2715O35962C2725O36028C2726O36045C2736O36094C2746O36103C2756O36103C2768O36120C2770O36176C2782O36193C2805O36176C2819O36298C2834O36327C2836O36339C2850O36363C2865O36376C2875O36409C2880O36424C2894O36443C2907O36419C2915O36478C2925O36483C2935O36483C2943O36503C2953O36541C2971O36575C2981O36588C2983O36603C2991O36629C2997O36629C3009O36690C3017O36697C3025O36726C3033O36745C3037O36780C3047O36794C3051O36787C3059O36745C3071O36726C3083O36823C3089O36868C3099O36882C3103O36875C3111O36895C3123O36823C3133O36911C3141O36924C3151O36911C3161O36990C3186O36990C3197O37100C3207O37111C3215O37106C3225O37167C3233O37161C3240O37182C3250O37193C3262O37209C3270O37718C3276O37732C3284O37750C3286O37760C3294O37774C3296O37785,,
code-creation,JS,10,2309952,0x339fd127b84,322,getConstructorName node:internal/util/inspect:587:28,0x22671c87b20,~
code-source-info,0x339fd127b
code-creation,JS,10,2310041,0x339fd127e3c,13,isInstanceof node:internal/util/inspect:579:22,0x22671c87ac8,~
code-source-info,0x339fd127e3c,21,17954,18057,C3O17986C5O18000C8O18017C11O18036C12O18049,,
code-creation,JS,10,2310125,0x339fd127f74,165,formatArray node:internal/util/inspect:1741:21,0x22671c88620,~
code-source-info,0x339fd127f74,21,59970,60566,C0O60023C5O60046C12O60054C17O60069C22O60054C28O60046C34O60118C36O60125C40O60150C43O60170C45O60175C47O60175C52O60232C57O60237C64O60287C85O60294C90O60355C91O60368C101O60439C116O60395C122O60368C127O60183C132O60157C136O60461C137O60475C142O60487C149O60514C152O60514C157O60487C162O60549C164O60563,,
code-creation,JS,10,2310308,0x339fd128444,993,formatProperty node:internal/util/inspect:1936:24,0x22671c889e8,~
code-source-info,0x339fd
code-creation,JS,10,2310433,0x339fd128a2c,11,isUndetectableObject node:internal/util/inspect:176:30,0x22671c875f0,~
code-source-info,0x339fd128a2c,21,3815,3865,C0O3847C9O3852C10O3865,,
code-creation,JS,10,2310523,0x339fd128cac,392,formatPrimitive node:internal/util/inspect:1620:25,0x22671c884c0,~
code-source-info,0x339fd128cac
code-creation,JS,10,2310644,0x339fd129064,207,formatNumber node:internal/util/inspect:1584:22,0x22671c88410,~
code-source-info,0x339fd129064,21,54288,55081,C0O54324C4O54435C12O54439C19O54470C25O54477C30O54496C31O54509C33O54522C38O54516C43O54542C44O54567C49O54567C54O54604C59O54604C64O54624C66O54636C71O54655C76O54660C84O54686C90O54686C97O54733C100O54740C105O54761C106O54774C109O54787C118O54781C123O54828C124O54837C129O54841C135O54869C138O54876C143O54897C144O54906C147O54925C164O54997C170O55018C175O55041C179O55048C183O54997C189O54966C201O54913C206O55078,,
code-creation,JS,10,2310702,0x339fd129264,3,stylizeNoColor node:internal/util/inspect:570:24,0x22671c87a18,~
code-source-info,0x339fd129264,21,17773,17798,C0O17784C2O17795,,
code-creation,JS,11,2310839,0x7ff62c52e980,5820,formatProperty node:internal/util/inspect:1936:24,0x22671c889e8,^
code-source-info,0x7ff62c52e980,21,66353,68973,,,
code-creation,JS,11,2310859,0x7ff62c527600,148,isUndetectableObject node:internal/util/inspect:176:30,0x22671c875f0,^
code-source-info,0x7ff62c527600,21,3815,3865,,,
code-creation,JS,11,2310873,0x7ff62c5276c0,40,stylizeNoColor node:internal/util/inspect:570:24,0x22671c87a18,^
code-source-info,0x7ff62c5276c0,21,17773,17798,,,
code-creation,JS,11,2310940,0x7ff62c530080,2424,formatPrimitive node:internal/util/inspect:1620:25,0x22671c884c0,^
code-source-info,0x7ff62c530080,21,55335,56750,,,
code-creation,JS,11,2311053,0x7ff62c530a40,3048,formatValue node:internal/util/inspect:765:21,0x22671c87d30,^
code-source-info,0x7ff62c530a40,21,23864,26677,,,
code-creation,JS,11,2311079,0x7ff62c527740,1280,formatArray node:internal/util/inspect:1741:21,0x22671c88620,^
code-source-info,0x7ff62c527740,21,59970,60566,,,
code-creation,JS,11,2311106,0x7ff62c527c80,1464,formatNumber node:internal/util/inspect:1584:22,0x22671c88410,^
code-source-info,0x7ff62c527c80,21,54288,55081,,,
code-creation,JS,10,2311145,0x339fd129e54,34,remainingText node:internal/util/inspect:1582:23,0x22671c883b8,~
code-source-info,0x339fd129e54,21,54192,54262,C0O54207C5O54214C18O54246C33O54262,,
code-creation,JS,10,2311280,0x339fd12a064,592,reduceToSingleString node:internal/util/inspect:2032:30,0x22671c88a98,~
code-source-info,0x339fd12a
code-creation,JS,10,2311508,0x339fd12a64c,775,groupArrayElements node:internal/util/inspect:1435:28,0x22671c88258,~
code-source-info,0x339fd12a64c
code-creation,JS,10,2311682,0x339fd12ac44,142,getStringWidth node:internal/util/inspect:2324:43,0x22671c88e08,~
code-source-info,0x339fd12ac44,21,80549,81134,C13O80601C15O80611C19O80644C24O80650C29O80706C31O80717C35O80711C40O80901C45O80901C51O80923C53O80932C58O80951C60O80960C63O80964C72O80979C79O81004C82O81004C91O80979C97O80964C109O81052C111O81075C113O81089C130O80726C135O80693C139O81116C141O81129,,
code-creation,JS,11,2311818,0x7ff62c531680,5316,groupArrayElements node:internal/util/inspect:1435:28,0x22671c88258,^
code-source-info,0x7ff62c531680,21,48613,53033,,,
code-creation,JS,11,2311841,0x7ff62c528280,964,getStringWidth node:internal/util/inspect:2324:43,0x22671c88e08,^
code-source-info,0x7ff62c528280,21,80549,81134,,,
code-creation,JS,10,2311958,0x339fd12b40c,76,join node:internal/util:470:14,0x22671c811c0,~
code-source-info,0x339fd12b40c,16,13793,14114,C0O13828C3O13846C9O13853C14O13892C18O13899C22O13922C24O13927C26O13927C31O14011C33O14024C43O14036C45O14043C52O13941C57O13909C61O14066C63O14079C73O14100C75O14111,,
code-creation,JS,10,2312137,0x339fd12b6b4,182,json C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\response.js:250:25,0x1117063a628,~
code-source-info,0x339fd12b6b4,264,5784,6598,C0O5784C2O5804C5O5851C12O5858C17O5918C19O5938C26O5964C32O5964C36O6048C38O6075C41O6064C47O6099C53O6099C57O6183C58O6210C61O6199C65O6221C67O6236C71O6283C76O6307C84O6307C90O6347C98O6347C104O6388C112O6388C118O6421C133O6421C139O6493C147O6493C154O6525C165O6525C171O6585C176O6585C181O6596,,
code-creation,JS,10,2312243,0x339fd12b91c,84,stringify C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\response.js:1145:20,0x1117063a440,~
code-source-info,0x339fd12b91c,264,27361,28013,C0O27527C6O27539C8O27552C12O27557C26O27557C33O27598C37O27603C42O27603C48O27624C58O27682C74O27682C81O28000C83O28011,,
new,MemoryChunk,0x2dfcae80000,544768
code-creation,JS,10,2314185,0x339fd12ba94,11,res.get C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\response.js:811:19,0x1117063aae8,~
code-source-info,0x339fd12ba94,264,20278,20320,C0O20301C5O20301C10O20318,,
code-creation,JS,10,2314249,0x339fd12bb8c,46,getHeader node:_http_outgoing:762:57,0x395cad658d0,~
code-source-info,0x339fd12bb8c,170,23773,23986,C0O23785C8O23785C13O23836C15O23841C17O23840C21O23858C23O23885C24O23892C25O23912C27O23920C30O23920C34O23919C38O23958C42O23979C45O23983,,
code-creation,JS,10,2314335,0x339fd12bd84,247,header C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\response.js:777:29,0x1117063aa90,~
code-source-info,0x339fd12bd84,264,19509,20156,C0O19509C2O19540C9O19547C14O19572C18O19578C23O19578C30O19603C35O19607C39O19603C50O19623C55O19686C60O19686C67O19700C72O19728C76O19738C81O19738C88O19764C97O19770C102O19764C103O19841C106O19860C111O19860C118O19897C121O19902C126O19911C131O19924C139O19924C146O19934C150O19911C156O19948C158O19961C161O19993C166O19993C170O19983C180O20032C185O20032C193O20088C206O20081C219O20081C220O20108C227O20122C231O20108C240O20072C244O20142C246O20154,,
code-creation,JS,10,2314474,0x339fd12c074,25,lookup C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\mime\\mime.js:102:19,0x3b8443743e0,~
code-source-info,0x339fd12c074,242,2546,2698,C0O2607C6O2658C11O2658C24O2694,,
code-creation,RegExp,3,2314565,0x7ff62c4e8e40,1004,^[\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]+$
code-creation,RegExp,3,2314588,0x7ff62c4e9280,756,[^\\t\\x20-\\x7e\\x80-\\xff]
code-creation,JS,10,2314725,0x339fd12c494,679,send C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\response.js:111:25,0x1117063a5d0,~
code-source-info,0x339fd12c494,264,2432,5591,C0O2432C2O2455C5O2494C10O2543C15O2590C22O2597C27O2657C28O2677C37O2713C44O2739C50O2739C54O2825C56O2852C59O2841C65O2876C71O2876C75O2962C76O2989C79O2978C83O3000C85O3017C89O3096C95O3139C102O3146C107O3232C115O3232C122O3266C130O3266C135O3290C141O3290C145O3361C147O3377C151O3390C154O3407C161O3414C165O3429C199O3521C207O3521C214O3557C222O3557C227O3585C229O3656C233O3686C238O3711C241O3722C246O3722C253O3759C261O3759C268O3797C276O3797C283O3855C288O3855C293O3867C294O3882C296O3924C302O3961C305O3996C313O3996C319O4058C323O4101C337O4121C343O4101C349O4222C357O4222C363O4264C371O4264C384O4350C388O4381C391O4392C396O4392C403O4459C410O4477C414O4504C423O4511C428O4585C431O4598C436O4598C445O4692C448O4707C453O4707C460O4735C462O4775C467O4798C475O4798C481O4864C489O4921C495O4919C497O4960C505O4960C511O5015C517O5022C521O5038C525O5078C530O5095C534O5086C544O5122C548O5113C553O5145C561O5145C566O5184C574O5184C579O5225C587O5225C592O5264C595O5319C604O5330C609O5350C620O5350C626O5386C634O5386C639O5424C642O5450C649O5457C654O5506C659O5506C665O5548C670O5548C676O5577C678O5589,,
code-creation,JS,10,2314851,0x339fd12c99c,50,setCharset C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\utils.js:248:41,0x2773ccb7428,~
code-source-info,0x339fd12c99c,212,5044,5280,C0O5064C6O5078C8O5093C10O5105C11O5142C14O5154C19O5154C25O5194C32O5213C36O5244C39O5263C44O5263C49O5278,,
code-creation,JS,10,2314987,0x339fd12cc0c,379,parse C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\content-type\\index.js:106:16,0x2773ccbfae8,~
code-source-info,0x339fd12cc0c
code-creation,JS,10,2315125,0x339fd12d184,28,ContentType C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\content-type\\index.js:222:22,0x2773ccbfbf0,~
code-source-info,0x339fd12d184,216,4932,5001,C0O4961C4O4968C11O4968C16O4959C20O4983C22O4993C27O5000,,
code-creation,RegExp,3,2315278,0x7ff62c4e95c0,2464,; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) *
code-creation,JS,10,2315348,0x339fd12da9c,202,format C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\content-type\\index.js:65:17,0x2773ccbfa90,~
code-source-info,0x339fd12da9c,216,1802,2478,C0O1812C10O1855C19O1861C24O1855C25O1931C30O1959C35O1967C40O1993C45O1993C52O2011C61O2017C66O2011C67O2067C70O2098C80O2181C84O2188C89O2188C95O2204C100O2205C105O2230C107O2244C111O2235C116O2265C118O2279C122O2290C125O2308C130O2308C137O2331C146O2337C151O2331C152O2392C157O2407C163O2415C172O2441C176O2423C180O2421C190O2253C195O2217C199O2463C201O2476,,
code-creation,RegExp,3,2315421,0x7ff62c4e9f80,1260,^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$
code-creation,JS,10,2315492,0x339fd12e064,98,qstring C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\content-type\\index.js:203:18,0x2773ccbfb98,~
code-source-info,0x339fd12e064,216,4575,4851,C0O4595C4O4595C9O4639C12O4656C17O4656C24O4673C26O4683C27O4699C33O4706C41O4726C46O4726C53O4743C62O4749C67O4743C68O4797C71O4814C82O4814C88O4808C94O4844C97O4849,,
code-creation,RegExp,3,2315540,0x7ff62c4ea4c0,1004,^[!#$%&'*+.^_`|~0-9A-Za-z-]+$
code-creation,RegExp,3,2315569,0x7ff62c4ea900,1220,;\\s*charset\\s*=
code-creation,JS,10,2315612,0x339fd12e364,6,isBuffer node:buffer:541:36,0x22671c8ede8,~
code-source-info,0x339fd12e364,24,15848,15887,C0O15857C2O15866C5O15884,,
code-creation,JS,10,2315980,0x339fd12e4dc,52,generateETag C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\utils.js:273:32,0x3d3e571cc90,~
code-source-info,0x339fd12e4dc,212,5510,5649,C0O5543C5O5551C10O5551C22O5581C27O5581C38O5620C46O5627C51O5645,,
code-creation,JS,10,2316053,0x339fd12e6ac,128,etag C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\etag\\index.js:70:15,0x299e2c26420,~
code-source-info,0x339fd12e6ac,223,1105,1679,C0O1127C5O1153C14O1159C19O1153C20O1254C23O1254C28O1283C32O1309C40O1342C49O1387C59O1434C63O1441C68O1441C75O1465C84O1471C89O1465C90O1582C97O1596C106O1618C111O1639C120O1662C127O1677,,
code-creation,JS,10,2316112,0x339fd12e874,132,isstats C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\etag\\index.js:104:18,0x299e2c26478,~
code-source-info,0x339fd12e874,223,1812,2226,C0O1844C8O1883C13O1907C14O1918C15O1943C30O1996C38O2015C43O2024C48O2015C56O2031C66O2066C74O2085C79O2094C84O2085C92O2101C102O2134C107O2155C120O2186C125O2207C131O2224,,
code-creation,JS,10,2316157,0x339fd12e9fc,5,get node:internal/bootstrap/node:409:8,0xfca8d3a788,~
code-source-info,0x339fd12e9fc,12,14089,14123,C0O14101C4O14116,,
code-creation,JS,10,2316205,0x339fd12eb54,146,entitytag C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\etag\\index.js:39:20,0x299e2c263c8,~
code-source-info,0x339fd12eb54,223,478,918,C0O502C6O509C11O545C13O585C14O632C17O644C25O644C31O667C39O668C46O695C54O696C60O717C70O718C77O778C83O811C87O818C95O818C103O858C108O868C111O885C119O885C124O879C130O898C136O904C142O911C145O916,,
code-creation,JS,10,2316259,0x339fd12ecfc,19,createHash node:crypto:137:20,0x299e2c28610,~
code-source-info,0x339fd12ecfc,224,3637,3702,C0O3663C13O3670C18O3699,,
code-creation,JS,10,2316330,0x339fd12ee9c,165,Hash node:internal/crypto/hash:59:14,0x3b84435f370,~
code-source-info,0x339fd12ee9c,237,1025,1546,C0O1051C2O1062C7O1085C18O1092C23O1121C24O1125C26O1152C28O1141C33O1165C41O1165C46O1223C56O1286C64O1315C66O1346C74O1346C79O1397C81O1402C95O1413C100O1411C104O1446C106O1451C116O1469C121O1482C128O1459C132O1498C139O1511C151O1533C158O1498C164O1545,,
code-creation,JS,10,2316376,0x339fd12f65c,8,LazyTransform node:internal/streams/lazy_transform:16:23,0x3b84435a500,~
code-source-info,0x339fd12f65c,235,438,480,C0O453C2O467C7O479,,
code-creation,JS,10,2316447,0x339fd12f7ac,176,Transform node:internal/streams/transform:82:19,0x15e3f453380,~
code-source-info,0x339fd12f7ac,106,4019,5623,C0O4034C2O4045C7O4073C12O4080C17O4103C18O4310C24O4320C38O4320C47O4394C48O4420C53O4649C59O4702C65O4715C69O4776C85O4822C90O4829C95O4829C101O5021C107O5041C111O5055C113O5060C117O5071C121O5084C125O5123C133O5182C137O5172C141O5219C149O5270C153O5260C157O5593C168O5593C175O5622,,
code-creation,JS,10,2316721,0x339fd13036c,116,update node:internal/crypto/hash:96:40,0x3b84435f580,~
code-source-info,0x339fd13036c,237,2153,2617,C0O2189C2O2194C4O2193C8O2206C10O2216C12O2215C17O2234C22O2240C27O2234C28O2278C34O2315C39O2315C46O2359C51O2364C57O2396C75O2402C80O2396C81O2508C83O2518C85O2517C89O2527C94O2527C102O2556C107O2562C112O2556C113O2602C115O2614,,
code-creation,JS,10,2317148,0x339fd13050c,66,digest node:internal/crypto/hash:114:40,0x3b84435f5d8,~
code-source-info,0x339fd13050c,237,2663,2978,C0O2699C2O2704C4O2703C8O2716C10O2726C12O2725C17O2744C22O2750C27O2744C28O2871C30O2876C32O2875C36O2885C43O2892C47O2913C49O2885C55O2935C59O2953C63O2964C65O2975,,
code-creation,JS,10,2317268,0x339fd1306f4,122, C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\express\\lib\\request.js:467:36,0x3d3e5721bf0,~
code-source-info,0x339fd1306f4,251,11303,11736,C0O11327C5O11352C10O11375C15O11441C20O11451C30O11472C35O11484C36O11497C37O11538C41O11550C50O11567C62O11581C67O11599C70O11617C80O11646C88O11646C97O11686C105O11686C114O11606C119O11713C120O11721C121O11734,,
code-creation,JS,10,2317421,0x339fd130ecc,184,fresh C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\fresh\\index.js:33:16,0x3b844372990,~
code-source-info,0x339fd130ecc,241,537,1800,C0O608C5O658C10O706C16O729C18O746C19O758C20O948C25O968C30O1018C35O1018C42O1044C43O1056C44O1083C50O1110C55O1146C60O1160C62O1179C63O1191C64O1219C66O1242C69O1242C74O1285C76O1300C80O1290C85O1333C87O1340C91O1350C93O1360C103O1387C106O1378C116O1402C122O1410C127O1430C129O1456C131O1309C136O1272C140O1481C144O1504C145O1516C146O1553C150O1607C155O1649C161O1668C169O1699C173O1696C178O1734C180O1761C181O1773C182O1787C183O1798,,
code-creation,JS,10,2317517,0x339fd1310ec,137,parseTokenList C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\fresh\\index.js:110:25,0x3b844372a40,~
code-source-info,0x339fd1310ec,241,2199,2710,C0O2219C2O2234C5O2251C7O2288C9O2301C14O2311C16O2311C21O2341C26O2341C48O2391C50O2401C55O2422C57O2438C62O2460C64O2504C69O2513C74O2513C81O2504C86O2544C88O2560C93O2572C95O2601C97O2609C101O2621C103O2319C108O2275C112O2662C117O2671C122O2671C129O2662C134O2697C136O2708,,
code-creation,JS,10,2317632,0x339fd1314d4,127,removeHeader node:_http_outgoing:822:63,0x395cad65a88,~
code-source-info,0x339fd1314d4,170,25552,26123,C0O25564C8O25564C13O25608C19O25624C29O25630C34O25624C35O25689C40O25689C45O25728C78O25774C79O25798C83O25813C85O25855C86O25876C90O25891C92O25936C93O25952C97O25967C99O25999C100O26013C104O26029C106O26046C108O26055C110O26054C115O26085C117O26096C123O26110C126O26122,,
code-creation,JS,10,2317791,0x339fd1317d4,550,end node:_http_outgoing:1058:45,0x395cad65d98,~
code-source-info,0x339fd1317d4,170,32176,34239,C0O32209C6O32249C9O32272C12O32291C17O32318C23O32361C26O32387C29O32414C33O32441C39O32460C44O32493C47O32489C64O32571C71O32460C76O32595C78O32607C79O32622C81O32631C83O32630C88O32650C90O32654C94O32664C99O32664C103O32686C119O32686C126O32748C132O32765C138O32820C144O32854C152O32854C160O32903C162O32916C170O32912C176O32903C180O32974C182O32986C183O33007C189O33023C191O33032C193O33031C198O33051C200O33055C204O33065C209O33065C213O33087C214O33107C218O33122C223O33122C227O33151C233O33197C241O33197C247O33228C250O33232C258O33266C260O33265C264O33290C268O33281C273O33313C280O33361C282O33360C286O33382C293O33319C298O33313C299O33424C302O33433C309O33433C316O33470C322O33487C328O33516C336O33537C340O33530C346O33546C359O33516C366O33595C372O33615C380O33633C382O33652C399O33652C406O33698C409O33706C414O33706C419O33734C421O33743C423O33742C428O33802C430O33806C434O33816C441O33838C445O33848C447O33852C451O33862C456O33862C460O33880C462O33885C467O33894C471O33907C476O33907C480O33922C481O33936C485O34052C493O34052C497O34096C502O34107C508O34114C515O34134C522O34158C526O34168C533O34181C538O34203C543O34203C547O34224C549O34236,,
code-creation,JS,10,2317960,0x339fd131c2c,37,Writable.cork node:internal/streams/writable:505:35,0x15e3f44a470,~
code-source-info,0x339fd131c2c,104,15983,16078,C0O16010C5O16031C7O16037C16O16048C21O16045C25O16060C31O16072C36O16077,,
code-creation,JS,10,2318006,0x339fd131d3c,17,_implicitHeader node:_http_server:337:68,0x395cad70838,~
code-source-info,0x339fd131d3c,172,11787,11830,C0O11800C5O11815C10O11800C16O11829,,
code-creation,JS,10,2318113,0x339fd131f04,435,writeHead node:_http_server:342:19,0x395cad6faa8,~
code-source-info,0x339fd131f
code-creation,JS,10,2318361,0x339fd1326a4,864,_storeHeader node:_http_outgoing:458:22,0x395cad649c8,~
code-source-info,0x339fd1326a4,170,13930,18962,C0O14103C7O14238C14O14260C18O14280C20O14301C22O14300C25O14292C30O14342C44O14335C57O14335C58O14376C60O14383C64O14399C69O14431C76O14441C90O14399C99O14324C105O14475C110O14479C116O14523C126O14553C131O14533C137O14583C139O14598C143O14588C148O14638C150O14645C154O14661C158O14693C165O14703C179O14661C184O14607C189O14570C195O14763C199O14770C204O14774C209O14794C223O14800C228O14794C229O14882C231O14897C235O14887C240O14926C245O14963C248O14960C255O14979C258O14976C272O14926C277O14907C283O14869C289O15051C303O15044C316O15044C317O15071C323O15075C330O15133C336O15172C353O15133C362O15033C366O15229C371O15279C377O15298C383O15311C389O15332C393O15332C396O15330C403O15342C413O15947C419O15972C428O15983C433O16031C442O16042C447O16059C452O16070C460O16081C467O16128C472O16059C476O16171C477O16192C481O16206C482O16227C486O16278C492O16480C497O16472C503O16518C509O16570C515O16605C521O16621C527O16657C532O16670C534O16702C540O16743C551O16790C555O16824C564O16880C570O16906C576O16959C581O16974C585O16992C593O16959C598O17020C601O17044C605O17038C607O17037C611O17066C616O17084C619O17104C628O17149C634O17182C642O17199C662O17240C663O17251C667O17266C676O17329C682O17347C688O17368C694O17461C695O17482C701O17513C707O17551C708O17562C714O17593C720O17626C726O17673C734O17711C738O17747C742O17740C749O17762C761O17794C767O17815C776O17866C777O17887C783O18111C792O18111C796O18330C797O18341C801O18644C811O18678C817O18694C822O18700C827O18694C828O18742C830O18764C833O18755C837O18777C838O18794C842O18936C848O18949C857O18949C863O18961,,
code-creation,JS,10,2318558,0x339fd132f04,206,processHeader node:_http_outgoing:594:23,0x395cad64a20,~
code-source-info,0x339fd132f04,170,18988,19935,C0O19029C4O19048C9O19048C13O19286C16O19290C22O19329C28O19352C33O19367C41O19367C49O19400C54O19404C60O19451C67O19458C75O19466C83O19503C85O19502C92O19527C96O19544C103O19548C106O19548C111O19544C118O19723C120O19736C124O19728C129O19758C134O19793C150O19758C155O19745C160O19710C164O19816C165O19823C166O19836C174O19844C181O19885C199O19885C205O19934,,
code-creation,JS,10,2318617,0x339fd133124,28,isContentDispositionField node:_http_outgoing:105:35,0x395cad648c0,~
code-source-info,0x339fd133124,170,3705,3799,C0O3723C7O3730C14O3740C17O3740C24O3770C27O3796,,
code-creation,JS,10,2318654,0x339fd13322c,65,storeHeader node:_http_outgoing:622:21,0x395cad64a78,~
code-source-info,0x339fd13322c,170,19959,20143,C0O20000C4O20019C9O20019C14O20055C21O20075C27O20082C33O20090C39O20068C43O20103C58O20103C64O20142,,
code-creation,JS,10,2318717,0x339fd13341c,200,matchHeader node:_http_outgoing:629:21,0x395cad64ad0,~
code-source-info,0x339fd13341c,170,20167,21104,C0O20210C7O20217C12O20230C19O20237C24O20248C25O20255C26O20259C31O20267C37O20305C91O20353C92O20370C96O20385C97O20409C101O20425C108O20449C111O20429C118O20490C119O20501C125O20530C126O20551C130O20566C132O20611C133O20620C137O20635C138O20651C142O20667C149O20691C152O20671C159O20732C160O20753C164O20768C166O20810C167O20824C171O20839C173O20859C177O20875C178O20896C182O20912C184O20985C185O20998C189O21013C191O21051C192O21074C196O21090C199O21103,,
tick,0x7ff6ab690107,2318974,0,0x0,3,0x7ff6abde9970,0x339fd133266,0x339fd132fcb,0x339fd1326fe,0x339fd1320ae,0x339fd131d46,0x339fd1318b3,0x339fd12c732,0x339fd12b764,0x339fd124754,0x339fd1224dd,0x339fd12457b,0x339fd124364,0x339fd1224dd,0x339fd121f9d,0x339fd121e16,0x339fd11e7ff,0x339fd123322,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd122608,0x339fd1224dd,0x339fd1222c5,0x339fd121fb5,0x339fd121e16,0x339fd11e7ff,0x339fd11dd7f,0x339fd11d627,0x339fd11d44d,0x22671c8b3a8,0x339fd116f95,0x339fd114930
code-creation,JS,10,2319019,0x339fd133624,15,utcDate node:internal/http:19:17,0x395cad68258,~
code-source-info,0x339fd133624,171,383,437,C0O391C6O406C9O406C12O418C14O434,,
code-creation,JS,10,2319070,0x339fd13372c,62,cache node:internal/http:24:15,0x395cad682b0,~
code-source-info,0x339fd13372c,171,455,602,C0O473C5O473C11O488C16O499C23O497C29O531C44O566C47O566C51O564C55O531C61O601,,
code-creation,JS,10,2319874,0x339fd13386c,54,setUnrefTimeout node:internal/timers:384:25,0xfca8d3b5e0,~
code-source-info,0x339fd13386c,13,12035,12277,C0O12104C8O12104C13O12163C32O12163C38O12221C41O12241C46O12221C51O12261C53O12274,,
code-creation,JS,10,2320004,0x339fd1339b4,56,compareTimersLists node:internal/timers:412:28,0xfca8d3b690,~
code-source-info,0x339fd1339b4,13,12921,13108,C0O12954C5O12965C9O12961C13O12976C14O12991C19O13011C24O13018C28O13014C33O13029C35O13039C36O13051C41O13058C45O13054C50O13069C52O13078C53O13087C55O13105,,
code-creation,JS,10,2320068,0x339fd133b0c,49,strictContentLength node:_http_outgoing:905:29,0x395cad64c30,~
code-source-info,0x339fd133b0c,170,27690,27905,C0O27719C6O27751C11O27766C14O27786C20O27808C27O27837C34O27866C42O27866C48O27902,,
code-creation,JS,10,2320138,0x339fd133cc4,143,_send node:_http_outgoing:402:49,0x395cad656c0,~
code-source-info,0x339fd133cc4,170,11954,12914,C0O12211C6O12231C12O12412C20O12463C27O12486C34O12503C36O12535C43O12543C50O12592C55O12613C60O12624C72O12649C76O12624C81O12729C86O12755C93O12745C97O12775C102O12797C107O12775C112O12818C113O12835C117O12863C137O12863C142O12911,,
code-creation,JS,10,2320216,0x339fd133f34,181,_writeRaw node:_http_outgoing:428:19,0x395cad64970,~
code-source-info,0x339fd133f34,170,12987,13847,C0O13038C2O13043C4O13042C8O13056C10O13073C16O13217C17O13230C18O13241C24O13284C27O13310C30O13337C34O13354C41O13367C46O13384C52O13473C57O13484C63O13506C68O13506C73O13584C90O13584C95O13616C96O13676C101O13687C113O13694C119O13700C125O13710C129O13687C134O13726C139O13750C146O13742C150O13766C155O13786C160O13766C165O13810C172O13828C174O13827C177O13821C180O13844,,
code-creation,JS,10,2320377,0x339fd134364,485,slowCases node:internal/util:218:19,0xfca8d3fc18,~
code-source-info,0x339fd
code-creation,JS,10,2320544,0x339fd134854,81,Writable.uncork node:internal/streams/writable:512:37,0x15e3f44a500,~
code-source-info,0x339fd134854,104,16119,16362,C0O16146C5O16177C11O16192C17O16204C21O16226C27O16243C29O16249C38O16261C40O16260C45O16257C49O16284C51O16295C53O16294C59O16305C61O16303C66O16315C71O16329C74O16329C80O16361,,
code-creation,JS,10,2320676,0x339fd134acc,581,clearBuffer node:internal/streams/writable:735:21,0x15e3f449ad8,~
code-source-info,0x339fd134acc
code-creation,JS,10,2320809,0x339fd134f8c,169,doWrite node:internal/streams/writable:579:17,0x15e3f4498c8,~
code-source-info,0x339fd134f8c,104,18174,18608,C0O18229C2O18244C6O18254C8O18261C13O18277C15O18291C19O18305C21O18311C30O18322C35O18333C37O18331C43O18341C45O18339C51O18319C55O18360C57O18370C63O18381C65O18379C70O18393C75O18411C82O18423C90O18419C96O18411C103O18463C107O18487C112O18508C117O18487C125O18538C130O18568C144O18538C149O18581C152O18587C158O18598C163O18595C168O18607,,
code-creation,JS,10,2321091,0x339fd1353fc,339,OutgoingMessage.uncork node:_http_outgoing:326:44,0x395cad65530,~
code-source-info,0x339fd1353fc,170,10091,10888,C0O10091C8O10099C12O10104C20O10112C24O10119C28O10128C30O10127C35O10145C39O10149C43O10159C48O10159C52O10179C56O10187C65O10205C67O10204C71O10221C77O10228C82O10242C83O10249C84O10272C88O10277C90O10276C94O10309C98O10314C100O10313C104O10336C111O10348C116O10336C120O10375C121O10375C123O10394C132O10400C138O10400C152O10394C157O10459C166O10465C176O10459C181O10504C183O10515C187O10509C192O10543C199O10555C202O10552C208O10567C211O10564C220O10543C225O10585C227O10595C230O10592C235O10610C243O10620C245O10635C248O10645C255O10656C258O10653C262O10645C267O10525C273O10491C277O10683C292O10715C309O10683C314O10824C318O10828C323O10852C327O10860C333O10881C338O10887,,
code-creation,JS,10,2321190,0x339fd13570c,10, node:_http_outgoing:80:64,0x395cad64d90,~
code-source-info,0x339fd13570c,170,2826,2853,C0O2839C2O2845C9O2852,,
code-creation,JS,10,2321260,0x339fd13595c,208,_finish node:_http_server:232:52,0x395cad70628,~
code-source-info,0x339fd13595c,172,8509,9158,C0O8517C2O8526C4O8525C11O8556C17O8556C23O8584C31O8599C36O8643C41O8659C46O8689C54O8732C62O8779C73O8812C78O8812C101O8584C106O8870C111O8886C116O8896C121O8904C126O8904C131O8919C136O8923C141O8959C149O9007C154O9026C161O9029C172O9060C183O9085C190O9094C193O9129C201O9085C207O9157,,
code-creation,JS,10,2321310,0x339fd135b7c,32,_finish node:_http_outgoing:1141:53,0x395cad65df0,~
code-source-info,0x339fd135b7c,170,34434,34494,C0O34442C7O34454C9O34453C13O34442C17O34473C25O34473C31O34493,,
code-creation,JS,10,2321376,0x339fd135ed4,82,parserOnMessageComplete node:_http_common:137:33,0x395cad5aa20,~
code-source-info,0x339fd135ed4,167,4781,5256,C0O4804C3O4835C8O4850C10O4878C11O4894C15O4965C20O4992C26O5016C31O5049C36O5016C42O5065C44O5081C48O5094C50O5106C54O5160C61O5160C66O5228C71O5245C76O5228C81O5255,,
code-creation,JS,10,2321431,0x339fd136054,83,Readable.push node:internal/streams/readable:385:35,0x3ba13674308,~
code-source-info,0x339fd136054,99,12296,12564,C0O12319C8O12319C13O12365C18O12384C20O12398C22O12397C28O12408C30O12406C35O12421C55O12434C77O12500C82O12561,,
code-creation,JS,10,2321523,0x339fd136274,427,readableAddChunkPushByteMode node:internal/streams/readable:461:38,0x3ba13673430,~
code-source-info,0x339fd
code-creation,JS,10,2321651,0x339fd136654,237,onEofChunk node:internal/streams/readable:786:20,0x3ba13673640,~
code-source-info,0x339fd
code-creation,JS,10,2321729,0x339fd1368dc,125,emitReadable node:internal/streams/readable:817:22,0x3ba13673698,~
code-source-info,0x339fd1368dc,99,26022,26341,C0O26057C5O26076C13O26076C17O26102C19O26108C28O26120C30O26119C35O26116C39O26138C41O26148C47O26159C49O26157C54O26177C59O26191C67O26219C73O26230C75O26228C80O26240C85O26191C90O26253C93O26259C99O26270C102O26267C106O26293C109O26301C117O26301C124O26340,,
code-creation,JS,10,2321797,0x339fd136a84,27,readStart node:_http_incoming:42:19,0x395cad5f2a0,~
code-source-info,0x339fd136a84,169,1707,1795,C0O1721C4O1743C10O1761C16O1783C21O1783C26O1794,,
code-creation,JS,10,2321832,0x339fd136b94,39,get node:internal/streams/readable:1413:8,0x3ba13674ca8,~
code-source-info,0x339fd136b94,99,44383,44777,C0O44410C5O44674C8O44690C16O44699C19O44715C26O44731C33O44759C38O44770,,
code-creation,JS,10,2321927,0x339fd136cdc,49,onParserExecute node:_http_server:829:25,0x395cad70080,~
code-source-info,0x339fd136cdc,172,27650,28133,C0O27993C5O27993C9O28011C17O28011C22O28061C42O28061C48O28132,,
code-creation,JS,10,2322031,0x339fd13709c,476,onParserExecuteCommon node:_http_server:909:31,0x395cad701e0,~
code-source-info,0x339fd13709c
code-creation,JS,10,2322148,0x339fd137464,73,afterWriteTick node:internal/streams/writable:684:24,0x15e3f4499d0,~
code-source-info,0x339fd137464,104,21707,21875,C0O21710C5O21718C10O21725C15O21732C20O21743C22O21749C31O21761C33O21760C38O21757C42O21785C44O21791C48O21817C52O21828C67O21835C72O21872,,
code-creation,JS,10,2322193,0x339fd1375bc,38,onFinish node:_http_outgoing:1053:18,0x395cad64d38,~
code-source-info,0x339fd1375bc,170,32022,32128,C0O32036C4O32057C10O32074C15O32081C21O32092C22O32099C23O32110C31O32110C37O32127,,
code-creation,JS,10,2322221,0x339fd1376c4,8,get node:_http_outgoing:251:16,0x395cad65278,~
code-source-info,0x339fd1376c4,170,7907,7943,C0O7917C2O7929C4O7928C7O7938,,
code-creation,JS,10,2322299,0x339fd1378e4,285,resOnFinish node:_http_server:972:21,0x395cad70290,~
code-source-info,0x339fd1378e
code-creation,JS,10,2322372,0x339fd137b9c,35,_dump node:_http_incoming:432:49,0x395cad5fc08,~
code-source-info,0x339fd137b9c,169,14789,15024,C0O14807C6O14823C7O14836C11O14969C19O14969C24O15007C29O15007C34O15023,,
code-creation,JS,10,2322414,0x339fd137cc4,60,Readable.removeAllListeners node:internal/streams/readable:1179:49,0x3ba13674930,~
code-source-info,0x339fd137cc4,99,38092,38693,C0O38092C2O38114C7O38121C12O38131C17O38150C22O38150C29O38236C31O38243C40O38620C43O38628C51O38628C57O38679C59O38690,,
code-creation,JS,10,2322505,0x339fd137e7c,356,removeAllListeners node:events:745:32,0x22671c8be90,~
code-source-info,0x339fd137e7c
code-creation,JS,10,2322606,0x339fd138194,49,detachSocket node:_http_server:293:62,0x395cad706d8,~
code-source-info,0x339fd138194,172,10650,10816,C0O10664C5O10678C12O10691C16O10664C20O10712C31O10712C37O10763C38O10783C42O10794C43O10806C48O10815,,
code-creation,JS,10,2322672,0x339fd1382dc,70,clearIncoming node:_http_server:959:23,0x395cad70238,~
code-source-info,0x339fd1382dc,172,31774,32101,C0O31785C8O31826C14O31840C19O31847C24O31934C26O31955C33O31964C38O31988C44O32012C45O32028C51O32061C62O32061C69O32100,,
code-creation,JS,10,2322727,0x339fd138424,19,get node:internal/streams/readable:1540:8,0x3ba136754a0,~
code-source-info,0x339fd138424,99,47321,47408,C0O47345C6O47367C11O47382C18O47401,,
code-creation,JS,10,2322817,0x339fd138604,180,setStreamTimeout node:internal/stream_base_commons:237:26,0x15e3f4599e0,~
code-source-info,0x339fd138604,108,6301,7114,C0O6333C6O6349C8O6361C9O6367C11O6380C15O6443C23O6451C30O6626C37O6644C39O6643C43O6626C47O6661C48O6671C53O6685C57O6722C65O6722C70O6774C78O6774C86O6835C91O6852C94O6873C99O6884C104O6884C110O6852C115O6850C119O6909C121O6918C123O6917C128O6929C130O6933C136O6944C138O6943C142O6957C146O6968C150O7005C158O7005C163O7057C171O7057C177O7099C179O7111,,
code-creation,JS,11,2322949,0x7ff62c528680,188,get node:internal/streams/readable:130:8,0x3ba1367c808,^
code-source-info,0x7ff62c528680,99,3940,3981,,,
code-creation,JS,11,2322990,0x7ff62c528780,832,parseTokenList C:\\Main\\University\\\u0421\u041f\\\u041b\u0430\u0431\u0430 6\\Lab6 SP Astafiev\\node_modules\\fresh\\index.js:110:25,0x3b844372a40,^
code-source-info,0x7ff62c528780,241,2199,2710,,,
code-creation,JS,11,2323020,0x7ff62c528b00,104,isEmpty node:internal/fixed_queue:67:10,0x22671c97bc8,^
code-source-info,0x7ff62c528b00,30,3150,3197,,,
code-creation,JS,11,2323109,0x7ff62c532b80,2704,emit node:events:466:44,0x22671c8b228,^
code-source-info,0x7ff62c532b80,23,13862,16231,,,
code-creation,JS,11,2323143,0x7ff62c528bc0,456,_unrefTimer node:net:505:52,0x3ba13651388,^
code-source-info,0x7ff62c528bc0,88,14386,14501,,,
code-creation,JS,10,2323212,0x339fd1389bc,110,getTimerDuration node:internal/timers:395:26,0xfca8d3b638,~
code-source-info,0x339fd1389bc,13,12372,12890,C0O12391C5O12391C10O12423C11O12433C18O12441C21O12441C27O12471C43O12477C48O12471C49O12601C51O12613C53O12611C58O12633C61O12641C68O12656C81O12771C91O12707C98O12641C104O12844C106O12863C107O12874C109O12887,,
code-creation,JS,10,2323304,0x339fd138b9c,177, node:internal/validators:175:40,0xfca8d3db10,~
code-source-info,0x339fd138b9c,15,4898,5355,C19O4942C25O4978C41O4984C46O4978C47O5038C54O5064C66O5096C83O5144C86O5144C92O5172C110O5243C136O5275C151O5319C169O5178C174O5172C176O5354,,
code-creation,JS,10,2323670,0x339fd138d6c,63,clearTimeout node:timers:185:22,0x22671c99768,~
code-source-info,0x339fd138d6c,32,5411,5769,C0O5424C4O5443C10O5462C11O5479C15O5492C18O5492C22O5514C23O5521C24O5530C36O5619C43O5634C47O5648C49O5690C50O5715C54O5730C57O5730C62O5768,,
code-creation,JS,10,2323902,0x339fd139014,181,emitReadable_ node:internal/streams/readable:828:23,0x3ba136736f0,~
code-source-info,0x339fd139014,99,26367,27035,C0O26402C5O26421C13O26421C17O26448C19O26459C21O26458C27O26470C32O26483C34O26481C37O26467C42O26494C47O26510C55O26526C61O26537C63O26535C68O26545C73O26567C81O26567C86O26590C89O26596C95O26608C97O26607C102O26604C106O26885C109O26891C115O26913C121O26925C126O26936C128O26934C131O26922C136O26945C144O26965C149O26981C153O26972C160O26997C168O26899C172O27019C175O27019C180O27034,,
code-creation,JS,10,2324009,0x339fd139234,81,endReadable node:internal/streams/readable:1680:21,0x3ba13673b68,~
code-source-info,0x339fd139234,99,50817,51031,C0O50852C5O50873C13O50873C17O50898C19O50909C21O50908C27O50919C29O50917C34O50932C39O50946C42O50952C48O50963C53O50960C57O50976C60O50984C74O50984C80O51030,,
code-creation,JS,11,2324125,0x7ff62c533640,2404,nextTick node:internal/process/task_queues:103:18,0x22671c969e0,^
code-source-info,0x7ff62c533640,28,2687,3575,,,
code-creation,JS,11,2324149,0x7ff62c528dc0,212,newAsyncId node:internal/async_hooks:417:20,0xfca8d3cba0,^
code-source-info,0x7ff62c528dc0,14,14984,15037,,,
code-creation,JS,11,2324168,0x7ff62c528ec0,312,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0xfca8d3cc50,^
code-source-info,0x7ff62c528ec0,14,15459,15722,,,
code-creation,JS,11,2324183,0x7ff62c529040,144,initHooksExist node:internal/async_hooks:478:24,0xfca8d3ce08,^
code-source-info,0x7ff62c529040,14,16722,16756,,,
code-creation,JS,11,2324205,0x7ff62c529100,112,isEmpty node:internal/fixed_queue:95:10,0x22671c97ea0,^
code-source-info,0x7ff62c529100,30,3731,3773,,,
code-creation,JS,11,2324221,0x7ff62c5291c0,204,get node:internal/bootstrap/node:100:8,0xfca8d3a030,^
code-source-info,0x7ff62c5291c0,12,3932,3981,,,
code-creation,JS,11,2324238,0x7ff62c5292c0,200,isFull node:internal/fixed_queue:71:9,0x22671c97c20,^
code-source-info,0x7ff62c5292c0,30,3209,3272,,,
code-creation,JS,11,2324253,0x7ff62c5293c0,268,push node:internal/fixed_queue:75:7,0x22671c97c78,^
code-source-info,0x7ff62c5293c0,30,3282,3368,,,
code-creation,JS,11,2324269,0x7ff62c529500,384,push node:internal/fixed_queue:99:7,0x22671c97ef8,^
code-source-info,0x7ff62c529500,30,3783,4050,,,
code-creation,JS,10,2324338,0x339fd13999c,31,emitCloseNT node:_http_server:1019:21,0x395cad702e8,~
code-source-info,0x339fd13999c,172,33498,33617,C0O33520C6O33536C7O33551C11O33564C12O33577C16O33595C24O33595C30O33616,,
code-creation,JS,10,2324415,0x339fd139bcc,173,endReadableNT node:internal/streams/readable:1690:23,0x3ba13673bc0,~
code-source-info,0x339fd139bcc,99,51057,51954,C0O51078C8O51078C12O51156C14O51167C16O51166C22O51178C27O51189C29O51187C35O51205C37O51203C40O51175C45O51219C50O51234C56O51241C61O51255C64O51261C70O51272C73O51269C77O51297C85O51297C90O51328C96O51347C106O51381C109O51389C117O51389C125O51444C131O51613C136O51656C139O51685C145O51827C151O51846C160O51885C162O51920C167O51920C172O51953,,
code-creation,JS,10,2324518,0x339fd139e8c,251,destroy node:internal/streams/destroy:48:17,0x3ba1366a3f0,~
code-source-info,0x339fd139e8c,96,971,1871,C0O971C13O1001C18O1035C23O1126C28O1139C36O1158C38O1157C46O1168C48O1166C53O1180C60O1196C66O1204C68O1203C76O1214C78O1212C83O1226C88O1245C94O1284C97O1284C100O1304C102O1316C103O1478C117O1478C122O1506C126O1520C130O1522C141O1533C146O1530C150O1553C154O1567C158O1569C169O1580C174O1577C178O1659C182O1666C184O1665C192O1676C194O1674C199O1690C204O1709C213O1714C221O1709C229O1821C243O1821C248O1856C250O1868,,
code-creation,JS,10,2324583,0x339fd13a0fc,42,checkError node:internal/streams/destroy:32:20,0x3ba1366a398,~
code-source-info,0x339fd13a0fc,96,537,841,C0O554C4O662C8O721C12O733C18O751C20O761C24O780C28O792C34O810C36O820C41O840,,
code-creation,JS,10,2324625,0x339fd13a304,71,_destroy node:internal/streams/destroy:89:18,0x3ba1366a470,~
code-source-info,0x339fd13a304,96,1892,2535,C0O1892C21O1926C22O1926C27O2449C30O2454C37O2463C41O2454C60O2512C63O2512C70O2534,,
code-creation,JS,10,2324683,0x339fd13a57c,187,_destroy node:_http_incoming:221:55,0x395cad5fbb0,~
code-source-info,0x339fd13a57c,169,6594,7396,C0O6594C17O6609C20O6619C29O6642C35O6659C39O6672C43O6685C46O6690C54O6690C59O7022C62O7031C71O7047C76O7054C85O7072C98O7088C103O7093C108O7100C118O7100C123O7135C135O7149C145O7135C150O7135C156O7347C161O7355C180O7355C186O7395,,
code-creation,JS,11,2324794,0x7ff62c5296c0,324,emitBeforeScript node:internal/async_hooks:509:26,0xfca8d3cfc0,^
code-source-info,0x7ff62c5296c0,14,17423,17579,,,
code-creation,JS,11,2324814,0x7ff62c529840,296,shift node:internal/fixed_queue:108:8,0x22671c97f50,^
code-source-info,0x7ff62c529840,30,4061,4320,,,
code-creation,JS,11,2324873,0x7ff62c534000,2248,processTicksAndRejections node:internal/process/task_queues:67:35,0x22671c96988,^
code-source-info,0x7ff62c534000,28,1545,2522,,,
code-creation,JS,11,2324895,0x7ff62c5299c0,376,shift node:internal/fixed_queue:80:8,0x22671c97cd0,^
code-source-info,0x7ff62c5299c0,30,3379,3596,,,
code-creation,JS,11,2324916,0x7ff62c529b80,1104,pushAsyncContext node:internal/async_hooks:539:26,0xfca8d3d120,^
code-source-info,0x7ff62c529b80,14,18097,18652,,,
code-creation,JS,10,2324994,0x339fd13b04c,31,onError node:_http_incoming:442:17,0x395cad5f508,~
code-source-info,0x339fd13b04c,169,15045,15284,C0O15206C8O15206C15O15229C20O15243C25O15266C30O15283,,
code-creation,JS,10,2325049,0x339fd13b174,173,onDestroy node:internal/streams/destroy:92:21,0x339fd13a228,~
code-source-info,0x339fd13b174,96,1956,2434,C0O1969C6O1990C7O1997C8O2010C9O2017C11O2042C14O2047C19O2078C22O2083C27O2106C41O2106C46O2136C50O2152C54O2154C65O2165C70O2162C74O2186C78O2202C82O2204C93O2215C98O2212C102O2238C108O2277C111O2277C115O2300C119O2318C124O2326C140O2326C147O2386C152O2394C165O2394C172O2433,,
code-creation,JS,10,2325130,0x339fd13b3bc,123,emitCloseNT node:internal/streams/destroy:132:21,0x3ba1366a548,~
code-source-info,0x339fd13b3bc,96,2653,2970,C0O2680C5O2714C10O2735C12O2749C14O2751C23O2762C28O2759C32O2785C36O2799C38O2801C47O2812C52O2809C56O2837C62O2856C64O2855C70O2866C72O2864C77O2878C84O2894C88O2902C90O2901C96O2912C98O2910C103O2924C108O2948C116O2948C122O2969,,
delete,MemoryChunk,0x10be3c80000
delete,MemoryChunk,0x1d390a00000
delete,MemoryChunk,0x36b25680000
delete,MemoryChunk,0xc669a80000
delete,MemoryChunk,0x158d3f00000
delete,MemoryChunk,0x637640000
delete,MemoryChunk,0x2dfcae80000
tick,0x7ffe2c22fe14,2334886,0,0x0,8
tick,0x7ffe2c22fe14,2350893,0,0x0,8
tick,0x7ffe2c22fe14,2366900,0,0x0,8
tick,0x7ffe2c22fe14,2382920,0,0x0,8
tick,0x7ffe2c22fe14,2398945,0,0x0,8
tick,0x7ffe2c22fe14,2413873,0,0x0,8
tick,0x7ffe2c22fe14,2429147,0,0x0,8
tick,0x7ffe2c22fe14,2445002,0,0x0,8
tick,0x7ffe2c22fe14,2459865,0,0x0,8
tick,0x7ffe2c22fe14,2476148,0,0x0,8
tick,0x7ffe2c22fe14,2490961,0,0x0,8
tick,0x7ffe2c22fe14,2507056,0,0x0,8
tick,0x7ffe2c22fe14,2523487,0,0x0,8
tick,0x7ffe2c22fe14,2538888,0,0x0,8
tick,0x7ffe2c22fe14,2553952,0,0x0,8
tick,0x7ffe2c22fe14,2569129,0,0x0,8
tick,0x7ffe2c22fe14,2584898,0,0x0,8
tick,0x7ffe2c22fe14,2600989,0,0x0,8
tick,0x7ffe2c22fe14,2617030,0,0x0,8
tick,0x7ffe2c22fe14,2631902,0,0x0,8
tick,0x7ffe2c22fe14,2646873,0,0x0,8
tick,0x7ffe2c22fe14,2662939,0,0x0,8
tick,0x7ffe2c22fe14,2677848,0,0x0,8
tick,0x7ffe2c22fe14,2693083,0,0x0,8
tick,0x7ffe2c22fe14,2708886,0,0x0,8
tick,0x7ffe2c22fe14,2724865,0,0x0,8
tick,0x7ffe2c22fe14,2740875,0,0x0,8
tick,0x7ffe2c22fe14,2755847,0,0x0,8
tick,0x7ffe2c22fe14,2770839,0,0x0,8
tick,0x7ffe2c22fe14,2786846,0,0x0,8
tick,0x7ffe2c22fe14,2802832,0,0x0,8
tick,0x7ffe2c22fe14,2818848,0,0x0,8
tick,0x7ffe2c22fe14,2834856,0,0x0,8
tick,0x7ffe2c22fe14,2849876,0,0x0,8
tick,0x7ffe2c22fe14,2865952,0,0x0,8
tick,0x7ffe2c22fe14,2880907,0,0x0,8
tick,0x7ffe2c22fe14,2896924,0,0x0,8
tick,0x7ffe2c22fe14,2912872,0,0x0,8
tick,0x7ffe2c22fe14,2928892,0,0x0,8
tick,0x7ffe2c22fe14,2944877,0,0x0,8
tick,0x7ffe2c22fe14,2960842,0,0x0,8
tick,0x7ffe2c22fe14,2976880,0,0x0,8
tick,0x7ffe2c22fe14,2991863,0,0x0,8
tick,0x7ffe2c22fe14,3007944,0,0x0,8
tick,0x7ffe2c22fe14,3022878,0,0x0,8
tick,0x7ffe2c22fe14,3037864,0,0x0,8
tick,0x7ffe2c22fe14,3052879,0,0x0,8
tick,0x7ffe2c22fe14,3067810,0,0x0,8
tick,0x7ffe2c22fe14,3082813,0,0x0,8
tick,0x7ffe2c22fe14,3099165,0,0x0,8
tick,0x7ffe2c22fe14,3113963,0,0x0,8
tick,0x7ffe2c22fe14,3129920,0,0x0,8
tick,0x7ffe2c22fe14,3145872,0,0x0,8
tick,0x7ffe2c22fe14,3161873,0,0x0,8
tick,0x7ffe2c22fe14,3177823,0,0x0,8
tick,0x7ffe2c22fe14,3192901,0,0x0,8
tick,0x7ffe2c22fe14,3208917,0,0x0,8
tick,0x7ffe2c22fe14,3223872,0,0x0,8
tick,0x7ffe2c22fe14,3239834,0,0x0,8
tick,0x7ffe2c22fe14,3255917,0,0x0,8
tick,0x7ffe2c22fe14,3270838,0,0x0,8
tick,0x7ff6ac11ce6d,3285928,0,0x0,5
code-creation,JS,10,3286143,0x2daba01b6d4,134,processTimers node:internal/timers:499:25,0xfca8d3b920,~
code-source-info,0x2daba01b6d4,13,15533,16019,C0O15546C10O15546C15O15589C23O15600C31O15623C33O15658C35O15708C42O15700C47O15700C55O15735C62O15742C67O15778C71O15771C75O15795C83O15813C88O15817C103O15836C105O15848C106O15865C110O15897C113O15897C118O15934C120O15967C123O15967C128O15670C132O16005C133O16014,,
code-creation,JS,10,3286239,0x2daba01b85c,12,peek node:internal/priority_queue:37:7,0x22671c84638,~
code-source-info,0x2daba01b85c,20,919,955,C0O929C2O941C8O946C11O950,,
code-creation,JS,10,3286375,0x2daba01bb1c,585,listOnTimeout node:internal/timers:519:25,0xfca8d3b978,~
code-source-info,0x2daba01bb1c
code-creation,JS,10,3286561,0x2daba01bf64,19,peek node:internal/linkedlist:10:14,0x22671c83f20,~
code-source-info,0x2daba01bf64,19,155,237,C0O176C7O186C12O196C13O208C14O224C18O234,,
code-creation,JS,10,3286635,0x2daba01c04c,12,resetCache node:internal/http:30:20,0x395cad68308,~
code-source-info,0x2daba01c04c,171,625,657,C0O633C4O642C11O656,,
code-creation,JS,10,3286879,0x2daba01c12c,32,shift node:internal/priority_queue:103:8,0x22671c847f0,~
code-source-info,0x2daba01c12c,20,2579,2737,C0O2602C2O2607C6O2633C8O2637C12O2647C14O2679C15O2686C16O2699C24O2699C29O2719C31O2732,,
code-creation,JS,10,3287003,0x3ba1367589c,128,removeAt node:internal/priority_queue:89:11,0x22671c84798,~
code-source-info,0x3ba1367589c,20,2234,2568,C0O2260C2O2265C6O2290C9O2296C15O2297C22O2309C24O2331C27O2325C30O2319C34O2342C36O2352C41O2357C45O2377C46O2386C53O2397C58O2415C60O2423C67O2435C73O2453C76O2457C79O2448C85O2467C92O2443C99O2474C104O2493C109O2493C116O2537C121O2537C127O2567,,
code-creation,JS,10,3287132,0x3ba13675a74,153,percolateDown node:internal/priority_queue:45:16,0x22671c846e8,~
code-source-info,0x3ba13675a74,20,1035,1708,C0O1064C2O1069C6O1104C8O1109C12O1141C14O1146C18O1171C20O1176C24O1201C26O1205C30O1234C32O1230C38O1234C43O1269C45O1273C48O1277C52O1289C54O1304C61O1331C64O1326C70O1341C74O1314C81O1355C86O1369C88O1386C92O1412C94O1416C98O1441C105O1462C110O1477C112O1491C116O1531C121O1563C123O1573C127O1589C132O1219C136O1619C138O1629C142O1642C146O1680C152O1707,,
tick,0x7ffe2c22fe14,3301850,0,0x0,8
tick,0x7ffe2c22fe14,3317858,0,0x0,8
tick,0x7ffe2c22fe14,3332830,0,0x0,8
tick,0x7ffe2c22fe14,3347821,0,0x0,8
tick,0x7ffe2c22fe14,3363850,0,0x0,8
tick,0x7ffe2c22fe14,3379884,0,0x0,8
tick,0x7ffe2c22fe14,3395922,0,0x0,8
tick,0x7ffe2c22fe14,3411879,0,0x0,8
tick,0x7ffe2c22fe14,3427929,0,0x0,8
tick,0x7ffe2c22fe14,3443992,0,0x0,8
tick,0x7ffe2c22fe14,3460014,0,0x0,8
tick,0x7ffe2c22fe14,3476022,0,0x0,8
tick,0x7ffe2c22fe14,3492152,0,0x0,8
tick,0x7ffe2c22fe14,3507053,0,0x0,8
tick,0x7ffe2c22fe14,3522151,0,0x0,8
tick,0x7ffe2c22fe14,3538027,0,0x0,8
tick,0x7ffe2c22fe14,3554026,0,0x0,8
tick,0x7ffe2c22fe14,3570067,0,0x0,8
tick,0x7ffe2c22fe14,3586080,0,0x0,8
tick,0x7ffe2c22fe14,3602428,0,0x0,8
tick,0x7ffe2c22fe14,3618344,0,0x0,8
tick,0x7ffe2c22fe14,3634050,0,0x0,8
tick,0x7ffe2c22fe14,3649120,0,0x0,8
tick,0x7ffe2c22fe14,3664067,0,0x0,8
tick,0x7ffe2c22fe14,3679055,0,0x0,8
tick,0x7ffe2c22fe14,3694857,0,0x0,8
tick,0x7ffe2c22fe14,3709032,0,0x0,8
tick,0x7ffe2c22fe14,3725035,0,0x0,8
tick,0x7ffe2c22fe14,3741088,0,0x0,8
tick,0x7ffe2c22fe14,3757119,0,0x0,8
tick,0x7ffe2c22fe14,3772008,0,0x0,8
tick,0x7ffe2c22fe14,3787026,0,0x0,8
tick,0x7ffe2c22fe14,3802012,0,0x0,8
tick,0x7ffe2c22fe14,3817036,0,0x0,8
tick,0x7ffe2c22fe14,3832758,0,0x0,8
tick,0x7ffe2c22fe14,3848823,0,0x0,8
tick,0x7ffe2c22fe14,3863762,0,0x0,8
tick,0x7ffe2c22fe14,3878783,0,0x0,8
tick,0x7ffe2c22fe14,3894838,0,0x0,8
tick,0x7ffe2c22fe14,3910789,0,0x0,8
tick,0x7ffe2c22fe14,3926803,0,0x0,8
tick,0x7ffe2c22fe14,3942781,0,0x0,8
tick,0x7ffe2c22fe14,3957742,0,0x0,8
tick,0x7ffe2c22fe14,3972766,0,0x0,8
tick,0x7ffe2c22fe14,3988782,0,0x0,8
tick,0x7ffe2c22fe14,4003780,0,0x0,8
tick,0x7ffe2c22fe14,4019782,0,0x0,8
tick,0x7ffe2c22fe14,4034764,0,0x0,8
tick,0x7ffe2c22fe14,4050809,0,0x0,8
tick,0x7ffe2c22fe14,4066804,0,0x0,8
tick,0x7ffe2c22fe14,4082735,0,0x0,8
tick,0x7ffe2c22fe14,4099076,0,0x0,8
tick,0x7ffe2c22fe14,4113775,0,0x0,8
tick,0x7ffe2c22fe14,4129342,0,0x0,8
tick,0x7ffe2c22fe14,4145424,0,0x0,8
tick,0x7ffe2c22fe14,4161394,0,0x0,8
tick,0x7ffe2c22fe14,4177374,0,0x0,8
tick,0x7ffe2c22fe14,4193384,0,0x0,8
tick,0x7ffe2c22fe14,4209583,0,0x0,8
tick,0x7ffe2c22fe14,4225417,0,0x0,8
tick,0x7ffe2c22fe14,4241545,0,0x0,8
tick,0x7ffe2c22fe14,4257596,0,0x0,8
tick,0x7ffe2c22fe14,4272733,0,0x0,8
tick,0x7ffe2c22fe14,4287525,0,0x0,8
tick,0x7ffe2c22fe14,4303500,0,0x0,8
tick,0x7ffe2c22fe14,4319423,0,0x0,8
tick,0x7ffe2c22fe14,4335435,0,0x0,8
tick,0x7ffe2c22fe14,4352119,0,0x0,8
tick,0x7ffe2c22fe14,4366480,0,0x0,8
tick,0x7ffe2c22fe14,4382367,0,0x0,8
tick,0x7ffe2c22fe14,4397462,0,0x0,8
tick,0x7ffe2c22fe14,4413413,0,0x0,8
tick,0x7ffe2c22fe14,4429515,0,0x0,8
tick,0x7ffe2c22fe14,4445478,0,0x0,8
tick,0x7ffe2c22fe14,4461448,0,0x0,8
tick,0x7ffe2c22fe14,4476503,0,0x0,8
tick,0x7ffe2c22fe14,4492534,0,0x0,8
tick,0x7ffe2c22fe14,4507503,0,0x0,8
tick,0x7ffe2c22fe14,4523464,0,0x0,8
tick,0x7ffe2c22fe14,4538464,0,0x0,8
tick,0x7ffe2c22fe14,4553475,0,0x0,8
tick,0x7ffe2c22fe14,4569440,0,0x0,8
tick,0x7ffe2c22fe14,4585426,0,0x0,8
tick,0x7ffe2c22fe14,4600518,0,0x0,8
tick,0x7ffe2c22fe14,4616428,0,0x0,8
tick,0x7ffe2c22fe14,4631395,0,0x0,8
tick,0x7ffe2c22fe14,4647404,0,0x0,8
tick,0x7ffe2c22fe14,4663393,0,0x0,8
tick,0x7ffe2c22fe14,4679479,0,0x0,8
tick,0x7ffe2c22fe14,4694433,0,0x0,8
tick,0x7ffe2c22fe14,4709437,0,0x0,8
tick,0x7ffe2c22fe14,4724441,0,0x0,8
tick,0x7ffe2c22fe14,4740435,0,0x0,8
tick,0x7ffe2c22fe14,4755442,0,0x0,8
tick,0x7ffe2c22fe14,4771440,0,0x0,8
tick,0x7ffe2c22fe14,4787444,0,0x0,8
tick,0x7ffe2c22fe14,4803523,0,0x0,8
tick,0x7ffe2c22fe14,4819527,0,0x0,8
tick,0x7ffe2c22fe14,4835590,0,0x0,8
tick,0x7ffe2c22fe14,4851711,0,0x0,8
tick,0x7ffe2c22fe14,4867663,0,0x0,8
tick,0x7ffe2c22fe14,4882577,0,0x0,8
tick,0x7ffe2c22fe14,4897734,0,0x0,8
tick,0x7ffe2c22fe14,4913609,0,0x0,8
tick,0x7ffe2c22fe14,4929593,0,0x0,8
tick,0x7ffe2c22fe14,4945634,0,0x0,8
tick,0x7ffe2c22fe14,4962349,0,0x0,8
tick,0x7ffe2c22fe14,4976674,0,0x0,8
tick,0x7ffe2c22fe14,4992688,0,0x0,8
tick,0x7ffe2c22fe14,5007714,0,0x0,8
tick,0x7ffe2c22fe14,5022681,0,0x0,8
tick,0x7ffe2c22fe14,5038677,0,0x0,8
tick,0x7ffe2c22fe14,5053656,0,0x0,8
tick,0x7ffe2c22fe14,5069690,0,0x0,8
tick,0x7ffe2c22fe14,5085793,0,0x0,8
tick,0x7ffe2c22fe14,5101737,0,0x0,8
tick,0x7ffe2c22fe14,5117802,0,0x0,8
tick,0x7ffe2c22fe14,5133850,0,0x0,8
tick,0x7ffe2c22fe14,5149784,0,0x0,8
tick,0x7ffe2c22fe14,5165839,0,0x0,8
tick,0x7ffe2c22fe14,5181810,0,0x0,8
tick,0x7ffe2c22fe14,5196797,0,0x0,8
tick,0x7ffe2c22fe14,5211833,0,0x0,8
tick,0x7ffe2c22fe14,5227882,0,0x0,8
tick,0x7ffe2c22fe14,5243896,0,0x0,8
tick,0x7ffe2c22fe14,5259894,0,0x0,8
tick,0x7ffe2c22fe14,5275878,0,0x0,8
tick,0x7ffe2c22fe14,5291980,0,0x0,8
tick,0x7ffe2c22fe14,5307953,0,0x0,8
tick,0x7ffe2c22fe14,5323947,0,0x0,8
tick,0x7ffe2c22fe14,5339936,0,0x0,8
tick,0x7ffe2c22fe14,5355952,0,0x0,8
tick,0x7ffe2c22fe14,5371943,0,0x0,8
tick,0x7ffe2c22fe14,5388010,0,0x0,8
tick,0x7ffe2c22fe14,5404101,0,0x0,8
tick,0x7ffe2c22fe14,5420082,0,0x0,8
tick,0x7ffe2c22fe14,5436122,0,0x0,8
tick,0x7ffe2c22fe14,5452152,0,0x0,8
tick,0x7ffe2c22fe14,5468131,0,0x0,8
tick,0x7ffe2c22fe14,5483099,0,0x0,8
tick,0x7ffe2c22fe14,5498170,0,0x0,8
tick,0x7ffe2c22fe14,5514160,0,0x0,8
tick,0x7ffe2c22fe14,5530011,0,0x0,8
tick,0x7ffe2c22fe14,5546012,0,0x0,8
tick,0x7ffe2c22fe14,5562010,0,0x0,8
tick,0x7ffe2c22fe14,5577998,0,0x0,8
tick,0x7ffe2c22fe14,5594018,0,0x0,8
tick,0x7ffe2c22fe14,5609034,0,0x0,8
tick,0x7ffe2c22fe14,5624100,0,0x0,8
tick,0x7ffe2c22fe14,5639894,0,0x0,8
tick,0x7ffe2c22fe14,5655929,0,0x0,8
tick,0x7ffe2c22fe14,5671918,0,0x0,8
tick,0x7ffe2c22fe14,5687944,0,0x0,8
tick,0x7ffe2c22fe14,5703916,0,0x0,8
tick,0x7ffe2c22fe14,5718929,0,0x0,8
tick,0x7ffe2c22fe14,5734926,0,0x0,8
tick,0x7ffe2c22fe14,5749918,0,0x0,8
tick,0x7ffe2c22fe14,5765034,0,0x0,8
tick,0x7ffe2c22fe14,5780970,0,0x0,8
tick,0x7ffe2c22fe14,5796463,0,0x0,8
tick,0x7ffe2c22fe14,5812414,0,0x0,8
tick,0x7ffe2c22fe14,5828445,0,0x0,8
tick,0x7ffe2c22fe14,5844480,0,0x0,8
code-creation,JS,10,5858823,0x3ba13675cf4,162,exit node:internal/process/per_thread:181:16,0x22671c960e0,~
code-source-info,0x3ba13675cf4,27,4992,6146,C0O4992C2O5049C10O5049C15O5021C20O5107C25O5115C33O5115C39O5168C45O5175C50O5191C57O5208C61O5230C66O5243C72O5262C78O5279C82O5294C87O5302C100O5323C110O5335C113O5302C119O5552C124O5560C134O5579C144O5591C147O5560C152O6135C157O6135C161O6145,,
code-creation,Eval,10,5858955,0x3ba13676124,5, node:internal/modules/esm/handle_process_exit:1:1,0x3ba13675fb0,~
script-source,284,node:internal/modules/esm/handle_process_exit,'use strict';\x0d\n\x0d\nconst { exitCodes: { kUnfinishedTopLevelAwait } } = internalBinding('errors');\x0d\n\x0d\n/**\x0d\n * Handle a Promise from running code that potentially does Top-Level Await.\x0d\n * In that case\x2C it makes sense to set the exit code to a specific non-zero value\x0d\n * if the main code never finishes running.\x0d\n */\x0d\nfunction handleProcessExit() {\x0d\n  process.exitCode ??= kUnfinishedTopLevelAwait;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  handleProcessExit\x2C\x0d\n};\x0d\n
code-source-info,0x3ba13676124,284,0,448,C0O0C4O448,,
code-creation,JS,10,5858994,0x3ba1367625c,55, node:internal/modules/esm/handle_process_exit:1:1,0x3ba13676098,~
code-source-info,0x3ba1367625c,284,0,448,C0O0C17O69C20O69C25O36C30O38C36O402C43O424C49O417C54O447,,
code-creation,JS,10,5859122,0x3ba13676604,151, node:internal/validators:93:3,0xfca8d3d8c8,~
code-source-info,0x3ba13676604,15,2512,2900,C12O2532C25O2562C32O2596C38O2634C54O2640C59O2634C60O2694C65O2699C71O2730C87O2736C92O2730C93O2790C95O2800C102O2815C107O2829C117O2868C130O2881C143O2835C148O2829C150O2899,,
code-creation,JS,10,5859176,0x3ba136767a4,130,HideStackFramesError node:internal/errors:380:16,0xfca8d365a8,~
code-source-info,0x3ba136767a4,10,10553,10815,C0O10553C8O10572C13O10576C18O10635C25O10641C30O10667C36O10689C40O10703C64O10703C76O10728C83O10750C89O10784C113O10784C129O10814,,
code-creation,JS,10,5859223,0x3ba13676974,91,isErrorStackTraceLimitWritable node:internal/errors:213:40,0xfca8d35ce8,~
code-source-info,0x3ba13676974,10,5811,6294,C0O5929C6O5933C11O5972C16O5982C21O5983C27O6012C28O6025C29O6049C36O6080C42O6049C48O6110C50O6141C58O6148C62O6174C63O6185C71O6192C78O6252C84O6273C89O6277C90O6291,,
code-creation,JS,10,5859275,0x3ba13676b44,104,NodeError node:internal/errors:439:20,0xfca8d37158,~
code-source-info,0x3ba13676b44,10,12118,12399,C0O12118C8O12141C29O12141C55O12161C84O12251C96O12161C103O12398,,
code-creation,JS,10,5859353,0x3ba13676f34,243,getMessage node:internal/errors:562:20,0xfca8d38408,~
code-source-info,0x3ba13676f34,10,15637,16403,C0O15672C5O15681C10O15681C16O15696C20O15734C25O15753C30O15768C34O15760C43O15825C54O15869C72O15932C86O15889C90O15734C95O15957C109O15964C114O15994C115O16028C118O16028C123O16063C128O16100C132O16091C141O16122C152O16166C172O16223C182O16186C186O16063C191O16261C197O16268C202O16280C204O16291C205O16297C210O16297C215O16334C223O16354C227O16379C237O16341C242O16400,,
code-creation,JS,10,5859524,0x3ba1367751c,719, node:internal/errors:1340:3,0xfca8d38f30,~
code-source-info,0x3ba1367751c
code-creation,JS,10,5859639,0x3ba1366d7f4,211,formatList node:internal/errors:1024:20,0xfca8d38c70,~
code-source-info,0x3ba1366d7f4,10,29575,29946,C14O29616C48O29639C50O29649C51O29663C52O29678C56O29684C57O29698C58O29713C71O29720C84O29733C91O29739C92O29753C93O29768C106O29781C122O29789C135O29802C142O29808C143O29830C150O29859C161O29859C170O29840C185O29904C196O29924C200O29931C203O29917C210O29938,,
code-creation,JS,10,5859742,0x3ba1366ddb4,468,determineSpecificType node:internal/errors:966:31,0xfca8d38c18,~
code-source-info,0x3ba1366ddb4,10,27575,29224,C0O27588C4O27615C6O27629C7O27640C11O27672C13O27691C14O27715C18O27734C72O27777C77O27800C87O27810C88O27838C89O27848C94O27866C99O27875C103O27888C106O27887C108O27883C119O27938C120O27953C122O27963C127O28024C129O28051C130O28080C133O28076C138O28101C140O28133C141O28163C144O28162C146O28158C151O28184C153O28217C154O28234C159O28257C169O28266C170O28295C180O28357C181O28385C186O28408C189O28408C203O28425C204O28455C207O28480C215O28487C216O28525C225O28556C229O28547C234O28580C237O28611C242O28623C250O28630C251O28647C254O28657C258O28682C263O28691C268O28683C275O28715C276O28749C283O28756C290O28776C301O28776C315O28825C323O28829C331O28864C336O28883C341O28907C351O28917C352O28934C357O28957C360O28957C374O28981C375O29003C378O29011C382O29036C387O29045C392O29037C400O29089C407O29096C412O29113C425O29124C439O29183C444O29198C457O29207C467O29216,,
code-creation,JS,10,5859934,0x3ba1366e3fc,245, node:internal/process/execution:169:10,0x22671c9a258,~
script-source,33,node:internal/process/execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET\x2C\x0d\n    ERR_EVAL_ESM_CANNOT_PRINT\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  executionAsyncId\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  afterHooksExist\x2C\x0d\n  emitAfter\x2C\x0d\n  popAsyncContext\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  makeContextifyScript\x2C runScriptInThisContext\x2C\x0d\n} = require('internal/vm');\x0d\n// shouldAbortOnUncaughtToggle is a typed array for faster\x0d\n// communication with JS.\x0d\nconst { shouldAbortOnUncaughtToggle } = internalBinding('util');\x0d\n\x0d\nfunction tryGetCwd() {\x0d\n  try {\x0d\n    return process.cwd();\x0d\n  } catch {\x0d\n    // getcwd(3) can fail if the current working directory has been deleted.\x0d\n    // Fall back to the directory name of the (absolute) executable path.\x0d\n    // It's not really correct but what are the alternatives?\x0d\n    return path.dirname(process.execPath);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction evalModule(source\x2C print) {\x0d\n  if (print) {\x0d\n    throw new ERR_EVAL_ESM_CANNOT_PRINT();\x0d\n  }\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { handleMainPromise } = require('internal/modules/run_main');\x0d\n  RegExpPrototypeExec(/^/\x2C ''); // Necessary to reset RegExp statics before user code runs.\x0d\n  return handleMainPromise(loadESM((loader) => loader.eval(source)));\x0d\n}\x0d\n\x0d\nfunction evalScript(name\x2C body\x2C breakFirstLine\x2C print\x2C shouldLoadESM = false) {\x0d\n  const CJSModule = require('internal/modules/cjs/loader').Module;\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  const cwd = tryGetCwd();\x0d\n  const origModule = globalThis.module;  // Set e.g. when called from the REPL.\x0d\n\x0d\n  const module = new CJSModule(name);\x0d\n  module.filename = path.join(cwd\x2C name);\x0d\n  module.paths = CJSModule._nodeModulePaths(cwd);\x0d\n\x0d\n  const { handleMainPromise } = require('internal/modules/run_main');\x0d\n  const asyncESM = require('internal/process/esm_loader');\x0d\n  const baseUrl = pathToFileURL(module.filename).href;\x0d\n  const { loadESM } = asyncESM;\x0d\n\x0d\n  if (getOptionValue('--experimental-detect-module') &&\x0d\n    getOptionValue('--input-type') === '' && getOptionValue('--experimental-default-type') === '' &&\x0d\n    containsModuleSyntax(body\x2C name)) {\x0d\n    return evalModule(body\x2C print);\x0d\n  }\x0d\n\x0d\n  const runScript = () => {\x0d\n    // Create wrapper for cache entry\x0d\n    const script = `\x0d\n      globalThis.module = module;\x0d\n      globalThis.exports = exports;\x0d\n      globalThis.__dirname = __dirname;\x0d\n      globalThis.require = require;\x0d\n      return (main) => main();\x0d\n    `;\x0d\n    globalThis.__filename = name;\x0d\n    RegExpPrototypeExec(/^/\x2C ''); // Necessary to reset RegExp statics before user code runs.\x0d\n    const result = module._compile(script\x2C `${name}-wrapper`)(() => {\x0d\n      const hostDefinedOptionId = Symbol(name);\x0d\n      async function importModuleDynamically(specifier\x2C _\x2C importAttributes) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C baseUrl\x2C importAttributes);\x0d\n      }\x0d\n      const script = makeContextifyScript(\x0d\n        body\x2C                    // code\x0d\n        name\x2C                    // filename\x2C\x0d\n        0\x2C                       // lineOffset\x0d\n        0\x2C                       // columnOffset\x2C\x0d\n        undefined\x2C               // cachedData\x0d\n        false\x2C                   // produceCachedData\x0d\n        undefined\x2C               // parsingContext\x0d\n        hostDefinedOptionId\x2C     // hostDefinedOptionId\x0d\n        importModuleDynamically\x2C // importModuleDynamically\x0d\n      );\x0d\n      return runScriptInThisContext(script\x2C true\x2C !!breakFirstLine);\x0d\n    });\x0d\n    if (print) {\x0d\n      const { log } = require('internal/console/global');\x0d\n      log(result);\x0d\n    }\x0d\n\x0d\n    if (origModule !== undefined)\x0d\n      globalThis.module = origModule;\x0d\n  };\x0d\n\x0d\n  if (shouldLoadESM) {\x0d\n    return handleMainPromise(loadESM(runScript));\x0d\n  }\x0d\n  return runScript();\x0d\n}\x0d\n\x0d\nconst exceptionHandlerState = {\x0d\n  captureFn: null\x2C\x0d\n  reportFlag: false\x2C\x0d\n};\x0d\n\x0d\nfunction setUncaughtExceptionCaptureCallback(fn) {\x0d\n  if (fn === null) {\x0d\n    exceptionHandlerState.captureFn = fn;\x0d\n    shouldAbortOnUncaughtToggle[0] = 1;\x0d\n    process.report.reportOnUncaughtException = exceptionHandlerState.reportFlag;\x0d\n    return;\x0d\n  }\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('fn'\x2C ['Function'\x2C 'null']\x2C fn);\x0d\n  }\x0d\n  if (exceptionHandlerState.captureFn !== null) {\x0d\n    throw new ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET();\x0d\n  }\x0d\n  exceptionHandlerState.captureFn = fn;\x0d\n  shouldAbortOnUncaughtToggle[0] = 0;\x0d\n  exceptionHandlerState.reportFlag =\x0d\n    process.report.reportOnUncaughtException === true;\x0d\n  process.report.reportOnUncaughtException = false;\x0d\n}\x0d\n\x0d\nfunction hasUncaughtExceptionCaptureCallback() {\x0d\n  return exceptionHandlerState.captureFn !== null;\x0d\n}\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\n// XXX(joyeecheung): for some reason this cannot be defined at the top-level\x0d\n// and exported to be written to process._fatalException\x2C it has to be\x0d\n// returned as an *anonymous function* wrapped inside a factory function\x2C\x0d\n// otherwise it breaks the test-timers.setInterval async hooks test -\x0d\n// this may indicate that node::errors::TriggerUncaughtException() should\x0d\n// fix up the callback scope before calling into process._fatalException\x2C\x0d\n// or this function should take extra care of the async hooks before it\x0d\n// schedules a setImmediate.\x0d\nfunction createOnGlobalUncaughtException() {\x0d\n  // The C++ land node::errors::TriggerUncaughtException() will\x0d\n  // exit the process if it returns false\x2C and continue execution if it\x0d\n  // returns true (which indicates that the exception is handled by the user).\x0d\n  return (er\x2C fromPromise) => {\x0d\n    // It's possible that defaultTriggerAsyncId was set for a constructor\x0d\n    // call that threw and was never cleared. So clear it now.\x0d\n    clearDefaultTriggerAsyncId();\x0d\n\x0d\n    const type = fromPromise ? 'unhandledRejection' : 'uncaughtException';\x0d\n    process.emit('uncaughtExceptionMonitor'\x2C er\x2C type);\x0d\n    if (exceptionHandlerState.captureFn !== null) {\x0d\n      exceptionHandlerState.captureFn(er);\x0d\n    } else if (!process.emit('uncaughtException'\x2C er\x2C type)) {\x0d\n      // If someone handled it\x2C then great. Otherwise\x2C die in C++ land\x0d\n      // since that means that we'll exit the process\x2C emit the 'exit' event.\x0d\n      try {\x0d\n        if (!process._exiting) {\x0d\n          process._exiting = true;\x0d\n          process.exitCode = kGenericUserError;\x0d\n          process.emit('exit'\x2C kGenericUserError);\x0d\n        }\x0d\n      } catch {\x0d\n        // Nothing to be done about it at this point.\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    // If we handled an error\x2C then make sure any ticks get processed\x0d\n    // by ensuring that the next Immediate cycle isn't empty.\x0d\n    require('timers').setImmediate(noop);\x0d\n\x0d\n    // Emit the after() hooks now that the exception has been handled.\x0d\n    if (afterHooksExist()) {\x0d\n      do {\x0d\n        const asyncId = executionAsyncId();\x0d\n        if (asyncId === 0)\x0d\n          popAsyncContext(0);\x0d\n        else\x0d\n          emitAfter(asyncId);\x0d\n      } while (hasAsyncIdStack());\x0d\n    }\x0d\n    // And completely empty the id stack\x2C including anything that may be\x0d\n    // cached on the native side.\x0d\n    clearAsyncIdStack();\x0d\n\x0d\n    return true;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction readStdin(callback) {\x0d\n  process.stdin.setEncoding('utf8');\x0d\n\x0d\n  let code = '';\x0d\n  process.stdin.on('data'\x2C (d) => {\x0d\n    code += d;\x0d\n  });\x0d\n\x0d\n  process.stdin.on('end'\x2C () => {\x0d\n    callback(code);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  readStdin\x2C\x0d\n  tryGetCwd\x2C\x0d\n  evalModule\x2C\x0d\n  evalScript\x2C\x0d\n  onGlobalUncaughtException: createOnGlobalUncaughtException()\x2C\x0d\n  setUncaughtExceptionCaptureCallback\x2C\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n};\x0d\n
code-source-info,0x3ba1366e3fc,33,5967,7561,C0O6134C5O6134C8O6184C19O6247C22O6255C36O6255C41O6304C46O6330C52O6359C55O6381C60O6381C67O6408C70O6421C84O6421C94O6633C97O6646C103O6669C107O6686C111O6705C116O6724C118O6722C122O6754C125O6762C136O6762C148O6894C149O6907C150O7056C156O7056C161O7073C169O7074C174O7173C179O7177C184O7235C189O7235C193O7264C194O7276C199O7294C206O7294C212O7339C217O7339C221O7375C226O7375C231O7205C235O7516C240O7516C243O7544C244O7556,,
code-creation,JS,10,5860252,0x3ba1366edc4,18,clearDefaultTriggerAsyncId node:internal/async_hooks:442:36,0xfca8d3cca8,~
code-source-info,0x3ba1366edc4,14,15763,15819,C0O15771C7O15787C12O15811C17O15818,,
code-creation,JS,10,5860312,0x3ba1366eed4,44,beforeInspector node:internal/errors:857:18,0xfca8d38a08,~
code-source-info,0x3ba1366eed4,10,23876,24265,C0O23891C2O23908C4O23907C11O23976C15O23982C19O24094C21O24113C25O24143C29O24106C39O24254C43O24260,,
tick,0x7ff6abb9a6d7,5860439,0,0x0,0,0x7ff6ac260990,0x7ff64c345635,0x7ff62c51f254,0x7ff64c28ef5f,0x3ba1366eedf
code-creation,JS,10,5860553,0x3ba1366f174,207,afterInspector node:internal/errors:871:17,0xfca8d38a60,~
code-source-info,0x3ba1366f174,10,24284,25587,C0O24327C5O24355C7O24845C13O24882C19O24882C24O24903C29O24904C34O24943C41O24961C46O24986C53O24961C61O25034C64O24943C70O25050C71O25057C77O25061C84O25074C92O25078C97O25098C99O25245C102O25245C106O25153C111O25192C116O25211C121O25292C128O25306C132O25322C140O25346C145O25323C158O25406C165O25424C171O25479C174O25495C179O25510C187O25479C196O25398C201O25531C204O25554C206O25575,,
code-creation,JS,10,5860710,0x3ba1366f3c4,23,lazyInternalUtilInspect node:internal/errors:196:33,0xfca8d35be0,~
code-source-info,0x3ba1366f3c4,10,5444,5543,C0O5452C14O5476C18O5472C20O5513C22O5540,,
code-creation,JS,10,5860743,0x3ba1366f4bc,23,lazyUtilColors node:internal/errors:202:24,0xfca8d35c38,~
code-source-info,0x3ba1366f4bc,10,5587,5667,C0O5595C14O5610C18O5606C20O5646C22O5664,,
code-creation,JS,10,5860804,0x3ba1366f954,5,get node:internal/util/inspect:370:6,0x22671c876f8,~
code-source-info,0x3ba1366f954,21,11518,11562,C0O11528C4O11557,,
code-creation,JS,10,5860908,0x3ba136700ec,223,getKeys node:internal/util/inspect:708:17,0x22671c87c28,~
code-source-info,0x3ba136700ec,21,21913,22914,C0O21913C9O21942C11O21967C21O21967C26O22006C30O22029C40O22036C45O22087C51O22094C56O22108C63O22108C73O22476C83O22483C91O22481C101O22530C112O22537C118O22537C127O22563C134O22568C143O22606C151O22606C156O22530C160O22646C172O22653C179O22711C185O22718C190O22749C195O22814C206O22844C209O22844C215O22814C220O22899C222O22911,,
code-creation,JS,10,5860964,0x3ba1367032c,19,isError node:internal/util:99:17,0xfca8d3f360,~
code-source-info,0x3ba1367032c,16,2455,2694,C0O2645C5O2652C13O2685C15O2674C18O2691,,
code-creation,JS,10,5861088,0x3ba1367069c,755,formatError node:internal/util/inspect:1367:21,0x22671c88200,~
code-source-info,0x3ba1367069c
code-creation,JS,10,5861176,0x3ba13670b94,32,getStackString node:internal/util/inspect:1239:24,0x22671c87f98,~
code-source-info,0x3ba13670b94,21,41776,41865,C0O41802C8O41810C11O41823C16O41810C24O41832C27O41832C31O41862,,
code-creation,JS,10,5861225,0x3ba1366c094,191,removeDuplicateErrorKeys node:internal/util/inspect:1303:34,0x22671c880a0,~
code-source-info,0x3ba1366c094,21,44062,44462,C0O44100C6O44119C12O44126C17O44159C39O44151C67O44151C70O44212C75O44212C81O44327C83O44337C90O44347C95O44381C99O44347C106O44401C120O44401C125O44140C190O44461,,
code-creation,JS,10,5861316,0x3ba1366c364,277,improveStack node:internal/util/inspect:1270:22,0x22671c88048,~
code-source-info,0x3ba1366c364,21,42810,44025,C0O43001C5O43014C11O43050C17O43050C26O43099C29O43099C36O43155C43O43162C50O43178C56O43184C63O43200C69O43206C74O43240C77O43254C81O43303C92O43303C102O43386C108O43386C114O43448C118O43474C126O43508C131O43523C138O43582C155O43603C166O43582C172O43655C174O43664C179O43685C184O43689C191O43739C192O43747C197O43767C209O43789C217O43827C224O43847C237O43919C249O43941C263O43949C274O44009C276O44022,,
code-creation,JS,10,5861409,0x3ba1366c72c,192,getStackFrames node:internal/util/inspect:1243:24,0x22671c87ff0,~
code-source-info,0x3ba1366c72c,21,41892,42785,C0O41930C8O41930C14O41974C19O41998C30O42148C37O42169C40O42169C46O42211C49O42211C54O42263C62O42263C68O42316C70O42336C75O42373C80O42394C85O42443C89O42394C98O42373C104O42487C107O42487C113O42471C118O42476C123O42539C124O42547C129O42579C131O42583C135O42609C140O42620C151O42684C158O42698C162O42716C171O42716C184O42684C189O42768C191O42782,,
code-creation,JS,10,5861461,0x3ba136693cc,27,safeGetCWD node:internal/util/inspect:1357:20,0x22671c881a8,~
code-source-info,0x3ba136693cc,21,45978,46117,C0O45990C5O46022C8O46049C13O46049C21O46039C22O46074C23O46081C24O46090C26O46114,,
code-creation,JS,10,5861551,0x3ba136694d4,21,exists node:internal/bootstrap/realm:280:16,0xfca8d34078,~
code-source-info,0x3ba136694d4,9,9260,9310,C0O9272C5O9293C10O9297C15O9297C20O9305,,
code-creation,JS,10,5861593,0x3ba1366962c,82,stylizeWithColor node:internal/util/inspect:560:26,0x22671c879c0,~
code-source-info,0x3ba1366962c,21,17497,17746,C0O17533C3O17541C10O17547C14O17563C16O17609C19O17617C26O17623C30O17637C32O17669C36O17691C52O17698C65O17716C78O17723C79O17732C81O17743,,
code-creation,JS,10,5861630,0x3ba1366975c,6,get node:internal/util/inspect:436:8,0x22671c877a8,~
code-source-info,0x3ba1366975c,21,13588,13627,C0O13600C2O13611C5O13620,,
code-creation,RegExp,3,5861711,0x7ff62c52a000,2180,^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$
code-creation,JS,10,5861745,0x3ba13669824,3,getEmptyFormatArray node:internal/util/inspect:575:29,0x22671c87a70,~
code-source-info,0x3ba13669824,21,17908,17929,C0O17916C2O17926,,
code-creation,JS,10,5861855,0x3ba13669a5c,506,strEscape node:internal/util/inspect:495:19,0x22671c87968,~
code-source-info,0x3ba13669a5c
code-creation,JS,10,5861967,0x3ba1366729c,62,addQuotes node:internal/util/inspect:478:19,0x22671c878b8,~
code-source-info,0x3ba1366729c,21,14805,14953,C0O14824C2O14835C7O14850C12O14861C22O14868C23O14877C25O14888C30O14903C35O14915C45O14923C46O14932C51O14943C61O14950,,
code-creation,JS,10,5862048,0x3ba13667414,135,isBelowBreakLength node:internal/util/inspect:2008:28,0x22671c88a40,~
code-source-info,0x3ba13667414,21,69004,69957,C0O69464C7O69471C11O69508C15O69499C19O69521C23O69515C28O69539C29O69552C30O69569C32O69583C36O69574C41O69611C47O69628C49O69643C54O69662C58O69643C63O69666C76O69696C78O69717C82O69721C93O69763C97O69757C102O69785C103O69798C104O69592C109O69556C113O69895C115O69907C122O69918C128O69918C134O69954,,
